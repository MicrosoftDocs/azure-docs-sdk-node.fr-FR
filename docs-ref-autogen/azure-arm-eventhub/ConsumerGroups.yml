### YamlMime:UniversalReference
ms.openlocfilehash: 2ed1cc54ea57f0a35ee793ce806d8e2639bba922
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 12/13/2018
ms.locfileid: "52111884"
items:
- uid: azure-arm-eventhub.ConsumerGroups
  name: ConsumerGroups
  fullName: ConsumerGroups
  children:
  - azure-arm-eventhub.ConsumerGroups.createOrUpdate
  - azure-arm-eventhub.ConsumerGroups.createOrUpdate_2
  - azure-arm-eventhub.ConsumerGroups.createOrUpdate_1
  - azure-arm-eventhub.ConsumerGroups.createOrUpdateWithHttpOperationResponse
  - azure-arm-eventhub.ConsumerGroups.deleteMethod
  - azure-arm-eventhub.ConsumerGroups.deleteMethod_2
  - azure-arm-eventhub.ConsumerGroups.deleteMethod_1
  - azure-arm-eventhub.ConsumerGroups.deleteMethodWithHttpOperationResponse
  - azure-arm-eventhub.ConsumerGroups.get
  - azure-arm-eventhub.ConsumerGroups.get_2
  - azure-arm-eventhub.ConsumerGroups.get_1
  - azure-arm-eventhub.ConsumerGroups.getWithHttpOperationResponse
  - azure-arm-eventhub.ConsumerGroups.listByEventHub
  - azure-arm-eventhub.ConsumerGroups.listByEventHub_2
  - azure-arm-eventhub.ConsumerGroups.listByEventHub_1
  - azure-arm-eventhub.ConsumerGroups.listByEventHubNext
  - azure-arm-eventhub.ConsumerGroups.listByEventHubNext_2
  - azure-arm-eventhub.ConsumerGroups.listByEventHubNext_1
  - azure-arm-eventhub.ConsumerGroups.listByEventHubNextWithHttpOperationResponse
  - azure-arm-eventhub.ConsumerGroups.listByEventHubWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-arm-eventhub
- uid: azure-arm-eventhub.ConsumerGroups.createOrUpdate
  name: createOrUpdate(string, string, string, string, ConsumerGroup, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="72ffa-101">Crée ou met à jour un groupe de consommateurs Event Hubs comme une ressource imbriquée dans un Namespace.</span><span class="sxs-lookup"><span data-stu-id="72ffa-101">Creates or updates an Event Hubs consumer group as a nested resource within a Namespace.</span></span>
  syntax:
    content: 'function createOrUpdate(resourceGroupName: string, namespaceName: string, eventHubName: string, consumerGroupName: string, parameters: ConsumerGroup, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="72ffa-102">Nom du groupe de ressources au sein de l’abonnement azure.</span><span class="sxs-lookup"><span data-stu-id="72ffa-102">Name of the resource group within the azure subscription.</span></span>
    - id: namespaceName
      type:
      - string
      description: >
        <span data-ttu-id="72ffa-103">Le nom de Namespace</span><span class="sxs-lookup"><span data-stu-id="72ffa-103">The Namespace name</span></span>
    - id: eventHubName
      type:
      - string
      description: >
        <span data-ttu-id="72ffa-104">Le nom de Hub d’événements</span><span class="sxs-lookup"><span data-stu-id="72ffa-104">The Event Hub name</span></span>
    - id: consumerGroupName
      type:
      - string
      description: >
        <span data-ttu-id="72ffa-105">Le nom de groupe de consommateurs</span><span class="sxs-lookup"><span data-stu-id="72ffa-105">The consumer group name</span></span>
    - id: parameters
      type:
      - azure-arm-eventhub.ConsumerGroup
      description: >
        <span data-ttu-id="72ffa-106">Paramètres fournis pour créer ou mettre à jour une ressource de groupe de consommateurs.</span><span class="sxs-lookup"><span data-stu-id="72ffa-106">Parameters supplied to create or update a consumer group resource.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-eventhub.ConsumerGroup>
  package: azure-arm-eventhub
- uid: azure-arm-eventhub.ConsumerGroups.createOrUpdate_2
  name: createOrUpdate(string, string, string, string, ConsumerGroup, Object, ServiceCallback<ConsumerGroup>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="72ffa-107">Crée ou met à jour un groupe de consommateurs Event Hubs comme une ressource imbriquée dans un Namespace.</span><span class="sxs-lookup"><span data-stu-id="72ffa-107">Creates or updates an Event Hubs consumer group as a nested resource within a Namespace.</span></span>
  syntax:
    content: 'function createOrUpdate(resourceGroupName: string, namespaceName: string, eventHubName: string, consumerGroupName: string, parameters: ConsumerGroup, options: Object, callback: ServiceCallback<ConsumerGroup>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: namespaceName
      type:
      - string
      description: ''
    - id: eventHubName
      type:
      - string
      description: ''
    - id: consumerGroupName
      type:
      - string
      description: ''
    - id: parameters
      type:
      - azure-arm-eventhub.ConsumerGroup
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventhub.ConsumerGroup>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventhub.ConsumerGroup>
  package: azure-arm-eventhub
- uid: azure-arm-eventhub.ConsumerGroups.createOrUpdate_1
  name: createOrUpdate(string, string, string, string, ConsumerGroup, ServiceCallback<ConsumerGroup>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="72ffa-108">Crée ou met à jour un groupe de consommateurs Event Hubs comme une ressource imbriquée dans un Namespace.</span><span class="sxs-lookup"><span data-stu-id="72ffa-108">Creates or updates an Event Hubs consumer group as a nested resource within a Namespace.</span></span>
  syntax:
    content: 'function createOrUpdate(resourceGroupName: string, namespaceName: string, eventHubName: string, consumerGroupName: string, parameters: ConsumerGroup, callback: ServiceCallback<ConsumerGroup>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: namespaceName
      type:
      - string
      description: ''
    - id: eventHubName
      type:
      - string
      description: ''
    - id: consumerGroupName
      type:
      - string
      description: ''
    - id: parameters
      type:
      - azure-arm-eventhub.ConsumerGroup
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventhub.ConsumerGroup>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventhub.ConsumerGroup>
  package: azure-arm-eventhub
- uid: azure-arm-eventhub.ConsumerGroups.createOrUpdateWithHttpOperationResponse
  name: createOrUpdateWithHttpOperationResponse(string, string, string, string, ConsumerGroup, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="72ffa-109">Crée ou met à jour un groupe de consommateurs Event Hubs comme une ressource imbriquée dans un Namespace.</span><span class="sxs-lookup"><span data-stu-id="72ffa-109">Creates or updates an Event Hubs consumer group as a nested resource within a Namespace.</span></span>
  syntax:
    content: 'function createOrUpdateWithHttpOperationResponse(resourceGroupName: string, namespaceName: string, eventHubName: string, consumerGroupName: string, parameters: ConsumerGroup, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="72ffa-110">Nom du groupe de ressources au sein de l’abonnement azure.</span><span class="sxs-lookup"><span data-stu-id="72ffa-110">Name of the resource group within the azure subscription.</span></span>
    - id: namespaceName
      type:
      - string
      description: >
        <span data-ttu-id="72ffa-111">Le nom de Namespace</span><span class="sxs-lookup"><span data-stu-id="72ffa-111">The Namespace name</span></span>
    - id: eventHubName
      type:
      - string
      description: >
        <span data-ttu-id="72ffa-112">Le nom de Hub d’événements</span><span class="sxs-lookup"><span data-stu-id="72ffa-112">The Event Hub name</span></span>
    - id: consumerGroupName
      type:
      - string
      description: >
        <span data-ttu-id="72ffa-113">Le nom de groupe de consommateurs</span><span class="sxs-lookup"><span data-stu-id="72ffa-113">The consumer group name</span></span>
    - id: parameters
      type:
      - azure-arm-eventhub.ConsumerGroup
      description: >
        <span data-ttu-id="72ffa-114">Paramètres fournis pour créer ou mettre à jour une ressource de groupe de consommateurs.</span><span class="sxs-lookup"><span data-stu-id="72ffa-114">Parameters supplied to create or update a consumer group resource.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-eventhub.ConsumerGroup>>
  package: azure-arm-eventhub
- uid: azure-arm-eventhub.ConsumerGroups.deleteMethod
  name: deleteMethod(string, string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="72ffa-115">Supprime un groupe de consommateurs du groupe de concentrateur d’événements et de ressources spécifié.</span><span class="sxs-lookup"><span data-stu-id="72ffa-115">Deletes a consumer group from the specified Event Hub and resource group.</span></span>
  syntax:
    content: 'function deleteMethod(resourceGroupName: string, namespaceName: string, eventHubName: string, consumerGroupName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="72ffa-116">Nom du groupe de ressources au sein de l’abonnement azure.</span><span class="sxs-lookup"><span data-stu-id="72ffa-116">Name of the resource group within the azure subscription.</span></span>
    - id: namespaceName
      type:
      - string
      description: >
        <span data-ttu-id="72ffa-117">Le nom de Namespace</span><span class="sxs-lookup"><span data-stu-id="72ffa-117">The Namespace name</span></span>
    - id: eventHubName
      type:
      - string
      description: >
        <span data-ttu-id="72ffa-118">Le nom de Hub d’événements</span><span class="sxs-lookup"><span data-stu-id="72ffa-118">The Event Hub name</span></span>
    - id: consumerGroupName
      type:
      - string
      description: >
        <span data-ttu-id="72ffa-119">Le nom de groupe de consommateurs</span><span class="sxs-lookup"><span data-stu-id="72ffa-119">The consumer group name</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-eventhub
- uid: azure-arm-eventhub.ConsumerGroups.deleteMethod_2
  name: deleteMethod(string, string, string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="72ffa-120">Supprime un groupe de consommateurs du groupe de concentrateur d’événements et de ressources spécifié.</span><span class="sxs-lookup"><span data-stu-id="72ffa-120">Deletes a consumer group from the specified Event Hub and resource group.</span></span>
  syntax:
    content: 'function deleteMethod(resourceGroupName: string, namespaceName: string, eventHubName: string, consumerGroupName: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: namespaceName
      type:
      - string
      description: ''
    - id: eventHubName
      type:
      - string
      description: ''
    - id: consumerGroupName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-eventhub
- uid: azure-arm-eventhub.ConsumerGroups.deleteMethod_1
  name: deleteMethod(string, string, string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="72ffa-121">Supprime un groupe de consommateurs du groupe de concentrateur d’événements et de ressources spécifié.</span><span class="sxs-lookup"><span data-stu-id="72ffa-121">Deletes a consumer group from the specified Event Hub and resource group.</span></span>
  syntax:
    content: 'function deleteMethod(resourceGroupName: string, namespaceName: string, eventHubName: string, consumerGroupName: string, callback: ServiceCallback<void>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: namespaceName
      type:
      - string
      description: ''
    - id: eventHubName
      type:
      - string
      description: ''
    - id: consumerGroupName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-eventhub
- uid: azure-arm-eventhub.ConsumerGroups.deleteMethodWithHttpOperationResponse
  name: deleteMethodWithHttpOperationResponse(string, string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="72ffa-122">Supprime un groupe de consommateurs du groupe de concentrateur d’événements et de ressources spécifié.</span><span class="sxs-lookup"><span data-stu-id="72ffa-122">Deletes a consumer group from the specified Event Hub and resource group.</span></span>
  syntax:
    content: 'function deleteMethodWithHttpOperationResponse(resourceGroupName: string, namespaceName: string, eventHubName: string, consumerGroupName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="72ffa-123">Nom du groupe de ressources au sein de l’abonnement azure.</span><span class="sxs-lookup"><span data-stu-id="72ffa-123">Name of the resource group within the azure subscription.</span></span>
    - id: namespaceName
      type:
      - string
      description: >
        <span data-ttu-id="72ffa-124">Le nom de Namespace</span><span class="sxs-lookup"><span data-stu-id="72ffa-124">The Namespace name</span></span>
    - id: eventHubName
      type:
      - string
      description: >
        <span data-ttu-id="72ffa-125">Le nom de Hub d’événements</span><span class="sxs-lookup"><span data-stu-id="72ffa-125">The Event Hub name</span></span>
    - id: consumerGroupName
      type:
      - string
      description: >
        <span data-ttu-id="72ffa-126">Le nom de groupe de consommateurs</span><span class="sxs-lookup"><span data-stu-id="72ffa-126">The consumer group name</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-eventhub
- uid: azure-arm-eventhub.ConsumerGroups.get
  name: get(string, string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="72ffa-127">Obtient une description pour le groupe de consommateurs spécifié.</span><span class="sxs-lookup"><span data-stu-id="72ffa-127">Gets a description for the specified consumer group.</span></span>
  syntax:
    content: 'function get(resourceGroupName: string, namespaceName: string, eventHubName: string, consumerGroupName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="72ffa-128">Nom du groupe de ressources au sein de l’abonnement azure.</span><span class="sxs-lookup"><span data-stu-id="72ffa-128">Name of the resource group within the azure subscription.</span></span>
    - id: namespaceName
      type:
      - string
      description: >
        <span data-ttu-id="72ffa-129">Le nom de Namespace</span><span class="sxs-lookup"><span data-stu-id="72ffa-129">The Namespace name</span></span>
    - id: eventHubName
      type:
      - string
      description: >
        <span data-ttu-id="72ffa-130">Le nom de Hub d’événements</span><span class="sxs-lookup"><span data-stu-id="72ffa-130">The Event Hub name</span></span>
    - id: consumerGroupName
      type:
      - string
      description: >
        <span data-ttu-id="72ffa-131">Le nom de groupe de consommateurs</span><span class="sxs-lookup"><span data-stu-id="72ffa-131">The consumer group name</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-eventhub.ConsumerGroup>
  package: azure-arm-eventhub
- uid: azure-arm-eventhub.ConsumerGroups.get_2
  name: get(string, string, string, string, Object, ServiceCallback<ConsumerGroup>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="72ffa-132">Obtient une description pour le groupe de consommateurs spécifié.</span><span class="sxs-lookup"><span data-stu-id="72ffa-132">Gets a description for the specified consumer group.</span></span>
  syntax:
    content: 'function get(resourceGroupName: string, namespaceName: string, eventHubName: string, consumerGroupName: string, options: Object, callback: ServiceCallback<ConsumerGroup>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: namespaceName
      type:
      - string
      description: ''
    - id: eventHubName
      type:
      - string
      description: ''
    - id: consumerGroupName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventhub.ConsumerGroup>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventhub.ConsumerGroup>
  package: azure-arm-eventhub
- uid: azure-arm-eventhub.ConsumerGroups.get_1
  name: get(string, string, string, string, ServiceCallback<ConsumerGroup>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="72ffa-133">Obtient une description pour le groupe de consommateurs spécifié.</span><span class="sxs-lookup"><span data-stu-id="72ffa-133">Gets a description for the specified consumer group.</span></span>
  syntax:
    content: 'function get(resourceGroupName: string, namespaceName: string, eventHubName: string, consumerGroupName: string, callback: ServiceCallback<ConsumerGroup>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: namespaceName
      type:
      - string
      description: ''
    - id: eventHubName
      type:
      - string
      description: ''
    - id: consumerGroupName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventhub.ConsumerGroup>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventhub.ConsumerGroup>
  package: azure-arm-eventhub
- uid: azure-arm-eventhub.ConsumerGroups.getWithHttpOperationResponse
  name: getWithHttpOperationResponse(string, string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="72ffa-134">Obtient une description pour le groupe de consommateurs spécifié.</span><span class="sxs-lookup"><span data-stu-id="72ffa-134">Gets a description for the specified consumer group.</span></span>
  syntax:
    content: 'function getWithHttpOperationResponse(resourceGroupName: string, namespaceName: string, eventHubName: string, consumerGroupName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="72ffa-135">Nom du groupe de ressources au sein de l’abonnement azure.</span><span class="sxs-lookup"><span data-stu-id="72ffa-135">Name of the resource group within the azure subscription.</span></span>
    - id: namespaceName
      type:
      - string
      description: >
        <span data-ttu-id="72ffa-136">Le nom de Namespace</span><span class="sxs-lookup"><span data-stu-id="72ffa-136">The Namespace name</span></span>
    - id: eventHubName
      type:
      - string
      description: >
        <span data-ttu-id="72ffa-137">Le nom de Hub d’événements</span><span class="sxs-lookup"><span data-stu-id="72ffa-137">The Event Hub name</span></span>
    - id: consumerGroupName
      type:
      - string
      description: >
        <span data-ttu-id="72ffa-138">Le nom de groupe de consommateurs</span><span class="sxs-lookup"><span data-stu-id="72ffa-138">The consumer group name</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-eventhub.ConsumerGroup>>
  package: azure-arm-eventhub
- uid: azure-arm-eventhub.ConsumerGroups.listByEventHub
  name: listByEventHub(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="72ffa-139">Obtient tous les groupes de consommateurs dans un Namespace.</span><span class="sxs-lookup"><span data-stu-id="72ffa-139">Gets all the consumer groups in a Namespace.</span></span> <span data-ttu-id="72ffa-140">Un flux vide est retourné si aucun groupe de consommateurs n’existe dans le Namespace.</span><span class="sxs-lookup"><span data-stu-id="72ffa-140">An empty feed is returned if no consumer group exists in the Namespace.</span></span>
  syntax:
    content: 'function listByEventHub(resourceGroupName: string, namespaceName: string, eventHubName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="72ffa-141">Nom du groupe de ressources au sein de l’abonnement azure.</span><span class="sxs-lookup"><span data-stu-id="72ffa-141">Name of the resource group within the azure subscription.</span></span>
    - id: namespaceName
      type:
      - string
      description: >
        <span data-ttu-id="72ffa-142">Le nom de Namespace</span><span class="sxs-lookup"><span data-stu-id="72ffa-142">The Namespace name</span></span>
    - id: eventHubName
      type:
      - string
      description: >
        <span data-ttu-id="72ffa-143">Le nom de Hub d’événements</span><span class="sxs-lookup"><span data-stu-id="72ffa-143">The Event Hub name</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-eventhub.ConsumerGroupListResult>
  package: azure-arm-eventhub
- uid: azure-arm-eventhub.ConsumerGroups.listByEventHub_2
  name: listByEventHub(string, string, string, Object, ServiceCallback<ConsumerGroupListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="72ffa-144">Obtient tous les groupes de consommateurs dans un Namespace.</span><span class="sxs-lookup"><span data-stu-id="72ffa-144">Gets all the consumer groups in a Namespace.</span></span> <span data-ttu-id="72ffa-145">Un flux vide est retourné si aucun groupe de consommateurs n’existe dans le Namespace.</span><span class="sxs-lookup"><span data-stu-id="72ffa-145">An empty feed is returned if no consumer group exists in the Namespace.</span></span>
  syntax:
    content: 'function listByEventHub(resourceGroupName: string, namespaceName: string, eventHubName: string, options: Object, callback: ServiceCallback<ConsumerGroupListResult>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: namespaceName
      type:
      - string
      description: ''
    - id: eventHubName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventhub.ConsumerGroupListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventhub.ConsumerGroupListResult>
  package: azure-arm-eventhub
- uid: azure-arm-eventhub.ConsumerGroups.listByEventHub_1
  name: listByEventHub(string, string, string, ServiceCallback<ConsumerGroupListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="72ffa-146">Obtient tous les groupes de consommateurs dans un Namespace.</span><span class="sxs-lookup"><span data-stu-id="72ffa-146">Gets all the consumer groups in a Namespace.</span></span> <span data-ttu-id="72ffa-147">Un flux vide est retourné si aucun groupe de consommateurs n’existe dans le Namespace.</span><span class="sxs-lookup"><span data-stu-id="72ffa-147">An empty feed is returned if no consumer group exists in the Namespace.</span></span>
  syntax:
    content: 'function listByEventHub(resourceGroupName: string, namespaceName: string, eventHubName: string, callback: ServiceCallback<ConsumerGroupListResult>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: namespaceName
      type:
      - string
      description: ''
    - id: eventHubName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventhub.ConsumerGroupListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventhub.ConsumerGroupListResult>
  package: azure-arm-eventhub
- uid: azure-arm-eventhub.ConsumerGroups.listByEventHubNext
  name: listByEventHubNext(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="72ffa-148">Obtient tous les groupes de consommateurs dans un Namespace.</span><span class="sxs-lookup"><span data-stu-id="72ffa-148">Gets all the consumer groups in a Namespace.</span></span> <span data-ttu-id="72ffa-149">Un flux vide est retourné si aucun groupe de consommateurs n’existe dans le Namespace.</span><span class="sxs-lookup"><span data-stu-id="72ffa-149">An empty feed is returned if no consumer group exists in the Namespace.</span></span>
  syntax:
    content: 'function listByEventHubNext(nextPageLink: string, options?: Object)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: >
        <span data-ttu-id="72ffa-150">NextLink de l’appel réussi précédent à l’opération de liste.</span><span class="sxs-lookup"><span data-stu-id="72ffa-150">The NextLink from the previous successful call to List operation.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-eventhub.ConsumerGroupListResult>
  package: azure-arm-eventhub
- uid: azure-arm-eventhub.ConsumerGroups.listByEventHubNext_2
  name: listByEventHubNext(string, Object, ServiceCallback<ConsumerGroupListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="72ffa-151">Obtient tous les groupes de consommateurs dans un Namespace.</span><span class="sxs-lookup"><span data-stu-id="72ffa-151">Gets all the consumer groups in a Namespace.</span></span> <span data-ttu-id="72ffa-152">Un flux vide est retourné si aucun groupe de consommateurs n’existe dans le Namespace.</span><span class="sxs-lookup"><span data-stu-id="72ffa-152">An empty feed is returned if no consumer group exists in the Namespace.</span></span>
  syntax:
    content: 'function listByEventHubNext(nextPageLink: string, options: Object, callback: ServiceCallback<ConsumerGroupListResult>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventhub.ConsumerGroupListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventhub.ConsumerGroupListResult>
  package: azure-arm-eventhub
- uid: azure-arm-eventhub.ConsumerGroups.listByEventHubNext_1
  name: listByEventHubNext(string, ServiceCallback<ConsumerGroupListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="72ffa-153">Obtient tous les groupes de consommateurs dans un Namespace.</span><span class="sxs-lookup"><span data-stu-id="72ffa-153">Gets all the consumer groups in a Namespace.</span></span> <span data-ttu-id="72ffa-154">Un flux vide est retourné si aucun groupe de consommateurs n’existe dans le Namespace.</span><span class="sxs-lookup"><span data-stu-id="72ffa-154">An empty feed is returned if no consumer group exists in the Namespace.</span></span>
  syntax:
    content: 'function listByEventHubNext(nextPageLink: string, callback: ServiceCallback<ConsumerGroupListResult>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventhub.ConsumerGroupListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventhub.ConsumerGroupListResult>
  package: azure-arm-eventhub
- uid: azure-arm-eventhub.ConsumerGroups.listByEventHubNextWithHttpOperationResponse
  name: listByEventHubNextWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="72ffa-155">Obtient tous les groupes de consommateurs dans un Namespace.</span><span class="sxs-lookup"><span data-stu-id="72ffa-155">Gets all the consumer groups in a Namespace.</span></span> <span data-ttu-id="72ffa-156">Un flux vide est retourné si aucun groupe de consommateurs n’existe dans le Namespace.</span><span class="sxs-lookup"><span data-stu-id="72ffa-156">An empty feed is returned if no consumer group exists in the Namespace.</span></span>
  syntax:
    content: 'function listByEventHubNextWithHttpOperationResponse(nextPageLink: string, options?: Object)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: >
        <span data-ttu-id="72ffa-157">NextLink de l’appel réussi précédent à l’opération de liste.</span><span class="sxs-lookup"><span data-stu-id="72ffa-157">The NextLink from the previous successful call to List operation.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-eventhub.ConsumerGroupListResult>>
  package: azure-arm-eventhub
- uid: azure-arm-eventhub.ConsumerGroups.listByEventHubWithHttpOperationResponse
  name: listByEventHubWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="72ffa-158">Obtient tous les groupes de consommateurs dans un Namespace.</span><span class="sxs-lookup"><span data-stu-id="72ffa-158">Gets all the consumer groups in a Namespace.</span></span> <span data-ttu-id="72ffa-159">Un flux vide est retourné si aucun groupe de consommateurs n’existe dans le Namespace.</span><span class="sxs-lookup"><span data-stu-id="72ffa-159">An empty feed is returned if no consumer group exists in the Namespace.</span></span>
  syntax:
    content: 'function listByEventHubWithHttpOperationResponse(resourceGroupName: string, namespaceName: string, eventHubName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="72ffa-160">Nom du groupe de ressources au sein de l’abonnement azure.</span><span class="sxs-lookup"><span data-stu-id="72ffa-160">Name of the resource group within the azure subscription.</span></span>
    - id: namespaceName
      type:
      - string
      description: >
        <span data-ttu-id="72ffa-161">Le nom de Namespace</span><span class="sxs-lookup"><span data-stu-id="72ffa-161">The Namespace name</span></span>
    - id: eventHubName
      type:
      - string
      description: >
        <span data-ttu-id="72ffa-162">Le nom de Hub d’événements</span><span class="sxs-lookup"><span data-stu-id="72ffa-162">The Event Hub name</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-eventhub.ConsumerGroupListResult>>
  package: azure-arm-eventhub
references:
- uid: azure-arm-eventhub.ConsumerGroup
  name: ConsumerGroup
  spec.typeScript:
  - name: ConsumerGroup
    fullName: ConsumerGroup
    uid: azure-arm-eventhub.ConsumerGroup
- uid: Promise<azure-arm-eventhub.ConsumerGroup>
  name: ConsumerGroup>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ConsumerGroup
    fullName: ConsumerGroup
    uid: azure-arm-eventhub.ConsumerGroup
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-eventhub.ConsumerGroup>
  name: ConsumerGroup>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ConsumerGroup
    fullName: ConsumerGroup
    uid: azure-arm-eventhub.ConsumerGroup
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-eventhub.ConsumerGroup>>
  name: ConsumerGroup>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ConsumerGroup
    fullName: ConsumerGroup
    uid: azure-arm-eventhub.ConsumerGroup
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-eventhub.ConsumerGroupListResult>
  name: ConsumerGroupListResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ConsumerGroupListResult
    fullName: ConsumerGroupListResult
    uid: azure-arm-eventhub.ConsumerGroupListResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-eventhub.ConsumerGroupListResult>
  name: ConsumerGroupListResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ConsumerGroupListResult
    fullName: ConsumerGroupListResult
    uid: azure-arm-eventhub.ConsumerGroupListResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-eventhub.ConsumerGroupListResult>>
  name: ConsumerGroupListResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ConsumerGroupListResult
    fullName: ConsumerGroupListResult
    uid: azure-arm-eventhub.ConsumerGroupListResult
  - name: '>>'
    fullName: '>>'
