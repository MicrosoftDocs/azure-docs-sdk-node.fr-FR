### YamlMime:UniversalReference
ms.openlocfilehash: c7d8a57082382397f3b7093d908112dea7ace2a9
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 12/13/2018
ms.locfileid: "52079824"
items:
- uid: azure-iot-common.RetryOperation
  name: RetryOperation
  fullName: RetryOperation
  children:
  - azure-iot-common.RetryOperation.retry
  - azure-iot-common.RetryOperation.constructor
  langs:
  - typeScript
  type: class
  summary: <span data-ttu-id="55a8d-101">Implémente la logique nécessaire pour relancer les opérations telles que la connexion, recevoir les messages C2D, l’envoi de données de télémétrie, les mises à jour représentations, etc.</span><span class="sxs-lookup"><span data-stu-id="55a8d-101">Implements the necessary logic to retry operations such as connecting, receiving C2D messages, sending telemetry, twin updates, etc.</span></span>
  package: azure-iot-common
- uid: azure-iot-common.RetryOperation.retry
  name: 'retry((opCallback: (err?: Error, result?: any, response?: any) => void) => void, (err?: Error, result?: any, response?: any) => void)'
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="55a8d-102">Exécute une opération et si elle échoue et la stratégie de nouvelle tentative permet de tentatives.</span><span class="sxs-lookup"><span data-stu-id="55a8d-102">Executes an operation and retries if it fails and the retry policy allows it.</span></span>
  syntax:
    content: 'function retry(operation: (opCallback: (err?: Error, result?: any, response?: any) => void) => void, finalCallback: (err?: Error, result?: any, response?: any) => void)'
    parameters:
    - id: operation
      type:
      - '(opCallback: (err?: Error, result?: any, response?: any) => void) => void'
      description: <span data-ttu-id="55a8d-103">L’opération s’exécute.</span><span class="sxs-lookup"><span data-stu-id="55a8d-103">The operation to execute.</span></span>
    - id: finalCallback
      type:
      - '(err?: Error, result?: any, response?: any) => void'
      description: >
        <span data-ttu-id="55a8d-104">Rappel à appeler avec la dernière erreur ou le résultat, après plusieurs tentatives, si nécessaire.</span><span class="sxs-lookup"><span data-stu-id="55a8d-104">The callback to call with the final error or result, after retries if necessary.</span></span>
  package: azure-iot-common
- uid: azure-iot-common.RetryOperation.constructor
  name: RetryOperation(RetryPolicy, number)
  children: []
  type: constructor
  langs:
  - typeScript
  summary: <span data-ttu-id="55a8d-105">Crée une instance de <xref:azure-iot-common.RetryOperation.></span><span class="sxs-lookup"><span data-stu-id="55a8d-105">Creates an instance of <xref:azure-iot-common.RetryOperation.></span></span>
  syntax:
    content: 'new RetryOperation(policy: RetryPolicy, maxTimeout: number)'
    parameters:
    - id: policy
      type:
      - azure-iot-common.RetryPolicy
      description: <span data-ttu-id="55a8d-106">La stratégie de nouvelle tentative pour être utilisée pour cette opération, qui détermine quel message d’erreur est « renouvelable » ou non et la rapidité de nouvelle tentative.</span><span class="sxs-lookup"><span data-stu-id="55a8d-106">The retry policy to be used for this operation, which determines what error is "retryable" or not and how fast to retry.</span></span>
    - id: maxTimeout
      type:
      - number
      description: >
        <span data-ttu-id="55a8d-107">Le délai d’attente maximal pour cette opération, après quoi aucune nouvelle tentative ne sera tentée.</span><span class="sxs-lookup"><span data-stu-id="55a8d-107">The maximum timeout for this operation, after which no retry will be attempted.</span></span>
  package: azure-iot-common
references:
- uid: azure-iot-common.RetryPolicy
  name: RetryPolicy
  spec.typeScript:
  - name: RetryPolicy
    fullName: RetryPolicy
    uid: azure-iot-common.RetryPolicy
