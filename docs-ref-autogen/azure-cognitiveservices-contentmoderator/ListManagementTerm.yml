### YamlMime:UniversalReference
ms.openlocfilehash: 53c6afbe526590b91ebbee8283aea411a082f7e8
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 12/13/2018
ms.locfileid: "52082334"
items:
- uid: azure-cognitiveservices-contentmoderator.ListManagementTerm
  name: ListManagementTerm
  fullName: ListManagementTerm
  children:
  - azure-cognitiveservices-contentmoderator.ListManagementTerm.addTerm
  - azure-cognitiveservices-contentmoderator.ListManagementTerm.addTerm_2
  - azure-cognitiveservices-contentmoderator.ListManagementTerm.addTerm_1
  - azure-cognitiveservices-contentmoderator.ListManagementTerm.addTermWithHttpOperationResponse
  - azure-cognitiveservices-contentmoderator.ListManagementTerm.deleteAllTerms
  - azure-cognitiveservices-contentmoderator.ListManagementTerm.deleteAllTerms_2
  - azure-cognitiveservices-contentmoderator.ListManagementTerm.deleteAllTerms_1
  - azure-cognitiveservices-contentmoderator.ListManagementTerm.deleteAllTermsWithHttpOperationResponse
  - azure-cognitiveservices-contentmoderator.ListManagementTerm.deleteTerm
  - azure-cognitiveservices-contentmoderator.ListManagementTerm.deleteTerm_2
  - azure-cognitiveservices-contentmoderator.ListManagementTerm.deleteTerm_1
  - azure-cognitiveservices-contentmoderator.ListManagementTerm.deleteTermWithHttpOperationResponse
  - azure-cognitiveservices-contentmoderator.ListManagementTerm.getAllTerms
  - azure-cognitiveservices-contentmoderator.ListManagementTerm.getAllTerms_2
  - azure-cognitiveservices-contentmoderator.ListManagementTerm.getAllTerms_1
  - azure-cognitiveservices-contentmoderator.ListManagementTerm.getAllTermsWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ListManagementTerm.addTerm
  name: addTerm(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3ea16-101">Ajouter un terme à la liste des termes avec l’Id est égal à la liste passé de l’Id de liste.</span><span class="sxs-lookup"><span data-stu-id="3ea16-101">Add a term to the term list with list Id equal to list Id passed.</span></span>
  syntax:
    content: 'function addTerm(listId: string, term: string, language: string, options?: Object)'
    parameters:
    - id: listId
      type:
      - string
      description: >
        <span data-ttu-id="3ea16-102">Id de liste de la liste d’images.</span><span class="sxs-lookup"><span data-stu-id="3ea16-102">List Id of the image list.</span></span>
    - id: term
      type:
      - string
      description: >
        <span data-ttu-id="3ea16-103">Terme à supprimer</span><span class="sxs-lookup"><span data-stu-id="3ea16-103">Term to be deleted</span></span>
    - id: language
      type:
      - string
      description: >
        <span data-ttu-id="3ea16-104">Langue des termes du contrat.</span><span class="sxs-lookup"><span data-stu-id="3ea16-104">Language of the terms.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<any>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ListManagementTerm.addTerm_2
  name: addTerm(string, string, string, Object, ServiceCallback<any>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3ea16-105">Ajouter un terme à la liste des termes avec l’Id est égal à la liste passé de l’Id de liste.</span><span class="sxs-lookup"><span data-stu-id="3ea16-105">Add a term to the term list with list Id equal to list Id passed.</span></span>
  syntax:
    content: 'function addTerm(listId: string, term: string, language: string, options: Object, callback: ServiceCallback<any>)'
    parameters:
    - id: listId
      type:
      - string
      description: ''
    - id: term
      type:
      - string
      description: ''
    - id: language
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<any>
      description: ''
    return:
      type:
      - Promise<any>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ListManagementTerm.addTerm_1
  name: addTerm(string, string, string, ServiceCallback<any>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3ea16-106">Ajouter un terme à la liste des termes avec l’Id est égal à la liste passé de l’Id de liste.</span><span class="sxs-lookup"><span data-stu-id="3ea16-106">Add a term to the term list with list Id equal to list Id passed.</span></span>
  syntax:
    content: 'function addTerm(listId: string, term: string, language: string, callback: ServiceCallback<any>)'
    parameters:
    - id: listId
      type:
      - string
      description: ''
    - id: term
      type:
      - string
      description: ''
    - id: language
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<any>
      description: ''
    return:
      type:
      - Promise<any>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ListManagementTerm.addTermWithHttpOperationResponse
  name: addTermWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3ea16-107">Ajouter un terme à la liste des termes avec l’Id est égal à la liste passé de l’Id de liste.</span><span class="sxs-lookup"><span data-stu-id="3ea16-107">Add a term to the term list with list Id equal to list Id passed.</span></span>
  syntax:
    content: 'function addTermWithHttpOperationResponse(listId: string, term: string, language: string, options?: Object)'
    parameters:
    - id: listId
      type:
      - string
      description: >
        <span data-ttu-id="3ea16-108">Id de liste de la liste d’images.</span><span class="sxs-lookup"><span data-stu-id="3ea16-108">List Id of the image list.</span></span>
    - id: term
      type:
      - string
      description: >
        <span data-ttu-id="3ea16-109">Terme à supprimer</span><span class="sxs-lookup"><span data-stu-id="3ea16-109">Term to be deleted</span></span>
    - id: language
      type:
      - string
      description: >
        <span data-ttu-id="3ea16-110">Langue des termes du contrat.</span><span class="sxs-lookup"><span data-stu-id="3ea16-110">Language of the terms.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<any>>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ListManagementTerm.deleteAllTerms
  name: deleteAllTerms(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3ea16-111">Supprime tous les termes de la liste avec l’Id est égal à la liste passé de l’Id de liste.</span><span class="sxs-lookup"><span data-stu-id="3ea16-111">Deletes all terms from the list with list Id equal to the list Id passed.</span></span>
  syntax:
    content: 'function deleteAllTerms(listId: string, language: string, options?: Object)'
    parameters:
    - id: listId
      type:
      - string
      description: >
        <span data-ttu-id="3ea16-112">Id de liste de la liste d’images.</span><span class="sxs-lookup"><span data-stu-id="3ea16-112">List Id of the image list.</span></span>
    - id: language
      type:
      - string
      description: >
        <span data-ttu-id="3ea16-113">Langue des termes du contrat.</span><span class="sxs-lookup"><span data-stu-id="3ea16-113">Language of the terms.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<string>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ListManagementTerm.deleteAllTerms_2
  name: deleteAllTerms(string, string, Object, ServiceCallback<string>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3ea16-114">Supprime tous les termes de la liste avec l’Id est égal à la liste passé de l’Id de liste.</span><span class="sxs-lookup"><span data-stu-id="3ea16-114">Deletes all terms from the list with list Id equal to the list Id passed.</span></span>
  syntax:
    content: 'function deleteAllTerms(listId: string, language: string, options: Object, callback: ServiceCallback<string>)'
    parameters:
    - id: listId
      type:
      - string
      description: ''
    - id: language
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<string>
      description: ''
    return:
      type:
      - Promise<string>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ListManagementTerm.deleteAllTerms_1
  name: deleteAllTerms(string, string, ServiceCallback<string>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3ea16-115">Supprime tous les termes de la liste avec l’Id est égal à la liste passé de l’Id de liste.</span><span class="sxs-lookup"><span data-stu-id="3ea16-115">Deletes all terms from the list with list Id equal to the list Id passed.</span></span>
  syntax:
    content: 'function deleteAllTerms(listId: string, language: string, callback: ServiceCallback<string>)'
    parameters:
    - id: listId
      type:
      - string
      description: ''
    - id: language
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<string>
      description: ''
    return:
      type:
      - Promise<string>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ListManagementTerm.deleteAllTermsWithHttpOperationResponse
  name: deleteAllTermsWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3ea16-116">Supprime tous les termes de la liste avec l’Id est égal à la liste passé de l’Id de liste.</span><span class="sxs-lookup"><span data-stu-id="3ea16-116">Deletes all terms from the list with list Id equal to the list Id passed.</span></span>
  syntax:
    content: 'function deleteAllTermsWithHttpOperationResponse(listId: string, language: string, options?: Object)'
    parameters:
    - id: listId
      type:
      - string
      description: >
        <span data-ttu-id="3ea16-117">Id de liste de la liste d’images.</span><span class="sxs-lookup"><span data-stu-id="3ea16-117">List Id of the image list.</span></span>
    - id: language
      type:
      - string
      description: >
        <span data-ttu-id="3ea16-118">Langue des termes du contrat.</span><span class="sxs-lookup"><span data-stu-id="3ea16-118">Language of the terms.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<string>>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ListManagementTerm.deleteTerm
  name: deleteTerm(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3ea16-119">Supprime un terme de la liste avec l’Id est égal à la liste passé de l’Id de liste.</span><span class="sxs-lookup"><span data-stu-id="3ea16-119">Deletes a term from the list with list Id equal to the list Id passed.</span></span>
  syntax:
    content: 'function deleteTerm(listId: string, term: string, language: string, options?: Object)'
    parameters:
    - id: listId
      type:
      - string
      description: >
        <span data-ttu-id="3ea16-120">Id de liste de la liste d’images.</span><span class="sxs-lookup"><span data-stu-id="3ea16-120">List Id of the image list.</span></span>
    - id: term
      type:
      - string
      description: >
        <span data-ttu-id="3ea16-121">Terme à supprimer</span><span class="sxs-lookup"><span data-stu-id="3ea16-121">Term to be deleted</span></span>
    - id: language
      type:
      - string
      description: >
        <span data-ttu-id="3ea16-122">Langue des termes du contrat.</span><span class="sxs-lookup"><span data-stu-id="3ea16-122">Language of the terms.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<string>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ListManagementTerm.deleteTerm_2
  name: deleteTerm(string, string, string, Object, ServiceCallback<string>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3ea16-123">Supprime un terme de la liste avec l’Id est égal à la liste passé de l’Id de liste.</span><span class="sxs-lookup"><span data-stu-id="3ea16-123">Deletes a term from the list with list Id equal to the list Id passed.</span></span>
  syntax:
    content: 'function deleteTerm(listId: string, term: string, language: string, options: Object, callback: ServiceCallback<string>)'
    parameters:
    - id: listId
      type:
      - string
      description: ''
    - id: term
      type:
      - string
      description: ''
    - id: language
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<string>
      description: ''
    return:
      type:
      - Promise<string>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ListManagementTerm.deleteTerm_1
  name: deleteTerm(string, string, string, ServiceCallback<string>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3ea16-124">Supprime un terme de la liste avec l’Id est égal à la liste passé de l’Id de liste.</span><span class="sxs-lookup"><span data-stu-id="3ea16-124">Deletes a term from the list with list Id equal to the list Id passed.</span></span>
  syntax:
    content: 'function deleteTerm(listId: string, term: string, language: string, callback: ServiceCallback<string>)'
    parameters:
    - id: listId
      type:
      - string
      description: ''
    - id: term
      type:
      - string
      description: ''
    - id: language
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<string>
      description: ''
    return:
      type:
      - Promise<string>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ListManagementTerm.deleteTermWithHttpOperationResponse
  name: deleteTermWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3ea16-125">Supprime un terme de la liste avec l’Id est égal à la liste passé de l’Id de liste.</span><span class="sxs-lookup"><span data-stu-id="3ea16-125">Deletes a term from the list with list Id equal to the list Id passed.</span></span>
  syntax:
    content: 'function deleteTermWithHttpOperationResponse(listId: string, term: string, language: string, options?: Object)'
    parameters:
    - id: listId
      type:
      - string
      description: >
        <span data-ttu-id="3ea16-126">Id de liste de la liste d’images.</span><span class="sxs-lookup"><span data-stu-id="3ea16-126">List Id of the image list.</span></span>
    - id: term
      type:
      - string
      description: >
        <span data-ttu-id="3ea16-127">Terme à supprimer</span><span class="sxs-lookup"><span data-stu-id="3ea16-127">Term to be deleted</span></span>
    - id: language
      type:
      - string
      description: >
        <span data-ttu-id="3ea16-128">Langue des termes du contrat.</span><span class="sxs-lookup"><span data-stu-id="3ea16-128">Language of the terms.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<string>>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ListManagementTerm.getAllTerms
  name: getAllTerms(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3ea16-129">Obtient tous les termes à partir de la liste avec l’Id de liste égale à la liste de Qu'id transmis.</span><span class="sxs-lookup"><span data-stu-id="3ea16-129">Gets all terms from the list with list Id equal to the list Id passed.</span></span>
  syntax:
    content: 'function getAllTerms(listId: string, language: string, options?: Object)'
    parameters:
    - id: listId
      type:
      - string
      description: >
        <span data-ttu-id="3ea16-130">Id de liste de la liste d’images.</span><span class="sxs-lookup"><span data-stu-id="3ea16-130">List Id of the image list.</span></span>
    - id: language
      type:
      - string
      description: >
        <span data-ttu-id="3ea16-131">Langue des termes du contrat.</span><span class="sxs-lookup"><span data-stu-id="3ea16-131">Language of the terms.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.Terms>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ListManagementTerm.getAllTerms_2
  name: getAllTerms(string, string, Object, ServiceCallback<Terms>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3ea16-132">Obtient tous les termes à partir de la liste avec l’Id de liste égale à la liste de Qu'id transmis.</span><span class="sxs-lookup"><span data-stu-id="3ea16-132">Gets all terms from the list with list Id equal to the list Id passed.</span></span>
  syntax:
    content: 'function getAllTerms(listId: string, language: string, options: Object, callback: ServiceCallback<Terms>)'
    parameters:
    - id: listId
      type:
      - string
      description: ''
    - id: language
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.Terms>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.Terms>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ListManagementTerm.getAllTerms_1
  name: getAllTerms(string, string, ServiceCallback<Terms>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3ea16-133">Obtient tous les termes à partir de la liste avec l’Id de liste égale à la liste de Qu'id transmis.</span><span class="sxs-lookup"><span data-stu-id="3ea16-133">Gets all terms from the list with list Id equal to the list Id passed.</span></span>
  syntax:
    content: 'function getAllTerms(listId: string, language: string, callback: ServiceCallback<Terms>)'
    parameters:
    - id: listId
      type:
      - string
      description: ''
    - id: language
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.Terms>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.Terms>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.ListManagementTerm.getAllTermsWithHttpOperationResponse
  name: getAllTermsWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="3ea16-134">Obtient tous les termes à partir de la liste avec l’Id de liste égale à la liste de Qu'id transmis.</span><span class="sxs-lookup"><span data-stu-id="3ea16-134">Gets all terms from the list with list Id equal to the list Id passed.</span></span>
  syntax:
    content: 'function getAllTermsWithHttpOperationResponse(listId: string, language: string, options?: Object)'
    parameters:
    - id: listId
      type:
      - string
      description: >
        <span data-ttu-id="3ea16-135">Id de liste de la liste d’images.</span><span class="sxs-lookup"><span data-stu-id="3ea16-135">List Id of the image list.</span></span>
    - id: language
      type:
      - string
      description: >
        <span data-ttu-id="3ea16-136">Langue des termes du contrat.</span><span class="sxs-lookup"><span data-stu-id="3ea16-136">Language of the terms.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-contentmoderator.Terms>>
  package: azure-cognitiveservices-contentmoderator
references:
- uid: Promise<azure-cognitiveservices-contentmoderator.Terms>
  name: Terms>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: Terms
    fullName: Terms
    uid: azure-cognitiveservices-contentmoderator.Terms
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-contentmoderator.Terms>
  name: Terms>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: Terms
    fullName: Terms
    uid: azure-cognitiveservices-contentmoderator.Terms
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-contentmoderator.Terms>>
  name: Terms>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: Terms
    fullName: Terms
    uid: azure-cognitiveservices-contentmoderator.Terms
  - name: '>>'
    fullName: '>>'
