### YamlMime:UniversalReference
ms.openlocfilehash: 4cde1b335a77464fabbc18e725bb879fd916b927
ms.sourcegitcommit: f774f8ce6b26593f73a5893bfa47f9c510fc51a7
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 06/21/2018
ms.locfileid: "40057141"
items:
- uid: ms-rest.WebResource
  id: ms-rest.WebResource
  name: WebResource
  summary: >-
    Crée un nouvel objet WebResource.


    Cette classe fournit une abstraction sur un appel REST en étant bibliothèque / indépendant de la mise en œuvre et en encapsulant les propriétés nécessaires pour lancer une requête.
  fullName: ms-rest.WebResource
  type: Class
  children:
  - ms-rest.WebResource.#ctor
  - ms-rest.WebResource#pipeInput
  - ms-rest.WebResource#validateRequestProperties
  - ms-rest.WebResource#prepare
  langs:
  - js
- id: ms-rest.WebResource.#ctor
  uid: ms-rest.WebResource.#ctor
  parent: ms-rest.WebResource
  name: WebResource()
  fullName: ms-rest.WebResource.WebResource()
  summary: ''
  type: Constructor
  syntax:
    content: new WebResource()
  langs:
  - js
- uid: ms-rest.WebResource#pipeInput
  id: ms-rest.WebResource#pipeInput
  parent: ms-rest.WebResource
  name: pipeInput(inputStream, outputStream)
  summary: Raccorder le flux d’entrée donné dans un flux de sortie de destination si la méthode WebResource requiert un corps de demande et un corps n’est pas déjà défini.
  fullName: ms-rest.WebResource.pipeInput(inputStream, outputStream)
  type: Function
  syntax:
    parameters:
    - id: inputStream
      type:
      - ms-rest.Stream
      description: le flux au canal à partir de
    - id: outputStream
      type:
      - ms-rest.Stream
      description: le flux au canal à
    return:
      description: destStream
    content: function pipeInput(inputStream, outputStream)
  langs:
  - js
- uid: ms-rest.WebResource#validateRequestProperties
  id: ms-rest.WebResource#validateRequestProperties
  parent: ms-rest.WebResource
  name: validateRequestProperties()
  summary: Valide le fait que les propriétés requises tels que les en-têtes de méthode, url, ['Content-Type'], [« accept-language »] les en-têtes sont définies. Une erreur sera levée si l’une des propriétés mentionnées ci-dessus n’est pas définie.
  fullName: ms-rest.WebResource.validateRequestProperties()
  type: Function
  syntax:
    content: function validateRequestProperties()
  langs:
  - js
- uid: ms-rest.WebResource#prepare
  id: ms-rest.WebResource#prepare
  parent: ms-rest.WebResource
  name: prepare(options)
  summary: Prépare la demande.
  fullName: ms-rest.WebResource.prepare(options)
  type: Function
  syntax:
    parameters:
    - id: options
      type:
      - object
      description: Les options de requête qui doivent être fournies pour envoyer une demande avec succès
    - id: options.method
      type:
      - string
      description: La méthode de demande HTTP. Les valeurs valides sont 'GET', 'PUT', 'HEAD', 'DELETE', 'OPTIONS', 'POST', 'PATCH'.
    - id: options.url
      type:
      - string
      description: La requête url. Il est peut-être ou peut-être pas les paramètres de requête qu’il contient. Soit fournissent le « url » ou « pathTemplate » dans l’objet d’options. Les deux options sont mutuellement exclusifs.
      optional: true
    - id: options.queryParameters
      type:
      - object
      description: "Un dictionnaire de paramètres de requête à ajouter à l’url, où la « clé » est la « requête-paramètre-name » et la « valeur » est la « requête--valeur du paramètre'. La « requête--valeur du paramètre' peut être de type 'string', ou il peut être de type 'object'. Le format de 'object' doit être utilisé lorsque vous souhaitez ignorer l’encodage des url. Lorsque vous utilisez le format d’objet, l’objet doit avoir une propriété nommée value qui fournit la « requête--valeur du paramètre'.\nExemple : \n   - requête--valeur de paramètre au format de 'object' : {'requête-parameter-name' : {valeur : 'requête-paramètre-value' skipUrlEncoding : true}}\n   - requête--valeur de paramètre au format 'chaîne' : {« requête-paramètre-name » : 'valeur de paramètre requête'}.\nRemarque : ' Si options.url a déjà certains paramètres de requête, la valeur fournie dans options.queryParameters sera ajoutée à l’url."
      optional: true
    - id: options.pathTemplate
      type:
      - string
      description: >-
        Le modèle de chemin d’accès de la requête url. Soit fournissent le « url » ou « pathTemplate » dans l’objet d’options. Les deux options sont mutuellement exclusifs.

        Exemple : ' / subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}'
      optional: true
    - id: options.baseUrl
      type:
      - string
      description: 'L’url de base de la demande. Valeur par défaut est : «https://management.azure.com». Cela ne s’applique uniquement à options.pathTemplate. Si vous fournissez options.url il est probable que vous fournissez l’url complète.'
      optional: true
    - id: options.pathParameters
      type:
      - object
      description: "Un dictionnaire de paramètres de chemin d’accès qui doivent être remplacées par les valeurs réelles dans le pathTemplate.\nIci la clé est le « chemin d’accès-paramètre-name » et la valeur est le 'chemin d’accès-paramètre-value'. Le 'chemin d’accès-paramètre-value' peut être de type 'string', ou il peut être de type 'object'.\nLe format de 'object' doit être utilisé lorsque vous souhaitez ignorer l’encodage des url. Lorsque vous utilisez le format d’objet, l’objet doit avoir une propriété nommée value qui fournit le 'chemin d’accès-paramètre-value'.\nExemple : \n   - chemin d’accès--valeur de paramètre au format de 'object' : {'chemin d’accès-parameter-name' : {valeur : 'chemin d’accès-paramètre-value' skipUrlEncoding : true}}\n   - chemin d’accès--valeur de paramètre au format 'chaîne' : {'chemin d’accès-parameter-name' : 'chemin d’accès-paramètre-value'}."
      optional: true
    - id: options.formData
      type:
      - object
      description: >-
        Dictionnaire de paires clé-valeur pour l’objet formData.

        Si l’attendu 'Content-Type » à définir est « application/x--www-form-urlencoded » puis définissez dans l’objet options.headers else que l’en-tête 'Content-Type' est définie à 'multipart/form-data'.
      optional: true
    - id: options.headers
      type:
      - object
      description: >-
        Dictionnaire des en-têtes de demande qui doivent être appliquées à la demande.

        Ici la clé est 'header-name' et la valeur est « en-tête-valeur ». La valeur d’en-tête doit être de type chaîne.
         - ContentType doit être fourni avec le nom de clé en tant que 'Content-Type'. Valeur par défaut « application/json ; charset = utf-8'.
         - 'Transfer-Encoding' est définie sur « mémorisé en bloc » par défaut si « options.bodyIsStream » est définie sur true.
         - 'Content-Type' est défini à « application/octet-stream » par défaut si « options.bodyIsStream » est définie sur true.
         - « accept-language » par défaut est définie sur « en-US »
         - « x-ms-client-request-id » par défaut est définie pour un nouveau Guid. Pour ne pas générer un guid pour la demande, définissez options.disableClientRequestId sur true
      optional: true
    - id: options.disableClientRequestId
      type:
      - boolean
      description: Lorsque la valeur est true, indique au client de ne pas définir les en-tête 'x-ms-client-request-id' pour un nouveau Guid().
      optional: true
    - id: options.body
      type:
      - object
      - string
      - boolean
      - array
      - number
      - ms-rest.null
      - undefined
      description: Corps de la demande. Il peut être de n’importe quel type. Cette méthode sera JSON.stringify () le corps de la demande.
      optional: true
    - id: options.serializationMapper
      type:
      - object
      description: Fournit des informations sur la manière de sérialiser le corps de la demande.
      optional: true
    - id: options.deserializationMapper
      type:
      - object
      description: Fournit des informations sur la façon de désérialiser le corps de réponse.
      optional: true
    - id: options.disableJsonStringifyOnBody
      type:
      - boolean
      description: 'Indique si cette méthode doit JSON.stringify () le corps de la demande. Valeur par défaut : false.'
      optional: true
    - id: options.bodyIsStream
      type:
      - boolean
      description: Indique si le corps de la demande est un flux (utile pour les scénarios de chargement de fichier).
      optional: true
    return:
      type:
      - object
      description: WebResource retourne l’objet de ressource Web (requête HTTP) préparée qui doive être fournies au pipeline de requête.
    content: function prepare(options)
  langs:
  - js
