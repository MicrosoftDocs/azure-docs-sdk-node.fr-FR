### YamlMime:UniversalReference
ms.openlocfilehash: d9f21b055e48d2ddc596045ca4e0fcc01ba48301
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 08/12/2018
ms.locfileid: "40060181"
items:
- uid: azure-arm-eventgrid.EventSubscriptions
  name: EventSubscriptions
  fullName: EventSubscriptions
  children:
  - azure-arm-eventgrid.EventSubscriptions.beginCreateOrUpdate
  - azure-arm-eventgrid.EventSubscriptions.beginCreateOrUpdate_1
  - azure-arm-eventgrid.EventSubscriptions.beginCreateOrUpdate_2
  - azure-arm-eventgrid.EventSubscriptions.beginCreateOrUpdateWithHttpOperationResponse
  - azure-arm-eventgrid.EventSubscriptions.beginDeleteMethod
  - azure-arm-eventgrid.EventSubscriptions.beginDeleteMethod_1
  - azure-arm-eventgrid.EventSubscriptions.beginDeleteMethod_2
  - azure-arm-eventgrid.EventSubscriptions.beginDeleteMethodWithHttpOperationResponse
  - azure-arm-eventgrid.EventSubscriptions.beginUpdate_1
  - azure-arm-eventgrid.EventSubscriptions.beginUpdate_2
  - azure-arm-eventgrid.EventSubscriptions.beginUpdate
  - azure-arm-eventgrid.EventSubscriptions.beginUpdateWithHttpOperationResponse
  - azure-arm-eventgrid.EventSubscriptions.createOrUpdate
  - azure-arm-eventgrid.EventSubscriptions.createOrUpdate_1
  - azure-arm-eventgrid.EventSubscriptions.createOrUpdate_2
  - azure-arm-eventgrid.EventSubscriptions.createOrUpdateWithHttpOperationResponse
  - azure-arm-eventgrid.EventSubscriptions.deleteMethod_1
  - azure-arm-eventgrid.EventSubscriptions.deleteMethod
  - azure-arm-eventgrid.EventSubscriptions.deleteMethod_2
  - azure-arm-eventgrid.EventSubscriptions.deleteMethodWithHttpOperationResponse
  - azure-arm-eventgrid.EventSubscriptions.get_1
  - azure-arm-eventgrid.EventSubscriptions.get
  - azure-arm-eventgrid.EventSubscriptions.get_2
  - azure-arm-eventgrid.EventSubscriptions.getFullUrl
  - azure-arm-eventgrid.EventSubscriptions.getFullUrl_1
  - azure-arm-eventgrid.EventSubscriptions.getFullUrl_2
  - azure-arm-eventgrid.EventSubscriptions.getFullUrlWithHttpOperationResponse
  - azure-arm-eventgrid.EventSubscriptions.getWithHttpOperationResponse
  - azure-arm-eventgrid.EventSubscriptions.listByResource
  - azure-arm-eventgrid.EventSubscriptions.listByResource_1
  - azure-arm-eventgrid.EventSubscriptions.listByResource_2
  - azure-arm-eventgrid.EventSubscriptions.listByResourceWithHttpOperationResponse
  - azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroup
  - azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroup_1
  - azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroup_2
  - azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupForTopicType
  - azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupForTopicType_1
  - azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupForTopicType_2
  - azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupForTopicTypeWithHttpOperationResponse
  - azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupWithHttpOperationResponse
  - azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscription_1
  - azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscription_2
  - azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscription
  - azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionForTopicType_1
  - azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionForTopicType
  - azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionForTopicType_2
  - azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionForTopicTypeWithHttpOperationResponse
  - azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionWithHttpOperationResponse
  - azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroup
  - azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroup_1
  - azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroup_2
  - azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupForTopicType
  - azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupForTopicType_1
  - azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupForTopicType_2
  - azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupForTopicTypeWithHttpOperationResponse
  - azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupWithHttpOperationResponse
  - azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscription
  - azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscription_1
  - azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscription_2
  - azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionForTopicType
  - azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionForTopicType_1
  - azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionForTopicType_2
  - azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionForTopicTypeWithHttpOperationResponse
  - azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionWithHttpOperationResponse
  - azure-arm-eventgrid.EventSubscriptions.update
  - azure-arm-eventgrid.EventSubscriptions.update_1
  - azure-arm-eventgrid.EventSubscriptions.update_2
  - azure-arm-eventgrid.EventSubscriptions.updateWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.beginCreateOrUpdate
  name: beginCreateOrUpdate
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function beginCreateOrUpdate(scope: string, eventSubscriptionName: string, eventSubscriptionInfo: EventSubscription, options?: function)'
    parameters:
    - id: scope
      type:
      - string
      description: >
        <span data-ttu-id="a38da-101">L’identificateur de la ressource à laquelle l’abonnement aux événements doit être créé ou mis à jour.</span><span class="sxs-lookup"><span data-stu-id="a38da-101">The identifier of the resource to which the event subscription needs to be created or updated.</span></span> <span data-ttu-id="a38da-102">L’étendue peut être un abonnement, ou un groupe de ressources ou une ressource de niveau supérieur appartenant à un espace de noms de fournisseur de ressources ou une rubrique EventGrid.</span><span class="sxs-lookup"><span data-stu-id="a38da-102">The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic.</span></span> <span data-ttu-id="a38da-103">Par exemple, utilisez « / subscriptions / {subscriptionId} / » pour un abonnement, « / subscriptions / {subscriptionId} /resourceGroups/ {resourceGroupName}' pour un groupe de ressources, et « / subscriptions / {subscriptionId} /resourceGroups/ {resourceGroupName} / fournisseurs / {resourceProviderNamespace} / {resourceType} / {resourceName} » pour une ressource, et ' / subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' pour une rubrique EventGrid.</span><span class="sxs-lookup"><span data-stu-id="a38da-103">For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.</span></span>
    - id: eventSubscriptionName
      type:
      - string
      description: >
        <span data-ttu-id="a38da-104">Nom de l’abonnement aux événements.</span><span class="sxs-lookup"><span data-stu-id="a38da-104">Name of the event subscription.</span></span> <span data-ttu-id="a38da-105">Noms d’événements abonnement doivent être comprise entre 3 et 64 caractères et doivent utiliser uniquement des lettres d’alphanumériques.</span><span class="sxs-lookup"><span data-stu-id="a38da-105">Event subscription names must be between 3 and 64 characters in length and should use alphanumeric letters only.</span></span>
    - id: eventSubscriptionInfo
      type:
      - azure-arm-eventgrid.EventSubscription
      description: >
        <span data-ttu-id="a38da-106">Propriétés de l’abonnement événement contenant les informations de filtre et de destination</span><span class="sxs-lookup"><span data-stu-id="a38da-106">Event subscription properties containing the destination and filter information</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscription>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.beginCreateOrUpdate_1
  name: beginCreateOrUpdate
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function beginCreateOrUpdate(scope: string, eventSubscriptionName: string, eventSubscriptionInfo: EventSubscription, callback: ServiceCallback<EventSubscription>)'
    parameters:
    - id: scope
      type:
      - string
      description: ''
    - id: eventSubscriptionName
      type:
      - string
      description: ''
    - id: eventSubscriptionInfo
      type:
      - azure-arm-eventgrid.EventSubscription
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscription>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscription>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.beginCreateOrUpdate_2
  name: beginCreateOrUpdate
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function beginCreateOrUpdate(scope: string, eventSubscriptionName: string, eventSubscriptionInfo: EventSubscription, options: function, callback: ServiceCallback<EventSubscription>)'
    parameters:
    - id: scope
      type:
      - string
      description: ''
    - id: eventSubscriptionName
      type:
      - string
      description: ''
    - id: eventSubscriptionInfo
      type:
      - azure-arm-eventgrid.EventSubscription
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscription>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscription>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.beginCreateOrUpdateWithHttpOperationResponse
  name: beginCreateOrUpdateWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function beginCreateOrUpdateWithHttpOperationResponse(scope: string, eventSubscriptionName: string, eventSubscriptionInfo: EventSubscription, options?: function)'
    parameters:
    - id: scope
      type:
      - string
      description: >
        <span data-ttu-id="a38da-107">L’identificateur de la ressource à laquelle l’abonnement aux événements doit être créé ou mis à jour.</span><span class="sxs-lookup"><span data-stu-id="a38da-107">The identifier of the resource to which the event subscription needs to be created or updated.</span></span> <span data-ttu-id="a38da-108">L’étendue peut être un abonnement, ou un groupe de ressources ou une ressource de niveau supérieur appartenant à un espace de noms de fournisseur de ressources ou une rubrique EventGrid.</span><span class="sxs-lookup"><span data-stu-id="a38da-108">The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic.</span></span> <span data-ttu-id="a38da-109">Par exemple, utilisez « / subscriptions / {subscriptionId} / » pour un abonnement, « / subscriptions / {subscriptionId} /resourceGroups/ {resourceGroupName}' pour un groupe de ressources, et « / subscriptions / {subscriptionId} /resourceGroups/ {resourceGroupName} / fournisseurs / {resourceProviderNamespace} / {resourceType} / {resourceName} » pour une ressource, et ' / subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' pour une rubrique EventGrid.</span><span class="sxs-lookup"><span data-stu-id="a38da-109">For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.</span></span>
    - id: eventSubscriptionName
      type:
      - string
      description: >
        <span data-ttu-id="a38da-110">Nom de l’abonnement aux événements.</span><span class="sxs-lookup"><span data-stu-id="a38da-110">Name of the event subscription.</span></span> <span data-ttu-id="a38da-111">Noms d’événements abonnement doivent être comprise entre 3 et 64 caractères et doivent utiliser uniquement des lettres d’alphanumériques.</span><span class="sxs-lookup"><span data-stu-id="a38da-111">Event subscription names must be between 3 and 64 characters in length and should use alphanumeric letters only.</span></span>
    - id: eventSubscriptionInfo
      type:
      - azure-arm-eventgrid.EventSubscription
      description: >
        <span data-ttu-id="a38da-112">Propriétés de l’abonnement événement contenant les informations de filtre et de destination</span><span class="sxs-lookup"><span data-stu-id="a38da-112">Event subscription properties containing the destination and filter information</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscription>>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.beginDeleteMethod
  name: beginDeleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function beginDeleteMethod(scope: string, eventSubscriptionName: string, options?: function)'
    parameters:
    - id: scope
      type:
      - string
      description: >
        <span data-ttu-id="a38da-113">L’étendue de l’abonnement aux événements.</span><span class="sxs-lookup"><span data-stu-id="a38da-113">The scope of the event subscription.</span></span> <span data-ttu-id="a38da-114">L’étendue peut être un abonnement, ou un groupe de ressources ou une ressource de niveau supérieur appartenant à un espace de noms de fournisseur de ressources ou une rubrique EventGrid.</span><span class="sxs-lookup"><span data-stu-id="a38da-114">The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic.</span></span> <span data-ttu-id="a38da-115">Par exemple, utilisez « / subscriptions / {subscriptionId} / » pour un abonnement, « / subscriptions / {subscriptionId} /resourceGroups/ {resourceGroupName}' pour un groupe de ressources, et « / subscriptions / {subscriptionId} /resourceGroups/ {resourceGroupName} / fournisseurs / {resourceProviderNamespace} / {resourceType} / {resourceName} » pour une ressource, et ' / subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' pour une rubrique EventGrid.</span><span class="sxs-lookup"><span data-stu-id="a38da-115">For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.</span></span>
    - id: eventSubscriptionName
      type:
      - string
      description: >
        <span data-ttu-id="a38da-116">Nom de l’abonnement aux événements</span><span class="sxs-lookup"><span data-stu-id="a38da-116">Name of the event subscription</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.beginDeleteMethod_1
  name: beginDeleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function beginDeleteMethod(scope: string, eventSubscriptionName: string, callback: ServiceCallback<void>)'
    parameters:
    - id: scope
      type:
      - string
      description: ''
    - id: eventSubscriptionName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.beginDeleteMethod_2
  name: beginDeleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function beginDeleteMethod(scope: string, eventSubscriptionName: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: scope
      type:
      - string
      description: ''
    - id: eventSubscriptionName
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.beginDeleteMethodWithHttpOperationResponse
  name: beginDeleteMethodWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function beginDeleteMethodWithHttpOperationResponse(scope: string, eventSubscriptionName: string, options?: function)'
    parameters:
    - id: scope
      type:
      - string
      description: >
        <span data-ttu-id="a38da-117">L’étendue de l’abonnement aux événements.</span><span class="sxs-lookup"><span data-stu-id="a38da-117">The scope of the event subscription.</span></span> <span data-ttu-id="a38da-118">L’étendue peut être un abonnement, ou un groupe de ressources ou une ressource de niveau supérieur appartenant à un espace de noms de fournisseur de ressources ou une rubrique EventGrid.</span><span class="sxs-lookup"><span data-stu-id="a38da-118">The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic.</span></span> <span data-ttu-id="a38da-119">Par exemple, utilisez « / subscriptions / {subscriptionId} / » pour un abonnement, « / subscriptions / {subscriptionId} /resourceGroups/ {resourceGroupName}' pour un groupe de ressources, et « / subscriptions / {subscriptionId} /resourceGroups/ {resourceGroupName} / fournisseurs / {resourceProviderNamespace} / {resourceType} / {resourceName} » pour une ressource, et ' / subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' pour une rubrique EventGrid.</span><span class="sxs-lookup"><span data-stu-id="a38da-119">For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.</span></span>
    - id: eventSubscriptionName
      type:
      - string
      description: >
        <span data-ttu-id="a38da-120">Nom de l’abonnement aux événements</span><span class="sxs-lookup"><span data-stu-id="a38da-120">Name of the event subscription</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.beginUpdate_1
  name: beginUpdate
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function beginUpdate(scope: string, eventSubscriptionName: string, eventSubscriptionUpdateParameters: EventSubscriptionUpdateParameters, callback: ServiceCallback<EventSubscription>)'
    parameters:
    - id: scope
      type:
      - string
      description: ''
    - id: eventSubscriptionName
      type:
      - string
      description: ''
    - id: eventSubscriptionUpdateParameters
      type:
      - azure-arm-eventgrid.EventSubscriptionUpdateParameters
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscription>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscription>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.beginUpdate_2
  name: beginUpdate
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function beginUpdate(scope: string, eventSubscriptionName: string, eventSubscriptionUpdateParameters: EventSubscriptionUpdateParameters, options: function, callback: ServiceCallback<EventSubscription>)'
    parameters:
    - id: scope
      type:
      - string
      description: ''
    - id: eventSubscriptionName
      type:
      - string
      description: ''
    - id: eventSubscriptionUpdateParameters
      type:
      - azure-arm-eventgrid.EventSubscriptionUpdateParameters
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscription>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscription>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.beginUpdate
  name: beginUpdate
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function beginUpdate(scope: string, eventSubscriptionName: string, eventSubscriptionUpdateParameters: EventSubscriptionUpdateParameters, options?: function)'
    parameters:
    - id: scope
      type:
      - string
      description: >
        <span data-ttu-id="a38da-121">L’étendue de l’abonnement aux événements existant.</span><span class="sxs-lookup"><span data-stu-id="a38da-121">The scope of existing event subscription.</span></span> <span data-ttu-id="a38da-122">L’étendue peut être un abonnement, ou un groupe de ressources ou une ressource de niveau supérieur appartenant à un espace de noms de fournisseur de ressources ou une rubrique EventGrid.</span><span class="sxs-lookup"><span data-stu-id="a38da-122">The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic.</span></span> <span data-ttu-id="a38da-123">Par exemple, utilisez « / subscriptions / {subscriptionId} / » pour un abonnement, « / subscriptions / {subscriptionId} /resourceGroups/ {resourceGroupName}' pour un groupe de ressources, et « / subscriptions / {subscriptionId} /resourceGroups/ {resourceGroupName} / fournisseurs / {resourceProviderNamespace} / {resourceType} / {resourceName} » pour une ressource, et ' / subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' pour une rubrique EventGrid.</span><span class="sxs-lookup"><span data-stu-id="a38da-123">For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.</span></span>
    - id: eventSubscriptionName
      type:
      - string
      description: >
        <span data-ttu-id="a38da-124">Nom de l’abonnement aux événements à mettre à jour</span><span class="sxs-lookup"><span data-stu-id="a38da-124">Name of the event subscription to be updated</span></span>
    - id: eventSubscriptionUpdateParameters
      type:
      - azure-arm-eventgrid.EventSubscriptionUpdateParameters
      description: >
        <span data-ttu-id="a38da-125">Informations d’abonnement événement mis à jour</span><span class="sxs-lookup"><span data-stu-id="a38da-125">Updated event subscription information</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscription>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.beginUpdateWithHttpOperationResponse
  name: beginUpdateWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function beginUpdateWithHttpOperationResponse(scope: string, eventSubscriptionName: string, eventSubscriptionUpdateParameters: EventSubscriptionUpdateParameters, options?: function)'
    parameters:
    - id: scope
      type:
      - string
      description: >
        <span data-ttu-id="a38da-126">L’étendue de l’abonnement aux événements existant.</span><span class="sxs-lookup"><span data-stu-id="a38da-126">The scope of existing event subscription.</span></span> <span data-ttu-id="a38da-127">L’étendue peut être un abonnement, ou un groupe de ressources ou une ressource de niveau supérieur appartenant à un espace de noms de fournisseur de ressources ou une rubrique EventGrid.</span><span class="sxs-lookup"><span data-stu-id="a38da-127">The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic.</span></span> <span data-ttu-id="a38da-128">Par exemple, utilisez « / subscriptions / {subscriptionId} / » pour un abonnement, « / subscriptions / {subscriptionId} /resourceGroups/ {resourceGroupName}' pour un groupe de ressources, et « / subscriptions / {subscriptionId} /resourceGroups/ {resourceGroupName} / fournisseurs / {resourceProviderNamespace} / {resourceType} / {resourceName} » pour une ressource, et ' / subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' pour une rubrique EventGrid.</span><span class="sxs-lookup"><span data-stu-id="a38da-128">For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.</span></span>
    - id: eventSubscriptionName
      type:
      - string
      description: >
        <span data-ttu-id="a38da-129">Nom de l’abonnement aux événements à mettre à jour</span><span class="sxs-lookup"><span data-stu-id="a38da-129">Name of the event subscription to be updated</span></span>
    - id: eventSubscriptionUpdateParameters
      type:
      - azure-arm-eventgrid.EventSubscriptionUpdateParameters
      description: >
        <span data-ttu-id="a38da-130">Informations d’abonnement événement mis à jour</span><span class="sxs-lookup"><span data-stu-id="a38da-130">Updated event subscription information</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscription>>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.createOrUpdate
  name: createOrUpdate
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function createOrUpdate(scope: string, eventSubscriptionName: string, eventSubscriptionInfo: EventSubscription, options?: function)'
    parameters:
    - id: scope
      type:
      - string
      description: >
        <span data-ttu-id="a38da-131">L’identificateur de la ressource à laquelle l’abonnement aux événements doit être créé ou mis à jour.</span><span class="sxs-lookup"><span data-stu-id="a38da-131">The identifier of the resource to which the event subscription needs to be created or updated.</span></span> <span data-ttu-id="a38da-132">L’étendue peut être un abonnement, ou un groupe de ressources ou une ressource de niveau supérieur appartenant à un espace de noms de fournisseur de ressources ou une rubrique EventGrid.</span><span class="sxs-lookup"><span data-stu-id="a38da-132">The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic.</span></span> <span data-ttu-id="a38da-133">Par exemple, utilisez « / subscriptions / {subscriptionId} / » pour un abonnement, « / subscriptions / {subscriptionId} /resourceGroups/ {resourceGroupName}' pour un groupe de ressources, et « / subscriptions / {subscriptionId} /resourceGroups/ {resourceGroupName} / fournisseurs / {resourceProviderNamespace} / {resourceType} / {resourceName} » pour une ressource, et ' / subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' pour une rubrique EventGrid.</span><span class="sxs-lookup"><span data-stu-id="a38da-133">For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.</span></span>
    - id: eventSubscriptionName
      type:
      - string
      description: >
        <span data-ttu-id="a38da-134">Nom de l’abonnement aux événements.</span><span class="sxs-lookup"><span data-stu-id="a38da-134">Name of the event subscription.</span></span> <span data-ttu-id="a38da-135">Noms d’événements abonnement doivent être comprise entre 3 et 64 caractères et doivent utiliser uniquement des lettres d’alphanumériques.</span><span class="sxs-lookup"><span data-stu-id="a38da-135">Event subscription names must be between 3 and 64 characters in length and should use alphanumeric letters only.</span></span>
    - id: eventSubscriptionInfo
      type:
      - azure-arm-eventgrid.EventSubscription
      description: >
        <span data-ttu-id="a38da-136">Propriétés de l’abonnement événement contenant les informations de filtre et de destination</span><span class="sxs-lookup"><span data-stu-id="a38da-136">Event subscription properties containing the destination and filter information</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscription>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.createOrUpdate_1
  name: createOrUpdate
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function createOrUpdate(scope: string, eventSubscriptionName: string, eventSubscriptionInfo: EventSubscription, callback: ServiceCallback<EventSubscription>)'
    parameters:
    - id: scope
      type:
      - string
      description: ''
    - id: eventSubscriptionName
      type:
      - string
      description: ''
    - id: eventSubscriptionInfo
      type:
      - azure-arm-eventgrid.EventSubscription
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscription>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscription>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.createOrUpdate_2
  name: createOrUpdate
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function createOrUpdate(scope: string, eventSubscriptionName: string, eventSubscriptionInfo: EventSubscription, options: function, callback: ServiceCallback<EventSubscription>)'
    parameters:
    - id: scope
      type:
      - string
      description: ''
    - id: eventSubscriptionName
      type:
      - string
      description: ''
    - id: eventSubscriptionInfo
      type:
      - azure-arm-eventgrid.EventSubscription
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscription>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscription>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.createOrUpdateWithHttpOperationResponse
  name: createOrUpdateWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function createOrUpdateWithHttpOperationResponse(scope: string, eventSubscriptionName: string, eventSubscriptionInfo: EventSubscription, options?: function)'
    parameters:
    - id: scope
      type:
      - string
      description: >
        <span data-ttu-id="a38da-137">L’identificateur de la ressource à laquelle l’abonnement aux événements doit être créé ou mis à jour.</span><span class="sxs-lookup"><span data-stu-id="a38da-137">The identifier of the resource to which the event subscription needs to be created or updated.</span></span> <span data-ttu-id="a38da-138">L’étendue peut être un abonnement, ou un groupe de ressources ou une ressource de niveau supérieur appartenant à un espace de noms de fournisseur de ressources ou une rubrique EventGrid.</span><span class="sxs-lookup"><span data-stu-id="a38da-138">The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic.</span></span> <span data-ttu-id="a38da-139">Par exemple, utilisez « / subscriptions / {subscriptionId} / » pour un abonnement, « / subscriptions / {subscriptionId} /resourceGroups/ {resourceGroupName}' pour un groupe de ressources, et « / subscriptions / {subscriptionId} /resourceGroups/ {resourceGroupName} / fournisseurs / {resourceProviderNamespace} / {resourceType} / {resourceName} » pour une ressource, et ' / subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' pour une rubrique EventGrid.</span><span class="sxs-lookup"><span data-stu-id="a38da-139">For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.</span></span>
    - id: eventSubscriptionName
      type:
      - string
      description: >
        <span data-ttu-id="a38da-140">Nom de l’abonnement aux événements.</span><span class="sxs-lookup"><span data-stu-id="a38da-140">Name of the event subscription.</span></span> <span data-ttu-id="a38da-141">Noms d’événements abonnement doivent être comprise entre 3 et 64 caractères et doivent utiliser uniquement des lettres d’alphanumériques.</span><span class="sxs-lookup"><span data-stu-id="a38da-141">Event subscription names must be between 3 and 64 characters in length and should use alphanumeric letters only.</span></span>
    - id: eventSubscriptionInfo
      type:
      - azure-arm-eventgrid.EventSubscription
      description: >
        <span data-ttu-id="a38da-142">Propriétés de l’abonnement événement contenant les informations de filtre et de destination</span><span class="sxs-lookup"><span data-stu-id="a38da-142">Event subscription properties containing the destination and filter information</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscription>>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.deleteMethod_1
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function deleteMethod(scope: string, eventSubscriptionName: string, callback: ServiceCallback<void>)'
    parameters:
    - id: scope
      type:
      - string
      description: ''
    - id: eventSubscriptionName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.deleteMethod
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function deleteMethod(scope: string, eventSubscriptionName: string, options?: function)'
    parameters:
    - id: scope
      type:
      - string
      description: >
        <span data-ttu-id="a38da-143">L’étendue de l’abonnement aux événements.</span><span class="sxs-lookup"><span data-stu-id="a38da-143">The scope of the event subscription.</span></span> <span data-ttu-id="a38da-144">L’étendue peut être un abonnement, ou un groupe de ressources ou une ressource de niveau supérieur appartenant à un espace de noms de fournisseur de ressources ou une rubrique EventGrid.</span><span class="sxs-lookup"><span data-stu-id="a38da-144">The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic.</span></span> <span data-ttu-id="a38da-145">Par exemple, utilisez « / subscriptions / {subscriptionId} / » pour un abonnement, « / subscriptions / {subscriptionId} /resourceGroups/ {resourceGroupName}' pour un groupe de ressources, et « / subscriptions / {subscriptionId} /resourceGroups/ {resourceGroupName} / fournisseurs / {resourceProviderNamespace} / {resourceType} / {resourceName} » pour une ressource, et ' / subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' pour une rubrique EventGrid.</span><span class="sxs-lookup"><span data-stu-id="a38da-145">For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.</span></span>
    - id: eventSubscriptionName
      type:
      - string
      description: >
        <span data-ttu-id="a38da-146">Nom de l’abonnement aux événements</span><span class="sxs-lookup"><span data-stu-id="a38da-146">Name of the event subscription</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.deleteMethod_2
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function deleteMethod(scope: string, eventSubscriptionName: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: scope
      type:
      - string
      description: ''
    - id: eventSubscriptionName
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.deleteMethodWithHttpOperationResponse
  name: deleteMethodWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function deleteMethodWithHttpOperationResponse(scope: string, eventSubscriptionName: string, options?: function)'
    parameters:
    - id: scope
      type:
      - string
      description: >
        <span data-ttu-id="a38da-147">L’étendue de l’abonnement aux événements.</span><span class="sxs-lookup"><span data-stu-id="a38da-147">The scope of the event subscription.</span></span> <span data-ttu-id="a38da-148">L’étendue peut être un abonnement, ou un groupe de ressources ou une ressource de niveau supérieur appartenant à un espace de noms de fournisseur de ressources ou une rubrique EventGrid.</span><span class="sxs-lookup"><span data-stu-id="a38da-148">The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic.</span></span> <span data-ttu-id="a38da-149">Par exemple, utilisez « / subscriptions / {subscriptionId} / » pour un abonnement, « / subscriptions / {subscriptionId} /resourceGroups/ {resourceGroupName}' pour un groupe de ressources, et « / subscriptions / {subscriptionId} /resourceGroups/ {resourceGroupName} / fournisseurs / {resourceProviderNamespace} / {resourceType} / {resourceName} » pour une ressource, et ' / subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' pour une rubrique EventGrid.</span><span class="sxs-lookup"><span data-stu-id="a38da-149">For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.</span></span>
    - id: eventSubscriptionName
      type:
      - string
      description: >
        <span data-ttu-id="a38da-150">Nom de l’abonnement aux événements</span><span class="sxs-lookup"><span data-stu-id="a38da-150">Name of the event subscription</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.get_1
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function get(scope: string, eventSubscriptionName: string, callback: ServiceCallback<EventSubscription>)'
    parameters:
    - id: scope
      type:
      - string
      description: ''
    - id: eventSubscriptionName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscription>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscription>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.get
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function get(scope: string, eventSubscriptionName: string, options?: function)'
    parameters:
    - id: scope
      type:
      - string
      description: >
        <span data-ttu-id="a38da-151">L’étendue de l’abonnement aux événements.</span><span class="sxs-lookup"><span data-stu-id="a38da-151">The scope of the event subscription.</span></span> <span data-ttu-id="a38da-152">L’étendue peut être un abonnement, ou un groupe de ressources ou une ressource de niveau supérieur appartenant à un espace de noms de fournisseur de ressources ou une rubrique EventGrid.</span><span class="sxs-lookup"><span data-stu-id="a38da-152">The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic.</span></span> <span data-ttu-id="a38da-153">Par exemple, utilisez « / subscriptions / {subscriptionId} / » pour un abonnement, « / subscriptions / {subscriptionId} /resourceGroups/ {resourceGroupName}' pour un groupe de ressources, et « / subscriptions / {subscriptionId} /resourceGroups/ {resourceGroupName} / fournisseurs / {resourceProviderNamespace} / {resourceType} / {resourceName} » pour une ressource, et ' / subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' pour une rubrique EventGrid.</span><span class="sxs-lookup"><span data-stu-id="a38da-153">For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.</span></span>
    - id: eventSubscriptionName
      type:
      - string
      description: >
        <span data-ttu-id="a38da-154">Nom de l’abonnement aux événements</span><span class="sxs-lookup"><span data-stu-id="a38da-154">Name of the event subscription</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscription>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.get_2
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function get(scope: string, eventSubscriptionName: string, options: function, callback: ServiceCallback<EventSubscription>)'
    parameters:
    - id: scope
      type:
      - string
      description: ''
    - id: eventSubscriptionName
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscription>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscription>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.getFullUrl
  name: getFullUrl
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getFullUrl(scope: string, eventSubscriptionName: string, options?: function)'
    parameters:
    - id: scope
      type:
      - string
      description: >
        <span data-ttu-id="a38da-155">L’étendue de l’abonnement aux événements.</span><span class="sxs-lookup"><span data-stu-id="a38da-155">The scope of the event subscription.</span></span> <span data-ttu-id="a38da-156">L’étendue peut être un abonnement, ou un groupe de ressources ou une ressource de niveau supérieur appartenant à un espace de noms de fournisseur de ressources ou une rubrique EventGrid.</span><span class="sxs-lookup"><span data-stu-id="a38da-156">The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic.</span></span> <span data-ttu-id="a38da-157">Par exemple, utilisez « / subscriptions / {subscriptionId} / » pour un abonnement, « / subscriptions / {subscriptionId} /resourceGroups/ {resourceGroupName}' pour un groupe de ressources, et « / subscriptions / {subscriptionId} /resourceGroups/ {resourceGroupName} / fournisseurs / {resourceProviderNamespace} / {resourceType} / {resourceName} » pour une ressource, et ' / subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' pour une rubrique EventGrid.</span><span class="sxs-lookup"><span data-stu-id="a38da-157">For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.</span></span>
    - id: eventSubscriptionName
      type:
      - string
      description: >
        <span data-ttu-id="a38da-158">Nom de l’abonnement aux événements</span><span class="sxs-lookup"><span data-stu-id="a38da-158">Name of the event subscription</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionFullUrl>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.getFullUrl_1
  name: getFullUrl
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getFullUrl(scope: string, eventSubscriptionName: string, callback: ServiceCallback<EventSubscriptionFullUrl>)'
    parameters:
    - id: scope
      type:
      - string
      description: ''
    - id: eventSubscriptionName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscriptionFullUrl>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionFullUrl>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.getFullUrl_2
  name: getFullUrl
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getFullUrl(scope: string, eventSubscriptionName: string, options: function, callback: ServiceCallback<EventSubscriptionFullUrl>)'
    parameters:
    - id: scope
      type:
      - string
      description: ''
    - id: eventSubscriptionName
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscriptionFullUrl>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionFullUrl>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.getFullUrlWithHttpOperationResponse
  name: getFullUrlWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getFullUrlWithHttpOperationResponse(scope: string, eventSubscriptionName: string, options?: function)'
    parameters:
    - id: scope
      type:
      - string
      description: >
        <span data-ttu-id="a38da-159">L’étendue de l’abonnement aux événements.</span><span class="sxs-lookup"><span data-stu-id="a38da-159">The scope of the event subscription.</span></span> <span data-ttu-id="a38da-160">L’étendue peut être un abonnement, ou un groupe de ressources ou une ressource de niveau supérieur appartenant à un espace de noms de fournisseur de ressources ou une rubrique EventGrid.</span><span class="sxs-lookup"><span data-stu-id="a38da-160">The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic.</span></span> <span data-ttu-id="a38da-161">Par exemple, utilisez « / subscriptions / {subscriptionId} / » pour un abonnement, « / subscriptions / {subscriptionId} /resourceGroups/ {resourceGroupName}' pour un groupe de ressources, et « / subscriptions / {subscriptionId} /resourceGroups/ {resourceGroupName} / fournisseurs / {resourceProviderNamespace} / {resourceType} / {resourceName} » pour une ressource, et ' / subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' pour une rubrique EventGrid.</span><span class="sxs-lookup"><span data-stu-id="a38da-161">For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.</span></span>
    - id: eventSubscriptionName
      type:
      - string
      description: >
        <span data-ttu-id="a38da-162">Nom de l’abonnement aux événements</span><span class="sxs-lookup"><span data-stu-id="a38da-162">Name of the event subscription</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscriptionFullUrl>>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.getWithHttpOperationResponse
  name: getWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function getWithHttpOperationResponse(scope: string, eventSubscriptionName: string, options?: function)'
    parameters:
    - id: scope
      type:
      - string
      description: >
        <span data-ttu-id="a38da-163">L’étendue de l’abonnement aux événements.</span><span class="sxs-lookup"><span data-stu-id="a38da-163">The scope of the event subscription.</span></span> <span data-ttu-id="a38da-164">L’étendue peut être un abonnement, ou un groupe de ressources ou une ressource de niveau supérieur appartenant à un espace de noms de fournisseur de ressources ou une rubrique EventGrid.</span><span class="sxs-lookup"><span data-stu-id="a38da-164">The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic.</span></span> <span data-ttu-id="a38da-165">Par exemple, utilisez « / subscriptions / {subscriptionId} / » pour un abonnement, « / subscriptions / {subscriptionId} /resourceGroups/ {resourceGroupName}' pour un groupe de ressources, et « / subscriptions / {subscriptionId} /resourceGroups/ {resourceGroupName} / fournisseurs / {resourceProviderNamespace} / {resourceType} / {resourceName} » pour une ressource, et ' / subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' pour une rubrique EventGrid.</span><span class="sxs-lookup"><span data-stu-id="a38da-165">For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.</span></span>
    - id: eventSubscriptionName
      type:
      - string
      description: >
        <span data-ttu-id="a38da-166">Nom de l’abonnement aux événements</span><span class="sxs-lookup"><span data-stu-id="a38da-166">Name of the event subscription</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscription>>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listByResource
  name: listByResource
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listByResource(resourceGroupName: string, providerNamespace: string, resourceTypeName: string, resourceName: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="a38da-167">Le nom du groupe de ressources au sein de l’abonnement de l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="a38da-167">The name of the resource group within the user's subscription.</span></span>
    - id: providerNamespace
      type:
      - string
      description: >
        <span data-ttu-id="a38da-168">Namespace du fournisseur de la rubrique</span><span class="sxs-lookup"><span data-stu-id="a38da-168">Namespace of the provider of the topic</span></span>
    - id: resourceTypeName
      type:
      - string
      description: >
        <span data-ttu-id="a38da-169">Nom du type de ressource</span><span class="sxs-lookup"><span data-stu-id="a38da-169">Name of the resource type</span></span>
    - id: resourceName
      type:
      - string
      description: >
        <span data-ttu-id="a38da-170">Nom de la ressource</span><span class="sxs-lookup"><span data-stu-id="a38da-170">Name of the resource</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listByResource_1
  name: listByResource
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listByResource(resourceGroupName: string, providerNamespace: string, resourceTypeName: string, resourceName: string, callback: ServiceCallback<EventSubscriptionsListResult>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: providerNamespace
      type:
      - string
      description: ''
    - id: resourceTypeName
      type:
      - string
      description: ''
    - id: resourceName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listByResource_2
  name: listByResource
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listByResource(resourceGroupName: string, providerNamespace: string, resourceTypeName: string, resourceName: string, options: function, callback: ServiceCallback<EventSubscriptionsListResult>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: providerNamespace
      type:
      - string
      description: ''
    - id: resourceTypeName
      type:
      - string
      description: ''
    - id: resourceName
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listByResourceWithHttpOperationResponse
  name: listByResourceWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listByResourceWithHttpOperationResponse(resourceGroupName: string, providerNamespace: string, resourceTypeName: string, resourceName: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="a38da-171">Le nom du groupe de ressources au sein de l’abonnement de l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="a38da-171">The name of the resource group within the user's subscription.</span></span>
    - id: providerNamespace
      type:
      - string
      description: >
        <span data-ttu-id="a38da-172">Namespace du fournisseur de la rubrique</span><span class="sxs-lookup"><span data-stu-id="a38da-172">Namespace of the provider of the topic</span></span>
    - id: resourceTypeName
      type:
      - string
      description: >
        <span data-ttu-id="a38da-173">Nom du type de ressource</span><span class="sxs-lookup"><span data-stu-id="a38da-173">Name of the resource type</span></span>
    - id: resourceName
      type:
      - string
      description: >
        <span data-ttu-id="a38da-174">Nom de la ressource</span><span class="sxs-lookup"><span data-stu-id="a38da-174">Name of the resource</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscriptionsListResult>>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroup
  name: listGlobalByResourceGroup
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listGlobalByResourceGroup(resourceGroupName: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="a38da-175">Le nom du groupe de ressources au sein de l’abonnement de l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="a38da-175">The name of the resource group within the user's subscription.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroup_1
  name: listGlobalByResourceGroup
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listGlobalByResourceGroup(resourceGroupName: string, callback: ServiceCallback<EventSubscriptionsListResult>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroup_2
  name: listGlobalByResourceGroup
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listGlobalByResourceGroup(resourceGroupName: string, options: function, callback: ServiceCallback<EventSubscriptionsListResult>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupForTopicType
  name: listGlobalByResourceGroupForTopicType
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listGlobalByResourceGroupForTopicType(resourceGroupName: string, topicTypeName: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="a38da-176">Le nom du groupe de ressources au sein de l’abonnement de l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="a38da-176">The name of the resource group within the user's subscription.</span></span>
    - id: topicTypeName
      type:
      - string
      description: >
        <span data-ttu-id="a38da-177">Nom du type de rubrique</span><span class="sxs-lookup"><span data-stu-id="a38da-177">Name of the topic type</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupForTopicType_1
  name: listGlobalByResourceGroupForTopicType
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listGlobalByResourceGroupForTopicType(resourceGroupName: string, topicTypeName: string, callback: ServiceCallback<EventSubscriptionsListResult>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: topicTypeName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupForTopicType_2
  name: listGlobalByResourceGroupForTopicType
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listGlobalByResourceGroupForTopicType(resourceGroupName: string, topicTypeName: string, options: function, callback: ServiceCallback<EventSubscriptionsListResult>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: topicTypeName
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupForTopicTypeWithHttpOperationResponse
  name: listGlobalByResourceGroupForTopicTypeWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listGlobalByResourceGroupForTopicTypeWithHttpOperationResponse(resourceGroupName: string, topicTypeName: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="a38da-178">Le nom du groupe de ressources au sein de l’abonnement de l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="a38da-178">The name of the resource group within the user's subscription.</span></span>
    - id: topicTypeName
      type:
      - string
      description: >
        <span data-ttu-id="a38da-179">Nom du type de rubrique</span><span class="sxs-lookup"><span data-stu-id="a38da-179">Name of the topic type</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscriptionsListResult>>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listGlobalByResourceGroupWithHttpOperationResponse
  name: listGlobalByResourceGroupWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listGlobalByResourceGroupWithHttpOperationResponse(resourceGroupName: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="a38da-180">Le nom du groupe de ressources au sein de l’abonnement de l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="a38da-180">The name of the resource group within the user's subscription.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscriptionsListResult>>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscription_1
  name: listGlobalBySubscription
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listGlobalBySubscription(callback: ServiceCallback<EventSubscriptionsListResult>)'
    parameters:
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscription_2
  name: listGlobalBySubscription
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listGlobalBySubscription(options: function, callback: ServiceCallback<EventSubscriptionsListResult>)'
    parameters:
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscription
  name: listGlobalBySubscription
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listGlobalBySubscription(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionForTopicType_1
  name: listGlobalBySubscriptionForTopicType
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listGlobalBySubscriptionForTopicType(topicTypeName: string, callback: ServiceCallback<EventSubscriptionsListResult>)'
    parameters:
    - id: topicTypeName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionForTopicType
  name: listGlobalBySubscriptionForTopicType
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listGlobalBySubscriptionForTopicType(topicTypeName: string, options?: function)'
    parameters:
    - id: topicTypeName
      type:
      - string
      description: >
        <span data-ttu-id="a38da-181">Nom du type de rubrique</span><span class="sxs-lookup"><span data-stu-id="a38da-181">Name of the topic type</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionForTopicType_2
  name: listGlobalBySubscriptionForTopicType
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listGlobalBySubscriptionForTopicType(topicTypeName: string, options: function, callback: ServiceCallback<EventSubscriptionsListResult>)'
    parameters:
    - id: topicTypeName
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionForTopicTypeWithHttpOperationResponse
  name: listGlobalBySubscriptionForTopicTypeWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listGlobalBySubscriptionForTopicTypeWithHttpOperationResponse(topicTypeName: string, options?: function)'
    parameters:
    - id: topicTypeName
      type:
      - string
      description: >
        <span data-ttu-id="a38da-182">Nom du type de rubrique</span><span class="sxs-lookup"><span data-stu-id="a38da-182">Name of the topic type</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscriptionsListResult>>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listGlobalBySubscriptionWithHttpOperationResponse
  name: listGlobalBySubscriptionWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listGlobalBySubscriptionWithHttpOperationResponse(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscriptionsListResult>>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroup
  name: listRegionalByResourceGroup
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listRegionalByResourceGroup(resourceGroupName: string, location: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="a38da-183">Le nom du groupe de ressources au sein de l’abonnement de l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="a38da-183">The name of the resource group within the user's subscription.</span></span>
    - id: location
      type:
      - string
      description: >
        <span data-ttu-id="a38da-184">Nom de l’emplacement</span><span class="sxs-lookup"><span data-stu-id="a38da-184">Name of the location</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroup_1
  name: listRegionalByResourceGroup
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listRegionalByResourceGroup(resourceGroupName: string, location: string, callback: ServiceCallback<EventSubscriptionsListResult>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: location
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroup_2
  name: listRegionalByResourceGroup
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listRegionalByResourceGroup(resourceGroupName: string, location: string, options: function, callback: ServiceCallback<EventSubscriptionsListResult>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: location
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupForTopicType
  name: listRegionalByResourceGroupForTopicType
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listRegionalByResourceGroupForTopicType(resourceGroupName: string, location: string, topicTypeName: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="a38da-185">Le nom du groupe de ressources au sein de l’abonnement de l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="a38da-185">The name of the resource group within the user's subscription.</span></span>
    - id: location
      type:
      - string
      description: >
        <span data-ttu-id="a38da-186">Nom de l’emplacement</span><span class="sxs-lookup"><span data-stu-id="a38da-186">Name of the location</span></span>
    - id: topicTypeName
      type:
      - string
      description: >
        <span data-ttu-id="a38da-187">Nom du type de rubrique</span><span class="sxs-lookup"><span data-stu-id="a38da-187">Name of the topic type</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupForTopicType_1
  name: listRegionalByResourceGroupForTopicType
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listRegionalByResourceGroupForTopicType(resourceGroupName: string, location: string, topicTypeName: string, callback: ServiceCallback<EventSubscriptionsListResult>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: location
      type:
      - string
      description: ''
    - id: topicTypeName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupForTopicType_2
  name: listRegionalByResourceGroupForTopicType
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listRegionalByResourceGroupForTopicType(resourceGroupName: string, location: string, topicTypeName: string, options: function, callback: ServiceCallback<EventSubscriptionsListResult>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: location
      type:
      - string
      description: ''
    - id: topicTypeName
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupForTopicTypeWithHttpOperationResponse
  name: listRegionalByResourceGroupForTopicTypeWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listRegionalByResourceGroupForTopicTypeWithHttpOperationResponse(resourceGroupName: string, location: string, topicTypeName: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="a38da-188">Le nom du groupe de ressources au sein de l’abonnement de l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="a38da-188">The name of the resource group within the user's subscription.</span></span>
    - id: location
      type:
      - string
      description: >
        <span data-ttu-id="a38da-189">Nom de l’emplacement</span><span class="sxs-lookup"><span data-stu-id="a38da-189">Name of the location</span></span>
    - id: topicTypeName
      type:
      - string
      description: >
        <span data-ttu-id="a38da-190">Nom du type de rubrique</span><span class="sxs-lookup"><span data-stu-id="a38da-190">Name of the topic type</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscriptionsListResult>>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listRegionalByResourceGroupWithHttpOperationResponse
  name: listRegionalByResourceGroupWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listRegionalByResourceGroupWithHttpOperationResponse(resourceGroupName: string, location: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="a38da-191">Le nom du groupe de ressources au sein de l’abonnement de l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="a38da-191">The name of the resource group within the user's subscription.</span></span>
    - id: location
      type:
      - string
      description: >
        <span data-ttu-id="a38da-192">Nom de l’emplacement</span><span class="sxs-lookup"><span data-stu-id="a38da-192">Name of the location</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscriptionsListResult>>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscription
  name: listRegionalBySubscription
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listRegionalBySubscription(location: string, options?: function)'
    parameters:
    - id: location
      type:
      - string
      description: >
        <span data-ttu-id="a38da-193">Nom de l’emplacement</span><span class="sxs-lookup"><span data-stu-id="a38da-193">Name of the location</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscription_1
  name: listRegionalBySubscription
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listRegionalBySubscription(location: string, callback: ServiceCallback<EventSubscriptionsListResult>)'
    parameters:
    - id: location
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscription_2
  name: listRegionalBySubscription
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listRegionalBySubscription(location: string, options: function, callback: ServiceCallback<EventSubscriptionsListResult>)'
    parameters:
    - id: location
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionForTopicType
  name: listRegionalBySubscriptionForTopicType
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listRegionalBySubscriptionForTopicType(location: string, topicTypeName: string, options?: function)'
    parameters:
    - id: location
      type:
      - string
      description: >
        <span data-ttu-id="a38da-194">Nom de l’emplacement</span><span class="sxs-lookup"><span data-stu-id="a38da-194">Name of the location</span></span>
    - id: topicTypeName
      type:
      - string
      description: >
        <span data-ttu-id="a38da-195">Nom du type de rubrique</span><span class="sxs-lookup"><span data-stu-id="a38da-195">Name of the topic type</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionForTopicType_1
  name: listRegionalBySubscriptionForTopicType
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listRegionalBySubscriptionForTopicType(location: string, topicTypeName: string, callback: ServiceCallback<EventSubscriptionsListResult>)'
    parameters:
    - id: location
      type:
      - string
      description: ''
    - id: topicTypeName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionForTopicType_2
  name: listRegionalBySubscriptionForTopicType
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listRegionalBySubscriptionForTopicType(location: string, topicTypeName: string, options: function, callback: ServiceCallback<EventSubscriptionsListResult>)'
    parameters:
    - id: location
      type:
      - string
      description: ''
    - id: topicTypeName
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionForTopicTypeWithHttpOperationResponse
  name: listRegionalBySubscriptionForTopicTypeWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listRegionalBySubscriptionForTopicTypeWithHttpOperationResponse(location: string, topicTypeName: string, options?: function)'
    parameters:
    - id: location
      type:
      - string
      description: >
        <span data-ttu-id="a38da-196">Nom de l’emplacement</span><span class="sxs-lookup"><span data-stu-id="a38da-196">Name of the location</span></span>
    - id: topicTypeName
      type:
      - string
      description: >
        <span data-ttu-id="a38da-197">Nom du type de rubrique</span><span class="sxs-lookup"><span data-stu-id="a38da-197">Name of the topic type</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscriptionsListResult>>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.listRegionalBySubscriptionWithHttpOperationResponse
  name: listRegionalBySubscriptionWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function listRegionalBySubscriptionWithHttpOperationResponse(location: string, options?: function)'
    parameters:
    - id: location
      type:
      - string
      description: >
        <span data-ttu-id="a38da-198">Nom de l’emplacement</span><span class="sxs-lookup"><span data-stu-id="a38da-198">Name of the location</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscriptionsListResult>>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.update
  name: update
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function update(scope: string, eventSubscriptionName: string, eventSubscriptionUpdateParameters: EventSubscriptionUpdateParameters, options?: function)'
    parameters:
    - id: scope
      type:
      - string
      description: >
        <span data-ttu-id="a38da-199">L’étendue de l’abonnement aux événements existant.</span><span class="sxs-lookup"><span data-stu-id="a38da-199">The scope of existing event subscription.</span></span> <span data-ttu-id="a38da-200">L’étendue peut être un abonnement, ou un groupe de ressources ou une ressource de niveau supérieur appartenant à un espace de noms de fournisseur de ressources ou une rubrique EventGrid.</span><span class="sxs-lookup"><span data-stu-id="a38da-200">The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic.</span></span> <span data-ttu-id="a38da-201">Par exemple, utilisez « / subscriptions / {subscriptionId} / » pour un abonnement, « / subscriptions / {subscriptionId} /resourceGroups/ {resourceGroupName}' pour un groupe de ressources, et « / subscriptions / {subscriptionId} /resourceGroups/ {resourceGroupName} / fournisseurs / {resourceProviderNamespace} / {resourceType} / {resourceName} » pour une ressource, et ' / subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' pour une rubrique EventGrid.</span><span class="sxs-lookup"><span data-stu-id="a38da-201">For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.</span></span>
    - id: eventSubscriptionName
      type:
      - string
      description: >
        <span data-ttu-id="a38da-202">Nom de l’abonnement aux événements à mettre à jour</span><span class="sxs-lookup"><span data-stu-id="a38da-202">Name of the event subscription to be updated</span></span>
    - id: eventSubscriptionUpdateParameters
      type:
      - azure-arm-eventgrid.EventSubscriptionUpdateParameters
      description: >
        <span data-ttu-id="a38da-203">Informations d’abonnement événement mis à jour</span><span class="sxs-lookup"><span data-stu-id="a38da-203">Updated event subscription information</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscription>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.update_1
  name: update
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function update(scope: string, eventSubscriptionName: string, eventSubscriptionUpdateParameters: EventSubscriptionUpdateParameters, callback: ServiceCallback<EventSubscription>)'
    parameters:
    - id: scope
      type:
      - string
      description: ''
    - id: eventSubscriptionName
      type:
      - string
      description: ''
    - id: eventSubscriptionUpdateParameters
      type:
      - azure-arm-eventgrid.EventSubscriptionUpdateParameters
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscription>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscription>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.update_2
  name: update
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function update(scope: string, eventSubscriptionName: string, eventSubscriptionUpdateParameters: EventSubscriptionUpdateParameters, options: function, callback: ServiceCallback<EventSubscription>)'
    parameters:
    - id: scope
      type:
      - string
      description: ''
    - id: eventSubscriptionName
      type:
      - string
      description: ''
    - id: eventSubscriptionUpdateParameters
      type:
      - azure-arm-eventgrid.EventSubscriptionUpdateParameters
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-eventgrid.EventSubscription>
      description: ''
    return:
      type:
      - Promise<azure-arm-eventgrid.EventSubscription>
  package: azure-arm-eventgrid
- uid: azure-arm-eventgrid.EventSubscriptions.updateWithHttpOperationResponse
  name: updateWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function updateWithHttpOperationResponse(scope: string, eventSubscriptionName: string, eventSubscriptionUpdateParameters: EventSubscriptionUpdateParameters, options?: function)'
    parameters:
    - id: scope
      type:
      - string
      description: >
        <span data-ttu-id="a38da-204">L’étendue de l’abonnement aux événements existant.</span><span class="sxs-lookup"><span data-stu-id="a38da-204">The scope of existing event subscription.</span></span> <span data-ttu-id="a38da-205">L’étendue peut être un abonnement, ou un groupe de ressources ou une ressource de niveau supérieur appartenant à un espace de noms de fournisseur de ressources ou une rubrique EventGrid.</span><span class="sxs-lookup"><span data-stu-id="a38da-205">The scope can be a subscription, or a resource group, or a top level resource belonging to a resource provider namespace, or an EventGrid topic.</span></span> <span data-ttu-id="a38da-206">Par exemple, utilisez « / subscriptions / {subscriptionId} / » pour un abonnement, « / subscriptions / {subscriptionId} /resourceGroups/ {resourceGroupName}' pour un groupe de ressources, et « / subscriptions / {subscriptionId} /resourceGroups/ {resourceGroupName} / fournisseurs / {resourceProviderNamespace} / {resourceType} / {resourceName} » pour une ressource, et ' / subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' pour une rubrique EventGrid.</span><span class="sxs-lookup"><span data-stu-id="a38da-206">For example, use '/subscriptions/{subscriptionId}/' for a subscription, '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}' for a resource group, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}' for a resource, and '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}' for an EventGrid topic.</span></span>
    - id: eventSubscriptionName
      type:
      - string
      description: >
        <span data-ttu-id="a38da-207">Nom de l’abonnement aux événements à mettre à jour</span><span class="sxs-lookup"><span data-stu-id="a38da-207">Name of the event subscription to be updated</span></span>
    - id: eventSubscriptionUpdateParameters
      type:
      - azure-arm-eventgrid.EventSubscriptionUpdateParameters
      description: >
        <span data-ttu-id="a38da-208">Informations d’abonnement événement mis à jour</span><span class="sxs-lookup"><span data-stu-id="a38da-208">Updated event subscription information</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscription>>
  package: azure-arm-eventgrid
references:
- uid: azure-arm-eventgrid.EventSubscription
  spec.typeScript:
  - name: EventSubscription
    fullName: EventSubscription
    uid: azure-arm-eventgrid.EventSubscription
- uid: Promise<azure-arm-eventgrid.EventSubscription>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: EventSubscription
    fullName: EventSubscription
    uid: azure-arm-eventgrid.EventSubscription
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-eventgrid.EventSubscription>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: EventSubscription
    fullName: EventSubscription
    uid: azure-arm-eventgrid.EventSubscription
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscription>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: EventSubscription
    fullName: EventSubscription
    uid: azure-arm-eventgrid.EventSubscription
  - name: '>>'
    fullName: '>>'
- uid: azure-arm-eventgrid.EventSubscriptionUpdateParameters
  spec.typeScript:
  - name: EventSubscriptionUpdateParameters
    fullName: EventSubscriptionUpdateParameters
    uid: azure-arm-eventgrid.EventSubscriptionUpdateParameters
- uid: Promise<azure-arm-eventgrid.EventSubscriptionFullUrl>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: EventSubscriptionFullUrl
    fullName: EventSubscriptionFullUrl
    uid: azure-arm-eventgrid.EventSubscriptionFullUrl
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-eventgrid.EventSubscriptionFullUrl>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: EventSubscriptionFullUrl
    fullName: EventSubscriptionFullUrl
    uid: azure-arm-eventgrid.EventSubscriptionFullUrl
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscriptionFullUrl>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: EventSubscriptionFullUrl
    fullName: EventSubscriptionFullUrl
    uid: azure-arm-eventgrid.EventSubscriptionFullUrl
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-eventgrid.EventSubscriptionsListResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: EventSubscriptionsListResult
    fullName: EventSubscriptionsListResult
    uid: azure-arm-eventgrid.EventSubscriptionsListResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-eventgrid.EventSubscriptionsListResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: EventSubscriptionsListResult
    fullName: EventSubscriptionsListResult
    uid: azure-arm-eventgrid.EventSubscriptionsListResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-eventgrid.EventSubscriptionsListResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: EventSubscriptionsListResult
    fullName: EventSubscriptionsListResult
    uid: azure-arm-eventgrid.EventSubscriptionsListResult
  - name: '>>'
    fullName: '>>'
