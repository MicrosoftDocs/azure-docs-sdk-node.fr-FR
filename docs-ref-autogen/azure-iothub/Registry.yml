### YamlMime:UniversalReference
ms.openlocfilehash: c702e67d64be4873078bac93c0c0de9d4873f99f
ms.sourcegitcommit: 286f52ea38c9eff2ec9d4f8cabeb86f62fd9c406
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 08/22/2018
ms.locfileid: "41693917"
items:
- uid: azure-iothub.Registry
  name: Registry
  fullName: Registry
  children:
  - azure-iothub.Registry.addConfiguration
  - azure-iothub.Registry.addDevices
  - azure-iothub.Registry.addModule
  - azure-iothub.Registry.applyConfigurationContentOnDevice
  - azure-iothub.Registry.BulkDeviceIdentityCallback
  - azure-iothub.Registry.BulkRegistryOperationType
  - azure-iothub.Registry.cancelJob
  - azure-iothub.Registry.create
  - azure-iothub.Registry.createQuery
  - azure-iothub.Registry.delete
  - azure-iothub.Registry.DeviceCallback
  - azure-iothub.Registry.exportDevicesToBlob
  - azure-iothub.Registry.fromConnectionString
  - azure-iothub.Registry.fromSharedAccessSignature
  - azure-iothub.Registry.get
  - azure-iothub.Registry.getConfiguration
  - azure-iothub.Registry.getConfigurations
  - azure-iothub.Registry.getJob
  - azure-iothub.Registry.getModule
  - azure-iothub.Registry.getModulesOnDevice
  - azure-iothub.Registry.getModuleTwin
  - azure-iothub.Registry.getRegistryStatistics
  - azure-iothub.Registry.getTwin
  - azure-iothub.Registry.importDevicesFromBlob
  - azure-iothub.Registry.JobCallback
  - azure-iothub.Registry.JobStatus
  - azure-iothub.Registry.list
  - azure-iothub.Registry.listJobs
  - azure-iothub.Registry.removeConfiguration
  - azure-iothub.Registry.removeDevices
  - azure-iothub.Registry.removeModule
  - azure-iothub.Registry.removeModule_1
  - azure-iothub.Registry.ResponseCallback
  - azure-iothub.Registry.update
  - azure-iothub.Registry.updateConfiguration
  - azure-iothub.Registry.updateConfiguration_1
  - azure-iothub.Registry.updateDevices
  - azure-iothub.Registry.updateModule
  - azure-iothub.Registry.updateModule_1
  - azure-iothub.Registry.updateModuleTwin
  - azure-iothub.Registry.updateTwin
  langs:
  - typeScript
  type: class
  summary: >
    La classe de Registre permet d’accéder au service IoT Hub device identity.

    Les utilisateurs du SDK doivent instancier cette classe avec l’une des méthodes de fabrique : [fromConnectionString](xref:azure-iothub.Registry.fromConnectionString) ou [fromSharedAccessSignature](xref:azure-iothub.Registry.fromSharedAccessSignature).

    Le protocole utilisé pour les opérations de Registre d’identité appareil est HTTPS.
  package: azure-iothub
- uid: azure-iothub.Registry.addConfiguration
  name: addConfiguration
  children: []
  type: method
  langs:
  - typeScript
  summary: Ajouter une configuration à un IoT hub.
  syntax:
    content: 'function addConfiguration(configuration: Configuration, done: Registry.ResponseCallback)'
    parameters:
    - id: configuration
      type:
      - azure-iothub.Configuration
      description: 'Un objet de type module : azure-iothub. Configuration à ajouter au hub'
    - id: done
      type:
      - azure-iothub.Registry.ResponseCallback
      description: >
        La fonction à appeler lorsque l’opération est terminée. `done` est appelée avec trois arguments : un objet d’erreur (peut être null), le corps de la réponse et un objet spécifique au transport réponse utile pour la journalisation ou de débogage.
  package: azure-iothub
- uid: azure-iothub.Registry.addDevices
  name: addDevices
  children: []
  type: method
  langs:
  - typeScript
  summary: Ajoute un tableau des périphériques.
  syntax:
    content: 'function addDevices(devices: DeviceDescription[], done: Registry.BulkDeviceIdentityCallback)'
    parameters:
    - id: devices
      type:
      - azure-iothub.Registry.DeviceDescription[]
      description: Un tableau d’objets qui doit inclure un `deviceId` propriété dont la valeur est un identificateur de périphérique valide.
    - id: done
      type:
      - azure-iothub.Registry.BulkDeviceIdentityCallback
      description: >
        La fonction à appeler lorsque l’opération est terminée. `done` est appelée avec trois arguments : un objet d’erreur (peut être null), un BulkRegistryOperationResult et un objet spécifique au transport réponse utile pour la journalisation ou de débogage.
  package: azure-iothub
- uid: azure-iothub.Registry.addModule
  name: addModule
  children: []
  type: method
  langs:
  - typeScript
  summary: Ajoutez le module donné dans le Registre.
  syntax:
    content: 'function addModule(module: Module, done: Registry.ResponseCallback)'
    parameters:
    - id: module
      type:
      - azure-iothub.Module
      description: Objet de module à ajouter au Registre.
    - id: done
      type:
      - azure-iothub.Registry.ResponseCallback
      description: >
        La fonction à appeler lorsque l’opération est terminée. `done` est appelée avec trois arguments : un objet d’erreur (peut être null), le corps de la réponse et un objet spécifique au transport réponse utile pour la journalisation ou de débogage.
  package: azure-iothub
- uid: azure-iothub.Registry.applyConfigurationContentOnDevice
  name: applyConfigurationContentOnDevice
  children: []
  type: method
  langs:
  - typeScript
  summary: Appliquer la configuration spécifiée à un appareil sur un IoT Hub
  syntax:
    content: 'function applyConfigurationContentOnDevice(deviceId: string, content: ConfigurationContent, done: Registry.ResponseCallback)'
    parameters:
    - id: deviceId
      type:
      - string
      description: ID de l’appareil pour appliquer la configuration à
    - id: content
      type:
      - azure-iothub.ConfigurationContent
      description: La Configuration à appliquer
    - id: done
      type:
      - azure-iothub.Registry.ResponseCallback
      description: >
        La fonction à appeler lorsque l’opération est terminée. `done` est appelée avec trois arguments : un objet d’erreur (peut être null), le corps de la réponse et un objet spécifique au transport réponse utile pour la journalisation ou de débogage.
  package: azure-iothub
- uid: azure-iothub.Registry.BulkDeviceIdentityCallback
  name: BulkDeviceIdentityCallback
  fullName: BulkDeviceIdentityCallback
  children: []
  langs:
  - typeScript
  type: class
  summary: "\n"
  package: azure-iothub
- uid: azure-iothub.Registry.BulkRegistryOperationType
  name: BulkRegistryOperationType
  fullName: BulkRegistryOperationType
  children: []
  langs:
  - typeScript
  type: class
  summary: "\n« BulkRegistryOperationType » est un alias de type. Il fait référence à « créer », « Update », « UpdateIfMatchETag », « Delete » et « DeleteIfMatchETag »."
  package: azure-iothub
- uid: azure-iothub.Registry.cancelJob
  name: cancelJob
  children: []
  type: method
  langs:
  - typeScript
  summary: Annuler un travail d’importation/exportation en bloc.
  syntax:
    content: 'function cancelJob(jobId: string, done: Registry.JobCallback)'
    parameters:
    - id: jobId
      type:
      - string
      description: Identificateur du travail pour lequel l’utilisateur souhaite obtenir des informations d’état.
    - id: done
      type:
      - azure-iothub.Registry.JobCallback
      description: >
        La fonction à appeler avec deux arguments : un objet d’erreur si une erreur s’est produite, (null sinon) et l’état (annulé) de la tâche dont l’identificateur a été passé en tant qu’argument.
  package: azure-iothub
- uid: azure-iothub.Registry.create
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: Crée une identité d’appareil sur un hub IoT.
  syntax:
    content: 'function create(deviceInfo: DeviceDescription, done: Registry.DeviceCallback)'
    parameters:
    - id: deviceInfo
      type:
      - azure-iothub.Registry.DeviceDescription
      description: L’objet doit inclure un `deviceId` propriété avec un identificateur de périphérique valide.
    - id: done
      type:
      - azure-iothub.Registry.DeviceCallback
      description: >
        La fonction à appeler lorsque l’opération est terminée. `done` est appelée avec trois arguments : un objet d’erreur (peut être null), un [appareil](xref:azure-iothub.Device) objet représentant l’identité d’appareil créée et un objet spécifique au transport réponse utile pour la journalisation ou de débogage.
  package: azure-iothub
- uid: azure-iothub.Registry.createQuery
  name: createQuery
  children: []
  type: method
  langs:
  - typeScript
  summary: Crée une requête qui peut être exécutée sur l’instance IoT Hub pour rechercher des informations sur les appareils ou les travaux.
  syntax:
    content: 'function createQuery(sqlQuery: string, pageSize?: number)'
    parameters:
    - id: sqlQuery
      type:
      - string
      description: La requête est écrite sous la forme d’une chaîne SQL.
    - id: pageSize
      type:
      - number
      description: >
        Le nombre souhaité de résultats par page (facultatif. par défaut : 1000, max : 10000).
      optional: true
    return:
      type:
      - azure-iothub.Query
  package: azure-iothub
- uid: azure-iothub.Registry.delete
  name: delete
  children: []
  type: method
  langs:
  - typeScript
  summary: Supprime une identité d’appareil existante à partir d’un hub IoT.
  syntax:
    content: 'function delete(deviceId: string, done: Registry.ResponseCallback)'
    parameters:
    - id: deviceId
      type:
      - string
      description: L’identificateur d’une identité d’appareil existant.
    - id: done
      type:
      - azure-iothub.Registry.ResponseCallback
      description: >
        La fonction à appeler lorsque l’opération est terminée. `done` est appelée avec trois arguments : un objet d’erreur (peut être null), un argument toujours null (par souci de cohérence avec les autres méthodes) et un objet spécifique au transport réponse utile pour la journalisation ou de débogage.
  package: azure-iothub
- uid: azure-iothub.Registry.DeviceCallback
  name: DeviceCallback
  fullName: DeviceCallback
  children: []
  langs:
  - typeScript
  type: class
  summary: "\n"
  package: azure-iothub
- uid: azure-iothub.Registry.exportDevicesToBlob
  name: exportDevicesToBlob
  children: []
  type: method
  langs:
  - typeScript
  summary: Exporter vers un objet blob dans un travail en bloc des appareils.
  syntax:
    content: 'function exportDevicesToBlob(outputBlobContainerUri: string, excludeKeys: boolean, done: Registry.JobCallback)'
    parameters:
    - id: outputBlobContainerUri
      type:
      - string
      description: L’URI vers un conteneur dans lequel un objet blob sera créé avec les journaux du processus d’exportation.
    - id: excludeKeys
      type:
      - boolean
      description: Valeur booléenne indiquant si les clés de sécurité doivent être exclus des données exportées.
    - id: done
      type:
      - azure-iothub.Registry.JobCallback
      description: >
        La fonction à appeler lorsque le travail a été créé avec deux arguments : une erreur de l’objet si une une erreur s’est produite, (null sinon) et l’état du travail qui peut être utilisé pour suivre la progression des appareils exporter.
  package: azure-iothub
- uid: azure-iothub.Registry.fromConnectionString
  name: fromConnectionString
  children: []
  type: method
  langs:
  - typeScript
  summary: Construit un objet de Registre à partir de la chaîne de connexion donnée.
  syntax:
    content: 'static function fromConnectionString(value: string)'
    parameters:
    - id: value
      type:
      - string
      description: Une chaîne de connexion qui encapsule le texte approprié (lire et/ou écrire) des autorisations de Registre.
    return:
      type:
      - azure-iothub.Registry
  package: azure-iothub
- uid: azure-iothub.Registry.fromSharedAccessSignature
  name: fromSharedAccessSignature
  children: []
  type: method
  langs:
  - typeScript
  summary: Construit un objet de Registre à partir de la signature d’accès partagé.
  syntax:
    content: 'static function fromSharedAccessSignature(value: string)'
    parameters:
    - id: value
      type:
      - string
      description: Une signature d’accès partagé qui encapsule le texte approprié (lire et/ou écrire) des autorisations de Registre.
    return:
      type:
      - azure-iothub.Registry
  package: azure-iothub
- uid: azure-iothub.Registry.get
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: Demande des informations sur une identité d’appareil existante sur un hub IoT.
  syntax:
    content: 'function get(deviceId: string, done: Registry.DeviceCallback)'
    parameters:
    - id: deviceId
      type:
      - string
      description: L’identificateur d’une identité d’appareil existant.
    - id: done
      type:
      - azure-iothub.Registry.DeviceCallback
      description: >
        La fonction à appeler lorsque l’opération est terminée. `done` est appelée avec trois arguments : un objet d’erreur (peut être null), un [appareil](xref:azure-iothub.Device) objet représentant l’identité d’appareil créée et un objet spécifique au transport réponse utile pour la journalisation ou de débogage.
  package: azure-iothub
- uid: azure-iothub.Registry.getConfiguration
  name: getConfiguration
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtenir une configuration unique à partir d’un IoT Hub
  syntax:
    content: 'function getConfiguration(configurationId: string, done: (err: Error, configuration?: Configuration, response?: any) => void)'
    parameters:
    - id: configurationId
      type:
      - string
      description: L’ID de la configuration vous avec à récupérer
    - id: done
      type:
      - '(err: Error, configuration?: Configuration, response?: any) => void'
      description: >
        Le rappel qui sera appelé avec un objet d’erreur ou un module : azure-iothub. Objet de configuration avec les détails de configuration.
  package: azure-iothub
- uid: azure-iothub.Registry.getConfigurations
  name: getConfigurations
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtenir toutes les configurations sur un IoT Hub
  syntax:
    content: 'function getConfigurations(done: (err: Error, configurations?: Configuration[], response?: any) => void)'
    parameters:
    - id: done
      type:
      - '(err: Error, configurations?: Configuration[], response?: any) => void'
      description: >
        Le rappel qui sera appelé avec un objet d’erreur ou un tableau de module : azure-iothub. Objets de configuration pour toutes les configurations.
  package: azure-iothub
- uid: azure-iothub.Registry.getJob
  name: getJob
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtenir l’état d’un travail d’importation/exportation en bloc.
  syntax:
    content: 'function getJob(jobId: string, done: Registry.JobCallback)'
    parameters:
    - id: jobId
      type:
      - string
      description: Identificateur du travail pour lequel l’utilisateur souhaite obtenir des informations d’état.
    - id: done
      type:
      - azure-iothub.Registry.JobCallback
      description: >
        La fonction à appeler avec deux arguments : un objet d’erreur si une erreur s’est produite, (null sinon) et l’état de la tâche dont l’identificateur a été passé en tant qu’argument.
  package: azure-iothub
- uid: azure-iothub.Registry.getModule
  name: getModule
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtenir un module unique à partir d’un appareil sur un IoT Hub
  syntax:
    content: 'function getModule(deviceId: string, moduleId: string, done: (err: Error, module?: Module, response?: any) => void)'
    parameters:
    - id: deviceId
      type:
      - string
      description: ID d’appareil propriétaire du module.
    - id: moduleId
      type:
      - string
      description: ID de module à récupérer
    - id: done
      type:
      - '(err: Error, module?: Module, response?: any) => void'
      description: >
        Le rappel qui sera appelé avec un objet d’erreur ou le module : azure-iothub. Objet de module pour le module demandé
  package: azure-iothub
- uid: azure-iothub.Registry.getModulesOnDevice
  name: getModulesOnDevice
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtenir une liste de tous les modules sur un appareil IoT Hub
  syntax:
    content: 'function getModulesOnDevice(deviceId: string, done: (err: Error, modules?: Module[], response?: any) => void)'
    parameters:
    - id: deviceId
      type:
      - string
      description: ID de l’appareil que nous obtenons des modules pour
    - id: done
      type:
      - '(err: Error, modules?: Module[], response?: any) => void'
      description: >
        Le rappel qui sera appelé avec un objet d’erreur ou un tableau de module : azure-iothub. Objets de module pour tous les modules.
  package: azure-iothub
- uid: azure-iothub.Registry.getModuleTwin
  name: getModuleTwin
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient la représentation de Module du module avec l’identificateur de module spécifié.
  syntax:
    content: 'function getModuleTwin(deviceId: string, moduleId: string, done: (err: Error, twin?: Twin, response?: any) => void)'
    parameters:
    - id: deviceId
      type:
      - string
      description: L’identificateur de périphérique.
    - id: moduleId
      type:
      - string
      description: L’identificateur de module.
    - id: done
      type:
      - '(err: Error, twin?: Twin, response?: any) => void'
      description: Rappel qui sera appelé avec un objet d’erreur ou de l’instance de jumeau de module.
  package: azure-iothub
- uid: azure-iothub.Registry.getRegistryStatistics
  name: getRegistryStatistics
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient les statistiques sur les appareils dans le Registre des identités.
  syntax:
    content: 'function getRegistryStatistics(done: Callback<RegistryStatistics>)'
    parameters:
    - id: done
      type:
      - Callback<azure-iothub.Registry.RegistryStatistics>
      description: >
        Rappel qui sera appelé avec un objet d’erreur ou les statistiques de Registre de périphérique.
  package: azure-iothub
- uid: azure-iothub.Registry.getTwin
  name: getTwin
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient la représentation d’appareil de l’appareil avec l’identificateur de périphérique spécifié.
  syntax:
    content: 'function getTwin(deviceId: string, done: Registry.ResponseCallback)'
    parameters:
    - id: deviceId
      type:
      - string
      description: L’identificateur de périphérique.
    - id: done
      type:
      - azure-iothub.Registry.ResponseCallback
      description: >
        Rappel qui sera appelé avec un objet d’erreur ou de l’instance de jumeau d’appareil.
  package: azure-iothub
- uid: azure-iothub.Registry.importDevicesFromBlob
  name: importDevicesFromBlob
  children: []
  type: method
  langs:
  - typeScript
  summary: Importe des périphériques à partir d’un objet blob dans le travail en bloc.
  syntax:
    content: 'function importDevicesFromBlob(inputBlobContainerUri: string, outputBlobContainerUri: string, done: Registry.JobCallback)'
    parameters:
    - id: inputBlobContainerUri
      type:
      - string
      description: L’URI vers un conteneur avec un objet blob nommé « devices.txt » contenant une liste des appareils à importer.
    - id: outputBlobContainerUri
      type:
      - string
      description: L’URI vers un conteneur dans lequel un objet blob sera créé avec les journaux du processus d’importation.
    - id: done
      type:
      - azure-iothub.Registry.JobCallback
      description: >
        La fonction à appeler lorsque le travail a été créé avec deux arguments : une erreur de l’objet si une une erreur s’est produite, (null sinon) et l’état du travail qui peut être utilisé pour suivre la progression des appareils importer.
  package: azure-iothub
- uid: azure-iothub.Registry.JobCallback
  name: JobCallback
  fullName: JobCallback
  children: []
  langs:
  - typeScript
  type: class
  summary: "\n"
  package: azure-iothub
- uid: azure-iothub.Registry.JobStatus
  name: JobStatus
  fullName: JobStatus
  children: []
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-iothub
- uid: azure-iothub.Registry.list
  name: list
  children: []
  type: method
  langs:
  - typeScript
  summary: Demande des informations sur les identités des appareils de 1000 premier sur un hub IoT.
  syntax:
    content: 'function list(done: Callback<Device[]>)'
    parameters:
    - id: done
      type:
      - Callback<azure-iothub.Device[]>
      description: >
        La fonction à appeler lorsque l’opération est terminée. `done` est appelée avec trois arguments : un objet d’erreur (peut être null), un tableau de [appareil](xref:azure-iothub.Device) objets représentant les identités des appareils répertoriés et un objet spécifique au transport réponse utile pour la journalisation ou de débogage.
  package: azure-iothub
- uid: azure-iothub.Registry.listJobs
  name: listJobs
  children: []
  type: method
  langs:
  - typeScript
  summary: Répertoriez les travaux d’importation/exportation dernière (y compris l’active, le cas échéant).
  syntax:
    content: 'function listJobs(done: Callback<any>)'
    parameters:
    - id: done
      type:
      - Callback<any>
      description: >
        La fonction à appeler avec deux arguments : un objet d’erreur si une erreur s’est produite, (null sinon) et la liste des tâches passées en tant qu’argument.
  package: azure-iothub
- uid: azure-iothub.Registry.removeConfiguration
  name: removeConfiguration
  children: []
  type: method
  langs:
  - typeScript
  summary: Suppression d’une configuration avec l’ID spécifié à partir d’un IoT Hub
  syntax:
    content: 'function removeConfiguration(configurationId: string, done: Registry.ResponseCallback)'
    parameters:
    - id: configurationId
      type:
      - string
      description: ID de la configuration à supprimer
    - id: done
      type:
      - azure-iothub.Registry.ResponseCallback
      description: >
        La fonction à appeler lorsque l’opération est terminée. `done` est appelée avec trois arguments : un objet d’erreur (peut être null), le corps de la réponse et un objet spécifique au transport réponse utile pour la journalisation ou de débogage.
  package: azure-iothub
- uid: azure-iothub.Registry.removeDevices
  name: removeDevices
  children: []
  type: method
  langs:
  - typeScript
  summary: Met à jour un tableau des périphériques.
  syntax:
    content: 'function removeDevices(devices: DeviceDescription[], forceRemove: boolean, done: Registry.BulkDeviceIdentityCallback)'
    parameters:
    - id: devices
      type:
      - azure-iothub.Registry.DeviceDescription[]
      description: Un tableau d’objets qui doit inclure un `deviceId` propriété dont la valeur est un identificateur de périphérique valide.
    - id: forceRemove
      type:
      - boolean
      description: Si `forceRemove` a la valeur true, quel que soit un etag l’appareil sera supprimé.  Dans le cas contraire, les etags doivent correspondre.
    - id: done
      type:
      - azure-iothub.Registry.BulkDeviceIdentityCallback
      description: >
        La fonction à appeler lorsque l’opération est terminée. `done` est appelée avec trois arguments : un objet d’erreur (peut être null), un BulkRegistryOperationResult et un objet spécifique au transport réponse utile pour la journalisation ou de débogage.
  package: azure-iothub
- uid: azure-iothub.Registry.removeModule
  name: removeModule
  children: []
  type: method
  langs:
  - typeScript
  summary: Supprimer le module donné à partir du Registre
  syntax:
    content: 'function removeModule(module: Module, done: Registry.ResponseCallback)'
    parameters:
    - id: module
      type:
      - azure-iothub.Module
      description: ''
    - id: done
      type:
      - azure-iothub.Registry.ResponseCallback
      description: >
        La fonction à appeler lorsque l’opération est terminée. `done` est appelée avec trois arguments : un objet d’erreur (peut être null), le corps de la réponse et un objet spécifique au transport réponse utile pour la journalisation ou de débogage.
  package: azure-iothub
- uid: azure-iothub.Registry.removeModule_1
  name: removeModule
  children: []
  type: method
  langs:
  - typeScript
  summary: Supprimer le module donné à partir du Registre
  syntax:
    content: 'function removeModule(deviceId: string, moduleId: string, done: Registry.ResponseCallback)'
    parameters:
    - id: deviceId
      type:
      - string
      description: ''
    - id: moduleId
      type:
      - string
      description: ''
    - id: done
      type:
      - azure-iothub.Registry.ResponseCallback
      description: ''
  package: azure-iothub
- uid: azure-iothub.Registry.ResponseCallback
  name: ResponseCallback
  fullName: ResponseCallback
  children: []
  langs:
  - typeScript
  type: class
  summary: "\n"
  package: azure-iothub
- uid: azure-iothub.Registry.update
  name: update
  children: []
  type: method
  langs:
  - typeScript
  summary: Met à jour une identité d’appareil existante sur un hub IoT avec les informations de périphérique donné.
  syntax:
    content: 'function update(deviceInfo: DeviceDescription, done: Registry.DeviceCallback)'
    parameters:
    - id: deviceInfo
      type:
      - azure-iothub.Registry.DeviceDescription
      description: Un objet qui doit inclure un `deviceId` propriété dont la valeur est un identificateur de périphérique valide.
    - id: done
      type:
      - azure-iothub.Registry.DeviceCallback
      description: >
        La fonction à appeler lorsque l’opération est terminée. `done` est appelée avec trois arguments : un objet d’erreur (peut être null), un [appareil](xref:azure-iothub.Device) objet représentant l’identité d’appareil mis à jour et un objet spécifique au transport réponse utile pour la journalisation ou de débogage.
  package: azure-iothub
- uid: azure-iothub.Registry.updateConfiguration
  name: updateConfiguration
  children: []
  type: method
  langs:
  - typeScript
  summary: Mettre à jour une configuration dans un IoT hub
  syntax:
    content: 'function updateConfiguration(configuration: Configuration, done: Registry.ResponseCallback)'
    parameters:
    - id: configuration
      type:
      - azure-iothub.Configuration
      description: 'Un objet de type module : azure-iothub. Configuration à ajouter au hub'
    - id: done
      type:
      - azure-iothub.Registry.ResponseCallback
      description: >
        La fonction à appeler lorsque l’opération est terminée. `done` est appelée avec trois arguments : un objet d’erreur (peut être null), le corps de la réponse et un objet spécifique au transport réponse utile pour la journalisation ou de débogage.
  package: azure-iothub
- uid: azure-iothub.Registry.updateConfiguration_1
  name: updateConfiguration
  children: []
  type: method
  langs:
  - typeScript
  summary: Mettre à jour une configuration dans un IoT hub
  syntax:
    content: 'function updateConfiguration(configuration: Configuration, forceUpdate: boolean, done: Registry.ResponseCallback)'
    parameters:
    - id: configuration
      type:
      - azure-iothub.Configuration
      description: ''
    - id: forceUpdate
      type:
      - boolean
      description: ''
    - id: done
      type:
      - azure-iothub.Registry.ResponseCallback
      description: ''
  package: azure-iothub
- uid: azure-iothub.Registry.updateDevices
  name: updateDevices
  children: []
  type: method
  langs:
  - typeScript
  summary: Met à jour un tableau des périphériques.
  syntax:
    content: 'function updateDevices(devices: DeviceDescription[], forceUpdate: boolean, done?: Registry.BulkDeviceIdentityCallback)'
    parameters:
    - id: devices
      type:
      - azure-iothub.Registry.DeviceDescription[]
      description: Un tableau d’objets qui doit inclure un `deviceId` propriété dont la valeur est un identificateur de périphérique valide.
    - id: forceUpdate
      type:
      - boolean
      description: Si `forceUpdate` a la valeur true, l’appareil sera être mises à jour indépendamment un etag.  Dans le cas contraire, les etags doivent correspondre.
    - id: done
      type:
      - azure-iothub.Registry.BulkDeviceIdentityCallback
      description: >
        La fonction à appeler lorsque l’opération est terminée. `done` est appelée avec trois arguments : un objet d’erreur (peut être null), un BulkRegistryOperationResult et un objet spécifique au transport réponse utile pour la journalisation ou de débogage.
      optional: true
  package: azure-iothub
- uid: azure-iothub.Registry.updateModule
  name: updateModule
  children: []
  type: method
  langs:
  - typeScript
  summary: Mettre à jour de l’objet de module donné dans le Registre
  syntax:
    content: 'function updateModule(module: Module, done: Registry.ResponseCallback)'
    parameters:
    - id: module
      type:
      - azure-iothub.Module
      description: Objet de module pour mettre à jour.
    - id: done
      type:
      - azure-iothub.Registry.ResponseCallback
      description: >
        La fonction à appeler lorsque l’opération est terminée. `done` est appelée avec trois arguments : un objet d’erreur (peut être null), le corps de la réponse et un objet spécifique au transport réponse utile pour la journalisation ou de débogage.
  package: azure-iothub
- uid: azure-iothub.Registry.updateModule_1
  name: updateModule
  children: []
  type: method
  langs:
  - typeScript
  summary: Mettre à jour de l’objet de module donné dans le Registre
  syntax:
    content: 'function updateModule(module: Module, forceUpdate: boolean, done: Registry.ResponseCallback)'
    parameters:
    - id: module
      type:
      - azure-iothub.Module
      description: ''
    - id: forceUpdate
      type:
      - boolean
      description: ''
    - id: done
      type:
      - azure-iothub.Registry.ResponseCallback
      description: ''
  package: azure-iothub
- uid: azure-iothub.Registry.updateModuleTwin
  name: updateModuleTwin
  children: []
  type: method
  langs:
  - typeScript
  summary: Met à jour la représentation d’un module spécifique avec le correctif donné.
  syntax:
    content: 'function updateModuleTwin(deviceId: string, moduleId: string, patch: any, etag: string, done: Registry.ResponseCallback)'
    parameters:
    - id: deviceId
      type:
      - string
      description: L’identificateur de périphérique.
    - id: moduleId
      type:
      - string
      description: L’identificateur de module
    - id: patch
      type:
      - any
      description: Les balises à la représentation de module avec des correctifs et propriétés souhaitées.
    - id: etag
      type:
      - string
      description: L’etag plus récente de cette représentation de module ou ' *' pour forcer une mise à jour, même si la représentation de module a été mis à jour dans la mesure où l’etag a été obtenu.
    - id: done
      type:
      - azure-iothub.Registry.ResponseCallback
      description: Rappel qui sera appelé avec un objet d’erreur ou de l’instance de jumeau de module.
  package: azure-iothub
- uid: azure-iothub.Registry.updateTwin
  name: updateTwin
  children: []
  type: method
  langs:
  - typeScript
  summary: Met à jour le jumeau d’appareil d’un appareil spécifique avec le correctif donné.
  syntax:
    content: 'function updateTwin(deviceId: string, patch: any, etag: string, done: Registry.ResponseCallback)'
    parameters:
    - id: deviceId
      type:
      - string
      description: L’identificateur de périphérique.
    - id: patch
      type:
      - any
      description: Les balises à la représentation d’appareil avec des correctifs et propriétés souhaitées.
    - id: etag
      type:
      - string
      description: L’etag dernière cette représentation d’appareil ou ' *' pour forcer une mise à jour, même si la représentation d’appareil a été mis à jour dans la mesure où l’etag a été obtenu.
    - id: done
      type:
      - azure-iothub.Registry.ResponseCallback
      description: >
        Rappel qui sera appelé avec un objet d’erreur ou de l’instance de jumeau d’appareil.
  package: azure-iothub
references:
- uid: azure-iothub.Registry.DeviceRegistryOperationError[]
  spec.typeScript:
  - name: DeviceRegistryOperationError
    fullName: DeviceRegistryOperationError
    uid: azure-iothub.Registry.DeviceRegistryOperationError
  - name: '[]'
    fullName: '[]'
- uid: azure-iothub.Device.Capabilities
  spec.typeScript:
  - name: Capabilities
    fullName: Capabilities
    uid: azure-iothub.Device.Capabilities
- uid: azure-iothub.Configuration
  spec.typeScript:
  - name: Configuration
    fullName: Configuration
    uid: azure-iothub.Configuration
- uid: azure-iothub.Registry.ResponseCallback
  spec.typeScript:
  - name: ResponseCallback
    fullName: ResponseCallback
    uid: azure-iothub.Registry.ResponseCallback
- uid: azure-iothub.Registry.DeviceDescription[]
  spec.typeScript:
  - name: DeviceDescription
    fullName: DeviceDescription
    uid: azure-iothub.Registry.DeviceDescription
  - name: '[]'
    fullName: '[]'
- uid: azure-iothub.Registry.BulkDeviceIdentityCallback
  spec.typeScript:
  - name: BulkDeviceIdentityCallback
    fullName: BulkDeviceIdentityCallback
    uid: azure-iothub.Registry.BulkDeviceIdentityCallback
- uid: azure-iothub.Module
  spec.typeScript:
  - name: Module
    fullName: Module
    uid: azure-iothub.Module
- uid: azure-iothub.ConfigurationContent
  spec.typeScript:
  - name: ConfigurationContent
    fullName: ConfigurationContent
    uid: azure-iothub.ConfigurationContent
- uid: azure-iothub.Registry.JobCallback
  spec.typeScript:
  - name: JobCallback
    fullName: JobCallback
    uid: azure-iothub.Registry.JobCallback
- uid: azure-iothub.Registry.DeviceDescription
  spec.typeScript:
  - name: DeviceDescription
    fullName: DeviceDescription
    uid: azure-iothub.Registry.DeviceDescription
- uid: azure-iothub.Registry.DeviceCallback
  spec.typeScript:
  - name: DeviceCallback
    fullName: DeviceCallback
    uid: azure-iothub.Registry.DeviceCallback
- uid: azure-iothub.Query
  spec.typeScript:
  - name: Query
    fullName: Query
    uid: azure-iothub.Query
- uid: Callback<azure-iothub.Registry.RegistryStatistics>
  spec.typeScript:
  - name: Callback<
    fullName: Callback<
  - name: RegistryStatistics
    fullName: RegistryStatistics
    uid: azure-iothub.Registry.RegistryStatistics
  - name: '>'
    fullName: '>'
- uid: Callback<azure-iothub.Device[]>
  spec.typeScript:
  - name: Callback<
    fullName: Callback<
  - name: Device
    fullName: Device
    uid: azure-iothub.Device
  - name: '[]>'
    fullName: '[]>'
- uid: azure-iothub.Registry
  spec.typeScript:
  - name: Registry
    fullName: Registry
    uid: azure-iothub.Registry
