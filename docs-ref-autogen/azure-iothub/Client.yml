### YamlMime:UniversalReference
ms.openlocfilehash: 62975cd56b2bf89e7158907fce365b3a6cebdf51
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 08/12/2018
ms.locfileid: "40059091"
items:
- uid: azure-iothub.Client
  name: Client
  fullName: Client
  children:
  - azure-iothub.Client.Callback
  - azure-iothub.Client.close
  - azure-iothub.Client.fromConnectionString
  - azure-iothub.Client.fromSharedAccessSignature
  - azure-iothub.Client.getFeedbackReceiver
  - azure-iothub.Client.getFileNotificationReceiver
  - azure-iothub.Client.invokeDeviceMethod
  - azure-iothub.Client.invokeDeviceMethod_1
  - azure-iothub.Client.open
  - azure-iothub.Client.send
  - azure-iothub.Client.setRetryPolicy
  - azure-iothub.Client.TransportCtor
  langs:
  - typeScript
  type: class
  summary: >
    Le client du service IoT Hub permettant de communiquer avec des périphériques via un Azure IoT hub.

    Il permet à l’utilisateur de kit de développement logiciel :
      - envoyer des appareil-à-cloud (également appelés commandes) sur des appareils : commandes sont en file d’attente sur IoT Hub et remis de manière asynchrone uniquement quand l’appareil est connecté. Commandes seulement 50 peuvent être en file d’attente par appareil.
      - appeler des méthodes directes sur les appareils (qui fonctionne uniquement si l’appareil est actuellement connecté : c’est un moyen synchrone de la communication avec l’appareil)
      - écouter les messages de commentaires envoyés par les appareils pour les commandes précédentes.
      - écouter les notifications de téléchargement de fichier à partir d’appareils.
    Les utilisateurs doivent créer de nouveaux <xref:azure-iothub.Client> instances en appelant une des méthodes de fabrique, [fromConnectionString](xref:azure-iothub.Client.fromConnectionString) ou [fromSharedAccessSignature](xref:azure-iothub.Client.fromSharedAccessSignature), pour créer un Client du service IoT Hub.
  extends:
    name: EventEmitter
  package: azure-iothub
- uid: azure-iothub.Client.Callback
  name: Callback
  fullName: Callback<T>
  children: []
  langs:
  - typeScript
  type: class
  summary: "\n"
  package: azure-iothub
- uid: azure-iothub.Client.close
  name: close
  children: []
  type: method
  langs:
  - typeScript
  summary: Ferme la connexion à un IoT hub.
  syntax:
    content: 'function close(done?: Callback<Disconnected>)'
    parameters:
    - id: done
      type:
      - azure-iothub.Client.Callback<Disconnected>
      description: >
        La fonction à appeler lorsque l’opération est terminée. `done` sera passé un argument d’objet erreur, qui sera null si l’opération a réussi.
      optional: true
  package: azure-iothub
- uid: azure-iothub.Client.fromConnectionString
  name: fromConnectionString
  children: []
  type: method
  langs:
  - typeScript
  summary: Crée un client du service IoT Hub à partir de la chaîne de connexion donnée à l’aide du transport par défaut (Amqp) ou celle spécifiée dans le deuxième argument.
  syntax:
    content: 'static function fromConnectionString(connStr: string, transportCtor?: Client.TransportCtor)'
    parameters:
    - id: connStr
      type:
      - string
      description: Une chaîne de connexion qui encapsule les autorisations de « l’appareil se connecter » sur un hub IoT.
    - id: transportCtor
      type:
      - azure-iothub.Client.TransportCtor
      description: ''
      optional: true
    return:
      type:
      - azure-iothub.Client
  package: azure-iothub
- uid: azure-iothub.Client.fromSharedAccessSignature
  name: fromSharedAccessSignature
  children: []
  type: method
  langs:
  - typeScript
  summary: Crée un client du service IoT Hub à partir de la signature d’accès partagé à l’aide du transport par défaut (Amqp) ou celle spécifiée dans le deuxième argument.
  syntax:
    content: 'static function fromSharedAccessSignature(sharedAccessSignature: string, transportCtor?: Client.TransportCtor)'
    parameters:
    - id: sharedAccessSignature
      type:
      - string
      description: Une signature d’accès partagé qui encapsule les autorisations de « connexion de service » sur un hub IoT.
    - id: transportCtor
      type:
      - azure-iothub.Client.TransportCtor
      description: ''
      optional: true
    return:
      type:
      - azure-iothub.Client
  package: azure-iothub
- uid: azure-iothub.Client.getFeedbackReceiver
  name: getFeedbackReceiver
  children: []
  type: method
  langs:
  - typeScript
  summary: Retourne un objet AmqpReceiver qui émet des événements lorsque de nouveaux messages de commentaires sont reçus par le client.
  syntax:
    content: 'function getFeedbackReceiver(done: Callback<ServiceReceiver>)'
    parameters:
    - id: done
      type:
      - azure-iothub.Client.Callback<azure-iothub.Client.ServiceReceiver>
      description: >
        La fonction à appeler lorsque l’opération est terminée. `done` est appelée avec deux arguments : un objet d’erreur (peut être null) et un objet AmqpReceiver.
  package: azure-iothub
- uid: azure-iothub.Client.getFileNotificationReceiver
  name: getFileNotificationReceiver
  children: []
  type: method
  langs:
  - typeScript
  summary: Retourne un objet AmqpReceiver qui émet des événements lorsque de nouvelles notifications de téléchargement de fichier sont reçues par le client.
  syntax:
    content: 'function getFileNotificationReceiver(done: Callback<ServiceReceiver>)'
    parameters:
    - id: done
      type:
      - azure-iothub.Client.Callback<azure-iothub.Client.ServiceReceiver>
      description: >
        La fonction à appeler lorsque l’opération est terminée. `done` est appelée avec deux arguments : un objet d’erreur (peut être null) et un objet AmqpReceiver.
  package: azure-iothub
- uid: azure-iothub.Client.invokeDeviceMethod
  name: invokeDeviceMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: Appelle une méthode sur un périphérique particulier ou un module.
  syntax:
    content: 'function invokeDeviceMethod(deviceId: string, methodParams: DeviceMethodParams, done?: Callback<any>)'
    parameters:
    - id: deviceId
      type:
      - string
      description: L’identificateur d’une identité d’appareil existant.
    - id: methodParams
      type:
      - azure-iothub.DeviceMethodParams
      description: ''
    - id: done
      type:
      - azure-iothub.Client.Callback<any>
      description: >
        Rappel à appeler avec le résultat de l’exécution de la méthode.
      optional: true
  package: azure-iothub
- uid: azure-iothub.Client.invokeDeviceMethod_1
  name: invokeDeviceMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: Appelle une méthode sur un périphérique particulier ou un module.
  syntax:
    content: 'function invokeDeviceMethod(deviceId: string, moduleId: string, methodParams: DeviceMethodParams, done?: Callback<any>)'
    parameters:
    - id: deviceId
      type:
      - string
      description: ''
    - id: moduleId
      type:
      - string
      description: ''
    - id: methodParams
      type:
      - azure-iothub.DeviceMethodParams
      description: ''
    - id: done
      type:
      - azure-iothub.Client.Callback<any>
      description: ''
      optional: true
  package: azure-iothub
- uid: azure-iothub.Client.open
  name: open
  children: []
  type: method
  langs:
  - typeScript
  summary: Ouvre la connexion à un IoT hub.
  syntax:
    content: 'function open(done?: Callback<Connected>)'
    parameters:
    - id: done
      type:
      - azure-iothub.Client.Callback<Connected>
      description: >
        La fonction à appeler lorsque l’opération est terminée. `done` sera passé un argument d’objet erreur, qui sera null si l’opération a réussi.
      optional: true
  package: azure-iothub
- uid: azure-iothub.Client.send
  name: send
  children: []
  type: method
  langs:
  - typeScript
  summary: Envoie un message à un appareil.
  syntax:
    content: 'function send(deviceId: string, message: Message | Message.BufferConvertible, done?: Callback<MessageEnqueued>)'
    parameters:
    - id: deviceId
      type:
      - string
      description: L’identificateur d’une identité d’appareil existant.
    - id: message
      type:
      - Message | Message.BufferConvertible
      description: >-
        Corps du message à envoyer à l'appareil.

        Si `message` n’est pas de type [Message](xref:azure-iot-common.Message), il sera converti.
    - id: done
      type:
      - azure-iothub.Client.Callback<MessageEnqueued>
      description: >
        La fonction à appeler lorsque l’opération est terminée. `done` est appelée avec deux arguments : un objet d’erreur (peut être null) et un objet spécifique au transport réponse utile pour la journalisation ou de débogage.
      optional: true
  package: azure-iothub
- uid: azure-iothub.Client.setRetryPolicy
  name: setRetryPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: Définir la stratégie utilisée par le client pour retenter des opérations réseau.
  syntax:
    content: 'function setRetryPolicy(policy: RetryPolicy)'
    parameters:
    - id: policy
      type:
      - RetryPolicy
      description: >
        stratégie utilisée pour retenter des opérations (par exemple). Ouvrir, envoyer, etc.).

        Le SDK est fourni avec des stratégies de « intégrées » 2 : ExponentialBackoffWithJitter (valeur par défaut) et NoRetry (Annuler n’importe quel formulaire de nouvelle tentative). L’utilisateur peut passer également son propre objet tant qu’il implémente les 2 méthodes :-shouldRetry(err: Error) : boolean : indique si une opération doit être retentée en fonction du type d’erreur - nextRetryTimeout (retryCount : nombre, limitée : valeur booléenne) : nombre : retourne la délai d’attente (en millisecondes) avant une nouvelle tentative basée sur le nombre de tentatives (retryCount) et le fait que l’erreur est une erreur de limitation ou pas passés.
  package: azure-iothub
- uid: azure-iothub.Client.TransportCtor
  name: TransportCtor
  fullName: TransportCtor
  children: []
  langs:
  - typeScript
  type: class
  summary: "\n"
  package: azure-iothub
references:
- uid: azure-iothub.Client.Callback<MessageAbandoned>
  spec.typeScript:
  - name: Callback
    fullName: Callback
    uid: azure-iothub.Client.Callback
  - name: <MessageAbandoned>
    fullName: <MessageAbandoned>
- uid: azure-iothub.Client.Callback<MessageCompleted>
  spec.typeScript:
  - name: Callback
    fullName: Callback
    uid: azure-iothub.Client.Callback
  - name: <MessageCompleted>
    fullName: <MessageCompleted>
- uid: azure-iothub.Client.Callback<MessageRejected>
  spec.typeScript:
  - name: Callback
    fullName: Callback
    uid: azure-iothub.Client.Callback
  - name: <MessageRejected>
    fullName: <MessageRejected>
- uid: azure-iothub.Client.Callback<Connected>
  spec.typeScript:
  - name: Callback
    fullName: Callback
    uid: azure-iothub.Client.Callback
  - name: <Connected>
    fullName: <Connected>
- uid: azure-iothub.Client.Callback<Disconnected>
  spec.typeScript:
  - name: Callback
    fullName: Callback
    uid: azure-iothub.Client.Callback
  - name: <Disconnected>
    fullName: <Disconnected>
- uid: azure-iothub.Client.Callback<azure-iothub.Client.ServiceReceiver>
  spec.typeScript:
  - name: Callback
    fullName: Callback
    uid: azure-iothub.Client.Callback
  - name: <
    fullName: <
  - name: ServiceReceiver
    fullName: ServiceReceiver
    uid: azure-iothub.Client.ServiceReceiver
  - name: '>'
    fullName: '>'
- uid: azure-iothub.Client.Callback<MessageEnqueued>
  spec.typeScript:
  - name: Callback
    fullName: Callback
    uid: azure-iothub.Client.Callback
  - name: <MessageEnqueued>
    fullName: <MessageEnqueued>
- uid: azure-iothub.DeviceMethodParams
  spec.typeScript:
  - name: DeviceMethodParams
    fullName: DeviceMethodParams
    uid: azure-iothub.DeviceMethodParams
- uid: azure-iothub.Client.Callback<any>
  spec.typeScript:
  - name: Callback
    fullName: Callback
    uid: azure-iothub.Client.Callback
  - name: <any>
    fullName: <any>
- uid: azure-iothub.Client.TransportCtor
  spec.typeScript:
  - name: TransportCtor
    fullName: TransportCtor
    uid: azure-iothub.Client.TransportCtor
- uid: azure-iothub.Client
  spec.typeScript:
  - name: Client
    fullName: Client
    uid: azure-iothub.Client
