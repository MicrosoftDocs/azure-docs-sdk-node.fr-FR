### YamlMime:UniversalReference
ms.openlocfilehash: 7cb17321fac415a5f2a5a07d198cddac0ebcfde8
ms.sourcegitcommit: 286f52ea38c9eff2ec9d4f8cabeb86f62fd9c406
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 08/22/2018
ms.locfileid: "41685732"
items:
- uid: azure-iothub.JobClient
  name: JobClient
  fullName: JobClient
  children:
  - azure-iothub.JobClient.cancelJob
  - azure-iothub.JobClient.createQuery
  - azure-iothub.JobClient.fromConnectionString
  - azure-iothub.JobClient.fromSharedAccessSignature
  - azure-iothub.JobClient.getJob
  - azure-iothub.JobClient.JobCallback
  - azure-iothub.JobClient.scheduleDeviceMethod
  - azure-iothub.JobClient.scheduleTwinUpdate
  langs:
  - typeScript
  type: class
  summary: >
    Fournit des méthodes pour créer, mettre à jour, surveiller et annuler les travaux à long terme sur une instance IoT Hub, ainsi que les travaux existants de requête.

    L’API de travaux dans Azure IoT Hub permet de planifier des appels de méthode directe et mises à jour de représentations sur plusieurs appareils.

    Les utilisateurs du Kit de développement logiciel sont censées créer <xref:azure-iothub.JobClient> instances à l’aide de méthodes de fabrique <xref:azure-iothub.JobClient.fromConnectionString> et <xref:azure-iothub.JobClient.fromSharedAccessSignature>.
  package: azure-iothub
- uid: azure-iothub.JobClient.cancelJob
  name: cancelJob
  children: []
  type: method
  langs:
  - typeScript
  summary: Annule un travail existant.
  syntax:
    content: 'function cancelJob(jobId: string | number, done: JobClient.JobCallback)'
    parameters:
    - id: jobId
      type:
      - string | number
      description: L’identificateur d’une tâche existante.
    - id: done
      type:
      - azure-iothub.JobClient.JobCallback
      description: >
        La fonction à appeler lorsque l’opération est terminée. `done` est appelée avec trois arguments : un objet d’erreur (peut être null), un objet de tâche et un objet spécifique au transport réponse utile pour la journalisation ou de débogage.
  package: azure-iothub
- uid: azure-iothub.JobClient.createQuery
  name: createQuery
  children: []
  type: method
  langs:
  - typeScript
  summary: Crée une requête qui peut être utilisée pour retourner les pages de travail existant basé sur le type et l’état.
  syntax:
    content: 'function createQuery(jobType?: JobType, jobStatus?: JobStatus, pageSize?: number)'
    parameters:
    - id: jobType
      type:
      - azure-iothub.JobType
      description: Le type doit être utilisé pour filtrer les résultats.
      optional: true
    - id: jobStatus
      type:
      - azure-iothub.JobStatus
      description: L’état doit être utilisé pour filtrer les résultats.
      optional: true
    - id: pageSize
      type:
      - number
      description: >
        Le nombre d’éléments à retourner par page.
      optional: true
    return:
      type:
      - azure-iothub.Query
  package: azure-iothub
- uid: azure-iothub.JobClient.fromConnectionString
  name: fromConnectionString
  children: []
  type: method
  langs:
  - typeScript
  summary: Construit un objet JobClient à partir de la chaîne de connexion donnée.
  syntax:
    content: 'static function fromConnectionString(connectionString: string)'
    parameters:
    - id: connectionString
      type:
      - string
      description: >
        Une chaîne de connexion qui encapsule le texte approprié (lire et/ou écrire) des autorisations de Registre.
    return:
      type:
      - azure-iothub.JobClient
  package: azure-iothub
- uid: azure-iothub.JobClient.fromSharedAccessSignature
  name: fromSharedAccessSignature
  children: []
  type: method
  langs:
  - typeScript
  summary: Construit un objet JobClient à partir de la signature d’accès partagé.
  syntax:
    content: 'static function fromSharedAccessSignature(sharedAccessSignature: string)'
    parameters:
    - id: sharedAccessSignature
      type:
      - string
      description: >
        Une signature d’accès partagé qui encapsule le texte approprié (lire et/ou écrire) des autorisations de Registre.
    return:
      type:
      - azure-iothub.JobClient
  package: azure-iothub
- uid: azure-iothub.JobClient.getJob
  name: getJob
  children: []
  type: method
  langs:
  - typeScript
  summary: Demande des informations sur un travail existant.
  syntax:
    content: 'function getJob(jobId: string | number, done: JobClient.JobCallback)'
    parameters:
    - id: jobId
      type:
      - string | number
      description: L’identificateur d’une tâche existante.
    - id: done
      type:
      - azure-iothub.JobClient.JobCallback
      description: >
        La fonction à appeler lorsque l’opération est terminée. `done` est appelée avec trois arguments : un objet d’erreur (peut être null), un objet de tâche et un objet spécifique au transport réponse utile pour la journalisation ou de débogage.
  package: azure-iothub
- uid: azure-iothub.JobClient.JobCallback
  name: JobCallback
  fullName: JobCallback
  children: []
  langs:
  - typeScript
  type: class
  summary: "\n"
  package: azure-iothub
- uid: azure-iothub.JobClient.scheduleDeviceMethod
  name: scheduleDeviceMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: Planifie une tâche qui exécute une méthode d’appareil sur un ensemble d’appareils.
  syntax:
    content: 'function scheduleDeviceMethod(jobId: string | number, queryCondition: string, methodParams: DeviceMethodParams, jobStartTime?: Date | JobClient.JobCallback, maxExecutionTimeInSeconds?: number | JobClient.JobCallback, done?: JobClient.JobCallback)'
    parameters:
    - id: jobId
      type:
      - string | number
      description: Identificateur unique qui doit être utilisé pour cette tâche.
    - id: queryCondition
      type:
      - string
      description: Une requête SQL de clause WHERE utilisée pour calculer la liste des appareils sur lesquels ce travail doit être exécuté.
    - id: methodParams
      type:
      - azure-iothub.DeviceMethodParams
      description: >-
        Objet décrivant la méthode et doivent avoir les propriétés suivantes :-Nom_méthode le nom de la méthode qui doit être appelée.

        -[facultatif] charge utile de la charge utile à utiliser pour l’appel de méthode.

        -responseTimeoutInSeconds [facultatif] le nombre de secondes pendant lesquelles IoT Hub doit attendre pour l’appareil
    - id: jobStartTime
      type:
      - Date | azure-iothub.JobClient.JobCallback
      description: Heure à laquelle le travail doit démarrer.
      optional: true
    - id: maxExecutionTimeInSeconds
      type:
      - number | azure-iothub.JobClient.JobCallback
      description: Le temps maximal alloué pour ce travail s’exécute en quelques secondes.
      optional: true
    - id: done
      type:
      - azure-iothub.JobClient.JobCallback
      description: >
        La fonction à appeler lorsque l’opération est terminée. `done` est appelée avec trois arguments : un objet d’erreur (peut être null), un objet de tâche et un objet spécifique au transport réponse utile pour la journalisation ou de débogage.
      optional: true
  package: azure-iothub
- uid: azure-iothub.JobClient.scheduleTwinUpdate
  name: scheduleTwinUpdate
  children: []
  type: method
  langs:
  - typeScript
  summary: Planifier un travail qui met à jour un ensemble de représentations d’avec le correctif fourni en tant que paramètre.
  syntax:
    content: 'function scheduleTwinUpdate(jobId: string | number, queryCondition: string, patch: any, jobStartTime?: Date | JobClient.JobCallback, maxExecutionTimeInSeconds?: number | JobClient.JobCallback, done?: JobClient.JobCallback)'
    parameters:
    - id: jobId
      type:
      - string | number
      description: Identificateur unique qui doit être utilisé pour cette tâche.
    - id: queryCondition
      type:
      - string
      description: Une requête SQL de clause WHERE utilisée pour calculer la liste des appareils sur lesquels ce travail doit être exécuté.
    - id: patch
      type:
      - any
      description: Le correctif de jumeau qui doit être appliqué pour les représentations.
    - id: jobStartTime
      type:
      - Date | azure-iothub.JobClient.JobCallback
      description: Heure à laquelle le travail doit démarrer.
      optional: true
    - id: maxExecutionTimeInSeconds
      type:
      - number | azure-iothub.JobClient.JobCallback
      description: Le temps maximal alloué pour ce travail s’exécute en quelques secondes.
      optional: true
    - id: done
      type:
      - azure-iothub.JobClient.JobCallback
      description: >
        La fonction à appeler lorsque l’opération est terminée. `done` est appelée avec trois arguments : un objet d’erreur (peut être null), un objet de tâche et un objet spécifique au transport réponse utile pour la journalisation ou de débogage.
      optional: true
  package: azure-iothub
references:
- uid: azure-iothub.JobClient.JobCallback
  spec.typeScript:
  - name: JobCallback
    fullName: JobCallback
    uid: azure-iothub.JobClient.JobCallback
- uid: azure-iothub.JobType
  spec.typeScript:
  - name: JobType
    fullName: JobType
    uid: azure-iothub.JobType
- uid: azure-iothub.JobStatus
  spec.typeScript:
  - name: JobStatus
    fullName: JobStatus
    uid: azure-iothub.JobStatus
- uid: azure-iothub.Query
  spec.typeScript:
  - name: Query
    fullName: Query
    uid: azure-iothub.Query
- uid: azure-iothub.DeviceMethodParams
  spec.typeScript:
  - name: DeviceMethodParams
    fullName: DeviceMethodParams
    uid: azure-iothub.DeviceMethodParams
- uid: Date | azure-iothub.JobClient.JobCallback
  spec.typeScript:
  - name: 'Date | '
    fullName: 'Date | '
  - name: JobCallback
    fullName: JobCallback
    uid: azure-iothub.JobClient.JobCallback
- uid: number | azure-iothub.JobClient.JobCallback
  spec.typeScript:
  - name: 'number | '
    fullName: 'number | '
  - name: JobCallback
    fullName: JobCallback
    uid: azure-iothub.JobClient.JobCallback
- uid: azure-iothub.JobClient
  spec.typeScript:
  - name: JobClient
    fullName: JobClient
    uid: azure-iothub.JobClient
