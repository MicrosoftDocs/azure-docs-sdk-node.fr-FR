### YamlMime:UniversalReference
ms.openlocfilehash: 6894afa5a4cabd5c941cec9d9770b727ab0335b7
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 08/13/2018
ms.locfileid: "40056301"
items:
- uid: azure-common
  name: azure-common
  langs:
  - js
  type: package
  summary: ''
  children:
  - azure-common.StorageServiceClient
  - azure-common.ServiceManagementClient
  - azure-common.ServiceClient
  - azure-common.HmacSha256Sign
  - azure-common.LinearRetryPolicyFilter
  - azure-common.ExponentialRetryPolicyFilter
  - azure-common.TokenCloudCredentials
  - azure-common.CertificateCloudCredentials
  - azure-common.AnonymousCloudCredentials
  - azure-common.ConnectionStringParser
  - azure-common.WebResource
  - azure-common.parse
  - azure-common.create
  - azure-common.setAgent
  - azure-common.DEFAULT_PROTOCOL
  - azure-common.noMatchConnectionString
  - azure-common.noMatchSettings
  - azure-common.parseAndValidateKeys
  - azure-common.getValidator
  - azure-common.setting
  - azure-common.atLeastOne
  - azure-common.optional
  - azure-common.allRequired
  - azure-common.settingWithFunc
  - azure-common.matchedSpecification
  - azure-common.serializeEntry
  - azure-common.propertyType
  - azure-common.unserializeValue
  - azure-common.serializeQueryValue
  - azure-common.format
  - azure-common.encodeUri
  - azure-common.objectKeysLength
  - azure-common.objectFirstKey
  - azure-common.objectIsNull
  - azure-common.objectIsEmpty
  - azure-common.objectIsInt
  - azure-common.objectIsString
  - azure-common.objectIsFunction
  - azure-common.zeroPaddingString
  - azure-common.stringIsEmpty
  - azure-common.stringFormat
  - azure-common.stringStartsWith
  - azure-common.stringEndsWith
  - azure-common.stringIsInt
  - azure-common.stringIsFloat
  - azure-common.stringIsNumber
  - azure-common.stringIsDate
  - azure-common.urlIsHTTPS
  - azure-common.removeBOM
  - azure-common.merge
  - azure-common.inArrayInsensitive
  - azure-common.tryGetValueInsensitive
  - azure-common.getNameSpace
  - azure-common.isInt
  - azure-common.tryGetValueChain
  - azure-common.truncatedISO8061Date
  - azure-common.isBufferAllZero
  - azure-common.getContentMd5
  - azure-common.isValidUri
  - azure-common.isValidHDInsightCreationObject
  - azure-common.isBase64Encoded
  - azure-common.isValidFunction
  - azure-common.namespaceNameIsValid
  - azure-common.containerNameIsValid
  - azure-common.blobNameIsValid
  - azure-common.tableNameIsValid
  - azure-common.queueNameIsValid
- uid: azure-common.parse
  id: azure-common.parse
  name: parse(connectionString)
  summary: Analyse une chaîne de connexion.
  fullName: azure-common.parse(connectionString)
  type: Function
  syntax:
    parameters:
    - id: connectionString
      type:
      - number
      description: La chaîne de connexion à analyser.
    return:
      type:
      - object
      description: L’objet de chaîne de connexion.
    content: function parse(connectionString)
  langs:
  - js
- uid: azure-common.create
  id: azure-common.create
  name: create()
  summary: Crée un filtre pour gérer une réponse d’erreur. Cela inclut l’analyse et la normalisation des réponses d’erreur.
  fullName: azure-common.create()
  type: Function
  syntax:
    content: function create()
  langs:
  - js
- uid: azure-common.setAgent
  id: azure-common.setAgent
  name: setAgent(resouce, proxy)
  summary: Ensemble de l’Agent à utiliser pour le résultat de la demande dépend de protocole et les paramètres de proxy
  fullName: azure-common.setAgent(resouce, proxy)
  type: Function
  syntax:
    parameters:
    - id: resouce
      type:
      - object
      description: options de requête pour la demande.
    - id: proxy
      type:
      - object
      description: url analysées pour le proxy.
    content: function setAgent(resouce, proxy)
  langs:
  - js
- uid: azure-common.DEFAULT_PROTOCOL
  id: azure-common.DEFAULT_PROTOCOL
  name: DEFAULT_PROTOCOL
  summary: Le protocole par défaut.
  fullName: azure-common.DEFAULT_PROTOCOL
  type: Member
  syntax:
    content: DEFAULT_PROTOCOL
  langs:
  - js
- uid: azure-common.noMatchConnectionString
  id: azure-common.noMatchConnectionString
  name: noMatchConnectionString(connectionString)
  summary: Lève une exception si le format de chaîne de connexion ne correspond pas à un des formats disponibles.
  fullName: azure-common.noMatchConnectionString(connectionString)
  type: Function
  syntax:
    parameters:
    - id: connectionString
      type:
      - string
      description: La chaîne de connexion de mise en forme non valide.
    return:
      description: Aucun
    content: function noMatchConnectionString(connectionString)
  langs:
  - js
- uid: azure-common.noMatchSettings
  id: azure-common.noMatchSettings
  name: noMatchSettings(settings)
  summary: Lève une exception si les paramètres ne correspondent pas tous les formats disponibles.
  fullName: azure-common.noMatchSettings(settings)
  type: Function
  syntax:
    parameters:
    - id: settings
      type:
      - object
      description: Les paramètres non valides.
    return:
      description: Aucun
    content: function noMatchSettings(settings)
  langs:
  - js
- uid: azure-common.parseAndValidateKeys
  id: azure-common.parseAndValidateKeys
  name: parseAndValidateKeys(connectionString, validKeys)
  summary: Analyse la chaîne de connexion et puis valider que les clés analysées appartiennent à la validSettingKeys
  fullName: azure-common.parseAndValidateKeys(connectionString, validKeys)
  type: Function
  syntax:
    parameters:
    - id: connectionString
      type:
      - string
      description: L’utilisateur a fourni la chaîne de connexion.
    - id: validKeys
      type:
      - array
      description: Les clés valides.
    return:
      type:
      - array
      description: Les clés de chaîne de connexion sous forme de jeton.
    content: function parseAndValidateKeys(connectionString, validKeys)
  langs:
  - js
- uid: azure-common.getValidator
  id: azure-common.getValidator
  name: getValidator(array, boolean, boolean)
  summary: Crée une fonction anonyme qui agit en tant que prédicat pour effectuer une validation.
  fullName: azure-common.getValidator(array, boolean, boolean)
  type: Function
  syntax:
    parameters:
    - id: array
      type:
      - azure-common.requirements
      description: Tableau des conditions à satisfaire.
    - id: boolean
      type:
      - azure-common.isRequired
      description: Ces deux conditions sont tous obligatoires ou facultatifs.
    - id: boolean
      type:
      - azure-common.atLeastOne
      description: Indique qu’au moins un besoin particulier doit réussir.
    return:
      type:
      - function
      description: ''
    content: function getValidator(array, boolean, boolean)
  langs:
  - js
- uid: azure-common.setting
  id: azure-common.setting
  name: setting(name)
  summary: Crée une valeur de condition qui valide le fait qu’il est une des valeurs valides transmis.
  fullName: azure-common.setting(name)
  type: Function
  syntax:
    parameters:
    - id: name
      type:
      - string
      description: Le nom de clé de paramètre.
    return:
      type:
      - array
      description: ''
    content: function setting(name)
  langs:
  - js
- uid: azure-common.atLeastOne
  id: azure-common.atLeastOne
  name: atLeastOne()
  summary: Crée un prédicat « à louer une » pour la liste fournie de la configuration requise.
  fullName: azure-common.atLeastOne()
  type: Function
  syntax:
    return:
      description: pouvant être appelé
    content: function atLeastOne()
  langs:
  - js
- uid: azure-common.optional
  id: azure-common.optional
  name: optional()
  summary: Crée un prédicat facultatif pour la liste fournie de la configuration requise.
  fullName: azure-common.optional()
  type: Function
  syntax:
    return:
      type:
      - function
      description: ''
    content: function optional()
  langs:
  - js
- uid: azure-common.allRequired
  id: azure-common.allRequired
  name: allRequired()
  summary: Crée un prédicat requis pour la liste fournie de la configuration requise.
  fullName: azure-common.allRequired()
  type: Function
  syntax:
    return:
      type:
      - function
      description: ''
    content: function allRequired()
  langs:
  - js
- uid: azure-common.settingWithFunc
  id: azure-common.settingWithFunc
  name: settingWithFunc(name, predicate)
  summary: Crée une condition de valeur de paramètre à l’aide du prédicat passé.
  fullName: azure-common.settingWithFunc(name, predicate)
  type: Function
  syntax:
    parameters:
    - id: name
      type:
      - string
      description: Le nom de clé de paramètre.
    - id: predicate
      type:
      - function
      description: Le prédicat de valeur de paramètre.
    return:
      type:
      - array
      description: ''
    content: function settingWithFunc(name, predicate)
  langs:
  - js
- uid: azure-common.matchedSpecification
  id: azure-common.matchedSpecification
  name: matchedSpecification(array)
  summary: Teste si une liste donnée de paramètres correspond exactement à un ensemble de filtres.
  fullName: azure-common.matchedSpecification(array)
  type: Function
  syntax:
    parameters:
    - id: array
      description: $settings les paramètres à vérifier.
    return:
      description: filtre booléen, le cas échéant, retourne null, false. S’il existe des paramètres restants après tous les filtres sont traités, false. Valeur true dans le cas contraire.
    content: function matchedSpecification(array)
  langs:
  - js
- uid: azure-common.serializeEntry
  id: azure-common.serializeEntry
  name: serializeEntry(content, namespaces)
  summary: ''
  fullName: azure-common.serializeEntry(content, namespaces)
  type: Function
  syntax:
    parameters:
    - id: content
      type:
      - object
      description: La charge utile du contenu tel qu’il doit être sérialisée par js2xml. Il doit inclure un ou plusieurs nœuds racine.
    - id: namespaces
      type:
      - array
      description: Tableau d’espaces de noms au niveau supérieur à définir.
    content: function serializeEntry(content, namespaces)
  langs:
  - js
- uid: azure-common.propertyType
  id: azure-common.propertyType
  name: propertyType(value)
  summary: Obtient le type Edm d’un objet.
  fullName: azure-common.propertyType(value)
  type: Function
  syntax:
    parameters:
    - id: value
      type:
      - object
      description: Une instance typée.
    return:
      type:
      - string
      description: Type Edm.
    content: function propertyType(value)
  langs:
  - js
- uid: azure-common.unserializeValue
  id: azure-common.unserializeValue
  name: unserializeValue(type, value)
  summary: Convertir une valeur sérialisée en un objet typé.
  fullName: azure-common.unserializeValue(type, value)
  type: Function
  syntax:
    parameters:
    - id: type
      type:
      - string
      description: Le type de la valeur tel qu’il apparaît dans l’attribut de type.
    - id: value
      type:
      - string
      description: La valeur au format de chaîne.
    return:
      type:
      - object
      description: La valeur typée.
    content: function unserializeValue(type, value)
  langs:
  - js
- uid: azure-common.serializeQueryValue
  id: azure-common.serializeQueryValue
  name: serializeQueryValue(value)
  summary: Sérialise les valeur en une valeur appropriée à utiliser dans la valeur de requête odata.
  fullName: azure-common.serializeQueryValue(value)
  type: Function
  syntax:
    parameters:
    - id: value
      type:
      - object
      description: La valeur à sérialiser.
    return:
      type:
      - string
      description: Valeur sérialisée.
    content: function serializeQueryValue(value)
  langs:
  - js
- uid: azure-common.format
  id: azure-common.format
  name: format(date, skipMilliseconds, millisecondsPading)
  summary: Met en forme une date en chaîne iso 8061.
  fullName: azure-common.format(date, skipMilliseconds, millisecondsPading)
  type: Function
  syntax:
    parameters:
    - id: date
      type:
      - date
      description: Date à mettre en forme.
    - id: skipMilliseconds
      type:
      - azure-common.bool
      description: Valeur booléenne indiquant si la partie de millisecondes de la date ne doit pas être incluse.
    - id: millisecondsPading
      type:
      - azure-common.integer
      description: Nombre de chiffres à gauche de remplissage les millisecondes.
    return:
      type:
      - string
      description: La date formatée dans le format de date ISO 8061.
    content: function format(date, skipMilliseconds, millisecondsPading)
  langs:
  - js
- uid: azure-common.encodeUri
  id: azure-common.encodeUri
  name: encodeUri(uri)
  summary: Encode un URI.
  fullName: azure-common.encodeUri(uri)
  type: Function
  syntax:
    parameters:
    - id: uri
      type:
      - string
      description: L’URI à encoder.
    return:
      type:
      - string
      description: L’URI encodé.
    content: function encodeUri(uri)
  langs:
  - js
- uid: azure-common.objectKeysLength
  id: azure-common.objectKeysLength
  name: objectKeysLength(value)
  summary: Retourne le nombre de clés (propriétés) dans un objet.
  fullName: azure-common.objectKeysLength(value)
  type: Function
  syntax:
    parameters:
    - id: value
      type:
      - object
      description: L’objet qui sont des clés à compter.
    return:
      type:
      - number
      description: Le nombre de clés dans l’objet.
    content: function objectKeysLength(value)
  langs:
  - js
- uid: azure-common.objectFirstKey
  id: azure-common.objectFirstKey
  name: objectFirstKey(value)
  summary: Retourne le nom de la première propriété dans un objet.
  fullName: azure-common.objectFirstKey(value)
  type: Function
  syntax:
    parameters:
    - id: value
      type:
      - object
      description: L’objet clé qui doit être retourné.
    return:
      type:
      - number
      description: Le nom de la première clé de l’objet.
    content: function objectFirstKey(value)
  langs:
  - js
- uid: azure-common.objectIsNull
  id: azure-common.objectIsNull
  name: objectIsNull(value)
  summary: Vérifie si une valeur est null ou non définie.
  fullName: azure-common.objectIsNull(value)
  type: Function
  syntax:
    parameters:
    - id: value
      type:
      - object
      description: La valeur à vérifier pour null ou non définie.
    return:
      type:
      - azure-common.bool
      description: True si la valeur est null ou non défini, false sinon.
    content: function objectIsNull(value)
  langs:
  - js
- uid: azure-common.objectIsEmpty
  id: azure-common.objectIsEmpty
  name: objectIsEmpty(object)
  summary: Vérifie si un objet est vide.
  fullName: azure-common.objectIsEmpty(object)
  type: Function
  syntax:
    parameters:
    - id: object
      type:
      - object
      description: Objet à vérifier s’il est null.
    return:
      type:
      - azure-common.bool
      description: True si l’objet est vide, sinon false.
    content: function objectIsEmpty(object)
  langs:
  - js
- uid: azure-common.objectIsInt
  id: azure-common.objectIsInt
  name: objectIsInt(value)
  summary: Détermine si un objet contient un nombre entier.
  fullName: azure-common.objectIsInt(value)
  type: Function
  syntax:
    parameters:
    - id: value
      type:
      - object
      description: L’objet à déclarer.
    return:
      type:
      - azure-common.bool
      description: True si l’objet contient un nombre entier ; False sinon.
    content: function objectIsInt(value)
  langs:
  - js
- uid: azure-common.objectIsString
  id: azure-common.objectIsString
  name: objectIsString(object)
  summary: Vérifie si un objet est une chaîne.
  fullName: azure-common.objectIsString(object)
  type: Function
  syntax:
    parameters:
    - id: object
      type:
      - object
      description: L’objet à vérifier si c’est une chaîne.
    return:
      type:
      - azure-common.bool
      description: True si l’objet est un strign, false sinon.
    content: function objectIsString(object)
  langs:
  - js
- uid: azure-common.objectIsFunction
  id: azure-common.objectIsFunction
  name: objectIsFunction(object)
  summary: Vérifiez si un objet est une fonction
  fullName: azure-common.objectIsFunction(object)
  type: Function
  syntax:
    parameters:
    - id: object
      type:
      - object
      description: L’objet à vérifier s’il s’agit (fonction)
    return:
      type:
      - azure-common.bool
      description: True si l’objet spécifié est (fonction), sinon false
    content: function objectIsFunction(object)
  langs:
  - js
- uid: azure-common.zeroPaddingString
  id: azure-common.zeroPaddingString
  name: zeroPaddingString()
  summary: Aucun remplissage de chaîne à longueur de sepcified des serveurs frontaux
  fullName: azure-common.zeroPaddingString()
  type: Function
  syntax:
    content: function zeroPaddingString()
  langs:
  - js
- uid: azure-common.stringIsEmpty
  id: azure-common.stringIsEmpty
  name: stringIsEmpty(value)
  summary: Vérifie si une valeur est une chaîne vide, null ou non définie.
  fullName: azure-common.stringIsEmpty(value)
  type: Function
  syntax:
    parameters:
    - id: value
      type:
      - object
      description: La valeur dont vous recherchez une chaîne vide, null ou non définie.
    return:
      type:
      - azure-common.bool
      description: True si la valeur est une chaîne vide, la valeur null ou undefined, false sinon.
    content: function stringIsEmpty(value)
  langs:
  - js
- uid: azure-common.stringFormat
  id: azure-common.stringFormat
  name: stringFormat(text, arguments)
  summary: Met en forme un texte en remplaçant « ? » en fonction des arguments.
  fullName: azure-common.stringFormat(text, arguments)
  type: Function
  syntax:
    parameters:
    - id: text
      type:
      - string
      description: La chaîne où la ? doit être remplacé.
    - id: arguments
      type:
      - array
      description: Valeur (s) à insérer en question marque les paramètres ( ?).
    return:
      type:
      - string
      description: ''
    content: function stringFormat(text, arguments)
  langs:
  - js
- uid: azure-common.stringStartsWith
  id: azure-common.stringStartsWith
  name: stringStartsWith(text, prefix)
  summary: Détermine si une chaîne commence par un autre.
  fullName: azure-common.stringStartsWith(text, prefix)
  type: Function
  syntax:
    parameters:
    - id: text
      type:
      - string
      description: Chaîne à déclarer.
    - id: prefix
      type:
      - string
      description: Le préfixe de chaîne.
    return:
      type:
      - azure-common.Bool
      description: True si la chaîne commence par le préfixe ; False sinon.
    content: function stringStartsWith(text, prefix)
  langs:
  - js
- uid: azure-common.stringEndsWith
  id: azure-common.stringEndsWith
  name: stringEndsWith(text, suffix)
  summary: Détermine si une chaîne se termine par un autre.
  fullName: azure-common.stringEndsWith(text, suffix)
  type: Function
  syntax:
    parameters:
    - id: text
      type:
      - string
      description: Chaîne à déclarer.
    - id: suffix
      type:
      - string
      description: Le suffixe de la chaîne.
    return:
      type:
      - azure-common.Bool
      description: True si la chaîne se termine par le suffixe. False sinon.
    content: function stringEndsWith(text, suffix)
  langs:
  - js
- uid: azure-common.stringIsInt
  id: azure-common.stringIsInt
  name: stringIsInt(text)
  summary: Détermine si une chaîne contient un nombre entier.
  fullName: azure-common.stringIsInt(text)
  type: Function
  syntax:
    parameters:
    - id: text
      type:
      - string
      description: Chaîne à déclarer.
    return:
      type:
      - azure-common.Bool
      description: True si la chaîne contient un nombre entier ; False sinon.
    content: function stringIsInt(text)
  langs:
  - js
- uid: azure-common.stringIsFloat
  id: azure-common.stringIsFloat
  name: stringIsFloat(text)
  summary: Détermine si une chaîne contient un nombre à virgule flottante.
  fullName: azure-common.stringIsFloat(text)
  type: Function
  syntax:
    parameters:
    - id: text
      type:
      - string
      description: Chaîne à déclarer.
    return:
      type:
      - azure-common.Bool
      description: True si la chaîne contient un nombre à virgule flottante ; False sinon.
    content: function stringIsFloat(text)
  langs:
  - js
- uid: azure-common.stringIsNumber
  id: azure-common.stringIsNumber
  name: stringIsNumber(text)
  summary: Détermine si une chaîne contient un nombre.
  fullName: azure-common.stringIsNumber(text)
  type: Function
  syntax:
    parameters:
    - id: text
      type:
      - string
      description: Chaîne à déclarer.
    return:
      type:
      - azure-common.Bool
      description: True si la chaîne contient un nombre ; False sinon.
    content: function stringIsNumber(text)
  langs:
  - js
- uid: azure-common.stringIsDate
  id: azure-common.stringIsDate
  name: stringIsDate(date)
  summary: Détermine si un objet date est valide.
  fullName: azure-common.stringIsDate(date)
  type: Function
  syntax:
    parameters:
    - id: date
      type:
      - Date
      description: La date à tester
    return:
      type:
      - azure-common.Bool
      description: True si la date est valide ; False sinon.
    content: function stringIsDate(date)
  langs:
  - js
- uid: azure-common.urlIsHTTPS
  id: azure-common.urlIsHTTPS
  name: urlIsHTTPS(urlToCheck)
  summary: Vérifie si une URL analysée est HTTPS
  fullName: azure-common.urlIsHTTPS(urlToCheck)
  type: Function
  syntax:
    parameters:
    - id: urlToCheck
      type:
      - object
      description: Url à vérifier
    return:
      type:
      - azure-common.bool
      description: True si l’URL est HTTPS ; False sinon.
    content: function urlIsHTTPS(urlToCheck)
  langs:
  - js
- uid: azure-common.removeBOM
  id: azure-common.removeBOM
  name: removeBOM(str)
  summary: Supprime la nomenclature d’une chaîne.
  fullName: azure-common.removeBOM(str)
  type: Function
  syntax:
    parameters:
    - id: str
      type:
      - string
      description: La chaîne où la nomenclature doit être supprimée
    return:
      type:
      - string
      description: La chaîne sans la nomenclature.
    content: function removeBOM(str)
  langs:
  - js
- uid: azure-common.merge
  id: azure-common.merge
  name: merge(object)
  summary: Fusionne plusieurs objets.
  fullName: azure-common.merge(object)
  type: Function
  syntax:
    parameters:
    - id: object
      type:
      - object
      description: Les objets à fusionner
    return:
      type:
      - object
      description: L’objet fusionnée.
    content: function merge(object)
  langs:
  - js
- uid: azure-common.inArrayInsensitive
  id: azure-common.inArrayInsensitive
  name: inArrayInsensitive(needle, haystack)
  summary: Vérifie si une valeur existe dans un tableau. La comparaison est effectuée de manière respectent pas la casse.
  fullName: azure-common.inArrayInsensitive(needle, haystack)
  type: Function
  syntax:
    parameters:
    - id: needle
      type:
      - string
      description: La valeur recherchée.
    - id: haystack
      type:
      - array
      description: Le tableau.
    return:
      type:
      - boolean
      description: ''
    content: function inArrayInsensitive(needle, haystack)
  langs:
  - js
- uid: azure-common.tryGetValueInsensitive
  id: azure-common.tryGetValueInsensitive
  name: tryGetValueInsensitive(key, haystack, default)
  summary: Retourne la valeur de la clé spécifiée passée à partir de l’objet et dans les cas où cette clé n’existe pas, la valeur par défaut est retournée. La clé correspondante est effectuée de manière respectent pas la casse.
  fullName: azure-common.tryGetValueInsensitive(key, haystack, default)
  type: Function
  syntax:
    parameters:
    - id: key
      type:
      - string
      description: La clé de tableau.
    - id: haystack
      type:
      - object
      description: L’objet à utiliser.
    - id: default
      type:
      - azure-common.mix
      description: La valeur à retourner si $key est introuvable dans $array.
    return:
      description: combinaison
    content: function tryGetValueInsensitive(key, haystack, default)
  langs:
  - js
- uid: azure-common.getNameSpace
  id: azure-common.getNameSpace
  name: getNameSpace()
  summary: Retourne l’espace de noms pour un subscriptoinId, un préfixe et un emplacement
  fullName: azure-common.getNameSpace()
  tags:
  - originalTitle: subscriptionId
    title: subscriptionid
    text: '{string}  The Azure subscription id.'
    value: '{string}  The Azure subscription id.'
  - originalTitle: prefix
    title: prefix
    text: '{string}          The prifix for the service.'
    value: '{string}          The prifix for the service.'
  - originalTitle: location
    title: location
    text: '{string}        The location of the service.'
    value: '{string}        The location of the service.'
  type: Function
  syntax:
    return:
      type:
      - azure-common.Bool
      description: True si la valeur est un nombre entier ; False sinon.
    content: function getNameSpace()
  langs:
  - js
- uid: azure-common.isInt
  id: azure-common.isInt
  name: isInt(The)
  summary: Détermine si une valeur (chaîne ou nombre) est un nombre entier.
  fullName: azure-common.isInt(The)
  type: Function
  syntax:
    parameters:
    - id: The
      type:
      - object
      description: valeur à évaluer.
    return:
      type:
      - azure-common.Bool
      description: True si la valeur est un nombre entier ; False sinon.
    content: function isInt(The)
  langs:
  - js
- uid: azure-common.tryGetValueChain
  id: azure-common.tryGetValueChain
  name: tryGetValueChain(object, keys, default)
  summary: Retourne la valeur dans un objet chaîné.
  fullName: azure-common.tryGetValueChain(object, keys, default)
  type: Function
  syntax:
    parameters:
    - id: object
      type:
      - object
      description: L’objet avec les valeurs.
    - id: keys
      type:
      - array
      description: Les clés.
    - id: default
      type:
      - azure-common.mix
      description: La valeur à retourner si $key est introuvable dans $array.
    return:
      description: combinaison
    content: function tryGetValueChain(object, keys, default)
  langs:
  - js
- uid: azure-common.truncatedISO8061Date
  id: azure-common.truncatedISO8061Date
  name: truncatedISO8061Date(a)
  summary: Arrondit une date à secondes.
  fullName: azure-common.truncatedISO8061Date(a)
  type: Function
  syntax:
    parameters:
    - id: a
      type:
      - Date
      description: date
    return:
      type:
      - string
      description: la date au format ISO8061, aucun composant « millisecondes »
    content: function truncatedISO8061Date(a)
  langs:
  - js
- uid: azure-common.isBufferAllZero
  id: azure-common.isBufferAllZero
  name: isBufferAllZero()
  summary: Indique si le contenu de la mémoire tampon est égal à zéro toutes les
  fullName: azure-common.isBufferAllZero()
  type: Function
  syntax:
    content: function isBufferAllZero()
  langs:
  - js
- uid: azure-common.getContentMd5
  id: azure-common.getContentMd5
  name: getContentMd5()
  summary: Calculer md5sum du contenu
  fullName: azure-common.getContentMd5()
  type: Function
  syntax:
    content: function getContentMd5()
  langs:
  - js
- uid: azure-common.isValidUri
  id: azure-common.isValidUri
  name: isValidUri(uri)
  summary: Crée une fonction anonyme qui vérifient si l’uri donné est valide ou non.
  fullName: azure-common.isValidUri(uri)
  type: Function
  syntax:
    parameters:
    - id: uri
      type:
      - string
      description: Uri à valider.
    return:
      type:
      - function
      description: ''
    content: function isValidUri(uri)
  langs:
  - js
- uid: azure-common.isValidHDInsightCreationObject
  id: azure-common.isValidHDInsightCreationObject
  name: isValidHDInsightCreationObject(clusterCreationObject)
  summary: Valide le fait qu’un clusterCreationObject est correctement formée.
  fullName: azure-common.isValidHDInsightCreationObject(clusterCreationObject)
  type: Function
  syntax:
    parameters:
    - id: clusterCreationObject
      type:
      - object
      description: >-
        L’objet utilisé pour fournir tous les paramètres nécessaires pour créer un cluster.

        {/ / les éléments suivants sont le nom des champs obligatoires : « le nom du cluster (nom dns) tout en minuscules ', emplacement : « centre de données Azure où le cluster doit être créé », defaultStorageAccountName : « Le nom du compte de stockage Azure par défaut », defaultStorageAccountKey : « La clé secrète pour le compte de stockage Azure par défaut », defaultStorageContainer : « Le conteneur pour le compte de stockage Azure par défaut », utilisateur : « Le nom d’utilisateur à utiliser pour le cluster », mot de passe : 'Le mot de passe à utiliser pour le cluster' nœuds : nombre / / le nombre de nœuds à utiliser / / les éléments suivants sont des champs facultatifs additionalStorageAccounts : [{nom : clé de « le nom du compte de stockage » : « la clé secrète pour le compte de stockage »}, {/ / comptes supplémentaires en suivant le même modèle}] / / les éléments suivants sont facultatifs, mais si un est spécifié à l’autre est oozieMetastore requis : {serveur : 'nom du serveur sql à utiliser', base de données : « la sql Database à utiliser » utilisateur : « le nom d’utilisateur à utiliser lorsque journalisation dans la base de données » le mot de passe : ' le mot de passe à utiliser lors de la journalisation dans le base de données '} hiveMetastore : {serveur : 'nom du serveur sql à utiliser', base de données : « la sql Database à utiliser » utilisateur : « le nom d’utilisateur à utiliser lorsque journalisation dans la base de données » le mot de passe : 'mot de passe à utiliser lors de la connexion dans la base de données'}}
    content: function isValidHDInsightCreationObject(clusterCreationObject)
  langs:
  - js
- uid: azure-common.isBase64Encoded
  id: azure-common.isBase64Encoded
  name: isBase64Encoded(key)
  summary: Crée une fonction anonyme qui vérifient si une clé donnée est codée en base 64.
  fullName: azure-common.isBase64Encoded(key)
  type: Function
  syntax:
    parameters:
    - id: key
      type:
      - string
      description: Clé à valider.
    return:
      type:
      - function
      description: ''
    content: function isBase64Encoded(key)
  langs:
  - js
- uid: azure-common.isValidFunction
  id: azure-common.isValidFunction
  name: isValidFunction(function)
  summary: Valide une fonction.
  fullName: azure-common.isValidFunction(function)
  type: Function
  syntax:
    parameters:
    - id: function
      type:
      - object
      description: Fonction permettant de valider.
    return:
      type:
      - function
      description: ''
    content: function isValidFunction(function)
  langs:
  - js
- uid: azure-common.namespaceNameIsValid
  id: azure-common.namespaceNameIsValid
  name: namespaceNameIsValid(name)
  summary: Valide le fait qu’un nom d’espace de noms Service Bus est légalement autorisé. Ne vérifie pas la disponibilité.
  fullName: azure-common.namespaceNameIsValid(name)
  type: Function
  syntax:
    parameters:
    - id: name
      type:
      - string
      description: le nom à vérifier
    return:
      description: rien. Lève l’exception si le nom n’est pas valide, le message décrit les critères de validité il enfreint.
    content: function namespaceNameIsValid(name)
  langs:
  - js
- uid: azure-common.containerNameIsValid
  id: azure-common.containerNameIsValid
  name: containerNameIsValid(containerName)
  summary: Valide un nom de conteneur.
  fullName: azure-common.containerNameIsValid(containerName)
  type: Function
  syntax:
    parameters:
    - id: containerName
      type:
      - string
      description: Nom du conteneur.
    return:
      type:
      - undefined
      description: ''
    content: function containerNameIsValid(containerName)
  langs:
  - js
- uid: azure-common.blobNameIsValid
  id: azure-common.blobNameIsValid
  name: blobNameIsValid(containerName, blobname)
  summary: Valide un nom d’objet blob.
  fullName: azure-common.blobNameIsValid(containerName, blobname)
  type: Function
  syntax:
    parameters:
    - id: containerName
      type:
      - string
      description: Nom du conteneur.
    - id: blobname
      type:
      - string
      description: Le nom d’objet blob.
    return:
      type:
      - undefined
      description: ''
    content: function blobNameIsValid(containerName, blobname)
  langs:
  - js
- uid: azure-common.tableNameIsValid
  id: azure-common.tableNameIsValid
  name: tableNameIsValid(table)
  summary: Valide un nom de table.
  fullName: azure-common.tableNameIsValid(table)
  type: Function
  syntax:
    parameters:
    - id: table
      type:
      - string
      description: Le nom de la table.
    return:
      type:
      - undefined
      description: ''
    content: function tableNameIsValid(table)
  langs:
  - js
- uid: azure-common.queueNameIsValid
  id: azure-common.queueNameIsValid
  name: queueNameIsValid(queue)
  summary: Valide un nom de file d’attente.
  fullName: azure-common.queueNameIsValid(queue)
  type: Function
  syntax:
    parameters:
    - id: queue
      type:
      - string
      description: le nom de la file d’attente ;
    return:
      type:
      - undefined
      description: ''
    content: function queueNameIsValid(queue)
  langs:
  - js
references:
- uid: azure-common.StorageServiceClient
  name: StorageServiceClient
- uid: azure-common.ServiceManagementClient
  name: ServiceManagementClient
- uid: azure-common.ServiceClient
  name: ServiceClient
- uid: azure-common.HmacSha256Sign
  name: HmacSha256Sign
- uid: azure-common.LinearRetryPolicyFilter
  name: LinearRetryPolicyFilter
- uid: azure-common.ExponentialRetryPolicyFilter
  name: ExponentialRetryPolicyFilter
- uid: azure-common.TokenCloudCredentials
  name: TokenCloudCredentials
- uid: azure-common.CertificateCloudCredentials
  name: CertificateCloudCredentials
- uid: azure-common.AnonymousCloudCredentials
  name: AnonymousCloudCredentials
- uid: azure-common.ConnectionStringParser
  name: ConnectionStringParser
- uid: azure-common.WebResource
  name: WebResource
