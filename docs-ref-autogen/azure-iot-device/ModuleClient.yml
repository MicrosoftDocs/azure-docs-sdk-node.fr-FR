### YamlMime:UniversalReference
ms.openlocfilehash: c2b93dacc7cedb9cb424f2fd53eb419a9b4b1a63
ms.sourcegitcommit: ce76ec3eda83746ef9a765165173b5c00b5b7df6
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 12/20/2018
ms.locfileid: "53710504"
items:
- uid: azure-iot-device.ModuleClient
  name: ModuleClient
  fullName: ModuleClient
  children:
  - azure-iot-device.ModuleClient.close_1
  - azure-iot-device.ModuleClient.close
  - azure-iot-device.ModuleClient.fromAuthenticationProvider
  - azure-iot-device.ModuleClient.fromConnectionString
  - azure-iot-device.ModuleClient.fromEnvironment_1
  - azure-iot-device.ModuleClient.fromEnvironment
  - azure-iot-device.ModuleClient.fromSharedAccessSignature
  - azure-iot-device.ModuleClient.invokeMethod_2
  - azure-iot-device.ModuleClient.invokeMethod
  - azure-iot-device.ModuleClient.invokeMethod_3
  - azure-iot-device.ModuleClient.invokeMethod_1
  - azure-iot-device.ModuleClient.onMethod
  - azure-iot-device.ModuleClient.sendOutputEvent_1
  - azure-iot-device.ModuleClient.sendOutputEvent
  - azure-iot-device.ModuleClient.sendOutputEventBatch_1
  - azure-iot-device.ModuleClient.sendOutputEventBatch
  - azure-iot-device.ModuleClient.setOptions_1
  - azure-iot-device.ModuleClient.setOptions
  langs:
  - typeScript
  type: class
  summary: >
    Client d’appareil IoT Hub permet de connecter un appareil avec un Azure IoT hub.

    Les utilisateurs du SDK doivent appeler une des méthodes de fabrique, [fromConnectionString](xref:azure-iot-device.Client.fromConnectionString) ou [fromSharedAccessSignature](xref:azure-iot-device.Client.fromSharedAccessSignature) pour créer un client d’appareil IoT Hub.
  extends:
    name: InternalClient
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.close_1
  name: close()
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Ferme la connexion de transport et détruit les ressources client.

    *Remarque : Après avoir appelé cette méthode le ModuleClient objet ne peut pas être réutilisé.*
  syntax:
    content: function close()
    parameters: []
    return:
      type:
      - Promise<Disconnected>
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.close
  name: close(Callback<Disconnected>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Ferme la connexion de transport et détruit les ressources client.

    *Remarque : Après avoir appelé cette méthode le ModuleClient objet ne peut pas être réutilisé.*
  syntax:
    content: 'function close(closeCallback: Callback<Disconnected>)'
    parameters:
    - id: closeCallback
      type:
      - Callback<Disconnected>
      description: ''
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.fromAuthenticationProvider
  name: fromAuthenticationProvider(AuthenticationProvider, any)
  children: []
  type: method
  langs:
  - typeScript
  summary: Crée un client de module IoT Hub à partir de la méthode d’authentification donnée et en utilisant le type de transport donnés.
  syntax:
    content: 'static function fromAuthenticationProvider(authenticationProvider: AuthenticationProvider, transportCtor: any)'
    parameters:
    - id: authenticationProvider
      type:
      - AuthenticationProvider
      description: Objet utilisé pour obtenir les paramètres d’authentification pour le IoT hub.
    - id: transportCtor
      type:
      - any
      description: >
        Protocole utilisé pour se connecter à IoT hub de transport.
    return:
      type:
      - azure-iot-device.ModuleClient
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.fromConnectionString
  name: fromConnectionString(string, any)
  children: []
  type: method
  langs:
  - typeScript
  summary: Crée un client d’appareil IoT Hub à partir de la chaîne de connexion donnée en utilisant le type de transport donnés.
  syntax:
    content: 'static function fromConnectionString(connStr: string, transportCtor: any)'
    parameters:
    - id: connStr
      type:
      - string
      description: Une chaîne de connexion qui encapsule les autorisations de « l’appareil se connecter » sur un hub IoT.
    - id: transportCtor
      type:
      - any
      description: >
        Un constructeur de transport.
    return:
      type:
      - azure-iot-device.ModuleClient
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.fromEnvironment_1
  name: fromEnvironment(any)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Crée un client de module IoT Hub à l’aide des informations de configuration de l’environnement.

    Si une variable d’environnement appelée `EdgeHubConnectionString` ou `IotHubConnectionString` existe, cette valeur est utilisée et le comportement est identique à l’appel `fromConnectionString` en passant dans. Si ces variables d’environnement n’existent pas les variables suivantes doivent être définis :

        - URI IOTEDGE_WORKLOADURI pour la charge de travail d’iotedged API
        - Identificateur de l’appareil IOTEDGE_DEVICEID
        - Identificateur de Module de IOTEDGE_MODULEID
        - Identificateur de génération de Module de IOTEDGE_MODULEGENERATIONID
        - Nom d’hôte IOTEDGE_IOTHUBHOSTNAME IoT Hub
        - Schéma d’authentification de IOTEDGE_AUTHSCHEME à utiliser ; doit être « sasToken »
  syntax:
    content: 'static function fromEnvironment(transportCtor: any)'
    parameters:
    - id: transportCtor
      type:
      - any
      description: ''
    return:
      type:
      - Promise<azure-iot-device.ModuleClient>
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.fromEnvironment
  name: fromEnvironment(any, Callback<ModuleClient>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Crée un client de module IoT Hub à l’aide des informations de configuration de l’environnement.

    Si une variable d’environnement appelée `EdgeHubConnectionString` ou `IotHubConnectionString` existe, cette valeur est utilisée et le comportement est identique à l’appel `fromConnectionString` en passant dans. Si ces variables d’environnement n’existent pas les variables suivantes doivent être définis :

        - URI IOTEDGE_WORKLOADURI pour la charge de travail d’iotedged API
        - Identificateur de l’appareil IOTEDGE_DEVICEID
        - Identificateur de Module de IOTEDGE_MODULEID
        - Identificateur de génération de Module de IOTEDGE_MODULEGENERATIONID
        - Nom d’hôte IOTEDGE_IOTHUBHOSTNAME IoT Hub
        - Schéma d’authentification de IOTEDGE_AUTHSCHEME à utiliser ; doit être « sasToken »
  syntax:
    content: 'static function fromEnvironment(transportCtor: any, callback: Callback<ModuleClient>)'
    parameters:
    - id: transportCtor
      type:
      - any
      description: Protocole utilisé pour se connecter à IoT hub de transport.
    - id: callback
      type:
      - Callback<azure-iot-device.ModuleClient>
      description: ''
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.fromSharedAccessSignature
  name: fromSharedAccessSignature(string, any)
  children: []
  type: method
  langs:
  - typeScript
  summary: Crée un client de module IoT Hub à partir de la signature d’accès partagé en utilisant le type de transport donnés.
  syntax:
    content: 'static function fromSharedAccessSignature(sharedAccessSignature: string, transportCtor: any)'
    parameters:
    - id: sharedAccessSignature
      type:
      - string
      description: Une signature d’accès partagé qui encapsule les autorisations de « l’appareil se connecter » sur un hub IoT.
    - id: transportCtor
      type:
      - any
      description: ''
    return:
      type:
      - azure-iot-device.ModuleClient
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.invokeMethod_2
  name: invokeMethod(string, MethodParams)
  children: []
  type: method
  langs:
  - typeScript
  summary: Appelle une méthode sur un appareil en aval ou sur un autre module sur le même appareil Edge. Veuillez noter que cette fonctionnalité fonctionne uniquement lorsque le module est en cours d’exécution en tant que partie d’un appareil Edge.
  syntax:
    content: 'function invokeMethod(deviceId: string, methodParams: MethodParams)'
    parameters:
    - id: deviceId
      type:
      - string
      description: ''
    - id: methodParams
      type:
      - azure-iot-device.MethodParams
      description: ''
    return:
      type:
      - Promise<azure-iot-device.MethodResult>
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.invokeMethod
  name: invokeMethod(string, MethodParams, Callback<MethodResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Appelle une méthode sur un appareil en aval ou sur un autre module sur le même appareil Edge. Veuillez noter que cette fonctionnalité fonctionne uniquement lorsque le module est en cours d’exécution en tant que partie d’un appareil Edge.
  syntax:
    content: 'function invokeMethod(deviceId: string, methodParams: MethodParams, callback: Callback<MethodResult>)'
    parameters:
    - id: deviceId
      type:
      - string
      description: identificateur de l’appareil cible
    - id: methodParams
      type:
      - azure-iot-device.MethodParams
      description: paramètres de l’appel de méthode directe
    - id: callback
      type:
      - Callback<azure-iot-device.MethodResult>
      description: ''
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.invokeMethod_3
  name: invokeMethod(string, string, MethodParams)
  children: []
  type: method
  langs:
  - typeScript
  summary: Appelle une méthode sur un appareil en aval ou sur un autre module sur le même appareil Edge. Veuillez noter que cette fonctionnalité fonctionne uniquement lorsque le module est en cours d’exécution en tant que partie d’un appareil Edge.
  syntax:
    content: 'function invokeMethod(deviceId: string, moduleId: string, methodParams: MethodParams)'
    parameters:
    - id: deviceId
      type:
      - string
      description: ''
    - id: moduleId
      type:
      - string
      description: ''
    - id: methodParams
      type:
      - azure-iot-device.MethodParams
      description: ''
    return:
      type:
      - Promise<azure-iot-device.MethodResult>
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.invokeMethod_1
  name: invokeMethod(string, string, MethodParams, Callback<MethodResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Appelle une méthode sur un appareil en aval ou sur un autre module sur le même appareil Edge. Veuillez noter que cette fonctionnalité fonctionne uniquement lorsque le module est en cours d’exécution en tant que partie d’un appareil Edge.
  syntax:
    content: 'function invokeMethod(deviceId: string, moduleId: string, methodParams: MethodParams, callback: Callback<MethodResult>)'
    parameters:
    - id: deviceId
      type:
      - string
      description: ''
    - id: moduleId
      type:
      - string
      description: ''
    - id: methodParams
      type:
      - azure-iot-device.MethodParams
      description: ''
    - id: callback
      type:
      - Callback<azure-iot-device.MethodResult>
      description: ''
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.onMethod
  name: onMethod(string, DoubleValueCallback<DeviceMethodRequest, DeviceMethodResponse>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Inscrit un rappel pour une méthode nommée `methodName`.
  syntax:
    content: 'function onMethod(methodName: string, callback: DoubleValueCallback<DeviceMethodRequest, DeviceMethodResponse>)'
    parameters:
    - id: methodName
      type:
      - string
      description: Nom de la méthode qui sera gérée par le rappel
    - id: callback
      type:
      - DoubleValueCallback<azure-iot-device.DeviceMethodRequest, azure-iot-device.DeviceMethodResponse>
      description: >
        Fonction qui doit être appelée chaque fois qu’une demande de méthode pour la méthode appelée `methodName` est reçue.
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.sendOutputEvent_1
  name: sendOutputEvent(string, Message)
  children: []
  type: method
  langs:
  - typeScript
  summary: Envoie un événement à la sortie de module donné
  syntax:
    content: 'function sendOutputEvent(outputName: string, message: Message)'
    parameters:
    - id: outputName
      type:
      - string
      description: ''
    - id: message
      type:
      - Message
      description: ''
    return:
      type:
      - Promise<MessageEnqueued>
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.sendOutputEvent
  name: sendOutputEvent(string, Message, Callback<MessageEnqueued>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Envoie un événement à la sortie de module donné
  syntax:
    content: 'function sendOutputEvent(outputName: string, message: Message, callback: Callback<MessageEnqueued>)'
    parameters:
    - id: outputName
      type:
      - string
      description: Nom de la sortie pour envoyer l’événement à
    - id: message
      type:
      - Message
      description: Message à envoyer à la sortie donnée
    - id: callback
      type:
      - Callback<MessageEnqueued>
      description: ''
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.sendOutputEventBatch_1
  name: sendOutputEventBatch(string, Message[])
  children: []
  type: method
  langs:
  - typeScript
  summary: Envoie un tableau d’événements à la sortie de module donné
  syntax:
    content: 'function sendOutputEventBatch(outputName: string, messages: Message[])'
    parameters:
    - id: outputName
      type:
      - string
      description: ''
    - id: messages
      type:
      - Message[]
      description: ''
    return:
      type:
      - Promise<MessageEnqueued>
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.sendOutputEventBatch
  name: sendOutputEventBatch(string, Message[], Callback<MessageEnqueued>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Envoie un tableau d’événements à la sortie de module donné
  syntax:
    content: 'function sendOutputEventBatch(outputName: string, messages: Message[], callback: Callback<MessageEnqueued>)'
    parameters:
    - id: outputName
      type:
      - string
      description: Nom de la sortie pour envoyer les événements à
    - id: messages
      type:
      - Message[]
      description: ''
    - id: callback
      type:
      - Callback<MessageEnqueued>
      description: ''
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.setOptions_1
  name: setOptions(DeviceClientOptions)
  children: []
  type: method
  langs:
  - typeScript
  summary: Transmet les options pour le `ModuleClient` objet qui peut être utilisé pour configurer le transport.
  syntax:
    content: 'function setOptions(options: DeviceClientOptions)'
    parameters:
    - id: options
      type:
      - azure-iot-device.DeviceClientOptions
      description: ''
    return:
      type:
      - Promise<TransportConfigured>
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.setOptions
  name: setOptions(DeviceClientOptions, Callback<TransportConfigured>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Transmet les options pour le `ModuleClient` objet qui peut être utilisé pour configurer le transport.
  syntax:
    content: 'function setOptions(options: DeviceClientOptions, done: Callback<TransportConfigured>)'
    parameters:
    - id: options
      type:
      - azure-iot-device.DeviceClientOptions
      description: Objet <xref:DeviceClientOptions>.
    - id: done
      type:
      - Callback<TransportConfigured>
      description: ''
  package: azure-iot-device
references:
- uid: azure-iot-device.MethodParams
  name: MethodParams
  spec.typeScript:
  - name: MethodParams
    fullName: MethodParams
    uid: azure-iot-device.MethodParams
- uid: Callback<azure-iot-device.MethodResult>
  name: MethodResult>
  spec.typeScript:
  - name: Callback<
    fullName: Callback<
  - name: MethodResult
    fullName: MethodResult
    uid: azure-iot-device.MethodResult
  - name: '>'
    fullName: '>'
- uid: Promise<azure-iot-device.MethodResult>
  name: MethodResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: MethodResult
    fullName: MethodResult
    uid: azure-iot-device.MethodResult
  - name: '>'
    fullName: '>'
- uid: DoubleValueCallback<azure-iot-device.DeviceMethodRequest, azure-iot-device.DeviceMethodResponse>
  name: DeviceMethodResponse>
  spec.typeScript:
  - name: DoubleValueCallback<
    fullName: DoubleValueCallback<
  - name: DeviceMethodRequest
    fullName: DeviceMethodRequest
    uid: azure-iot-device.DeviceMethodRequest
  - name: ', '
    fullName: ', '
  - name: DeviceMethodResponse
    fullName: DeviceMethodResponse
    uid: azure-iot-device.DeviceMethodResponse
  - name: '>'
    fullName: '>'
- uid: azure-iot-device.DeviceClientOptions
  name: DeviceClientOptions
  spec.typeScript:
  - name: DeviceClientOptions
    fullName: DeviceClientOptions
    uid: azure-iot-device.DeviceClientOptions
- uid: azure-iot-device.ModuleClient
  name: ModuleClient
  spec.typeScript:
  - name: ModuleClient
    fullName: ModuleClient
    uid: azure-iot-device.ModuleClient
- uid: Callback<azure-iot-device.ModuleClient>
  name: ModuleClient>
  spec.typeScript:
  - name: Callback<
    fullName: Callback<
  - name: ModuleClient
    fullName: ModuleClient
    uid: azure-iot-device.ModuleClient
  - name: '>'
    fullName: '>'
- uid: Promise<azure-iot-device.ModuleClient>
  name: ModuleClient>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ModuleClient
    fullName: ModuleClient
    uid: azure-iot-device.ModuleClient
  - name: '>'
    fullName: '>'
