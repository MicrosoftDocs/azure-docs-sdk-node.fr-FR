### YamlMime:UniversalReference
ms.openlocfilehash: 2f68db2640bf5f18ec526b603a0c002bd8b3eb2f
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 08/12/2018
ms.locfileid: "40063043"
items:
- uid: azure-cognitiveservices-face.FaceList
  name: FaceList
  fullName: FaceList
  children:
  - azure-cognitiveservices-face.FaceList.addFace
  - azure-cognitiveservices-face.FaceList.addFace_1
  - azure-cognitiveservices-face.FaceList.addFace_2
  - azure-cognitiveservices-face.FaceList.addFaceFromStream_1
  - azure-cognitiveservices-face.FaceList.addFaceFromStream
  - azure-cognitiveservices-face.FaceList.addFaceFromStream_2
  - azure-cognitiveservices-face.FaceList.addFaceFromStreamWithHttpOperationResponse
  - azure-cognitiveservices-face.FaceList.addFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.FaceList.create_1
  - azure-cognitiveservices-face.FaceList.create
  - azure-cognitiveservices-face.FaceList.create_2
  - azure-cognitiveservices-face.FaceList.createWithHttpOperationResponse
  - azure-cognitiveservices-face.FaceList.deleteFace
  - azure-cognitiveservices-face.FaceList.deleteFace_1
  - azure-cognitiveservices-face.FaceList.deleteFace_2
  - azure-cognitiveservices-face.FaceList.deleteFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.FaceList.deleteMethod
  - azure-cognitiveservices-face.FaceList.deleteMethod_1
  - azure-cognitiveservices-face.FaceList.deleteMethod_2
  - azure-cognitiveservices-face.FaceList.deleteMethodWithHttpOperationResponse
  - azure-cognitiveservices-face.FaceList.get_1
  - azure-cognitiveservices-face.FaceList.get_2
  - azure-cognitiveservices-face.FaceList.get
  - azure-cognitiveservices-face.FaceList.getWithHttpOperationResponse
  - azure-cognitiveservices-face.FaceList.list
  - azure-cognitiveservices-face.FaceList.list_1
  - azure-cognitiveservices-face.FaceList.list_2
  - azure-cognitiveservices-face.FaceList.listWithHttpOperationResponse
  - azure-cognitiveservices-face.FaceList.update
  - azure-cognitiveservices-face.FaceList.update_1
  - azure-cognitiveservices-face.FaceList.update_2
  - azure-cognitiveservices-face.FaceList.updateWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.addFace
  name: addFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="38944-101">Ajouter une face à une liste de visages.</span><span class="sxs-lookup"><span data-stu-id="38944-101">Add a face to a face list.</span></span> <span data-ttu-id="38944-102">Le visage d’entrée est spécifié en tant qu’image avec un rectangle targetFace.</span><span class="sxs-lookup"><span data-stu-id="38944-102">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="38944-103">Elle retourne un persistedFaceId représentant la face ajoutée et persistedFaceId n’expirent pas.</span><span class="sxs-lookup"><span data-stu-id="38944-103">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFace(faceListId: string, url: string, options?: function)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="38944-104">ID de référence à une liste de visages.</span><span class="sxs-lookup"><span data-stu-id="38944-104">Id referencing a Face List.</span></span>
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.addFace_1
  name: addFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="38944-105">Ajouter une face à une liste de visages.</span><span class="sxs-lookup"><span data-stu-id="38944-105">Add a face to a face list.</span></span> <span data-ttu-id="38944-106">Le visage d’entrée est spécifié en tant qu’image avec un rectangle targetFace.</span><span class="sxs-lookup"><span data-stu-id="38944-106">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="38944-107">Elle retourne un persistedFaceId représentant la face ajoutée et persistedFaceId n’expirent pas.</span><span class="sxs-lookup"><span data-stu-id="38944-107">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFace(faceListId: string, url: string, callback: ServiceCallback<PersistedFaceResult>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFaceResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.addFace_2
  name: addFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="38944-108">Ajouter une face à une liste de visages.</span><span class="sxs-lookup"><span data-stu-id="38944-108">Add a face to a face list.</span></span> <span data-ttu-id="38944-109">Le visage d’entrée est spécifié en tant qu’image avec un rectangle targetFace.</span><span class="sxs-lookup"><span data-stu-id="38944-109">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="38944-110">Elle retourne un persistedFaceId représentant la face ajoutée et persistedFaceId n’expirent pas.</span><span class="sxs-lookup"><span data-stu-id="38944-110">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFace(faceListId: string, url: string, options: function, callback: ServiceCallback<PersistedFaceResult>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFaceResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.addFaceFromStream_1
  name: addFaceFromStream
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="38944-111">Ajouter une face à une liste de visages.</span><span class="sxs-lookup"><span data-stu-id="38944-111">Add a face to a face list.</span></span> <span data-ttu-id="38944-112">Le visage d’entrée est spécifié en tant qu’image avec un rectangle targetFace.</span><span class="sxs-lookup"><span data-stu-id="38944-112">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="38944-113">Elle retourne un persistedFaceId représentant la face ajoutée et persistedFaceId n’expirent pas.</span><span class="sxs-lookup"><span data-stu-id="38944-113">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromStream(faceListId: string, callback: ServiceCallback<PersistedFaceResult>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFaceResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.addFaceFromStream
  name: addFaceFromStream
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="38944-114">Ajouter une face à une liste de visages.</span><span class="sxs-lookup"><span data-stu-id="38944-114">Add a face to a face list.</span></span> <span data-ttu-id="38944-115">Le visage d’entrée est spécifié en tant qu’image avec un rectangle targetFace.</span><span class="sxs-lookup"><span data-stu-id="38944-115">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="38944-116">Elle retourne un persistedFaceId représentant la face ajoutée et persistedFaceId n’expirent pas.</span><span class="sxs-lookup"><span data-stu-id="38944-116">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromStream(faceListId: string, options?: function)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="38944-117">ID de référence à une liste de visages.</span><span class="sxs-lookup"><span data-stu-id="38944-117">Id referencing a Face List.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.addFaceFromStream_2
  name: addFaceFromStream
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="38944-118">Ajouter une face à une liste de visages.</span><span class="sxs-lookup"><span data-stu-id="38944-118">Add a face to a face list.</span></span> <span data-ttu-id="38944-119">Le visage d’entrée est spécifié en tant qu’image avec un rectangle targetFace.</span><span class="sxs-lookup"><span data-stu-id="38944-119">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="38944-120">Elle retourne un persistedFaceId représentant la face ajoutée et persistedFaceId n’expirent pas.</span><span class="sxs-lookup"><span data-stu-id="38944-120">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromStream(faceListId: string, options: function, callback: ServiceCallback<PersistedFaceResult>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFaceResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFaceResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.addFaceFromStreamWithHttpOperationResponse
  name: addFaceFromStreamWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="38944-121">Ajouter une face à une liste de visages.</span><span class="sxs-lookup"><span data-stu-id="38944-121">Add a face to a face list.</span></span> <span data-ttu-id="38944-122">Le visage d’entrée est spécifié en tant qu’image avec un rectangle targetFace.</span><span class="sxs-lookup"><span data-stu-id="38944-122">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="38944-123">Elle retourne un persistedFaceId représentant la face ajoutée et persistedFaceId n’expirent pas.</span><span class="sxs-lookup"><span data-stu-id="38944-123">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromStreamWithHttpOperationResponse(faceListId: string, options?: function)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="38944-124">ID de référence à une liste de visages.</span><span class="sxs-lookup"><span data-stu-id="38944-124">Id referencing a Face List.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFaceResult>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.addFaceWithHttpOperationResponse
  name: addFaceWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="38944-125">Ajouter une face à une liste de visages.</span><span class="sxs-lookup"><span data-stu-id="38944-125">Add a face to a face list.</span></span> <span data-ttu-id="38944-126">Le visage d’entrée est spécifié en tant qu’image avec un rectangle targetFace.</span><span class="sxs-lookup"><span data-stu-id="38944-126">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="38944-127">Elle retourne un persistedFaceId représentant la face ajoutée et persistedFaceId n’expirent pas.</span><span class="sxs-lookup"><span data-stu-id="38944-127">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceWithHttpOperationResponse(faceListId: string, url: string, options?: function)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="38944-128">ID de référence à une liste de visages.</span><span class="sxs-lookup"><span data-stu-id="38944-128">Id referencing a Face List.</span></span>
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFaceResult>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.create_1
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="38944-129">Créer une liste vide de face.</span><span class="sxs-lookup"><span data-stu-id="38944-129">Create an empty face list.</span></span> <span data-ttu-id="38944-130">Jusqu'à 64 visages listes peuvent exister dans un seul abonnement.</span><span class="sxs-lookup"><span data-stu-id="38944-130">Up to 64 face lists are allowed to exist in one subscription.</span></span>
  syntax:
    content: 'function create(faceListId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.create
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="38944-131">Créer une liste vide de face.</span><span class="sxs-lookup"><span data-stu-id="38944-131">Create an empty face list.</span></span> <span data-ttu-id="38944-132">Jusqu'à 64 visages listes peuvent exister dans un seul abonnement.</span><span class="sxs-lookup"><span data-stu-id="38944-132">Up to 64 face lists are allowed to exist in one subscription.</span></span>
  syntax:
    content: 'function create(faceListId: string, options?: function)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="38944-133">ID faisant référence à une liste de visages particulier.</span><span class="sxs-lookup"><span data-stu-id="38944-133">Id referencing a particular face list.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.create_2
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="38944-134">Créer une liste vide de face.</span><span class="sxs-lookup"><span data-stu-id="38944-134">Create an empty face list.</span></span> <span data-ttu-id="38944-135">Jusqu'à 64 visages listes peuvent exister dans un seul abonnement.</span><span class="sxs-lookup"><span data-stu-id="38944-135">Up to 64 face lists are allowed to exist in one subscription.</span></span>
  syntax:
    content: 'function create(faceListId: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.createWithHttpOperationResponse
  name: createWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="38944-136">Créer une liste vide de face.</span><span class="sxs-lookup"><span data-stu-id="38944-136">Create an empty face list.</span></span> <span data-ttu-id="38944-137">Jusqu'à 64 visages listes peuvent exister dans un seul abonnement.</span><span class="sxs-lookup"><span data-stu-id="38944-137">Up to 64 face lists are allowed to exist in one subscription.</span></span>
  syntax:
    content: 'function createWithHttpOperationResponse(faceListId: string, options?: function)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="38944-138">ID faisant référence à une liste de visages particulier.</span><span class="sxs-lookup"><span data-stu-id="38944-138">Id referencing a particular face list.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.deleteFace
  name: deleteFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="38944-139">Supprimer un visage existant d’une liste de visage (donnée par un persisitedFaceId et un faceListId).</span><span class="sxs-lookup"><span data-stu-id="38944-139">Delete an existing face from a face list (given by a persisitedFaceId and a faceListId).</span></span> <span data-ttu-id="38944-140">Image persistante lié à la face est également supprimé.</span><span class="sxs-lookup"><span data-stu-id="38944-140">Persisted image related to the face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(faceListId: string, persistedFaceId: string, options?: function)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="38944-141">faceListId d’une liste existante de la face.</span><span class="sxs-lookup"><span data-stu-id="38944-141">faceListId of an existing face list.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="38944-142">persistedFaceId d’un visage existant.</span><span class="sxs-lookup"><span data-stu-id="38944-142">persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.deleteFace_1
  name: deleteFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="38944-143">Supprimer un visage existant d’une liste de visage (donnée par un persisitedFaceId et un faceListId).</span><span class="sxs-lookup"><span data-stu-id="38944-143">Delete an existing face from a face list (given by a persisitedFaceId and a faceListId).</span></span> <span data-ttu-id="38944-144">Image persistante lié à la face est également supprimé.</span><span class="sxs-lookup"><span data-stu-id="38944-144">Persisted image related to the face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(faceListId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.deleteFace_2
  name: deleteFace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="38944-145">Supprimer un visage existant d’une liste de visage (donnée par un persisitedFaceId et un faceListId).</span><span class="sxs-lookup"><span data-stu-id="38944-145">Delete an existing face from a face list (given by a persisitedFaceId and a faceListId).</span></span> <span data-ttu-id="38944-146">Image persistante lié à la face est également supprimé.</span><span class="sxs-lookup"><span data-stu-id="38944-146">Persisted image related to the face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(faceListId: string, persistedFaceId: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.deleteFaceWithHttpOperationResponse
  name: deleteFaceWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="38944-147">Supprimer un visage existant d’une liste de visage (donnée par un persisitedFaceId et un faceListId).</span><span class="sxs-lookup"><span data-stu-id="38944-147">Delete an existing face from a face list (given by a persisitedFaceId and a faceListId).</span></span> <span data-ttu-id="38944-148">Image persistante lié à la face est également supprimé.</span><span class="sxs-lookup"><span data-stu-id="38944-148">Persisted image related to the face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFaceWithHttpOperationResponse(faceListId: string, persistedFaceId: string, options?: function)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="38944-149">faceListId d’une liste existante de la face.</span><span class="sxs-lookup"><span data-stu-id="38944-149">faceListId of an existing face list.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="38944-150">persistedFaceId d’un visage existant.</span><span class="sxs-lookup"><span data-stu-id="38944-150">persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.deleteMethod
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="38944-151">Supprimer une liste de face existante en fonction de faceListId.</span><span class="sxs-lookup"><span data-stu-id="38944-151">Delete an existing face list according to faceListId.</span></span> <span data-ttu-id="38944-152">Conservées face images dans la liste de visages seront également supprimées.</span><span class="sxs-lookup"><span data-stu-id="38944-152">Persisted face images in the face list will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(faceListId: string, options?: function)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="38944-153">ID de référence à une liste de visages.</span><span class="sxs-lookup"><span data-stu-id="38944-153">Id referencing a Face List.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.deleteMethod_1
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="38944-154">Supprimer une liste de face existante en fonction de faceListId.</span><span class="sxs-lookup"><span data-stu-id="38944-154">Delete an existing face list according to faceListId.</span></span> <span data-ttu-id="38944-155">Conservées face images dans la liste de visages seront également supprimées.</span><span class="sxs-lookup"><span data-stu-id="38944-155">Persisted face images in the face list will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(faceListId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.deleteMethod_2
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="38944-156">Supprimer une liste de face existante en fonction de faceListId.</span><span class="sxs-lookup"><span data-stu-id="38944-156">Delete an existing face list according to faceListId.</span></span> <span data-ttu-id="38944-157">Conservées face images dans la liste de visages seront également supprimées.</span><span class="sxs-lookup"><span data-stu-id="38944-157">Persisted face images in the face list will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(faceListId: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.deleteMethodWithHttpOperationResponse
  name: deleteMethodWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="38944-158">Supprimer une liste de face existante en fonction de faceListId.</span><span class="sxs-lookup"><span data-stu-id="38944-158">Delete an existing face list according to faceListId.</span></span> <span data-ttu-id="38944-159">Conservées face images dans la liste de visages seront également supprimées.</span><span class="sxs-lookup"><span data-stu-id="38944-159">Persisted face images in the face list will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethodWithHttpOperationResponse(faceListId: string, options?: function)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="38944-160">ID de référence à une liste de visages.</span><span class="sxs-lookup"><span data-stu-id="38944-160">Id referencing a Face List.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.get_1
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="38944-161">Récupérer les informations d’une liste de visages.</span><span class="sxs-lookup"><span data-stu-id="38944-161">Retrieve a face list's information.</span></span>
  syntax:
    content: 'function get(faceListId: string, callback: ServiceCallback<GetFaceListResult>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.GetFaceListResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.GetFaceListResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.get_2
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="38944-162">Récupérer les informations d’une liste de visages.</span><span class="sxs-lookup"><span data-stu-id="38944-162">Retrieve a face list's information.</span></span>
  syntax:
    content: 'function get(faceListId: string, options: function, callback: ServiceCallback<GetFaceListResult>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.GetFaceListResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.GetFaceListResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.get
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="38944-163">Récupérer les informations d’une liste de visages.</span><span class="sxs-lookup"><span data-stu-id="38944-163">Retrieve a face list's information.</span></span>
  syntax:
    content: 'function get(faceListId: string, options?: function)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="38944-164">ID de référence à une liste de visages.</span><span class="sxs-lookup"><span data-stu-id="38944-164">Id referencing a Face List.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.GetFaceListResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.getWithHttpOperationResponse
  name: getWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="38944-165">Récupérer les informations d’une liste de visages.</span><span class="sxs-lookup"><span data-stu-id="38944-165">Retrieve a face list's information.</span></span>
  syntax:
    content: 'function getWithHttpOperationResponse(faceListId: string, options?: function)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="38944-166">ID de référence à une liste de visages.</span><span class="sxs-lookup"><span data-stu-id="38944-166">Id referencing a Face List.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.GetFaceListResult>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.list
  name: list
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="38944-167">Récupérer des informations sur toutes les listes de visages existant.</span><span class="sxs-lookup"><span data-stu-id="38944-167">Retrieve information about all existing face lists.</span></span> <span data-ttu-id="38944-168">Seront affichera uniquement faceListId, nom et userData.</span><span class="sxs-lookup"><span data-stu-id="38944-168">Only faceListId, name and userData will be returned.</span></span>
  syntax:
    content: 'function list(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.GetFaceListResult[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.list_1
  name: list
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="38944-169">Récupérer des informations sur toutes les listes de visages existant.</span><span class="sxs-lookup"><span data-stu-id="38944-169">Retrieve information about all existing face lists.</span></span> <span data-ttu-id="38944-170">Seront affichera uniquement faceListId, nom et userData.</span><span class="sxs-lookup"><span data-stu-id="38944-170">Only faceListId, name and userData will be returned.</span></span>
  syntax:
    content: 'function list(callback: ServiceCallback<GetFaceListResult[]>)'
    parameters:
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.GetFaceListResult[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.GetFaceListResult[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.list_2
  name: list
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="38944-171">Récupérer des informations sur toutes les listes de visages existant.</span><span class="sxs-lookup"><span data-stu-id="38944-171">Retrieve information about all existing face lists.</span></span> <span data-ttu-id="38944-172">Seront affichera uniquement faceListId, nom et userData.</span><span class="sxs-lookup"><span data-stu-id="38944-172">Only faceListId, name and userData will be returned.</span></span>
  syntax:
    content: 'function list(options: function, callback: ServiceCallback<GetFaceListResult[]>)'
    parameters:
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.GetFaceListResult[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.GetFaceListResult[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.listWithHttpOperationResponse
  name: listWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="38944-173">Récupérer des informations sur toutes les listes de visages existant.</span><span class="sxs-lookup"><span data-stu-id="38944-173">Retrieve information about all existing face lists.</span></span> <span data-ttu-id="38944-174">Seront affichera uniquement faceListId, nom et userData.</span><span class="sxs-lookup"><span data-stu-id="38944-174">Only faceListId, name and userData will be returned.</span></span>
  syntax:
    content: 'function listWithHttpOperationResponse(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.GetFaceListResult[]>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.update
  name: update
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="38944-175">Mettre à jour les informations d’une liste de visages.</span><span class="sxs-lookup"><span data-stu-id="38944-175">Update information of a face list.</span></span>
  syntax:
    content: 'function update(faceListId: string, options?: function)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="38944-176">ID de référence à une liste de visages.</span><span class="sxs-lookup"><span data-stu-id="38944-176">Id referencing a Face List.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.update_1
  name: update
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="38944-177">Mettre à jour les informations d’une liste de visages.</span><span class="sxs-lookup"><span data-stu-id="38944-177">Update information of a face list.</span></span>
  syntax:
    content: 'function update(faceListId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.update_2
  name: update
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="38944-178">Mettre à jour les informations d’une liste de visages.</span><span class="sxs-lookup"><span data-stu-id="38944-178">Update information of a face list.</span></span>
  syntax:
    content: 'function update(faceListId: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceList.updateWithHttpOperationResponse
  name: updateWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="38944-179">Mettre à jour les informations d’une liste de visages.</span><span class="sxs-lookup"><span data-stu-id="38944-179">Update information of a face list.</span></span>
  syntax:
    content: 'function updateWithHttpOperationResponse(faceListId: string, options?: function)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="38944-180">ID de référence à une liste de visages.</span><span class="sxs-lookup"><span data-stu-id="38944-180">Id referencing a Face List.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
references:
- uid: Promise<azure-cognitiveservices-face.PersistedFaceResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: PersistedFaceResult
    fullName: PersistedFaceResult
    uid: azure-cognitiveservices-face.PersistedFaceResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.PersistedFaceResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: PersistedFaceResult
    fullName: PersistedFaceResult
    uid: azure-cognitiveservices-face.PersistedFaceResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFaceResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: PersistedFaceResult
    fullName: PersistedFaceResult
    uid: azure-cognitiveservices-face.PersistedFaceResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-face.GetFaceListResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: GetFaceListResult
    fullName: GetFaceListResult
    uid: azure-cognitiveservices-face.GetFaceListResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.GetFaceListResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: GetFaceListResult
    fullName: GetFaceListResult
    uid: azure-cognitiveservices-face.GetFaceListResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.GetFaceListResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: GetFaceListResult
    fullName: GetFaceListResult
    uid: azure-cognitiveservices-face.GetFaceListResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-face.GetFaceListResult[]>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: GetFaceListResult
    fullName: GetFaceListResult
    uid: azure-cognitiveservices-face.GetFaceListResult
  - name: '[]>'
    fullName: '[]>'
- uid: ServiceCallback<azure-cognitiveservices-face.GetFaceListResult[]>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: GetFaceListResult
    fullName: GetFaceListResult
    uid: azure-cognitiveservices-face.GetFaceListResult
  - name: '[]>'
    fullName: '[]>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.GetFaceListResult[]>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: GetFaceListResult
    fullName: GetFaceListResult
    uid: azure-cognitiveservices-face.GetFaceListResult
  - name: '[]>>'
    fullName: '[]>>'
