### YamlMime:UniversalReference
ms.openlocfilehash: e2d905a200190804df26d4317afebcd13d535944
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 12/13/2018
ms.locfileid: "52168484"
items:
- uid: azure-cognitiveservices-face.FaceListOperations
  name: FaceListOperations
  fullName: FaceListOperations
  children:
  - azure-cognitiveservices-face.FaceListOperations.addFaceFromStream
  - azure-cognitiveservices-face.FaceListOperations.addFaceFromStream_2
  - azure-cognitiveservices-face.FaceListOperations.addFaceFromStream_1
  - azure-cognitiveservices-face.FaceListOperations.addFaceFromStreamWithHttpOperationResponse
  - azure-cognitiveservices-face.FaceListOperations.addFaceFromUrl
  - azure-cognitiveservices-face.FaceListOperations.addFaceFromUrl_2
  - azure-cognitiveservices-face.FaceListOperations.addFaceFromUrl_1
  - azure-cognitiveservices-face.FaceListOperations.addFaceFromUrlWithHttpOperationResponse
  - azure-cognitiveservices-face.FaceListOperations.create
  - azure-cognitiveservices-face.FaceListOperations.create_2
  - azure-cognitiveservices-face.FaceListOperations.create_1
  - azure-cognitiveservices-face.FaceListOperations.createWithHttpOperationResponse
  - azure-cognitiveservices-face.FaceListOperations.deleteFace
  - azure-cognitiveservices-face.FaceListOperations.deleteFace_2
  - azure-cognitiveservices-face.FaceListOperations.deleteFace_1
  - azure-cognitiveservices-face.FaceListOperations.deleteFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.FaceListOperations.deleteMethod
  - azure-cognitiveservices-face.FaceListOperations.deleteMethod_2
  - azure-cognitiveservices-face.FaceListOperations.deleteMethod_1
  - azure-cognitiveservices-face.FaceListOperations.deleteMethodWithHttpOperationResponse
  - azure-cognitiveservices-face.FaceListOperations.get
  - azure-cognitiveservices-face.FaceListOperations.get_2
  - azure-cognitiveservices-face.FaceListOperations.get_1
  - azure-cognitiveservices-face.FaceListOperations.getWithHttpOperationResponse
  - azure-cognitiveservices-face.FaceListOperations.list
  - azure-cognitiveservices-face.FaceListOperations.list_2
  - azure-cognitiveservices-face.FaceListOperations.list_1
  - azure-cognitiveservices-face.FaceListOperations.listWithHttpOperationResponse
  - azure-cognitiveservices-face.FaceListOperations.update
  - azure-cognitiveservices-face.FaceListOperations.update_2
  - azure-cognitiveservices-face.FaceListOperations.update_1
  - azure-cognitiveservices-face.FaceListOperations.updateWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.addFaceFromStream
  name: addFaceFromStream(string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="de7d5-101">Ajouter une face à une liste de visages.</span><span class="sxs-lookup"><span data-stu-id="de7d5-101">Add a face to a face list.</span></span> <span data-ttu-id="de7d5-102">Le visage d’entrée est spécifié en tant qu’image avec un rectangle targetFace.</span><span class="sxs-lookup"><span data-stu-id="de7d5-102">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="de7d5-103">Elle retourne un persistedFaceId représentant la face ajoutée et persistedFaceId n’expirent pas.</span><span class="sxs-lookup"><span data-stu-id="de7d5-103">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromStream(faceListId: string, image: stream.Readable, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="de7d5-104">ID faisant référence à une liste de visages particulier.</span><span class="sxs-lookup"><span data-stu-id="de7d5-104">Id referencing a particular face list.</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="de7d5-105">Un flux d’image.</span><span class="sxs-lookup"><span data-stu-id="de7d5-105">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.addFaceFromStream_2
  name: addFaceFromStream(string, stream.Readable, Object, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="de7d5-106">Ajouter une face à une liste de visages.</span><span class="sxs-lookup"><span data-stu-id="de7d5-106">Add a face to a face list.</span></span> <span data-ttu-id="de7d5-107">Le visage d’entrée est spécifié en tant qu’image avec un rectangle targetFace.</span><span class="sxs-lookup"><span data-stu-id="de7d5-107">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="de7d5-108">Elle retourne un persistedFaceId représentant la face ajoutée et persistedFaceId n’expirent pas.</span><span class="sxs-lookup"><span data-stu-id="de7d5-108">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromStream(faceListId: string, image: stream.Readable, options: Object, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.addFaceFromStream_1
  name: addFaceFromStream(string, stream.Readable, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="de7d5-109">Ajouter une face à une liste de visages.</span><span class="sxs-lookup"><span data-stu-id="de7d5-109">Add a face to a face list.</span></span> <span data-ttu-id="de7d5-110">Le visage d’entrée est spécifié en tant qu’image avec un rectangle targetFace.</span><span class="sxs-lookup"><span data-stu-id="de7d5-110">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="de7d5-111">Elle retourne un persistedFaceId représentant la face ajoutée et persistedFaceId n’expirent pas.</span><span class="sxs-lookup"><span data-stu-id="de7d5-111">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromStream(faceListId: string, image: stream.Readable, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.addFaceFromStreamWithHttpOperationResponse
  name: addFaceFromStreamWithHttpOperationResponse(string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="de7d5-112">Ajouter une face à une liste de visages.</span><span class="sxs-lookup"><span data-stu-id="de7d5-112">Add a face to a face list.</span></span> <span data-ttu-id="de7d5-113">Le visage d’entrée est spécifié en tant qu’image avec un rectangle targetFace.</span><span class="sxs-lookup"><span data-stu-id="de7d5-113">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="de7d5-114">Elle retourne un persistedFaceId représentant la face ajoutée et persistedFaceId n’expirent pas.</span><span class="sxs-lookup"><span data-stu-id="de7d5-114">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromStreamWithHttpOperationResponse(faceListId: string, image: stream.Readable, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="de7d5-115">ID faisant référence à une liste de visages particulier.</span><span class="sxs-lookup"><span data-stu-id="de7d5-115">Id referencing a particular face list.</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="de7d5-116">Un flux d’image.</span><span class="sxs-lookup"><span data-stu-id="de7d5-116">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.addFaceFromUrl
  name: addFaceFromUrl(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="de7d5-117">Ajouter une face à une liste de visages.</span><span class="sxs-lookup"><span data-stu-id="de7d5-117">Add a face to a face list.</span></span> <span data-ttu-id="de7d5-118">Le visage d’entrée est spécifié en tant qu’image avec un rectangle targetFace.</span><span class="sxs-lookup"><span data-stu-id="de7d5-118">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="de7d5-119">Elle retourne un persistedFaceId représentant la face ajoutée et persistedFaceId n’expirent pas.</span><span class="sxs-lookup"><span data-stu-id="de7d5-119">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromUrl(faceListId: string, url: string, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="de7d5-120">ID faisant référence à une liste de visages particulier.</span><span class="sxs-lookup"><span data-stu-id="de7d5-120">Id referencing a particular face list.</span></span>
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="de7d5-121">URL accessible publiquement d’une image</span><span class="sxs-lookup"><span data-stu-id="de7d5-121">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.addFaceFromUrl_2
  name: addFaceFromUrl(string, string, Object, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="de7d5-122">Ajouter une face à une liste de visages.</span><span class="sxs-lookup"><span data-stu-id="de7d5-122">Add a face to a face list.</span></span> <span data-ttu-id="de7d5-123">Le visage d’entrée est spécifié en tant qu’image avec un rectangle targetFace.</span><span class="sxs-lookup"><span data-stu-id="de7d5-123">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="de7d5-124">Elle retourne un persistedFaceId représentant la face ajoutée et persistedFaceId n’expirent pas.</span><span class="sxs-lookup"><span data-stu-id="de7d5-124">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromUrl(faceListId: string, url: string, options: Object, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.addFaceFromUrl_1
  name: addFaceFromUrl(string, string, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="de7d5-125">Ajouter une face à une liste de visages.</span><span class="sxs-lookup"><span data-stu-id="de7d5-125">Add a face to a face list.</span></span> <span data-ttu-id="de7d5-126">Le visage d’entrée est spécifié en tant qu’image avec un rectangle targetFace.</span><span class="sxs-lookup"><span data-stu-id="de7d5-126">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="de7d5-127">Elle retourne un persistedFaceId représentant la face ajoutée et persistedFaceId n’expirent pas.</span><span class="sxs-lookup"><span data-stu-id="de7d5-127">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromUrl(faceListId: string, url: string, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.addFaceFromUrlWithHttpOperationResponse
  name: addFaceFromUrlWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="de7d5-128">Ajouter une face à une liste de visages.</span><span class="sxs-lookup"><span data-stu-id="de7d5-128">Add a face to a face list.</span></span> <span data-ttu-id="de7d5-129">Le visage d’entrée est spécifié en tant qu’image avec un rectangle targetFace.</span><span class="sxs-lookup"><span data-stu-id="de7d5-129">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="de7d5-130">Elle retourne un persistedFaceId représentant la face ajoutée et persistedFaceId n’expirent pas.</span><span class="sxs-lookup"><span data-stu-id="de7d5-130">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromUrlWithHttpOperationResponse(faceListId: string, url: string, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="de7d5-131">ID faisant référence à une liste de visages particulier.</span><span class="sxs-lookup"><span data-stu-id="de7d5-131">Id referencing a particular face list.</span></span>
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="de7d5-132">URL accessible publiquement d’une image</span><span class="sxs-lookup"><span data-stu-id="de7d5-132">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.create
  name: create(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="de7d5-133">Créer une liste vide de face.</span><span class="sxs-lookup"><span data-stu-id="de7d5-133">Create an empty face list.</span></span> <span data-ttu-id="de7d5-134">Jusqu'à 64 visages listes peuvent exister dans un seul abonnement.</span><span class="sxs-lookup"><span data-stu-id="de7d5-134">Up to 64 face lists are allowed to exist in one subscription.</span></span>
  syntax:
    content: 'function create(faceListId: string, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="de7d5-135">ID faisant référence à une liste de visages particulier.</span><span class="sxs-lookup"><span data-stu-id="de7d5-135">Id referencing a particular face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.create_2
  name: create(string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="de7d5-136">Créer une liste vide de face.</span><span class="sxs-lookup"><span data-stu-id="de7d5-136">Create an empty face list.</span></span> <span data-ttu-id="de7d5-137">Jusqu'à 64 visages listes peuvent exister dans un seul abonnement.</span><span class="sxs-lookup"><span data-stu-id="de7d5-137">Up to 64 face lists are allowed to exist in one subscription.</span></span>
  syntax:
    content: 'function create(faceListId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.create_1
  name: create(string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="de7d5-138">Créer une liste vide de face.</span><span class="sxs-lookup"><span data-stu-id="de7d5-138">Create an empty face list.</span></span> <span data-ttu-id="de7d5-139">Jusqu'à 64 visages listes peuvent exister dans un seul abonnement.</span><span class="sxs-lookup"><span data-stu-id="de7d5-139">Up to 64 face lists are allowed to exist in one subscription.</span></span>
  syntax:
    content: 'function create(faceListId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.createWithHttpOperationResponse
  name: createWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="de7d5-140">Créer une liste vide de face.</span><span class="sxs-lookup"><span data-stu-id="de7d5-140">Create an empty face list.</span></span> <span data-ttu-id="de7d5-141">Jusqu'à 64 visages listes peuvent exister dans un seul abonnement.</span><span class="sxs-lookup"><span data-stu-id="de7d5-141">Up to 64 face lists are allowed to exist in one subscription.</span></span>
  syntax:
    content: 'function createWithHttpOperationResponse(faceListId: string, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="de7d5-142">ID faisant référence à une liste de visages particulier.</span><span class="sxs-lookup"><span data-stu-id="de7d5-142">Id referencing a particular face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.deleteFace
  name: deleteFace(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="de7d5-143">Supprimer un visage existant d’une liste de visage (donnée par un persisitedFaceId et un faceListId).</span><span class="sxs-lookup"><span data-stu-id="de7d5-143">Delete an existing face from a face list (given by a persisitedFaceId and a faceListId).</span></span> <span data-ttu-id="de7d5-144">Image persistante lié à la face est également supprimé.</span><span class="sxs-lookup"><span data-stu-id="de7d5-144">Persisted image related to the face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(faceListId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="de7d5-145">ID faisant référence à une liste de visages particulier.</span><span class="sxs-lookup"><span data-stu-id="de7d5-145">Id referencing a particular face list.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="de7d5-146">ID faisant référence à un persistedFaceId particulier d’un visage existant.</span><span class="sxs-lookup"><span data-stu-id="de7d5-146">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.deleteFace_2
  name: deleteFace(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="de7d5-147">Supprimer un visage existant d’une liste de visage (donnée par un persisitedFaceId et un faceListId).</span><span class="sxs-lookup"><span data-stu-id="de7d5-147">Delete an existing face from a face list (given by a persisitedFaceId and a faceListId).</span></span> <span data-ttu-id="de7d5-148">Image persistante lié à la face est également supprimé.</span><span class="sxs-lookup"><span data-stu-id="de7d5-148">Persisted image related to the face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(faceListId: string, persistedFaceId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.deleteFace_1
  name: deleteFace(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="de7d5-149">Supprimer un visage existant d’une liste de visage (donnée par un persisitedFaceId et un faceListId).</span><span class="sxs-lookup"><span data-stu-id="de7d5-149">Delete an existing face from a face list (given by a persisitedFaceId and a faceListId).</span></span> <span data-ttu-id="de7d5-150">Image persistante lié à la face est également supprimé.</span><span class="sxs-lookup"><span data-stu-id="de7d5-150">Persisted image related to the face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(faceListId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.deleteFaceWithHttpOperationResponse
  name: deleteFaceWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="de7d5-151">Supprimer un visage existant d’une liste de visage (donnée par un persisitedFaceId et un faceListId).</span><span class="sxs-lookup"><span data-stu-id="de7d5-151">Delete an existing face from a face list (given by a persisitedFaceId and a faceListId).</span></span> <span data-ttu-id="de7d5-152">Image persistante lié à la face est également supprimé.</span><span class="sxs-lookup"><span data-stu-id="de7d5-152">Persisted image related to the face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFaceWithHttpOperationResponse(faceListId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="de7d5-153">ID faisant référence à une liste de visages particulier.</span><span class="sxs-lookup"><span data-stu-id="de7d5-153">Id referencing a particular face list.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="de7d5-154">ID faisant référence à un persistedFaceId particulier d’un visage existant.</span><span class="sxs-lookup"><span data-stu-id="de7d5-154">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.deleteMethod
  name: deleteMethod(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="de7d5-155">Supprimer une liste de face existante en fonction de faceListId.</span><span class="sxs-lookup"><span data-stu-id="de7d5-155">Delete an existing face list according to faceListId.</span></span> <span data-ttu-id="de7d5-156">Conservées face images dans la liste de visages seront également supprimées.</span><span class="sxs-lookup"><span data-stu-id="de7d5-156">Persisted face images in the face list will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(faceListId: string, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="de7d5-157">ID faisant référence à une liste de visages particulier.</span><span class="sxs-lookup"><span data-stu-id="de7d5-157">Id referencing a particular face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.deleteMethod_2
  name: deleteMethod(string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="de7d5-158">Supprimer une liste de face existante en fonction de faceListId.</span><span class="sxs-lookup"><span data-stu-id="de7d5-158">Delete an existing face list according to faceListId.</span></span> <span data-ttu-id="de7d5-159">Conservées face images dans la liste de visages seront également supprimées.</span><span class="sxs-lookup"><span data-stu-id="de7d5-159">Persisted face images in the face list will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(faceListId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.deleteMethod_1
  name: deleteMethod(string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="de7d5-160">Supprimer une liste de face existante en fonction de faceListId.</span><span class="sxs-lookup"><span data-stu-id="de7d5-160">Delete an existing face list according to faceListId.</span></span> <span data-ttu-id="de7d5-161">Conservées face images dans la liste de visages seront également supprimées.</span><span class="sxs-lookup"><span data-stu-id="de7d5-161">Persisted face images in the face list will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(faceListId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.deleteMethodWithHttpOperationResponse
  name: deleteMethodWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="de7d5-162">Supprimer une liste de face existante en fonction de faceListId.</span><span class="sxs-lookup"><span data-stu-id="de7d5-162">Delete an existing face list according to faceListId.</span></span> <span data-ttu-id="de7d5-163">Conservées face images dans la liste de visages seront également supprimées.</span><span class="sxs-lookup"><span data-stu-id="de7d5-163">Persisted face images in the face list will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethodWithHttpOperationResponse(faceListId: string, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="de7d5-164">ID faisant référence à une liste de visages particulier.</span><span class="sxs-lookup"><span data-stu-id="de7d5-164">Id referencing a particular face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.get
  name: get(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="de7d5-165">Récupérer les informations d’une liste de visages.</span><span class="sxs-lookup"><span data-stu-id="de7d5-165">Retrieve a face list's information.</span></span>
  syntax:
    content: 'function get(faceListId: string, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="de7d5-166">ID faisant référence à une liste de visages particulier.</span><span class="sxs-lookup"><span data-stu-id="de7d5-166">Id referencing a particular face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.FaceList>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.get_2
  name: get(string, Object, ServiceCallback<FaceList>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="de7d5-167">Récupérer les informations d’une liste de visages.</span><span class="sxs-lookup"><span data-stu-id="de7d5-167">Retrieve a face list's information.</span></span>
  syntax:
    content: 'function get(faceListId: string, options: Object, callback: ServiceCallback<FaceList>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.FaceList>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.FaceList>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.get_1
  name: get(string, ServiceCallback<FaceList>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="de7d5-168">Récupérer les informations d’une liste de visages.</span><span class="sxs-lookup"><span data-stu-id="de7d5-168">Retrieve a face list's information.</span></span>
  syntax:
    content: 'function get(faceListId: string, callback: ServiceCallback<FaceList>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.FaceList>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.FaceList>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.getWithHttpOperationResponse
  name: getWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="de7d5-169">Récupérer les informations d’une liste de visages.</span><span class="sxs-lookup"><span data-stu-id="de7d5-169">Retrieve a face list's information.</span></span>
  syntax:
    content: 'function getWithHttpOperationResponse(faceListId: string, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="de7d5-170">ID faisant référence à une liste de visages particulier.</span><span class="sxs-lookup"><span data-stu-id="de7d5-170">Id referencing a particular face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.FaceList>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.list
  name: list(Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="de7d5-171">Récupérer des informations sur toutes les listes de visages existant.</span><span class="sxs-lookup"><span data-stu-id="de7d5-171">Retrieve information about all existing face lists.</span></span> <span data-ttu-id="de7d5-172">Seront affichera uniquement faceListId, nom et userData.</span><span class="sxs-lookup"><span data-stu-id="de7d5-172">Only faceListId, name and userData will be returned.</span></span>
  syntax:
    content: 'function list(options?: Object)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.FaceList[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.list_2
  name: list(Object, ServiceCallback<FaceList[]>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="de7d5-173">Récupérer des informations sur toutes les listes de visages existant.</span><span class="sxs-lookup"><span data-stu-id="de7d5-173">Retrieve information about all existing face lists.</span></span> <span data-ttu-id="de7d5-174">Seront affichera uniquement faceListId, nom et userData.</span><span class="sxs-lookup"><span data-stu-id="de7d5-174">Only faceListId, name and userData will be returned.</span></span>
  syntax:
    content: 'function list(options: Object, callback: ServiceCallback<FaceList[]>)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.FaceList[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.FaceList[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.list_1
  name: list(ServiceCallback<FaceList[]>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="de7d5-175">Récupérer des informations sur toutes les listes de visages existant.</span><span class="sxs-lookup"><span data-stu-id="de7d5-175">Retrieve information about all existing face lists.</span></span> <span data-ttu-id="de7d5-176">Seront affichera uniquement faceListId, nom et userData.</span><span class="sxs-lookup"><span data-stu-id="de7d5-176">Only faceListId, name and userData will be returned.</span></span>
  syntax:
    content: 'function list(callback: ServiceCallback<FaceList[]>)'
    parameters:
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.FaceList[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.FaceList[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.listWithHttpOperationResponse
  name: listWithHttpOperationResponse(Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="de7d5-177">Récupérer des informations sur toutes les listes de visages existant.</span><span class="sxs-lookup"><span data-stu-id="de7d5-177">Retrieve information about all existing face lists.</span></span> <span data-ttu-id="de7d5-178">Seront affichera uniquement faceListId, nom et userData.</span><span class="sxs-lookup"><span data-stu-id="de7d5-178">Only faceListId, name and userData will be returned.</span></span>
  syntax:
    content: 'function listWithHttpOperationResponse(options?: Object)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.FaceList[]>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.update
  name: update(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="de7d5-179">Mettre à jour les informations d’une liste de visages.</span><span class="sxs-lookup"><span data-stu-id="de7d5-179">Update information of a face list.</span></span>
  syntax:
    content: 'function update(faceListId: string, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="de7d5-180">ID faisant référence à une liste de visages particulier.</span><span class="sxs-lookup"><span data-stu-id="de7d5-180">Id referencing a particular face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.update_2
  name: update(string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="de7d5-181">Mettre à jour les informations d’une liste de visages.</span><span class="sxs-lookup"><span data-stu-id="de7d5-181">Update information of a face list.</span></span>
  syntax:
    content: 'function update(faceListId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.update_1
  name: update(string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="de7d5-182">Mettre à jour les informations d’une liste de visages.</span><span class="sxs-lookup"><span data-stu-id="de7d5-182">Update information of a face list.</span></span>
  syntax:
    content: 'function update(faceListId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: faceListId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.FaceListOperations.updateWithHttpOperationResponse
  name: updateWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="de7d5-183">Mettre à jour les informations d’une liste de visages.</span><span class="sxs-lookup"><span data-stu-id="de7d5-183">Update information of a face list.</span></span>
  syntax:
    content: 'function updateWithHttpOperationResponse(faceListId: string, options?: Object)'
    parameters:
    - id: faceListId
      type:
      - string
      description: >
        <span data-ttu-id="de7d5-184">ID faisant référence à une liste de visages particulier.</span><span class="sxs-lookup"><span data-stu-id="de7d5-184">Id referencing a particular face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
references:
- uid: Promise<azure-cognitiveservices-face.PersistedFace>
  name: PersistedFace>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: PersistedFace
    fullName: PersistedFace
    uid: azure-cognitiveservices-face.PersistedFace
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.PersistedFace>
  name: PersistedFace>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: PersistedFace
    fullName: PersistedFace
    uid: azure-cognitiveservices-face.PersistedFace
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace>>
  name: PersistedFace>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: PersistedFace
    fullName: PersistedFace
    uid: azure-cognitiveservices-face.PersistedFace
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-face.FaceList>
  name: FaceList>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: FaceList
    fullName: FaceList
    uid: azure-cognitiveservices-face.FaceList
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.FaceList>
  name: FaceList>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: FaceList
    fullName: FaceList
    uid: azure-cognitiveservices-face.FaceList
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.FaceList>>
  name: FaceList>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: FaceList
    fullName: FaceList
    uid: azure-cognitiveservices-face.FaceList
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-face.FaceList[]>
  name: FaceList[]>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: FaceList
    fullName: FaceList
    uid: azure-cognitiveservices-face.FaceList
  - name: '[]>'
    fullName: '[]>'
- uid: ServiceCallback<azure-cognitiveservices-face.FaceList[]>
  name: FaceList[]>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: FaceList
    fullName: FaceList
    uid: azure-cognitiveservices-face.FaceList
  - name: '[]>'
    fullName: '[]>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.FaceList[]>>
  name: FaceList[]>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: FaceList
    fullName: FaceList
    uid: azure-cognitiveservices-face.FaceList
  - name: '[]>>'
    fullName: '[]>>'
