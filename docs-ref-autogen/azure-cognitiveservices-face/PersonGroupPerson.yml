### YamlMime:UniversalReference
ms.openlocfilehash: b668012a360630506b3de5e9274fb380c44683f9
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 12/13/2018
ms.locfileid: "52170004"
items:
- uid: azure-cognitiveservices-face.PersonGroupPerson
  name: PersonGroupPerson
  fullName: PersonGroupPerson
  children:
  - azure-cognitiveservices-face.PersonGroupPerson.addFaceFromStream
  - azure-cognitiveservices-face.PersonGroupPerson.addFaceFromStream_2
  - azure-cognitiveservices-face.PersonGroupPerson.addFaceFromStream_1
  - azure-cognitiveservices-face.PersonGroupPerson.addFaceFromStreamWithHttpOperationResponse
  - azure-cognitiveservices-face.PersonGroupPerson.addFaceFromUrl
  - azure-cognitiveservices-face.PersonGroupPerson.addFaceFromUrl_2
  - azure-cognitiveservices-face.PersonGroupPerson.addFaceFromUrl_1
  - azure-cognitiveservices-face.PersonGroupPerson.addFaceFromUrlWithHttpOperationResponse
  - azure-cognitiveservices-face.PersonGroupPerson.create
  - azure-cognitiveservices-face.PersonGroupPerson.create_2
  - azure-cognitiveservices-face.PersonGroupPerson.create_1
  - azure-cognitiveservices-face.PersonGroupPerson.createWithHttpOperationResponse
  - azure-cognitiveservices-face.PersonGroupPerson.deleteFace
  - azure-cognitiveservices-face.PersonGroupPerson.deleteFace_2
  - azure-cognitiveservices-face.PersonGroupPerson.deleteFace_1
  - azure-cognitiveservices-face.PersonGroupPerson.deleteFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.PersonGroupPerson.deleteMethod
  - azure-cognitiveservices-face.PersonGroupPerson.deleteMethod_2
  - azure-cognitiveservices-face.PersonGroupPerson.deleteMethod_1
  - azure-cognitiveservices-face.PersonGroupPerson.deleteMethodWithHttpOperationResponse
  - azure-cognitiveservices-face.PersonGroupPerson.get
  - azure-cognitiveservices-face.PersonGroupPerson.get_2
  - azure-cognitiveservices-face.PersonGroupPerson.get_1
  - azure-cognitiveservices-face.PersonGroupPerson.getFace
  - azure-cognitiveservices-face.PersonGroupPerson.getFace_2
  - azure-cognitiveservices-face.PersonGroupPerson.getFace_1
  - azure-cognitiveservices-face.PersonGroupPerson.getFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.PersonGroupPerson.getWithHttpOperationResponse
  - azure-cognitiveservices-face.PersonGroupPerson.list
  - azure-cognitiveservices-face.PersonGroupPerson.list_2
  - azure-cognitiveservices-face.PersonGroupPerson.list_1
  - azure-cognitiveservices-face.PersonGroupPerson.listWithHttpOperationResponse
  - azure-cognitiveservices-face.PersonGroupPerson.update
  - azure-cognitiveservices-face.PersonGroupPerson.update_2
  - azure-cognitiveservices-face.PersonGroupPerson.update_1
  - azure-cognitiveservices-face.PersonGroupPerson.updateFace
  - azure-cognitiveservices-face.PersonGroupPerson.updateFace_2
  - azure-cognitiveservices-face.PersonGroupPerson.updateFace_1
  - azure-cognitiveservices-face.PersonGroupPerson.updateFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.PersonGroupPerson.updateWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.addFaceFromStream
  name: addFaceFromStream(string, string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="58d15-101">Ajouter un visage représentatif à une personne pour l’identification.</span><span class="sxs-lookup"><span data-stu-id="58d15-101">Add a representative face to a person for identification.</span></span> <span data-ttu-id="58d15-102">Le visage d’entrée est spécifié en tant qu’image avec un rectangle targetFace.</span><span class="sxs-lookup"><span data-stu-id="58d15-102">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addFaceFromStream(personGroupId: string, personId: string, image: stream.Readable, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="58d15-103">ID faisant référence à un groupe de personnes particulier.</span><span class="sxs-lookup"><span data-stu-id="58d15-103">Id referencing a particular person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="58d15-104">ID faisant référence à une personne particulière.</span><span class="sxs-lookup"><span data-stu-id="58d15-104">Id referencing a particular person.</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="58d15-105">Un flux d’image.</span><span class="sxs-lookup"><span data-stu-id="58d15-105">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.addFaceFromStream_2
  name: addFaceFromStream(string, string, stream.Readable, Object, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="58d15-106">Ajouter un visage représentatif à une personne pour l’identification.</span><span class="sxs-lookup"><span data-stu-id="58d15-106">Add a representative face to a person for identification.</span></span> <span data-ttu-id="58d15-107">Le visage d’entrée est spécifié en tant qu’image avec un rectangle targetFace.</span><span class="sxs-lookup"><span data-stu-id="58d15-107">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addFaceFromStream(personGroupId: string, personId: string, image: stream.Readable, options: Object, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.addFaceFromStream_1
  name: addFaceFromStream(string, string, stream.Readable, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="58d15-108">Ajouter un visage représentatif à une personne pour l’identification.</span><span class="sxs-lookup"><span data-stu-id="58d15-108">Add a representative face to a person for identification.</span></span> <span data-ttu-id="58d15-109">Le visage d’entrée est spécifié en tant qu’image avec un rectangle targetFace.</span><span class="sxs-lookup"><span data-stu-id="58d15-109">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addFaceFromStream(personGroupId: string, personId: string, image: stream.Readable, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.addFaceFromStreamWithHttpOperationResponse
  name: addFaceFromStreamWithHttpOperationResponse(string, string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="58d15-110">Ajouter un visage représentatif à une personne pour l’identification.</span><span class="sxs-lookup"><span data-stu-id="58d15-110">Add a representative face to a person for identification.</span></span> <span data-ttu-id="58d15-111">Le visage d’entrée est spécifié en tant qu’image avec un rectangle targetFace.</span><span class="sxs-lookup"><span data-stu-id="58d15-111">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addFaceFromStreamWithHttpOperationResponse(personGroupId: string, personId: string, image: stream.Readable, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="58d15-112">ID faisant référence à un groupe de personnes particulier.</span><span class="sxs-lookup"><span data-stu-id="58d15-112">Id referencing a particular person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="58d15-113">ID faisant référence à une personne particulière.</span><span class="sxs-lookup"><span data-stu-id="58d15-113">Id referencing a particular person.</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="58d15-114">Un flux d’image.</span><span class="sxs-lookup"><span data-stu-id="58d15-114">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.addFaceFromUrl
  name: addFaceFromUrl(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="58d15-115">Ajouter un visage représentatif à une personne pour l’identification.</span><span class="sxs-lookup"><span data-stu-id="58d15-115">Add a representative face to a person for identification.</span></span> <span data-ttu-id="58d15-116">Le visage d’entrée est spécifié en tant qu’image avec un rectangle targetFace.</span><span class="sxs-lookup"><span data-stu-id="58d15-116">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addFaceFromUrl(personGroupId: string, personId: string, url: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="58d15-117">ID faisant référence à un groupe de personnes particulier.</span><span class="sxs-lookup"><span data-stu-id="58d15-117">Id referencing a particular person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="58d15-118">ID faisant référence à une personne particulière.</span><span class="sxs-lookup"><span data-stu-id="58d15-118">Id referencing a particular person.</span></span>
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="58d15-119">URL accessible publiquement d’une image</span><span class="sxs-lookup"><span data-stu-id="58d15-119">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.addFaceFromUrl_2
  name: addFaceFromUrl(string, string, string, Object, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="58d15-120">Ajouter un visage représentatif à une personne pour l’identification.</span><span class="sxs-lookup"><span data-stu-id="58d15-120">Add a representative face to a person for identification.</span></span> <span data-ttu-id="58d15-121">Le visage d’entrée est spécifié en tant qu’image avec un rectangle targetFace.</span><span class="sxs-lookup"><span data-stu-id="58d15-121">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addFaceFromUrl(personGroupId: string, personId: string, url: string, options: Object, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.addFaceFromUrl_1
  name: addFaceFromUrl(string, string, string, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="58d15-122">Ajouter un visage représentatif à une personne pour l’identification.</span><span class="sxs-lookup"><span data-stu-id="58d15-122">Add a representative face to a person for identification.</span></span> <span data-ttu-id="58d15-123">Le visage d’entrée est spécifié en tant qu’image avec un rectangle targetFace.</span><span class="sxs-lookup"><span data-stu-id="58d15-123">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addFaceFromUrl(personGroupId: string, personId: string, url: string, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.addFaceFromUrlWithHttpOperationResponse
  name: addFaceFromUrlWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="58d15-124">Ajouter un visage représentatif à une personne pour l’identification.</span><span class="sxs-lookup"><span data-stu-id="58d15-124">Add a representative face to a person for identification.</span></span> <span data-ttu-id="58d15-125">Le visage d’entrée est spécifié en tant qu’image avec un rectangle targetFace.</span><span class="sxs-lookup"><span data-stu-id="58d15-125">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addFaceFromUrlWithHttpOperationResponse(personGroupId: string, personId: string, url: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="58d15-126">ID faisant référence à un groupe de personnes particulier.</span><span class="sxs-lookup"><span data-stu-id="58d15-126">Id referencing a particular person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="58d15-127">ID faisant référence à une personne particulière.</span><span class="sxs-lookup"><span data-stu-id="58d15-127">Id referencing a particular person.</span></span>
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="58d15-128">URL accessible publiquement d’une image</span><span class="sxs-lookup"><span data-stu-id="58d15-128">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.create
  name: create(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="58d15-129">Créer une nouvelle personne dans un groupe de personnes spécifié.</span><span class="sxs-lookup"><span data-stu-id="58d15-129">Create a new person in a specified person group.</span></span>
  syntax:
    content: 'function create(personGroupId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="58d15-130">ID faisant référence à un groupe de personnes particulier.</span><span class="sxs-lookup"><span data-stu-id="58d15-130">Id referencing a particular person group.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.create_2
  name: create(string, Object, ServiceCallback<Person>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="58d15-131">Créer une nouvelle personne dans un groupe de personnes spécifié.</span><span class="sxs-lookup"><span data-stu-id="58d15-131">Create a new person in a specified person group.</span></span>
  syntax:
    content: 'function create(personGroupId: string, options: Object, callback: ServiceCallback<Person>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.Person>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.create_1
  name: create(string, ServiceCallback<Person>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="58d15-132">Créer une nouvelle personne dans un groupe de personnes spécifié.</span><span class="sxs-lookup"><span data-stu-id="58d15-132">Create a new person in a specified person group.</span></span>
  syntax:
    content: 'function create(personGroupId: string, callback: ServiceCallback<Person>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.Person>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.createWithHttpOperationResponse
  name: createWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="58d15-133">Créer une nouvelle personne dans un groupe de personnes spécifié.</span><span class="sxs-lookup"><span data-stu-id="58d15-133">Create a new person in a specified person group.</span></span>
  syntax:
    content: 'function createWithHttpOperationResponse(personGroupId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="58d15-134">ID faisant référence à un groupe de personnes particulier.</span><span class="sxs-lookup"><span data-stu-id="58d15-134">Id referencing a particular person group.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.Person>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.deleteFace
  name: deleteFace(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="58d15-135">Supprimer un visage à partir d’une personne.</span><span class="sxs-lookup"><span data-stu-id="58d15-135">Delete a face from a person.</span></span> <span data-ttu-id="58d15-136">Fonctionnalité relative pour le visage persistante est également supprimée.</span><span class="sxs-lookup"><span data-stu-id="58d15-136">Relative feature for the persisted face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(personGroupId: string, personId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="58d15-137">ID faisant référence à un groupe de personnes particulier.</span><span class="sxs-lookup"><span data-stu-id="58d15-137">Id referencing a particular person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="58d15-138">ID faisant référence à une personne particulière.</span><span class="sxs-lookup"><span data-stu-id="58d15-138">Id referencing a particular person.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="58d15-139">ID faisant référence à un persistedFaceId particulier d’un visage existant.</span><span class="sxs-lookup"><span data-stu-id="58d15-139">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.deleteFace_2
  name: deleteFace(string, string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="58d15-140">Supprimer un visage à partir d’une personne.</span><span class="sxs-lookup"><span data-stu-id="58d15-140">Delete a face from a person.</span></span> <span data-ttu-id="58d15-141">Fonctionnalité relative pour le visage persistante est également supprimée.</span><span class="sxs-lookup"><span data-stu-id="58d15-141">Relative feature for the persisted face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(personGroupId: string, personId: string, persistedFaceId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.deleteFace_1
  name: deleteFace(string, string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="58d15-142">Supprimer un visage à partir d’une personne.</span><span class="sxs-lookup"><span data-stu-id="58d15-142">Delete a face from a person.</span></span> <span data-ttu-id="58d15-143">Fonctionnalité relative pour le visage persistante est également supprimée.</span><span class="sxs-lookup"><span data-stu-id="58d15-143">Relative feature for the persisted face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(personGroupId: string, personId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.deleteFaceWithHttpOperationResponse
  name: deleteFaceWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="58d15-144">Supprimer un visage à partir d’une personne.</span><span class="sxs-lookup"><span data-stu-id="58d15-144">Delete a face from a person.</span></span> <span data-ttu-id="58d15-145">Fonctionnalité relative pour le visage persistante est également supprimée.</span><span class="sxs-lookup"><span data-stu-id="58d15-145">Relative feature for the persisted face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFaceWithHttpOperationResponse(personGroupId: string, personId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="58d15-146">ID faisant référence à un groupe de personnes particulier.</span><span class="sxs-lookup"><span data-stu-id="58d15-146">Id referencing a particular person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="58d15-147">ID faisant référence à une personne particulière.</span><span class="sxs-lookup"><span data-stu-id="58d15-147">Id referencing a particular person.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="58d15-148">ID faisant référence à un persistedFaceId particulier d’un visage existant.</span><span class="sxs-lookup"><span data-stu-id="58d15-148">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.deleteMethod
  name: deleteMethod(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="58d15-149">Supprimer une personne existante à partir d’un groupe de personnes.</span><span class="sxs-lookup"><span data-stu-id="58d15-149">Delete an existing person from a person group.</span></span> <span data-ttu-id="58d15-150">Toutes stockées les données person, et les caractéristiques de visage dans l’entrée de la personne seront supprimés.</span><span class="sxs-lookup"><span data-stu-id="58d15-150">All stored person data, and face features in the person entry will be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(personGroupId: string, personId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="58d15-151">ID faisant référence à un groupe de personnes particulier.</span><span class="sxs-lookup"><span data-stu-id="58d15-151">Id referencing a particular person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="58d15-152">ID faisant référence à une personne particulière.</span><span class="sxs-lookup"><span data-stu-id="58d15-152">Id referencing a particular person.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.deleteMethod_2
  name: deleteMethod(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="58d15-153">Supprimer une personne existante à partir d’un groupe de personnes.</span><span class="sxs-lookup"><span data-stu-id="58d15-153">Delete an existing person from a person group.</span></span> <span data-ttu-id="58d15-154">Toutes stockées les données person, et les caractéristiques de visage dans l’entrée de la personne seront supprimés.</span><span class="sxs-lookup"><span data-stu-id="58d15-154">All stored person data, and face features in the person entry will be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(personGroupId: string, personId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.deleteMethod_1
  name: deleteMethod(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="58d15-155">Supprimer une personne existante à partir d’un groupe de personnes.</span><span class="sxs-lookup"><span data-stu-id="58d15-155">Delete an existing person from a person group.</span></span> <span data-ttu-id="58d15-156">Toutes stockées les données person, et les caractéristiques de visage dans l’entrée de la personne seront supprimés.</span><span class="sxs-lookup"><span data-stu-id="58d15-156">All stored person data, and face features in the person entry will be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(personGroupId: string, personId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.deleteMethodWithHttpOperationResponse
  name: deleteMethodWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="58d15-157">Supprimer une personne existante à partir d’un groupe de personnes.</span><span class="sxs-lookup"><span data-stu-id="58d15-157">Delete an existing person from a person group.</span></span> <span data-ttu-id="58d15-158">Toutes stockées les données person, et les caractéristiques de visage dans l’entrée de la personne seront supprimés.</span><span class="sxs-lookup"><span data-stu-id="58d15-158">All stored person data, and face features in the person entry will be deleted.</span></span>
  syntax:
    content: 'function deleteMethodWithHttpOperationResponse(personGroupId: string, personId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="58d15-159">ID faisant référence à un groupe de personnes particulier.</span><span class="sxs-lookup"><span data-stu-id="58d15-159">Id referencing a particular person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="58d15-160">ID faisant référence à une personne particulière.</span><span class="sxs-lookup"><span data-stu-id="58d15-160">Id referencing a particular person.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.get
  name: get(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="58d15-161">Récupérer les informations d’une personne, y compris userData, le nom et inscrit des visages persistants.</span><span class="sxs-lookup"><span data-stu-id="58d15-161">Retrieve a person's information, including registered persisted faces, name and userData.</span></span>
  syntax:
    content: 'function get(personGroupId: string, personId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="58d15-162">ID faisant référence à un groupe de personnes particulier.</span><span class="sxs-lookup"><span data-stu-id="58d15-162">Id referencing a particular person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="58d15-163">ID faisant référence à une personne particulière.</span><span class="sxs-lookup"><span data-stu-id="58d15-163">Id referencing a particular person.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.get_2
  name: get(string, string, Object, ServiceCallback<Person>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="58d15-164">Récupérer les informations d’une personne, y compris userData, le nom et inscrit des visages persistants.</span><span class="sxs-lookup"><span data-stu-id="58d15-164">Retrieve a person's information, including registered persisted faces, name and userData.</span></span>
  syntax:
    content: 'function get(personGroupId: string, personId: string, options: Object, callback: ServiceCallback<Person>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.Person>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.get_1
  name: get(string, string, ServiceCallback<Person>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="58d15-165">Récupérer les informations d’une personne, y compris userData, le nom et inscrit des visages persistants.</span><span class="sxs-lookup"><span data-stu-id="58d15-165">Retrieve a person's information, including registered persisted faces, name and userData.</span></span>
  syntax:
    content: 'function get(personGroupId: string, personId: string, callback: ServiceCallback<Person>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.Person>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.getFace
  name: getFace(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="58d15-166">Récupérer des informations sur une face persistante (spécifiée par persistedFaceId, personId et son personGroupId appartenant).</span><span class="sxs-lookup"><span data-stu-id="58d15-166">Retrieve information about a persisted face (specified by persistedFaceId, personId and its belonging personGroupId).</span></span>
  syntax:
    content: 'function getFace(personGroupId: string, personId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="58d15-167">ID faisant référence à un groupe de personnes particulier.</span><span class="sxs-lookup"><span data-stu-id="58d15-167">Id referencing a particular person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="58d15-168">ID faisant référence à une personne particulière.</span><span class="sxs-lookup"><span data-stu-id="58d15-168">Id referencing a particular person.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="58d15-169">ID faisant référence à un persistedFaceId particulier d’un visage existant.</span><span class="sxs-lookup"><span data-stu-id="58d15-169">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.getFace_2
  name: getFace(string, string, string, Object, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="58d15-170">Récupérer des informations sur une face persistante (spécifiée par persistedFaceId, personId et son personGroupId appartenant).</span><span class="sxs-lookup"><span data-stu-id="58d15-170">Retrieve information about a persisted face (specified by persistedFaceId, personId and its belonging personGroupId).</span></span>
  syntax:
    content: 'function getFace(personGroupId: string, personId: string, persistedFaceId: string, options: Object, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.getFace_1
  name: getFace(string, string, string, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="58d15-171">Récupérer des informations sur une face persistante (spécifiée par persistedFaceId, personId et son personGroupId appartenant).</span><span class="sxs-lookup"><span data-stu-id="58d15-171">Retrieve information about a persisted face (specified by persistedFaceId, personId and its belonging personGroupId).</span></span>
  syntax:
    content: 'function getFace(personGroupId: string, personId: string, persistedFaceId: string, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.getFaceWithHttpOperationResponse
  name: getFaceWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="58d15-172">Récupérer des informations sur une face persistante (spécifiée par persistedFaceId, personId et son personGroupId appartenant).</span><span class="sxs-lookup"><span data-stu-id="58d15-172">Retrieve information about a persisted face (specified by persistedFaceId, personId and its belonging personGroupId).</span></span>
  syntax:
    content: 'function getFaceWithHttpOperationResponse(personGroupId: string, personId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="58d15-173">ID faisant référence à un groupe de personnes particulier.</span><span class="sxs-lookup"><span data-stu-id="58d15-173">Id referencing a particular person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="58d15-174">ID faisant référence à une personne particulière.</span><span class="sxs-lookup"><span data-stu-id="58d15-174">Id referencing a particular person.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="58d15-175">ID faisant référence à un persistedFaceId particulier d’un visage existant.</span><span class="sxs-lookup"><span data-stu-id="58d15-175">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.getWithHttpOperationResponse
  name: getWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="58d15-176">Récupérer les informations d’une personne, y compris userData, le nom et inscrit des visages persistants.</span><span class="sxs-lookup"><span data-stu-id="58d15-176">Retrieve a person's information, including registered persisted faces, name and userData.</span></span>
  syntax:
    content: 'function getWithHttpOperationResponse(personGroupId: string, personId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="58d15-177">ID faisant référence à un groupe de personnes particulier.</span><span class="sxs-lookup"><span data-stu-id="58d15-177">Id referencing a particular person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="58d15-178">ID faisant référence à une personne particulière.</span><span class="sxs-lookup"><span data-stu-id="58d15-178">Id referencing a particular person.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.Person>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.list
  name: list(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="58d15-179">Liste de toutes les personnes dans un groupe de personnes et récupérer des informations de personne (y compris personId, nom, userData et persistedFaceIds des faces inscrites de la personne).</span><span class="sxs-lookup"><span data-stu-id="58d15-179">List all persons in a person group, and retrieve person information (including personId, name, userData and persistedFaceIds of registered faces of the person).</span></span>
  syntax:
    content: 'function list(personGroupId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="58d15-180">ID faisant référence à un groupe de personnes particulier.</span><span class="sxs-lookup"><span data-stu-id="58d15-180">Id referencing a particular person group.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.list_2
  name: list(string, Object, ServiceCallback<Person[]>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="58d15-181">Liste de toutes les personnes dans un groupe de personnes et récupérer des informations de personne (y compris personId, nom, userData et persistedFaceIds des faces inscrites de la personne).</span><span class="sxs-lookup"><span data-stu-id="58d15-181">List all persons in a person group, and retrieve person information (including personId, name, userData and persistedFaceIds of registered faces of the person).</span></span>
  syntax:
    content: 'function list(personGroupId: string, options: Object, callback: ServiceCallback<Person[]>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.Person[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.list_1
  name: list(string, ServiceCallback<Person[]>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="58d15-182">Liste de toutes les personnes dans un groupe de personnes et récupérer des informations de personne (y compris personId, nom, userData et persistedFaceIds des faces inscrites de la personne).</span><span class="sxs-lookup"><span data-stu-id="58d15-182">List all persons in a person group, and retrieve person information (including personId, name, userData and persistedFaceIds of registered faces of the person).</span></span>
  syntax:
    content: 'function list(personGroupId: string, callback: ServiceCallback<Person[]>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.Person[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.listWithHttpOperationResponse
  name: listWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="58d15-183">Liste de toutes les personnes dans un groupe de personnes et récupérer des informations de personne (y compris personId, nom, userData et persistedFaceIds des faces inscrites de la personne).</span><span class="sxs-lookup"><span data-stu-id="58d15-183">List all persons in a person group, and retrieve person information (including personId, name, userData and persistedFaceIds of registered faces of the person).</span></span>
  syntax:
    content: 'function listWithHttpOperationResponse(personGroupId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="58d15-184">ID faisant référence à un groupe de personnes particulier.</span><span class="sxs-lookup"><span data-stu-id="58d15-184">Id referencing a particular person group.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.Person[]>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.update
  name: update(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="58d15-185">Nom de la mise à jour ou userData d’une personne.</span><span class="sxs-lookup"><span data-stu-id="58d15-185">Update name or userData of a person.</span></span>
  syntax:
    content: 'function update(personGroupId: string, personId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="58d15-186">ID faisant référence à un groupe de personnes particulier.</span><span class="sxs-lookup"><span data-stu-id="58d15-186">Id referencing a particular person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="58d15-187">ID faisant référence à une personne particulière.</span><span class="sxs-lookup"><span data-stu-id="58d15-187">Id referencing a particular person.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.update_2
  name: update(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="58d15-188">Nom de la mise à jour ou userData d’une personne.</span><span class="sxs-lookup"><span data-stu-id="58d15-188">Update name or userData of a person.</span></span>
  syntax:
    content: 'function update(personGroupId: string, personId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.update_1
  name: update(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="58d15-189">Nom de la mise à jour ou userData d’une personne.</span><span class="sxs-lookup"><span data-stu-id="58d15-189">Update name or userData of a person.</span></span>
  syntax:
    content: 'function update(personGroupId: string, personId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.updateFace
  name: updateFace(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="58d15-190">Mise à jour une personne conservées champ userData de face.</span><span class="sxs-lookup"><span data-stu-id="58d15-190">Update a person persisted face's userData field.</span></span>
  syntax:
    content: 'function updateFace(personGroupId: string, personId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="58d15-191">ID faisant référence à un groupe de personnes particulier.</span><span class="sxs-lookup"><span data-stu-id="58d15-191">Id referencing a particular person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="58d15-192">ID faisant référence à une personne particulière.</span><span class="sxs-lookup"><span data-stu-id="58d15-192">Id referencing a particular person.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="58d15-193">ID faisant référence à un persistedFaceId particulier d’un visage existant.</span><span class="sxs-lookup"><span data-stu-id="58d15-193">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.updateFace_2
  name: updateFace(string, string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="58d15-194">Mise à jour une personne conservées champ userData de face.</span><span class="sxs-lookup"><span data-stu-id="58d15-194">Update a person persisted face's userData field.</span></span>
  syntax:
    content: 'function updateFace(personGroupId: string, personId: string, persistedFaceId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.updateFace_1
  name: updateFace(string, string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="58d15-195">Mise à jour une personne conservées champ userData de face.</span><span class="sxs-lookup"><span data-stu-id="58d15-195">Update a person persisted face's userData field.</span></span>
  syntax:
    content: 'function updateFace(personGroupId: string, personId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.updateFaceWithHttpOperationResponse
  name: updateFaceWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="58d15-196">Mise à jour une personne conservées champ userData de face.</span><span class="sxs-lookup"><span data-stu-id="58d15-196">Update a person persisted face's userData field.</span></span>
  syntax:
    content: 'function updateFaceWithHttpOperationResponse(personGroupId: string, personId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="58d15-197">ID faisant référence à un groupe de personnes particulier.</span><span class="sxs-lookup"><span data-stu-id="58d15-197">Id referencing a particular person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="58d15-198">ID faisant référence à une personne particulière.</span><span class="sxs-lookup"><span data-stu-id="58d15-198">Id referencing a particular person.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="58d15-199">ID faisant référence à un persistedFaceId particulier d’un visage existant.</span><span class="sxs-lookup"><span data-stu-id="58d15-199">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroupPerson.updateWithHttpOperationResponse
  name: updateWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="58d15-200">Nom de la mise à jour ou userData d’une personne.</span><span class="sxs-lookup"><span data-stu-id="58d15-200">Update name or userData of a person.</span></span>
  syntax:
    content: 'function updateWithHttpOperationResponse(personGroupId: string, personId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="58d15-201">ID faisant référence à un groupe de personnes particulier.</span><span class="sxs-lookup"><span data-stu-id="58d15-201">Id referencing a particular person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="58d15-202">ID faisant référence à une personne particulière.</span><span class="sxs-lookup"><span data-stu-id="58d15-202">Id referencing a particular person.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
references:
- uid: Promise<azure-cognitiveservices-face.PersistedFace>
  name: PersistedFace>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: PersistedFace
    fullName: PersistedFace
    uid: azure-cognitiveservices-face.PersistedFace
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.PersistedFace>
  name: PersistedFace>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: PersistedFace
    fullName: PersistedFace
    uid: azure-cognitiveservices-face.PersistedFace
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace>>
  name: PersistedFace>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: PersistedFace
    fullName: PersistedFace
    uid: azure-cognitiveservices-face.PersistedFace
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-face.Person>
  name: Person>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: Person
    fullName: Person
    uid: azure-cognitiveservices-face.Person
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.Person>
  name: Person>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: Person
    fullName: Person
    uid: azure-cognitiveservices-face.Person
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.Person>>
  name: Person>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: Person
    fullName: Person
    uid: azure-cognitiveservices-face.Person
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-face.Person[]>
  name: Person[]>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: Person
    fullName: Person
    uid: azure-cognitiveservices-face.Person
  - name: '[]>'
    fullName: '[]>'
- uid: ServiceCallback<azure-cognitiveservices-face.Person[]>
  name: Person[]>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: Person
    fullName: Person
    uid: azure-cognitiveservices-face.Person
  - name: '[]>'
    fullName: '[]>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.Person[]>>
  name: Person[]>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: Person
    fullName: Person
    uid: azure-cognitiveservices-face.Person
  - name: '[]>>'
    fullName: '[]>>'
