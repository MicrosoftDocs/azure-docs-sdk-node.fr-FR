### YamlMime:UniversalReference
ms.openlocfilehash: 54207289a27f5cbe8c3ef496c1d11ec7bdce9f70
ms.sourcegitcommit: 286f52ea38c9eff2ec9d4f8cabeb86f62fd9c406
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 08/22/2018
ms.locfileid: "41694158"
items:
- uid: azure-cognitiveservices-face.PersonGroup
  name: PersonGroup
  fullName: PersonGroup
  children:
  - azure-cognitiveservices-face.PersonGroup.create
  - azure-cognitiveservices-face.PersonGroup.create_1
  - azure-cognitiveservices-face.PersonGroup.create_2
  - azure-cognitiveservices-face.PersonGroup.createWithHttpOperationResponse
  - azure-cognitiveservices-face.PersonGroup.deleteMethod
  - azure-cognitiveservices-face.PersonGroup.deleteMethod_2
  - azure-cognitiveservices-face.PersonGroup.deleteMethod_1
  - azure-cognitiveservices-face.PersonGroup.deleteMethodWithHttpOperationResponse
  - azure-cognitiveservices-face.PersonGroup.get
  - azure-cognitiveservices-face.PersonGroup.get_2
  - azure-cognitiveservices-face.PersonGroup.get_1
  - azure-cognitiveservices-face.PersonGroup.getTrainingStatus
  - azure-cognitiveservices-face.PersonGroup.getTrainingStatus_1
  - azure-cognitiveservices-face.PersonGroup.getTrainingStatus_2
  - azure-cognitiveservices-face.PersonGroup.getTrainingStatusWithHttpOperationResponse
  - azure-cognitiveservices-face.PersonGroup.getWithHttpOperationResponse
  - azure-cognitiveservices-face.PersonGroup.list_1
  - azure-cognitiveservices-face.PersonGroup.list_2
  - azure-cognitiveservices-face.PersonGroup.list
  - azure-cognitiveservices-face.PersonGroup.listWithHttpOperationResponse
  - azure-cognitiveservices-face.PersonGroup.train
  - azure-cognitiveservices-face.PersonGroup.train_1
  - azure-cognitiveservices-face.PersonGroup.train_2
  - azure-cognitiveservices-face.PersonGroup.trainWithHttpOperationResponse
  - azure-cognitiveservices-face.PersonGroup.update
  - azure-cognitiveservices-face.PersonGroup.update_1
  - azure-cognitiveservices-face.PersonGroup.update_2
  - azure-cognitiveservices-face.PersonGroup.updateWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroup.create
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9fe27-101">Créer un nouveau groupe de personnes avec personGroupId spécifié, le nom et userData fourni par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="9fe27-101">Create a new person group with specified personGroupId, name and user-provided userData.</span></span>
  syntax:
    content: 'function create(personGroupId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="9fe27-102">PersonGroupId fourni par l’utilisateur sous forme de chaîne.</span><span class="sxs-lookup"><span data-stu-id="9fe27-102">User-provided personGroupId as a string.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroup.create_1
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9fe27-103">Créer un nouveau groupe de personnes avec personGroupId spécifié, le nom et userData fourni par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="9fe27-103">Create a new person group with specified personGroupId, name and user-provided userData.</span></span>
  syntax:
    content: 'function create(personGroupId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroup.create_2
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9fe27-104">Créer un nouveau groupe de personnes avec personGroupId spécifié, le nom et userData fourni par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="9fe27-104">Create a new person group with specified personGroupId, name and user-provided userData.</span></span>
  syntax:
    content: 'function create(personGroupId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroup.createWithHttpOperationResponse
  name: createWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9fe27-105">Créer un nouveau groupe de personnes avec personGroupId spécifié, le nom et userData fourni par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="9fe27-105">Create a new person group with specified personGroupId, name and user-provided userData.</span></span>
  syntax:
    content: 'function createWithHttpOperationResponse(personGroupId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="9fe27-106">PersonGroupId fourni par l’utilisateur sous forme de chaîne.</span><span class="sxs-lookup"><span data-stu-id="9fe27-106">User-provided personGroupId as a string.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroup.deleteMethod
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9fe27-107">Supprimer un groupe existant de la personne.</span><span class="sxs-lookup"><span data-stu-id="9fe27-107">Delete an existing person group.</span></span> <span data-ttu-id="9fe27-108">Conservées face images de toutes les personnes dans le groupe de personnes seront également supprimées.</span><span class="sxs-lookup"><span data-stu-id="9fe27-108">Persisted face images of all people in the person group will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(personGroupId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="9fe27-109">PersonGroupId de la personne du groupe à supprimer.</span><span class="sxs-lookup"><span data-stu-id="9fe27-109">The personGroupId of the person group to be deleted.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroup.deleteMethod_2
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9fe27-110">Supprimer un groupe existant de la personne.</span><span class="sxs-lookup"><span data-stu-id="9fe27-110">Delete an existing person group.</span></span> <span data-ttu-id="9fe27-111">Conservées face images de toutes les personnes dans le groupe de personnes seront également supprimées.</span><span class="sxs-lookup"><span data-stu-id="9fe27-111">Persisted face images of all people in the person group will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(personGroupId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroup.deleteMethod_1
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9fe27-112">Supprimer un groupe existant de la personne.</span><span class="sxs-lookup"><span data-stu-id="9fe27-112">Delete an existing person group.</span></span> <span data-ttu-id="9fe27-113">Conservées face images de toutes les personnes dans le groupe de personnes seront également supprimées.</span><span class="sxs-lookup"><span data-stu-id="9fe27-113">Persisted face images of all people in the person group will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(personGroupId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroup.deleteMethodWithHttpOperationResponse
  name: deleteMethodWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9fe27-114">Supprimer un groupe existant de la personne.</span><span class="sxs-lookup"><span data-stu-id="9fe27-114">Delete an existing person group.</span></span> <span data-ttu-id="9fe27-115">Conservées face images de toutes les personnes dans le groupe de personnes seront également supprimées.</span><span class="sxs-lookup"><span data-stu-id="9fe27-115">Persisted face images of all people in the person group will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethodWithHttpOperationResponse(personGroupId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="9fe27-116">PersonGroupId de la personne du groupe à supprimer.</span><span class="sxs-lookup"><span data-stu-id="9fe27-116">The personGroupId of the person group to be deleted.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroup.get
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9fe27-117">Récupérer les informations d’un groupe de personnes, y compris son nom et son userData.</span><span class="sxs-lookup"><span data-stu-id="9fe27-117">Retrieve the information of a person group, including its name and userData.</span></span>
  syntax:
    content: 'function get(personGroupId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="9fe27-118">personGroupId de la personne du groupe cible.</span><span class="sxs-lookup"><span data-stu-id="9fe27-118">personGroupId of the target person group.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersonGroupResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroup.get_2
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9fe27-119">Récupérer les informations d’un groupe de personnes, y compris son nom et son userData.</span><span class="sxs-lookup"><span data-stu-id="9fe27-119">Retrieve the information of a person group, including its name and userData.</span></span>
  syntax:
    content: 'function get(personGroupId: string, options: Object, callback: ServiceCallback<PersonGroupResult>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersonGroupResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersonGroupResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroup.get_1
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9fe27-120">Récupérer les informations d’un groupe de personnes, y compris son nom et son userData.</span><span class="sxs-lookup"><span data-stu-id="9fe27-120">Retrieve the information of a person group, including its name and userData.</span></span>
  syntax:
    content: 'function get(personGroupId: string, callback: ServiceCallback<PersonGroupResult>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersonGroupResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersonGroupResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroup.getTrainingStatus
  name: getTrainingStatus
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9fe27-121">Récupérer l’état de la formation d’un groupe de personnes (terminé ou en cours).</span><span class="sxs-lookup"><span data-stu-id="9fe27-121">Retrieve the training status of a person group (completed or ongoing).</span></span>
  syntax:
    content: 'function getTrainingStatus(personGroupId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="9fe27-122">personGroupId de personne du groupe cible.</span><span class="sxs-lookup"><span data-stu-id="9fe27-122">personGroupId of target person group.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.TrainingStatus1>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroup.getTrainingStatus_1
  name: getTrainingStatus
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9fe27-123">Récupérer l’état de la formation d’un groupe de personnes (terminé ou en cours).</span><span class="sxs-lookup"><span data-stu-id="9fe27-123">Retrieve the training status of a person group (completed or ongoing).</span></span>
  syntax:
    content: 'function getTrainingStatus(personGroupId: string, callback: ServiceCallback<TrainingStatus1>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.TrainingStatus1>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.TrainingStatus1>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroup.getTrainingStatus_2
  name: getTrainingStatus
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9fe27-124">Récupérer l’état de la formation d’un groupe de personnes (terminé ou en cours).</span><span class="sxs-lookup"><span data-stu-id="9fe27-124">Retrieve the training status of a person group (completed or ongoing).</span></span>
  syntax:
    content: 'function getTrainingStatus(personGroupId: string, options: Object, callback: ServiceCallback<TrainingStatus1>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.TrainingStatus1>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.TrainingStatus1>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroup.getTrainingStatusWithHttpOperationResponse
  name: getTrainingStatusWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9fe27-125">Récupérer l’état de la formation d’un groupe de personnes (terminé ou en cours).</span><span class="sxs-lookup"><span data-stu-id="9fe27-125">Retrieve the training status of a person group (completed or ongoing).</span></span>
  syntax:
    content: 'function getTrainingStatusWithHttpOperationResponse(personGroupId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="9fe27-126">personGroupId de personne du groupe cible.</span><span class="sxs-lookup"><span data-stu-id="9fe27-126">personGroupId of target person group.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.TrainingStatus1>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroup.getWithHttpOperationResponse
  name: getWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9fe27-127">Récupérer les informations d’un groupe de personnes, y compris son nom et son userData.</span><span class="sxs-lookup"><span data-stu-id="9fe27-127">Retrieve the information of a person group, including its name and userData.</span></span>
  syntax:
    content: 'function getWithHttpOperationResponse(personGroupId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="9fe27-128">personGroupId de la personne du groupe cible.</span><span class="sxs-lookup"><span data-stu-id="9fe27-128">personGroupId of the target person group.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersonGroupResult>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroup.list_1
  name: list
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9fe27-129">Liste des groupes de personnes et leurs informations.</span><span class="sxs-lookup"><span data-stu-id="9fe27-129">List person groups and their information.</span></span>
  syntax:
    content: 'function list(callback: ServiceCallback<PersonGroupResult[]>)'
    parameters:
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersonGroupResult[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersonGroupResult[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroup.list_2
  name: list
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9fe27-130">Liste des groupes de personnes et leurs informations.</span><span class="sxs-lookup"><span data-stu-id="9fe27-130">List person groups and their information.</span></span>
  syntax:
    content: 'function list(options: Object, callback: ServiceCallback<PersonGroupResult[]>)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersonGroupResult[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersonGroupResult[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroup.list
  name: list
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9fe27-131">Liste des groupes de personnes et leurs informations.</span><span class="sxs-lookup"><span data-stu-id="9fe27-131">List person groups and their information.</span></span>
  syntax:
    content: 'function list(options?: Object)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersonGroupResult[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroup.listWithHttpOperationResponse
  name: listWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9fe27-132">Liste des groupes de personnes et leurs informations.</span><span class="sxs-lookup"><span data-stu-id="9fe27-132">List person groups and their information.</span></span>
  syntax:
    content: 'function listWithHttpOperationResponse(options?: Object)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersonGroupResult[]>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroup.train
  name: train
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9fe27-133">Une tâche de formation de groupe personne en file d’attente, la tâche de formation ne peut pas être démarrée immédiatement.</span><span class="sxs-lookup"><span data-stu-id="9fe27-133">Queue a person group training task, the training task may not be started immediately.</span></span>
  syntax:
    content: 'function train(personGroupId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="9fe27-134">Groupe de personnes cible à être formé.</span><span class="sxs-lookup"><span data-stu-id="9fe27-134">Target person group to be trained.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroup.train_1
  name: train
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9fe27-135">Une tâche de formation de groupe personne en file d’attente, la tâche de formation ne peut pas être démarrée immédiatement.</span><span class="sxs-lookup"><span data-stu-id="9fe27-135">Queue a person group training task, the training task may not be started immediately.</span></span>
  syntax:
    content: 'function train(personGroupId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroup.train_2
  name: train
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9fe27-136">Une tâche de formation de groupe personne en file d’attente, la tâche de formation ne peut pas être démarrée immédiatement.</span><span class="sxs-lookup"><span data-stu-id="9fe27-136">Queue a person group training task, the training task may not be started immediately.</span></span>
  syntax:
    content: 'function train(personGroupId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroup.trainWithHttpOperationResponse
  name: trainWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9fe27-137">Une tâche de formation de groupe personne en file d’attente, la tâche de formation ne peut pas être démarrée immédiatement.</span><span class="sxs-lookup"><span data-stu-id="9fe27-137">Queue a person group training task, the training task may not be started immediately.</span></span>
  syntax:
    content: 'function trainWithHttpOperationResponse(personGroupId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="9fe27-138">Groupe de personnes cible à être formé.</span><span class="sxs-lookup"><span data-stu-id="9fe27-138">Target person group to be trained.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroup.update
  name: update
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9fe27-139">Mettre à jour le nom d’affichage d’un groupe de personne existante et userData.</span><span class="sxs-lookup"><span data-stu-id="9fe27-139">Update an existing person group's display name and userData.</span></span> <span data-ttu-id="9fe27-140">Les propriétés qui n’apparaît pas dans le corps de la demande ne seront pas mis à jour.</span><span class="sxs-lookup"><span data-stu-id="9fe27-140">The properties which does not appear in request body will not be updated.</span></span>
  syntax:
    content: 'function update(personGroupId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="9fe27-141">personGroupId de la personne du groupe à mettre à jour.</span><span class="sxs-lookup"><span data-stu-id="9fe27-141">personGroupId of the person group to be updated.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroup.update_1
  name: update
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9fe27-142">Mettre à jour le nom d’affichage d’un groupe de personne existante et userData.</span><span class="sxs-lookup"><span data-stu-id="9fe27-142">Update an existing person group's display name and userData.</span></span> <span data-ttu-id="9fe27-143">Les propriétés qui n’apparaît pas dans le corps de la demande ne seront pas mis à jour.</span><span class="sxs-lookup"><span data-stu-id="9fe27-143">The properties which does not appear in request body will not be updated.</span></span>
  syntax:
    content: 'function update(personGroupId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroup.update_2
  name: update
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9fe27-144">Mettre à jour le nom d’affichage d’un groupe de personne existante et userData.</span><span class="sxs-lookup"><span data-stu-id="9fe27-144">Update an existing person group's display name and userData.</span></span> <span data-ttu-id="9fe27-145">Les propriétés qui n’apparaît pas dans le corps de la demande ne seront pas mis à jour.</span><span class="sxs-lookup"><span data-stu-id="9fe27-145">The properties which does not appear in request body will not be updated.</span></span>
  syntax:
    content: 'function update(personGroupId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroup.updateWithHttpOperationResponse
  name: updateWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9fe27-146">Mettre à jour le nom d’affichage d’un groupe de personne existante et userData.</span><span class="sxs-lookup"><span data-stu-id="9fe27-146">Update an existing person group's display name and userData.</span></span> <span data-ttu-id="9fe27-147">Les propriétés qui n’apparaît pas dans le corps de la demande ne seront pas mis à jour.</span><span class="sxs-lookup"><span data-stu-id="9fe27-147">The properties which does not appear in request body will not be updated.</span></span>
  syntax:
    content: 'function updateWithHttpOperationResponse(personGroupId: string, options?: Object)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="9fe27-148">personGroupId de la personne du groupe à mettre à jour.</span><span class="sxs-lookup"><span data-stu-id="9fe27-148">personGroupId of the person group to be updated.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
references:
- uid: Promise<azure-cognitiveservices-face.PersonGroupResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: PersonGroupResult
    fullName: PersonGroupResult
    uid: azure-cognitiveservices-face.PersonGroupResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.PersonGroupResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: PersonGroupResult
    fullName: PersonGroupResult
    uid: azure-cognitiveservices-face.PersonGroupResult
  - name: '>'
    fullName: '>'
- uid: Promise<azure-cognitiveservices-face.TrainingStatus1>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: TrainingStatus1
    fullName: TrainingStatus1
    uid: azure-cognitiveservices-face.TrainingStatus1
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.TrainingStatus1>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: TrainingStatus1
    fullName: TrainingStatus1
    uid: azure-cognitiveservices-face.TrainingStatus1
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.TrainingStatus1>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: TrainingStatus1
    fullName: TrainingStatus1
    uid: azure-cognitiveservices-face.TrainingStatus1
  - name: '>>'
    fullName: '>>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.PersonGroupResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: PersonGroupResult
    fullName: PersonGroupResult
    uid: azure-cognitiveservices-face.PersonGroupResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-face.PersonGroupResult[]>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: PersonGroupResult
    fullName: PersonGroupResult
    uid: azure-cognitiveservices-face.PersonGroupResult
  - name: '[]>'
    fullName: '[]>'
- uid: ServiceCallback<azure-cognitiveservices-face.PersonGroupResult[]>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: PersonGroupResult
    fullName: PersonGroupResult
    uid: azure-cognitiveservices-face.PersonGroupResult
  - name: '[]>'
    fullName: '[]>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.PersonGroupResult[]>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: PersonGroupResult
    fullName: PersonGroupResult
    uid: azure-cognitiveservices-face.PersonGroupResult
  - name: '[]>>'
    fullName: '[]>>'
