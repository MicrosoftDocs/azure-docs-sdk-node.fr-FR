### YamlMime:UniversalReference
items:
  - uid: azure-cognitiveservices-spellcheck.SpellCheckClient
    name: SpellCheckClient
    fullName: SpellCheckClient
    children:
      - azure-cognitiveservices-spellcheck.SpellCheckClient.addUserAgentInfo
      - azure-cognitiveservices-spellcheck.SpellCheckClient.credentials
      - azure-cognitiveservices-spellcheck.SpellCheckClient.endpoint
      - azure-cognitiveservices-spellcheck.SpellCheckClient.getPackageJsonInfo
      - azure-cognitiveservices-spellcheck.SpellCheckClient.sendRequest_1
      - azure-cognitiveservices-spellcheck.SpellCheckClient.sendRequest
      - azure-cognitiveservices-spellcheck.SpellCheckClient.sendRequestWithHttpOperationResponse
      - azure-cognitiveservices-spellcheck.SpellCheckClient.constructor
      - azure-cognitiveservices-spellcheck.SpellCheckClient.spellChecker
      - azure-cognitiveservices-spellcheck.SpellCheckClient.spellChecker_2
      - azure-cognitiveservices-spellcheck.SpellCheckClient.spellChecker_1
      - azure-cognitiveservices-spellcheck.SpellCheckClient.spellCheckerWithHttpOperationResponse
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: ServiceClient
    package: azure-cognitiveservices-spellcheck
  - uid: azure-cognitiveservices-spellcheck.SpellCheckClient.addUserAgentInfo
    name: addUserAgentInfo(any)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="ec14a-101">Ajoute des informations personnalisées à en-tête user-agent</span><span class="sxs-lookup"><span data-stu-id="ec14a-101">Adds custom information to user agent header</span></span>
    syntax:
      content: 'function addUserAgentInfo(additionalUserAgentInfo: any)'
      parameters:
        - id: additionalUserAgentInfo
          type:
            - any
          description: |
            <span data-ttu-id="ec14a-102">informations à ajouter à l’en-tête user-agent, en tant que chaîne.</span><span class="sxs-lookup"><span data-stu-id="ec14a-102">information to be added to user agent header, as string.</span></span>
    package: azure-cognitiveservices-spellcheck
  - uid: azure-cognitiveservices-spellcheck.SpellCheckClient.credentials
    name: credentials
    fullName: credentials
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'credentials: ServiceClientCredentials'
      return:
        type:
          - ServiceClientCredentials
    package: azure-cognitiveservices-spellcheck
  - uid: azure-cognitiveservices-spellcheck.SpellCheckClient.endpoint
    name: endpoint
    fullName: endpoint
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'endpoint: string'
      return:
        type:
          - string
    package: azure-cognitiveservices-spellcheck
  - uid: azure-cognitiveservices-spellcheck.SpellCheckClient.getPackageJsonInfo
    name: getPackageJsonInfo(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="ec14a-103">Tente de trouver package.json pour le package nodejs azure donné.</span><span class="sxs-lookup"><span data-stu-id="ec14a-103">Attempts to find package.json for the given azure nodejs package.</span></span>
      <span data-ttu-id="ec14a-104">Si trouvée, retourne le nom et la version du package en lisant le package.json si package.json est introuvable, retourne une valeur par défaut.</span><span class="sxs-lookup"><span data-stu-id="ec14a-104">If found, returns the name and version of the package by reading the package.json If package.json is not found, returns a default value.</span></span>
    syntax:
      content: 'function getPackageJsonInfo(managementClientDir: string)'
      parameters:
        - id: managementClientDir
          type:
            - string
          description: <span data-ttu-id="ec14a-105">passer le répertoire du client de gestion azure spécifiques.</span><span class="sxs-lookup"><span data-stu-id="ec14a-105">pass the directory of the specific azure management client.</span></span>
      return:
        type:
          - Object
    package: azure-cognitiveservices-spellcheck
  - uid: azure-cognitiveservices-spellcheck.SpellCheckClient.sendRequest_1
    name: sendRequest(PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function sendRequest<TResult>(options: PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions)'
      parameters:
        - id: options
          type:
            - PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions
          description: ''
      return:
        type:
          - Promise<TResult>
    package: azure-cognitiveservices-spellcheck
  - uid: azure-cognitiveservices-spellcheck.SpellCheckClient.sendRequest
    name: 'sendRequest(PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions, ServiceCallback<TResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function sendRequest<TResult>(options: PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions, callback: ServiceCallback<TResult>)'
      parameters:
        - id: options
          type:
            - PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions
          description: ''
        - id: callback
          type:
            - ServiceCallback<TResult>
          description: ''
    package: azure-cognitiveservices-spellcheck
  - uid: azure-cognitiveservices-spellcheck.SpellCheckClient.sendRequestWithHttpOperationResponse
    name: sendRequestWithHttpOperationResponse(PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function sendRequestWithHttpOperationResponse<TResult>(options: PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions)'
      parameters:
        - id: options
          type:
            - PathTemplateBasedRequestPrepareOptions | UrlBasedRequestPrepareOptions
          description: ''
      return:
        type:
          - Promise<HttpOperationResponse<TResult>>
    package: azure-cognitiveservices-spellcheck
  - uid: azure-cognitiveservices-spellcheck.SpellCheckClient.constructor
    name: 'SpellCheckClient(ServiceClientCredentials, SpellCheckClientOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new SpellCheckClient(credentials: ServiceClientCredentials, options?: SpellCheckClientOptions)'
      parameters:
        - id: credentials
          type:
            - ServiceClientCredentials
          description: |
            <span data-ttu-id="ec14a-106">Informations d’identification d’abonnement qui identifient l’abonnement du client.</span><span class="sxs-lookup"><span data-stu-id="ec14a-106">Subscription credentials which uniquely identify client subscription.</span></span>
        - id: options
          type:
            - azure-cognitiveservices-spellcheck.SpellCheckClientOptions
          description: ''
          optional: true
    package: azure-cognitiveservices-spellcheck
  - uid: azure-cognitiveservices-spellcheck.SpellCheckClient.spellChecker
    name: 'spellChecker(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function spellChecker(text: string, options?: Object)'
      parameters:
        - id: text
          type:
            - string
          description: |
            <span data-ttu-id="ec14a-107">La chaîne de texte pour rechercher les erreurs de grammaire et orthographe.</span><span class="sxs-lookup"><span data-stu-id="ec14a-107">The text string to check for spelling and grammar errors.</span></span> <span data-ttu-id="ec14a-108">La longueur combinée de la chaîne de texte, preContextText chaîne et postContextText chaîne ne peut pas dépasser 10 000 caractères.</span><span class="sxs-lookup"><span data-stu-id="ec14a-108">The combined length of the text string, preContextText string, and postContextText string may not exceed 10,000 characters.</span></span> <span data-ttu-id="ec14a-109">Vous pouvez spécifier ce paramètre dans la chaîne de requête d’une demande GET, ou dans le corps d’une requête POST.</span><span class="sxs-lookup"><span data-stu-id="ec14a-109">You may specify this parameter in the query string of a GET request or in the body of a POST request.</span></span> <span data-ttu-id="ec14a-110">En raison de la limite de longueur de chaîne de requête, vous utiliserez généralement une demande POST, sauf si vous êtes en train d’uniquement les chaînes courtes.</span><span class="sxs-lookup"><span data-stu-id="ec14a-110">Because of the query string length limit, you'll typically use a POST request unless you're checking only short strings.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-cognitiveservices-spellcheck.SpellCheck>
    package: azure-cognitiveservices-spellcheck
  - uid: azure-cognitiveservices-spellcheck.SpellCheckClient.spellChecker_2
    name: 'spellChecker(string, Object, ServiceCallback<SpellCheck>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function spellChecker(text: string, options: Object, callback: ServiceCallback<SpellCheck>)'
      parameters:
        - id: text
          type:
            - string
          description: ''
        - id: options
          type:
            - Object
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-spellcheck.SpellCheck>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-spellcheck.SpellCheck>
    package: azure-cognitiveservices-spellcheck
  - uid: azure-cognitiveservices-spellcheck.SpellCheckClient.spellChecker_1
    name: 'spellChecker(string, ServiceCallback<SpellCheck>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function spellChecker(text: string, callback: ServiceCallback<SpellCheck>)'
      parameters:
        - id: text
          type:
            - string
          description: ''
        - id: callback
          type:
            - ServiceCallback<azure-cognitiveservices-spellcheck.SpellCheck>
          description: ''
      return:
        type:
          - Promise<azure-cognitiveservices-spellcheck.SpellCheck>
    package: azure-cognitiveservices-spellcheck
  - uid: azure-cognitiveservices-spellcheck.SpellCheckClient.spellCheckerWithHttpOperationResponse
    name: 'spellCheckerWithHttpOperationResponse(string, Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function spellCheckerWithHttpOperationResponse(text: string, options?: Object)'
      parameters:
        - id: text
          type:
            - string
          description: |
            <span data-ttu-id="ec14a-111">La chaîne de texte pour rechercher les erreurs de grammaire et orthographe.</span><span class="sxs-lookup"><span data-stu-id="ec14a-111">The text string to check for spelling and grammar errors.</span></span> <span data-ttu-id="ec14a-112">La longueur combinée de la chaîne de texte, preContextText chaîne et postContextText chaîne ne peut pas dépasser 10 000 caractères.</span><span class="sxs-lookup"><span data-stu-id="ec14a-112">The combined length of the text string, preContextText string, and postContextText string may not exceed 10,000 characters.</span></span> <span data-ttu-id="ec14a-113">Vous pouvez spécifier ce paramètre dans la chaîne de requête d’une demande GET, ou dans le corps d’une requête POST.</span><span class="sxs-lookup"><span data-stu-id="ec14a-113">You may specify this parameter in the query string of a GET request or in the body of a POST request.</span></span> <span data-ttu-id="ec14a-114">En raison de la limite de longueur de chaîne de requête, vous utiliserez généralement une demande POST, sauf si vous êtes en train d’uniquement les chaînes courtes.</span><span class="sxs-lookup"><span data-stu-id="ec14a-114">Because of the query string length limit, you'll typically use a POST request unless you're checking only short strings.</span></span>
        - id: options
          type:
            - Object
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse<azure-cognitiveservices-spellcheck.SpellCheck>>
    package: azure-cognitiveservices-spellcheck
references:
  - uid: azure-cognitiveservices-spellcheck.SpellCheckClientOptions
    name: SpellCheckClientOptions
    spec.typeScript:
      - name: SpellCheckClientOptions
        fullName: SpellCheckClientOptions
        uid: azure-cognitiveservices-spellcheck.SpellCheckClientOptions
  - uid: Promise<azure-cognitiveservices-spellcheck.SpellCheck>
    name: SpellCheck>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: SpellCheck
        fullName: SpellCheck
        uid: azure-cognitiveservices-spellcheck.SpellCheck
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<azure-cognitiveservices-spellcheck.SpellCheck>
    name: SpellCheck>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SpellCheck
        fullName: SpellCheck
        uid: azure-cognitiveservices-spellcheck.SpellCheck
      - name: '>'
        fullName: '>'
  - uid: Promise<HttpOperationResponse<azure-cognitiveservices-spellcheck.SpellCheck>>
    name: SpellCheck>>
    spec.typeScript:
      - name: Promise<HttpOperationResponse<
        fullName: Promise<HttpOperationResponse<
      - name: SpellCheck
        fullName: SpellCheck
        uid: azure-cognitiveservices-spellcheck.SpellCheck
      - name: '>>'
        fullName: '>>'