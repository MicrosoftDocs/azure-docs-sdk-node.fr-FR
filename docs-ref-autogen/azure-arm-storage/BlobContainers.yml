### YamlMime:UniversalReference
ms.openlocfilehash: f6278ec3e2f1f1451d80e1327f91eed10a0fc78d
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 08/12/2018
ms.locfileid: "40059537"
items:
- uid: azure-arm-storage.BlobContainers
  name: BlobContainers
  fullName: BlobContainers
  children:
  - azure-arm-storage.BlobContainers.clearLegalHold
  - azure-arm-storage.BlobContainers.clearLegalHold_1
  - azure-arm-storage.BlobContainers.clearLegalHold_2
  - azure-arm-storage.BlobContainers.clearLegalHoldWithHttpOperationResponse
  - azure-arm-storage.BlobContainers.create
  - azure-arm-storage.BlobContainers.create_2
  - azure-arm-storage.BlobContainers.create_1
  - azure-arm-storage.BlobContainers.createOrUpdateImmutabilityPolicy
  - azure-arm-storage.BlobContainers.createOrUpdateImmutabilityPolicy_1
  - azure-arm-storage.BlobContainers.createOrUpdateImmutabilityPolicy_2
  - azure-arm-storage.BlobContainers.createOrUpdateImmutabilityPolicyWithHttpOperationResponse
  - azure-arm-storage.BlobContainers.createWithHttpOperationResponse
  - azure-arm-storage.BlobContainers.deleteImmutabilityPolicy_1
  - azure-arm-storage.BlobContainers.deleteImmutabilityPolicy
  - azure-arm-storage.BlobContainers.deleteImmutabilityPolicy_2
  - azure-arm-storage.BlobContainers.deleteImmutabilityPolicyWithHttpOperationResponse
  - azure-arm-storage.BlobContainers.deleteMethod
  - azure-arm-storage.BlobContainers.deleteMethod_1
  - azure-arm-storage.BlobContainers.deleteMethod_2
  - azure-arm-storage.BlobContainers.deleteMethodWithHttpOperationResponse
  - azure-arm-storage.BlobContainers.extendImmutabilityPolicy
  - azure-arm-storage.BlobContainers.extendImmutabilityPolicy_1
  - azure-arm-storage.BlobContainers.extendImmutabilityPolicy_2
  - azure-arm-storage.BlobContainers.extendImmutabilityPolicyWithHttpOperationResponse
  - azure-arm-storage.BlobContainers.get
  - azure-arm-storage.BlobContainers.get_1
  - azure-arm-storage.BlobContainers.get_2
  - azure-arm-storage.BlobContainers.getImmutabilityPolicy
  - azure-arm-storage.BlobContainers.getImmutabilityPolicy_2
  - azure-arm-storage.BlobContainers.getImmutabilityPolicy_1
  - azure-arm-storage.BlobContainers.getImmutabilityPolicyWithHttpOperationResponse
  - azure-arm-storage.BlobContainers.getWithHttpOperationResponse
  - azure-arm-storage.BlobContainers.list
  - azure-arm-storage.BlobContainers.list_1
  - azure-arm-storage.BlobContainers.list_2
  - azure-arm-storage.BlobContainers.listWithHttpOperationResponse
  - azure-arm-storage.BlobContainers.lockImmutabilityPolicy
  - azure-arm-storage.BlobContainers.lockImmutabilityPolicy_1
  - azure-arm-storage.BlobContainers.lockImmutabilityPolicy_2
  - azure-arm-storage.BlobContainers.lockImmutabilityPolicyWithHttpOperationResponse
  - azure-arm-storage.BlobContainers.setLegalHold
  - azure-arm-storage.BlobContainers.setLegalHold_1
  - azure-arm-storage.BlobContainers.setLegalHold_2
  - azure-arm-storage.BlobContainers.setLegalHoldWithHttpOperationResponse
  - azure-arm-storage.BlobContainers.update
  - azure-arm-storage.BlobContainers.update_1
  - azure-arm-storage.BlobContainers.update_2
  - azure-arm-storage.BlobContainers.updateWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.clearLegalHold
  name: clearLegalHold
  children: []
  type: method
  langs:
  - typeScript
  summary: Efface juridique conserve des balises. Effacement de la balise même ou inexistante entraîne une opération idempotente. ClearLegalHold efface uniquement les balises spécifiées dans la demande.
  syntax:
    content: 'function clearLegalHold(resourceGroupName: string, accountName: string, containerName: string, tags: string[], options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Le nom du groupe de ressources au sein de l’abonnement de l’utilisateur. Le nom respecte la casse.
    - id: accountName
      type:
      - string
      description: >
        Le nom du compte de stockage au sein du groupe de ressources spécifié. Ce nom doit comprendre entre 3 et 24 caractères, uniquement des lettres en minuscules et des nombres.
    - id: containerName
      type:
      - string
      description: >
        Nom du conteneur d’objets blob au sein du compte de stockage spécifié. Noms de conteneur d’objets BLOB doivent être comprise entre 3 et 63 caractères et des lettres minuscules, des chiffres et tirets (-).

        Chaque tiret (-) doit être immédiatement précédé et suivi par une lettre ou un chiffre.
    - id: tags
      type:
      - string[]
      description: >
        Chaque balise doit être 3 et 23 caractères alphanumériques et est normalisée en minuscules à des stratégies de restriction logicielle.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.LegalHold>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.clearLegalHold_1
  name: clearLegalHold
  children: []
  type: method
  langs:
  - typeScript
  summary: Efface juridique conserve des balises. Effacement de la balise même ou inexistante entraîne une opération idempotente. ClearLegalHold efface uniquement les balises spécifiées dans la demande.
  syntax:
    content: 'function clearLegalHold(resourceGroupName: string, accountName: string, containerName: string, tags: string[], callback: ServiceCallback<LegalHold>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: tags
      type:
      - string[]
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.LegalHold>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.LegalHold>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.clearLegalHold_2
  name: clearLegalHold
  children: []
  type: method
  langs:
  - typeScript
  summary: Efface juridique conserve des balises. Effacement de la balise même ou inexistante entraîne une opération idempotente. ClearLegalHold efface uniquement les balises spécifiées dans la demande.
  syntax:
    content: 'function clearLegalHold(resourceGroupName: string, accountName: string, containerName: string, tags: string[], options: function, callback: ServiceCallback<LegalHold>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: tags
      type:
      - string[]
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.LegalHold>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.LegalHold>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.clearLegalHoldWithHttpOperationResponse
  name: clearLegalHoldWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Efface juridique conserve des balises. Effacement de la balise même ou inexistante entraîne une opération idempotente. ClearLegalHold efface uniquement les balises spécifiées dans la demande.
  syntax:
    content: 'function clearLegalHoldWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, tags: string[], options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Le nom du groupe de ressources au sein de l’abonnement de l’utilisateur. Le nom respecte la casse.
    - id: accountName
      type:
      - string
      description: >
        Le nom du compte de stockage au sein du groupe de ressources spécifié. Ce nom doit comprendre entre 3 et 24 caractères, uniquement des lettres en minuscules et des nombres.
    - id: containerName
      type:
      - string
      description: >
        Nom du conteneur d’objets blob au sein du compte de stockage spécifié. Noms de conteneur d’objets BLOB doivent être comprise entre 3 et 63 caractères et des lettres minuscules, des chiffres et tirets (-).

        Chaque tiret (-) doit être immédiatement précédé et suivi par une lettre ou un chiffre.
    - id: tags
      type:
      - string[]
      description: >
        Chaque balise doit être 3 et 23 caractères alphanumériques et est normalisée en minuscules à des stratégies de restriction logicielle.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.LegalHold>>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.create
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: Crée un nouveau conteneur sous le compte spécifié comme décrit dans le corps de la demande. La ressource de conteneur inclut les métadonnées et propriétés de ce conteneur. Il n’inclut pas d’une liste des objets BLOB contenus par le conteneur.
  syntax:
    content: 'function create(resourceGroupName: string, accountName: string, containerName: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Le nom du groupe de ressources au sein de l’abonnement de l’utilisateur. Le nom respecte la casse.
    - id: accountName
      type:
      - string
      description: >
        Le nom du compte de stockage au sein du groupe de ressources spécifié. Ce nom doit comprendre entre 3 et 24 caractères, uniquement des lettres en minuscules et des nombres.
    - id: containerName
      type:
      - string
      description: >
        Nom du conteneur d’objets blob au sein du compte de stockage spécifié. Noms de conteneur d’objets BLOB doivent être comprise entre 3 et 63 caractères et des lettres minuscules, des chiffres et tirets (-).

        Chaque tiret (-) doit être immédiatement précédé et suivi par une lettre ou un chiffre.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.BlobContainer>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.create_2
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: Crée un nouveau conteneur sous le compte spécifié comme décrit dans le corps de la demande. La ressource de conteneur inclut les métadonnées et propriétés de ce conteneur. Il n’inclut pas d’une liste des objets BLOB contenus par le conteneur.
  syntax:
    content: 'function create(resourceGroupName: string, accountName: string, containerName: string, options: function, callback: ServiceCallback<BlobContainer>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.BlobContainer>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.BlobContainer>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.create_1
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: Crée un nouveau conteneur sous le compte spécifié comme décrit dans le corps de la demande. La ressource de conteneur inclut les métadonnées et propriétés de ce conteneur. Il n’inclut pas d’une liste des objets BLOB contenus par le conteneur.
  syntax:
    content: 'function create(resourceGroupName: string, accountName: string, containerName: string, callback: ServiceCallback<BlobContainer>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.BlobContainer>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.BlobContainer>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.createOrUpdateImmutabilityPolicy
  name: createOrUpdateImmutabilityPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: Crée ou met à jour une stratégie d’immuabilité déverrouillé. ETag dans If-Match est honoré si donné, mais pas obligatoire pour cette opération.
  syntax:
    content: 'function createOrUpdateImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, immutabilityPeriodSinceCreationInDays: number, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Le nom du groupe de ressources au sein de l’abonnement de l’utilisateur. Le nom respecte la casse.
    - id: accountName
      type:
      - string
      description: >
        Le nom du compte de stockage au sein du groupe de ressources spécifié. Ce nom doit comprendre entre 3 et 24 caractères, uniquement des lettres en minuscules et des nombres.
    - id: containerName
      type:
      - string
      description: >
        Nom du conteneur d’objets blob au sein du compte de stockage spécifié. Noms de conteneur d’objets BLOB doivent être comprise entre 3 et 63 caractères et des lettres minuscules, des chiffres et tirets (-).

        Chaque tiret (-) doit être immédiatement précédé et suivi par une lettre ou un chiffre.
    - id: immutabilityPeriodSinceCreationInDays
      type:
      - number
      description: >
        La période d’immuabilité des objets BLOB dans le conteneur depuis la création de la stratégie, en jours.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.ImmutabilityPolicy>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.createOrUpdateImmutabilityPolicy_1
  name: createOrUpdateImmutabilityPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: Crée ou met à jour une stratégie d’immuabilité déverrouillé. ETag dans If-Match est honoré si donné, mais pas obligatoire pour cette opération.
  syntax:
    content: 'function createOrUpdateImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, immutabilityPeriodSinceCreationInDays: number, callback: ServiceCallback<ImmutabilityPolicy>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: immutabilityPeriodSinceCreationInDays
      type:
      - number
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.ImmutabilityPolicy>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.ImmutabilityPolicy>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.createOrUpdateImmutabilityPolicy_2
  name: createOrUpdateImmutabilityPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: Crée ou met à jour une stratégie d’immuabilité déverrouillé. ETag dans If-Match est honoré si donné, mais pas obligatoire pour cette opération.
  syntax:
    content: 'function createOrUpdateImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, immutabilityPeriodSinceCreationInDays: number, options: function, callback: ServiceCallback<ImmutabilityPolicy>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: immutabilityPeriodSinceCreationInDays
      type:
      - number
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.ImmutabilityPolicy>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.ImmutabilityPolicy>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.createOrUpdateImmutabilityPolicyWithHttpOperationResponse
  name: createOrUpdateImmutabilityPolicyWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Crée ou met à jour une stratégie d’immuabilité déverrouillé. ETag dans If-Match est honoré si donné, mais pas obligatoire pour cette opération.
  syntax:
    content: 'function createOrUpdateImmutabilityPolicyWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, immutabilityPeriodSinceCreationInDays: number, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Le nom du groupe de ressources au sein de l’abonnement de l’utilisateur. Le nom respecte la casse.
    - id: accountName
      type:
      - string
      description: >
        Le nom du compte de stockage au sein du groupe de ressources spécifié. Ce nom doit comprendre entre 3 et 24 caractères, uniquement des lettres en minuscules et des nombres.
    - id: containerName
      type:
      - string
      description: >
        Nom du conteneur d’objets blob au sein du compte de stockage spécifié. Noms de conteneur d’objets BLOB doivent être comprise entre 3 et 63 caractères et des lettres minuscules, des chiffres et tirets (-).

        Chaque tiret (-) doit être immédiatement précédé et suivi par une lettre ou un chiffre.
    - id: immutabilityPeriodSinceCreationInDays
      type:
      - number
      description: >
        La période d’immuabilité des objets BLOB dans le conteneur depuis la création de la stratégie, en jours.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.ImmutabilityPolicy>>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.createWithHttpOperationResponse
  name: createWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Crée un nouveau conteneur sous le compte spécifié comme décrit dans le corps de la demande. La ressource de conteneur inclut les métadonnées et propriétés de ce conteneur. Il n’inclut pas d’une liste des objets BLOB contenus par le conteneur.
  syntax:
    content: 'function createWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Le nom du groupe de ressources au sein de l’abonnement de l’utilisateur. Le nom respecte la casse.
    - id: accountName
      type:
      - string
      description: >
        Le nom du compte de stockage au sein du groupe de ressources spécifié. Ce nom doit comprendre entre 3 et 24 caractères, uniquement des lettres en minuscules et des nombres.
    - id: containerName
      type:
      - string
      description: >
        Nom du conteneur d’objets blob au sein du compte de stockage spécifié. Noms de conteneur d’objets BLOB doivent être comprise entre 3 et 63 caractères et des lettres minuscules, des chiffres et tirets (-).

        Chaque tiret (-) doit être immédiatement précédé et suivi par une lettre ou un chiffre.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.BlobContainer>>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.deleteImmutabilityPolicy_1
  name: deleteImmutabilityPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: Abandonne une stratégie d’immuabilité déverrouillé. La réponse de suppression a immutabilityPeriodSinceCreationInDays définie sur 0. ETag dans If-Match est requis pour cette opération. Suppression d’une stratégie d’immuabilité verrouillée est interdit, seul moyen consiste à supprimer le conteneur après la suppression de tous les objets BLOB à l’intérieur du conteneur.
  syntax:
    content: 'function deleteImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, callback: ServiceCallback<ImmutabilityPolicy>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: ifMatch
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.ImmutabilityPolicy>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.ImmutabilityPolicy>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.deleteImmutabilityPolicy
  name: deleteImmutabilityPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: Abandonne une stratégie d’immuabilité déverrouillé. La réponse de suppression a immutabilityPeriodSinceCreationInDays définie sur 0. ETag dans If-Match est requis pour cette opération. Suppression d’une stratégie d’immuabilité verrouillée est interdit, seul moyen consiste à supprimer le conteneur après la suppression de tous les objets BLOB à l’intérieur du conteneur.
  syntax:
    content: 'function deleteImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Le nom du groupe de ressources au sein de l’abonnement de l’utilisateur. Le nom respecte la casse.
    - id: accountName
      type:
      - string
      description: >
        Le nom du compte de stockage au sein du groupe de ressources spécifié. Ce nom doit comprendre entre 3 et 24 caractères, uniquement des lettres en minuscules et des nombres.
    - id: containerName
      type:
      - string
      description: >
        Nom du conteneur d’objets blob au sein du compte de stockage spécifié. Noms de conteneur d’objets BLOB doivent être comprise entre 3 et 63 caractères et des lettres minuscules, des chiffres et tirets (-).

        Chaque tiret (-) doit être immédiatement précédé et suivi par une lettre ou un chiffre.
    - id: ifMatch
      type:
      - string
      description: >
        Version d’état (ETag) entité de la stratégie d’immuabilité pour mettre à jour. La valeur « * » peut être utilisé pour appliquer l’opération uniquement si la stratégie d’immuabilité existe déjà. Si omis, cette opération sera toujours appliquée.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.ImmutabilityPolicy>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.deleteImmutabilityPolicy_2
  name: deleteImmutabilityPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: Abandonne une stratégie d’immuabilité déverrouillé. La réponse de suppression a immutabilityPeriodSinceCreationInDays définie sur 0. ETag dans If-Match est requis pour cette opération. Suppression d’une stratégie d’immuabilité verrouillée est interdit, seul moyen consiste à supprimer le conteneur après la suppression de tous les objets BLOB à l’intérieur du conteneur.
  syntax:
    content: 'function deleteImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, options: function, callback: ServiceCallback<ImmutabilityPolicy>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: ifMatch
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.ImmutabilityPolicy>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.ImmutabilityPolicy>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.deleteImmutabilityPolicyWithHttpOperationResponse
  name: deleteImmutabilityPolicyWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Abandonne une stratégie d’immuabilité déverrouillé. La réponse de suppression a immutabilityPeriodSinceCreationInDays définie sur 0. ETag dans If-Match est requis pour cette opération. Suppression d’une stratégie d’immuabilité verrouillée est interdit, seul moyen consiste à supprimer le conteneur après la suppression de tous les objets BLOB à l’intérieur du conteneur.
  syntax:
    content: 'function deleteImmutabilityPolicyWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Le nom du groupe de ressources au sein de l’abonnement de l’utilisateur. Le nom respecte la casse.
    - id: accountName
      type:
      - string
      description: >
        Le nom du compte de stockage au sein du groupe de ressources spécifié. Ce nom doit comprendre entre 3 et 24 caractères, uniquement des lettres en minuscules et des nombres.
    - id: containerName
      type:
      - string
      description: >
        Nom du conteneur d’objets blob au sein du compte de stockage spécifié. Noms de conteneur d’objets BLOB doivent être comprise entre 3 et 63 caractères et des lettres minuscules, des chiffres et tirets (-).

        Chaque tiret (-) doit être immédiatement précédé et suivi par une lettre ou un chiffre.
    - id: ifMatch
      type:
      - string
      description: >
        Version d’état (ETag) entité de la stratégie d’immuabilité pour mettre à jour. La valeur « * » peut être utilisé pour appliquer l’opération uniquement si la stratégie d’immuabilité existe déjà. Si omis, cette opération sera toujours appliquée.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.ImmutabilityPolicy>>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.deleteMethod
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: Supprime le conteneur sous son compte spécifié.
  syntax:
    content: 'function deleteMethod(resourceGroupName: string, accountName: string, containerName: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Le nom du groupe de ressources au sein de l’abonnement de l’utilisateur. Le nom respecte la casse.
    - id: accountName
      type:
      - string
      description: >
        Le nom du compte de stockage au sein du groupe de ressources spécifié. Ce nom doit comprendre entre 3 et 24 caractères, uniquement des lettres en minuscules et des nombres.
    - id: containerName
      type:
      - string
      description: >
        Nom du conteneur d’objets blob au sein du compte de stockage spécifié. Noms de conteneur d’objets BLOB doivent être comprise entre 3 et 63 caractères et des lettres minuscules, des chiffres et tirets (-).

        Chaque tiret (-) doit être immédiatement précédé et suivi par une lettre ou un chiffre.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.deleteMethod_1
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: Supprime le conteneur sous son compte spécifié.
  syntax:
    content: 'function deleteMethod(resourceGroupName: string, accountName: string, containerName: string, callback: ServiceCallback<void>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.deleteMethod_2
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: Supprime le conteneur sous son compte spécifié.
  syntax:
    content: 'function deleteMethod(resourceGroupName: string, accountName: string, containerName: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.deleteMethodWithHttpOperationResponse
  name: deleteMethodWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Supprime le conteneur sous son compte spécifié.
  syntax:
    content: 'function deleteMethodWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Le nom du groupe de ressources au sein de l’abonnement de l’utilisateur. Le nom respecte la casse.
    - id: accountName
      type:
      - string
      description: >
        Le nom du compte de stockage au sein du groupe de ressources spécifié. Ce nom doit comprendre entre 3 et 24 caractères, uniquement des lettres en minuscules et des nombres.
    - id: containerName
      type:
      - string
      description: >
        Nom du conteneur d’objets blob au sein du compte de stockage spécifié. Noms de conteneur d’objets BLOB doivent être comprise entre 3 et 63 caractères et des lettres minuscules, des chiffres et tirets (-).

        Chaque tiret (-) doit être immédiatement précédé et suivi par une lettre ou un chiffre.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.extendImmutabilityPolicy
  name: extendImmutabilityPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: Étend l’immutabilityPeriodSinceCreationInDays d’un immutabilityPolicy verrouillé. La seule action autorisée sur une stratégie verrouillé sera cette action. ETag dans If-Match est requis pour cette opération.
  syntax:
    content: 'function extendImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, immutabilityPeriodSinceCreationInDays: number, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Le nom du groupe de ressources au sein de l’abonnement de l’utilisateur. Le nom respecte la casse.
    - id: accountName
      type:
      - string
      description: >
        Le nom du compte de stockage au sein du groupe de ressources spécifié. Ce nom doit comprendre entre 3 et 24 caractères, uniquement des lettres en minuscules et des nombres.
    - id: containerName
      type:
      - string
      description: >
        Nom du conteneur d’objets blob au sein du compte de stockage spécifié. Noms de conteneur d’objets BLOB doivent être comprise entre 3 et 63 caractères et des lettres minuscules, des chiffres et tirets (-).

        Chaque tiret (-) doit être immédiatement précédé et suivi par une lettre ou un chiffre.
    - id: ifMatch
      type:
      - string
      description: >
        Version d’état (ETag) entité de la stratégie d’immuabilité pour mettre à jour. La valeur « * » peut être utilisé pour appliquer l’opération uniquement si la stratégie d’immuabilité existe déjà. Si omis, cette opération sera toujours appliquée.
    - id: immutabilityPeriodSinceCreationInDays
      type:
      - number
      description: >
        La période d’immuabilité des objets BLOB dans le conteneur depuis la création de la stratégie, en jours.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.ImmutabilityPolicy>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.extendImmutabilityPolicy_1
  name: extendImmutabilityPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: Étend l’immutabilityPeriodSinceCreationInDays d’un immutabilityPolicy verrouillé. La seule action autorisée sur une stratégie verrouillé sera cette action. ETag dans If-Match est requis pour cette opération.
  syntax:
    content: 'function extendImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, immutabilityPeriodSinceCreationInDays: number, callback: ServiceCallback<ImmutabilityPolicy>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: ifMatch
      type:
      - string
      description: ''
    - id: immutabilityPeriodSinceCreationInDays
      type:
      - number
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.ImmutabilityPolicy>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.ImmutabilityPolicy>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.extendImmutabilityPolicy_2
  name: extendImmutabilityPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: Étend l’immutabilityPeriodSinceCreationInDays d’un immutabilityPolicy verrouillé. La seule action autorisée sur une stratégie verrouillé sera cette action. ETag dans If-Match est requis pour cette opération.
  syntax:
    content: 'function extendImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, immutabilityPeriodSinceCreationInDays: number, options: function, callback: ServiceCallback<ImmutabilityPolicy>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: ifMatch
      type:
      - string
      description: ''
    - id: immutabilityPeriodSinceCreationInDays
      type:
      - number
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.ImmutabilityPolicy>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.ImmutabilityPolicy>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.extendImmutabilityPolicyWithHttpOperationResponse
  name: extendImmutabilityPolicyWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Étend l’immutabilityPeriodSinceCreationInDays d’un immutabilityPolicy verrouillé. La seule action autorisée sur une stratégie verrouillé sera cette action. ETag dans If-Match est requis pour cette opération.
  syntax:
    content: 'function extendImmutabilityPolicyWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, immutabilityPeriodSinceCreationInDays: number, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Le nom du groupe de ressources au sein de l’abonnement de l’utilisateur. Le nom respecte la casse.
    - id: accountName
      type:
      - string
      description: >
        Le nom du compte de stockage au sein du groupe de ressources spécifié. Ce nom doit comprendre entre 3 et 24 caractères, uniquement des lettres en minuscules et des nombres.
    - id: containerName
      type:
      - string
      description: >
        Nom du conteneur d’objets blob au sein du compte de stockage spécifié. Noms de conteneur d’objets BLOB doivent être comprise entre 3 et 63 caractères et des lettres minuscules, des chiffres et tirets (-).

        Chaque tiret (-) doit être immédiatement précédé et suivi par une lettre ou un chiffre.
    - id: ifMatch
      type:
      - string
      description: >
        Version d’état (ETag) entité de la stratégie d’immuabilité pour mettre à jour. La valeur « * » peut être utilisé pour appliquer l’opération uniquement si la stratégie d’immuabilité existe déjà. Si omis, cette opération sera toujours appliquée.
    - id: immutabilityPeriodSinceCreationInDays
      type:
      - number
      description: >
        La période d’immuabilité des objets BLOB dans le conteneur depuis la création de la stratégie, en jours.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.ImmutabilityPolicy>>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.get
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient les propriétés d’un conteneur spécifié.
  syntax:
    content: 'function get(resourceGroupName: string, accountName: string, containerName: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Le nom du groupe de ressources au sein de l’abonnement de l’utilisateur. Le nom respecte la casse.
    - id: accountName
      type:
      - string
      description: >
        Le nom du compte de stockage au sein du groupe de ressources spécifié. Ce nom doit comprendre entre 3 et 24 caractères, uniquement des lettres en minuscules et des nombres.
    - id: containerName
      type:
      - string
      description: >
        Nom du conteneur d’objets blob au sein du compte de stockage spécifié. Noms de conteneur d’objets BLOB doivent être comprise entre 3 et 63 caractères et des lettres minuscules, des chiffres et tirets (-).

        Chaque tiret (-) doit être immédiatement précédé et suivi par une lettre ou un chiffre.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.BlobContainer>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.get_1
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient les propriétés d’un conteneur spécifié.
  syntax:
    content: 'function get(resourceGroupName: string, accountName: string, containerName: string, callback: ServiceCallback<BlobContainer>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.BlobContainer>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.BlobContainer>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.get_2
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient les propriétés d’un conteneur spécifié.
  syntax:
    content: 'function get(resourceGroupName: string, accountName: string, containerName: string, options: function, callback: ServiceCallback<BlobContainer>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.BlobContainer>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.BlobContainer>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.getImmutabilityPolicy
  name: getImmutabilityPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient la stratégie d’immuabilité existante, ainsi que l’ETag correspondante dans les en-têtes de réponse et corps.
  syntax:
    content: 'function getImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Le nom du groupe de ressources au sein de l’abonnement de l’utilisateur. Le nom respecte la casse.
    - id: accountName
      type:
      - string
      description: >
        Le nom du compte de stockage au sein du groupe de ressources spécifié. Ce nom doit comprendre entre 3 et 24 caractères, uniquement des lettres en minuscules et des nombres.
    - id: containerName
      type:
      - string
      description: >
        Nom du conteneur d’objets blob au sein du compte de stockage spécifié. Noms de conteneur d’objets BLOB doivent être comprise entre 3 et 63 caractères et des lettres minuscules, des chiffres et tirets (-).

        Chaque tiret (-) doit être immédiatement précédé et suivi par une lettre ou un chiffre.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.ImmutabilityPolicy>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.getImmutabilityPolicy_2
  name: getImmutabilityPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient la stratégie d’immuabilité existante, ainsi que l’ETag correspondante dans les en-têtes de réponse et corps.
  syntax:
    content: 'function getImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, options: function, callback: ServiceCallback<ImmutabilityPolicy>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.ImmutabilityPolicy>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.ImmutabilityPolicy>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.getImmutabilityPolicy_1
  name: getImmutabilityPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient la stratégie d’immuabilité existante, ainsi que l’ETag correspondante dans les en-têtes de réponse et corps.
  syntax:
    content: 'function getImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, callback: ServiceCallback<ImmutabilityPolicy>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.ImmutabilityPolicy>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.ImmutabilityPolicy>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.getImmutabilityPolicyWithHttpOperationResponse
  name: getImmutabilityPolicyWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient la stratégie d’immuabilité existante, ainsi que l’ETag correspondante dans les en-têtes de réponse et corps.
  syntax:
    content: 'function getImmutabilityPolicyWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Le nom du groupe de ressources au sein de l’abonnement de l’utilisateur. Le nom respecte la casse.
    - id: accountName
      type:
      - string
      description: >
        Le nom du compte de stockage au sein du groupe de ressources spécifié. Ce nom doit comprendre entre 3 et 24 caractères, uniquement des lettres en minuscules et des nombres.
    - id: containerName
      type:
      - string
      description: >
        Nom du conteneur d’objets blob au sein du compte de stockage spécifié. Noms de conteneur d’objets BLOB doivent être comprise entre 3 et 63 caractères et des lettres minuscules, des chiffres et tirets (-).

        Chaque tiret (-) doit être immédiatement précédé et suivi par une lettre ou un chiffre.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.ImmutabilityPolicy>>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.getWithHttpOperationResponse
  name: getWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient les propriétés d’un conteneur spécifié.
  syntax:
    content: 'function getWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Le nom du groupe de ressources au sein de l’abonnement de l’utilisateur. Le nom respecte la casse.
    - id: accountName
      type:
      - string
      description: >
        Le nom du compte de stockage au sein du groupe de ressources spécifié. Ce nom doit comprendre entre 3 et 24 caractères, uniquement des lettres en minuscules et des nombres.
    - id: containerName
      type:
      - string
      description: >
        Nom du conteneur d’objets blob au sein du compte de stockage spécifié. Noms de conteneur d’objets BLOB doivent être comprise entre 3 et 63 caractères et des lettres minuscules, des chiffres et tirets (-).

        Chaque tiret (-) doit être immédiatement précédé et suivi par une lettre ou un chiffre.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.BlobContainer>>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.list
  name: list
  children: []
  type: method
  langs:
  - typeScript
  summary: Répertorie tous les conteneurs et ne prend pas en charge un préfixe comme plan de données. Stratégies de restriction logicielle aujourd'hui ne retourne le jeton de continuation.
  syntax:
    content: 'function list(resourceGroupName: string, accountName: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Le nom du groupe de ressources au sein de l’abonnement de l’utilisateur. Le nom respecte la casse.
    - id: accountName
      type:
      - string
      description: >
        Le nom du compte de stockage au sein du groupe de ressources spécifié. Ce nom doit comprendre entre 3 et 24 caractères, uniquement des lettres en minuscules et des nombres.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.ListContainerItems>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.list_1
  name: list
  children: []
  type: method
  langs:
  - typeScript
  summary: Répertorie tous les conteneurs et ne prend pas en charge un préfixe comme plan de données. Stratégies de restriction logicielle aujourd'hui ne retourne le jeton de continuation.
  syntax:
    content: 'function list(resourceGroupName: string, accountName: string, callback: ServiceCallback<ListContainerItems>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.ListContainerItems>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.ListContainerItems>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.list_2
  name: list
  children: []
  type: method
  langs:
  - typeScript
  summary: Répertorie tous les conteneurs et ne prend pas en charge un préfixe comme plan de données. Stratégies de restriction logicielle aujourd'hui ne retourne le jeton de continuation.
  syntax:
    content: 'function list(resourceGroupName: string, accountName: string, options: function, callback: ServiceCallback<ListContainerItems>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.ListContainerItems>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.ListContainerItems>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.listWithHttpOperationResponse
  name: listWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Répertorie tous les conteneurs et ne prend pas en charge un préfixe comme plan de données. Stratégies de restriction logicielle aujourd'hui ne retourne le jeton de continuation.
  syntax:
    content: 'function listWithHttpOperationResponse(resourceGroupName: string, accountName: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Le nom du groupe de ressources au sein de l’abonnement de l’utilisateur. Le nom respecte la casse.
    - id: accountName
      type:
      - string
      description: >
        Le nom du compte de stockage au sein du groupe de ressources spécifié. Ce nom doit comprendre entre 3 et 24 caractères, uniquement des lettres en minuscules et des nombres.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.ListContainerItems>>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.lockImmutabilityPolicy
  name: lockImmutabilityPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: Définit la stratégie d’immuabilité des état verrouillé. La seule action autorisée sur une stratégie verrouillée est ExtendImmutabilityPolicy action. ETag dans If-Match est requis pour cette opération.
  syntax:
    content: 'function lockImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Le nom du groupe de ressources au sein de l’abonnement de l’utilisateur. Le nom respecte la casse.
    - id: accountName
      type:
      - string
      description: >
        Le nom du compte de stockage au sein du groupe de ressources spécifié. Ce nom doit comprendre entre 3 et 24 caractères, uniquement des lettres en minuscules et des nombres.
    - id: containerName
      type:
      - string
      description: >
        Nom du conteneur d’objets blob au sein du compte de stockage spécifié. Noms de conteneur d’objets BLOB doivent être comprise entre 3 et 63 caractères et des lettres minuscules, des chiffres et tirets (-).

        Chaque tiret (-) doit être immédiatement précédé et suivi par une lettre ou un chiffre.
    - id: ifMatch
      type:
      - string
      description: >
        Version d’état (ETag) entité de la stratégie d’immuabilité pour mettre à jour. La valeur « * » peut être utilisé pour appliquer l’opération uniquement si la stratégie d’immuabilité existe déjà. Si omis, cette opération sera toujours appliquée.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.ImmutabilityPolicy>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.lockImmutabilityPolicy_1
  name: lockImmutabilityPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: Définit la stratégie d’immuabilité des état verrouillé. La seule action autorisée sur une stratégie verrouillée est ExtendImmutabilityPolicy action. ETag dans If-Match est requis pour cette opération.
  syntax:
    content: 'function lockImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, callback: ServiceCallback<ImmutabilityPolicy>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: ifMatch
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.ImmutabilityPolicy>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.ImmutabilityPolicy>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.lockImmutabilityPolicy_2
  name: lockImmutabilityPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: Définit la stratégie d’immuabilité des état verrouillé. La seule action autorisée sur une stratégie verrouillée est ExtendImmutabilityPolicy action. ETag dans If-Match est requis pour cette opération.
  syntax:
    content: 'function lockImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, options: function, callback: ServiceCallback<ImmutabilityPolicy>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: ifMatch
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.ImmutabilityPolicy>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.ImmutabilityPolicy>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.lockImmutabilityPolicyWithHttpOperationResponse
  name: lockImmutabilityPolicyWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Définit la stratégie d’immuabilité des état verrouillé. La seule action autorisée sur une stratégie verrouillée est ExtendImmutabilityPolicy action. ETag dans If-Match est requis pour cette opération.
  syntax:
    content: 'function lockImmutabilityPolicyWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Le nom du groupe de ressources au sein de l’abonnement de l’utilisateur. Le nom respecte la casse.
    - id: accountName
      type:
      - string
      description: >
        Le nom du compte de stockage au sein du groupe de ressources spécifié. Ce nom doit comprendre entre 3 et 24 caractères, uniquement des lettres en minuscules et des nombres.
    - id: containerName
      type:
      - string
      description: >
        Nom du conteneur d’objets blob au sein du compte de stockage spécifié. Noms de conteneur d’objets BLOB doivent être comprise entre 3 et 63 caractères et des lettres minuscules, des chiffres et tirets (-).

        Chaque tiret (-) doit être immédiatement précédé et suivi par une lettre ou un chiffre.
    - id: ifMatch
      type:
      - string
      description: >
        Version d’état (ETag) entité de la stratégie d’immuabilité pour mettre à jour. La valeur « * » peut être utilisé pour appliquer l’opération uniquement si la stratégie d’immuabilité existe déjà. Si omis, cette opération sera toujours appliquée.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.ImmutabilityPolicy>>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.setLegalHold
  name: setLegalHold
  children: []
  type: method
  langs:
  - typeScript
  summary: Jeux juridique conserve des balises. Définir les mêmes résultats de la balise dans une opération idempotente. SetLegalHold suit un modèle d’ajout et n’out pas effacer les balises existantes qui ne sont pas spécifiés dans la demande.
  syntax:
    content: 'function setLegalHold(resourceGroupName: string, accountName: string, containerName: string, tags: string[], options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Le nom du groupe de ressources au sein de l’abonnement de l’utilisateur. Le nom respecte la casse.
    - id: accountName
      type:
      - string
      description: >
        Le nom du compte de stockage au sein du groupe de ressources spécifié. Ce nom doit comprendre entre 3 et 24 caractères, uniquement des lettres en minuscules et des nombres.
    - id: containerName
      type:
      - string
      description: >
        Nom du conteneur d’objets blob au sein du compte de stockage spécifié. Noms de conteneur d’objets BLOB doivent être comprise entre 3 et 63 caractères et des lettres minuscules, des chiffres et tirets (-).

        Chaque tiret (-) doit être immédiatement précédé et suivi par une lettre ou un chiffre.
    - id: tags
      type:
      - string[]
      description: >
        Chaque balise doit être 3 et 23 caractères alphanumériques et est normalisée en minuscules à des stratégies de restriction logicielle.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.LegalHold>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.setLegalHold_1
  name: setLegalHold
  children: []
  type: method
  langs:
  - typeScript
  summary: Jeux juridique conserve des balises. Définir les mêmes résultats de la balise dans une opération idempotente. SetLegalHold suit un modèle d’ajout et n’out pas effacer les balises existantes qui ne sont pas spécifiés dans la demande.
  syntax:
    content: 'function setLegalHold(resourceGroupName: string, accountName: string, containerName: string, tags: string[], callback: ServiceCallback<LegalHold>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: tags
      type:
      - string[]
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.LegalHold>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.LegalHold>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.setLegalHold_2
  name: setLegalHold
  children: []
  type: method
  langs:
  - typeScript
  summary: Jeux juridique conserve des balises. Définir les mêmes résultats de la balise dans une opération idempotente. SetLegalHold suit un modèle d’ajout et n’out pas effacer les balises existantes qui ne sont pas spécifiés dans la demande.
  syntax:
    content: 'function setLegalHold(resourceGroupName: string, accountName: string, containerName: string, tags: string[], options: function, callback: ServiceCallback<LegalHold>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: tags
      type:
      - string[]
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.LegalHold>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.LegalHold>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.setLegalHoldWithHttpOperationResponse
  name: setLegalHoldWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Jeux juridique conserve des balises. Définir les mêmes résultats de la balise dans une opération idempotente. SetLegalHold suit un modèle d’ajout et n’out pas effacer les balises existantes qui ne sont pas spécifiés dans la demande.
  syntax:
    content: 'function setLegalHoldWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, tags: string[], options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Le nom du groupe de ressources au sein de l’abonnement de l’utilisateur. Le nom respecte la casse.
    - id: accountName
      type:
      - string
      description: >
        Le nom du compte de stockage au sein du groupe de ressources spécifié. Ce nom doit comprendre entre 3 et 24 caractères, uniquement des lettres en minuscules et des nombres.
    - id: containerName
      type:
      - string
      description: >
        Nom du conteneur d’objets blob au sein du compte de stockage spécifié. Noms de conteneur d’objets BLOB doivent être comprise entre 3 et 63 caractères et des lettres minuscules, des chiffres et tirets (-).

        Chaque tiret (-) doit être immédiatement précédé et suivi par une lettre ou un chiffre.
    - id: tags
      type:
      - string[]
      description: >
        Chaque balise doit être 3 et 23 caractères alphanumériques et est normalisée en minuscules à des stratégies de restriction logicielle.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.LegalHold>>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.update
  name: update
  children: []
  type: method
  langs:
  - typeScript
  summary: Met à jour les propriétés du conteneur comme spécifié dans le corps de la demande. Propriétés non mentionnées dans la demande sera inchangées. Mise à jour échoue si le conteneur spécifié n’existe pas déjà.
  syntax:
    content: 'function update(resourceGroupName: string, accountName: string, containerName: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Le nom du groupe de ressources au sein de l’abonnement de l’utilisateur. Le nom respecte la casse.
    - id: accountName
      type:
      - string
      description: >
        Le nom du compte de stockage au sein du groupe de ressources spécifié. Ce nom doit comprendre entre 3 et 24 caractères, uniquement des lettres en minuscules et des nombres.
    - id: containerName
      type:
      - string
      description: >
        Nom du conteneur d’objets blob au sein du compte de stockage spécifié. Noms de conteneur d’objets BLOB doivent être comprise entre 3 et 63 caractères et des lettres minuscules, des chiffres et tirets (-).

        Chaque tiret (-) doit être immédiatement précédé et suivi par une lettre ou un chiffre.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.BlobContainer>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.update_1
  name: update
  children: []
  type: method
  langs:
  - typeScript
  summary: Met à jour les propriétés du conteneur comme spécifié dans le corps de la demande. Propriétés non mentionnées dans la demande sera inchangées. Mise à jour échoue si le conteneur spécifié n’existe pas déjà.
  syntax:
    content: 'function update(resourceGroupName: string, accountName: string, containerName: string, callback: ServiceCallback<BlobContainer>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.BlobContainer>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.BlobContainer>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.update_2
  name: update
  children: []
  type: method
  langs:
  - typeScript
  summary: Met à jour les propriétés du conteneur comme spécifié dans le corps de la demande. Propriétés non mentionnées dans la demande sera inchangées. Mise à jour échoue si le conteneur spécifié n’existe pas déjà.
  syntax:
    content: 'function update(resourceGroupName: string, accountName: string, containerName: string, options: function, callback: ServiceCallback<BlobContainer>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.BlobContainer>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.BlobContainer>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.updateWithHttpOperationResponse
  name: updateWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Met à jour les propriétés du conteneur comme spécifié dans le corps de la demande. Propriétés non mentionnées dans la demande sera inchangées. Mise à jour échoue si le conteneur spécifié n’existe pas déjà.
  syntax:
    content: 'function updateWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, options?: function)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Le nom du groupe de ressources au sein de l’abonnement de l’utilisateur. Le nom respecte la casse.
    - id: accountName
      type:
      - string
      description: >
        Le nom du compte de stockage au sein du groupe de ressources spécifié. Ce nom doit comprendre entre 3 et 24 caractères, uniquement des lettres en minuscules et des nombres.
    - id: containerName
      type:
      - string
      description: >
        Nom du conteneur d’objets blob au sein du compte de stockage spécifié. Noms de conteneur d’objets BLOB doivent être comprise entre 3 et 63 caractères et des lettres minuscules, des chiffres et tirets (-).

        Chaque tiret (-) doit être immédiatement précédé et suivi par une lettre ou un chiffre.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.BlobContainer>>
  package: azure-arm-storage
references:
- uid: Promise<azure-arm-storage.LegalHold>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: LegalHold
    fullName: LegalHold
    uid: azure-arm-storage.LegalHold
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-storage.LegalHold>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: LegalHold
    fullName: LegalHold
    uid: azure-arm-storage.LegalHold
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-storage.LegalHold>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: LegalHold
    fullName: LegalHold
    uid: azure-arm-storage.LegalHold
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-storage.BlobContainer>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: BlobContainer
    fullName: BlobContainer
    uid: azure-arm-storage.BlobContainer
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-storage.BlobContainer>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: BlobContainer
    fullName: BlobContainer
    uid: azure-arm-storage.BlobContainer
  - name: '>'
    fullName: '>'
- uid: Promise<azure-arm-storage.ImmutabilityPolicy>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ImmutabilityPolicy
    fullName: ImmutabilityPolicy
    uid: azure-arm-storage.ImmutabilityPolicy
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-storage.ImmutabilityPolicy>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ImmutabilityPolicy
    fullName: ImmutabilityPolicy
    uid: azure-arm-storage.ImmutabilityPolicy
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-storage.ImmutabilityPolicy>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ImmutabilityPolicy
    fullName: ImmutabilityPolicy
    uid: azure-arm-storage.ImmutabilityPolicy
  - name: '>>'
    fullName: '>>'
- uid: Promise<HttpOperationResponse<azure-arm-storage.BlobContainer>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: BlobContainer
    fullName: BlobContainer
    uid: azure-arm-storage.BlobContainer
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-storage.ListContainerItems>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ListContainerItems
    fullName: ListContainerItems
    uid: azure-arm-storage.ListContainerItems
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-storage.ListContainerItems>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ListContainerItems
    fullName: ListContainerItems
    uid: azure-arm-storage.ListContainerItems
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-storage.ListContainerItems>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ListContainerItems
    fullName: ListContainerItems
    uid: azure-arm-storage.ListContainerItems
  - name: '>>'
    fullName: '>>'
