### YamlMime:UniversalReference
items:
  - uid: '@azure/batch.StartTask'
    name: StartTask
    fullName: StartTask
    children:
      - '@azure/batch.StartTask.commandLine'
      - '@azure/batch.StartTask.containerSettings'
      - '@azure/batch.StartTask.environmentSettings'
      - '@azure/batch.StartTask.maxTaskRetryCount'
      - '@azure/batch.StartTask.resourceFiles'
      - '@azure/batch.StartTask.userIdentity'
      - '@azure/batch.StartTask.waitForSuccess'
    langs:
      - typeScript
    type: interface
    summary: 'Lot réessaiera tâches quand une opération de récupération est déclenchée sur un nœud de calcul. Exemples d’opérations de récupération incluent (mais ne sont pas limitées à) quand un nœud de calcul défectueux est redémarré ou un nœud de calcul a disparu en raison d’une défaillance de l’hôte. Effectue une nouvelle tentative en raison d’une récupération opérations sont indépendantes d’et ne sont pas comptées dans le maxTaskRetryCount. Même si le maxTaskRetryCount est 0, une nouvelle tentative interne en raison d’une opération de récupération peut-être se produire. Pour cette raison, toutes les tâches doivent être idempotentes. Cela signifie que les tâches doivent tolérer est interrompu et redémarré sans provoquer de toute altération ou des données en double. Les meilleures pratiques pour les tâches de longue est d’utiliser une forme de points de contrôle. Dans certains cas la tâche de démarrage peut être réexécutée même si le nœud n’a pas redémarré. Une attention particulière doit être prise pour éviter les tâches de démarrage qui services depuis le répertoire de travail de tâche de démarrage, d’installation/de démarrage ou de créer des processus de dissociation car cela bloquera le lot de pouvoir s’exécuter à nouveau la tâche de démarrage.'
    package: '@azure/batch'
  - uid: '@azure/batch.StartTask.commandLine'
    name: commandLine
    fullName: commandLine
    children: []
    langs:
      - typeScript
    type: property
    summary: "La ligne de commande de la tâche de démarrage. La ligne de commande ne s’exécute pas sous un interpréteur de commandes et par conséquent ne peut pas bénéficier des fonctionnalités de shell comme expansion de variables d’environnement. Si vous souhaitez tirer parti de ces fonctionnalités, vous devez appeler l’interpréteur de commandes dans la ligne de commande, par exemple à l’aide de «\_cmd /c MyCommand\_» dans Windows ou «\_/ bin/sh - c MyCommand\_» dans Linux. Si la ligne de commande fait référence à des chemins d’accès de fichier, il doit utiliser un chemin d’accès relatif (relatif au répertoire de travail tâche), ou la variable d’environnement fourni par lots (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables)."
    syntax:
      content: 'commandLine: string'
      return:
        type:
          - string
    package: '@azure/batch'
  - uid: '@azure/batch.StartTask.containerSettings'
    name: containerSettings
    fullName: containerSettings
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Les paramètres pour le conteneur sous lequel s’exécute la tâche de démarrage. Lorsque cela est spécifié, tous les répertoires de manière récursive sous le AZ_BATCH_NODE_ROOT_DIR (la racine des répertoires Azure Batch sur le nœud) sont mappées dans le conteneur, toutes les variables d’environnement de tâche sont mappés dans le conteneur, et la ligne de commande de tâche est exécutée dans le conteneur.'
    optional: true
    syntax:
      content: 'containerSettings?: TaskContainerSettings'
      return:
        type:
          - '@azure/batch.TaskContainerSettings'
    package: '@azure/batch'
  - uid: '@azure/batch.StartTask.environmentSettings'
    name: environmentSettings
    fullName: environmentSettings
    children: []
    langs:
      - typeScript
    type: property
    summary: Une liste de paramètres de variable d’environnement pour la tâche de démarrage.
    optional: true
    syntax:
      content: 'environmentSettings?: EnvironmentSetting[]'
      return:
        type:
          - '@azure/batch.EnvironmentSetting[]'
    package: '@azure/batch'
  - uid: '@azure/batch.StartTask.maxTaskRetryCount'
    name: maxTaskRetryCount
    fullName: maxTaskRetryCount
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Nombre maximal de fois que la tâche peut être retentée. Le service Batch retente une tâche si le code de sortie de celle-ci diffère de zéro. Notez que cette valeur contrôle spécifiquement le nombre de nouvelles tentatives. Le service Batch tente la tâche une fois et peut réessayer jusqu’à cette limite. Par exemple, si le nombre maximal de tentatives est 3, Batch tente la tâche jusqu'à 4 fois (tentative initiale et 3 tentatives).
      Si le nombre maximal de tentatives est 0, le service Batch ne retente pas la tâche. Si le nombre maximal de tentatives est -1, les tentatives de service Batch la tâche sans limite.
    optional: true
    syntax:
      content: 'maxTaskRetryCount?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/batch'
  - uid: '@azure/batch.StartTask.resourceFiles'
    name: resourceFiles
    fullName: resourceFiles
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Une liste de fichiers qui permet de télécharger le service Batch pour le nœud de calcul avant d’exécuter la ligne de commande.  Il existe une taille maximale pour la liste des fichiers de ressources. Lorsque la taille maximale est dépassée, la demande échoue et le code d’erreur de réponse sera RequestEntityTooLarge. Si cela se produit, la collection de ResourceFiles doit être réduite en taille. Cela est possible en utilisant les fichiers .zip, les Packages d’Application ou les conteneurs Docker. Les fichiers répertoriés sous cet élément se trouvent dans le répertoire de travail de la tâche.'
    optional: true
    syntax:
      content: 'resourceFiles?: ResourceFile[]'
      return:
        type:
          - '@azure/batch.ResourceFile[]'
    package: '@azure/batch'
  - uid: '@azure/batch.StartTask.userIdentity'
    name: userIdentity
    fullName: userIdentity
    children: []
    langs:
      - typeScript
    type: property
    summary: 'L’identité d’utilisateur sous lequel s’exécute la tâche de démarrage. Si omis, la tâche s’exécute comme un utilisateur non administratif unique à la tâche.'
    optional: true
    syntax:
      content: 'userIdentity?: UserIdentity'
      return:
        type:
          - '@azure/batch.UserIdentity'
    package: '@azure/batch'
  - uid: '@azure/batch.StartTask.waitForSuccess'
    name: waitForSuccess
    fullName: waitForSuccess
    children: []
    langs:
      - typeScript
    type: property
    summary: "Indique si le service Batch doit attendre la tâche de démarrage se termine avec succès (autrement dit, pour quitter avec code de sortie 0) avant de planifier des tâches sur le nœud de calcul. Si la valeur true et que la tâche de démarrage échoue sur un nœud de calcul, le service Batch retente la tâche de démarrage jusqu'à son nombre maximal de tentatives (maxTaskRetryCount). Si la tâche a toujours pas terminée après toutes les nouvelles tentatives, les marques de service Batch le nœud de calcul inutilisable et ne sera pas planifier des tâches à ce dernier.\nCette condition peut être détectée par le biais du nœud État et Échec infos détails. Si la valeur est false, le service Batch n’attend pas la tâche de démarrage se termine. Dans ce cas, les autres tâches peuvent commencer à s’exécuter sur le nœud de calcul tandis que la tâche de démarrage est en cours d’exécution\_; et même si la tâche de démarrage échoue, les nouvelles tâches continueront d’être planifiés sur le nœud. La valeur par défaut est false."
    optional: true
    syntax:
      content: 'waitForSuccess?: undefined | false | true'
      return:
        type:
          - undefined | false | true
    package: '@azure/batch'
references:
  - uid: '@azure/batch.TaskContainerSettings'
    name: TaskContainerSettings
    spec.typeScript:
      - name: TaskContainerSettings
        fullName: TaskContainerSettings
        uid: '@azure/batch.TaskContainerSettings'
  - uid: '@azure/batch.EnvironmentSetting[]'
    name: 'EnvironmentSetting[]'
    spec.typeScript:
      - name: EnvironmentSetting
        fullName: EnvironmentSetting
        uid: '@azure/batch.EnvironmentSetting'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/batch.ResourceFile[]'
    name: 'ResourceFile[]'
    spec.typeScript:
      - name: ResourceFile
        fullName: ResourceFile
        uid: '@azure/batch.ResourceFile'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/batch.UserIdentity'
    name: UserIdentity
    spec.typeScript:
      - name: UserIdentity
        fullName: UserIdentity
        uid: '@azure/batch.UserIdentity'