### YamlMime:UniversalReference
items:
  - uid: '@azure/batch.PoolUpdatePropertiesParameter'
    name: PoolUpdatePropertiesParameter
    fullName: PoolUpdatePropertiesParameter
    children:
      - '@azure/batch.PoolUpdatePropertiesParameter.applicationPackageReferences'
      - '@azure/batch.PoolUpdatePropertiesParameter.certificateReferences'
      - '@azure/batch.PoolUpdatePropertiesParameter.metadata'
      - '@azure/batch.PoolUpdatePropertiesParameter.startTask'
    langs:
      - typeScript
    type: interface
    summary: Interface représentant PoolUpdatePropertiesParameter.
    package: '@azure/batch'
  - uid: '@azure/batch.PoolUpdatePropertiesParameter.applicationPackageReferences'
    name: applicationPackageReferences
    fullName: applicationPackageReferences
    children: []
    langs:
      - typeScript
    type: property
    summary: 'La liste des packages d’application à être installé sur chaque nœud de calcul dans le pool. La liste remplace les références de package application existante sur le pool. Modifications des références de package d’application affectent tous les nouveaux nœuds de calcul rejoindre le pool, mais n’affectent pas les nœuds de calcul qui se trouvent déjà dans le pool jusqu''à ce qu’ils sont redémarrés ou réimagés. Il existe un maximum de 10 références de package d’application sur n’importe quel pool donné. Si omis, ou si vous spécifiez une collection vide, des références de packages d’application sont supprimés à partir du pool.'
    syntax:
      content: 'applicationPackageReferences: ApplicationPackageReference[]'
      return:
        type:
          - '@azure/batch.ApplicationPackageReference[]'
    package: '@azure/batch'
  - uid: '@azure/batch.PoolUpdatePropertiesParameter.certificateReferences'
    name: certificateReferences
    fullName: certificateReferences
    children: []
    langs:
      - typeScript
    type: property
    summary: "Une liste de certificats soit installé sur chaque nœud de calcul dans le pool. Cette liste remplace les références de certificat existant configurés sur le pool. Si vous spécifiez une collection vide, toutes les références certificat existants sont supprimés à partir du pool. Pour les nœuds de calcul Windows, le service Batch installe les certificats à l’emplacement et le magasin de certificats spécifié. Pour les nœuds de calcul Linux, les certificats sont stockés dans un répertoire dans le répertoire de travail tâche et un environnement que variable AZ_BATCH_CERTIFICATES_DIR est fournie à la tâche d’interrogation pour cet emplacement. Pour les certificats avec une visibilité de l’utilisateur «\_distant\_», un répertoire de «\_certificats\_» est créé dans le répertoire de base (par exemple, /home/ {nom_utilisateur} / certificats) et les certificats sont placés dans ce répertoire."
    syntax:
      content: 'certificateReferences: CertificateReference[]'
      return:
        type:
          - '@azure/batch.CertificateReference[]'
    package: '@azure/batch'
  - uid: '@azure/batch.PoolUpdatePropertiesParameter.metadata'
    name: metadata
    fullName: metadata
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Une liste de paires nom-valeur associées au pool en tant que métadonnées. Cette liste remplace toutes les métadonnées existantes configurée sur le pool. Si omis, ou si vous spécifiez une collection vide, toutes les métadonnées existantes sont supprimée à partir du pool.'
    syntax:
      content: 'metadata: MetadataItem[]'
      return:
        type:
          - '@azure/batch.MetadataItem[]'
    package: '@azure/batch'
  - uid: '@azure/batch.PoolUpdatePropertiesParameter.startTask'
    name: startTask
    fullName: startTask
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Une tâche à exécuter sur chaque nœud de calcul tel qu’il rejoint le pool. La tâche s’exécute lorsque le nœud est ajouté au pool ou lorsque le nœud est redémarré. Si cet élément est présent, elle remplace toute tâche de démarrage existante. Cas d’omission, toute tâche de démarrage existante est supprimée à partir du pool.'
    optional: true
    syntax:
      content: 'startTask?: StartTask'
      return:
        type:
          - '@azure/batch.StartTask'
    package: '@azure/batch'
references:
  - uid: '@azure/batch.ApplicationPackageReference[]'
    name: 'ApplicationPackageReference[]'
    spec.typeScript:
      - name: ApplicationPackageReference
        fullName: ApplicationPackageReference
        uid: '@azure/batch.ApplicationPackageReference'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/batch.CertificateReference[]'
    name: 'CertificateReference[]'
    spec.typeScript:
      - name: CertificateReference
        fullName: CertificateReference
        uid: '@azure/batch.CertificateReference'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/batch.MetadataItem[]'
    name: 'MetadataItem[]'
    spec.typeScript:
      - name: MetadataItem
        fullName: MetadataItem
        uid: '@azure/batch.MetadataItem'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/batch.StartTask'
    name: StartTask
    spec.typeScript:
      - name: StartTask
        fullName: StartTask
        uid: '@azure/batch.StartTask'