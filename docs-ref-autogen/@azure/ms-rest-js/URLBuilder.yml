### YamlMime:UniversalReference
items:
  - uid: '@azure/ms-rest-js.URLBuilder'
    name: URLBuilder
    fullName: URLBuilder
    children:
      - '@azure/ms-rest-js.URLBuilder.appendPath'
      - '@azure/ms-rest-js.URLBuilder.getHost'
      - '@azure/ms-rest-js.URLBuilder.getPath'
      - '@azure/ms-rest-js.URLBuilder.getPort'
      - '@azure/ms-rest-js.URLBuilder.getQuery'
      - '@azure/ms-rest-js.URLBuilder.getQueryParameterValue'
      - '@azure/ms-rest-js.URLBuilder.getScheme'
      - '@azure/ms-rest-js.URLBuilder.parse'
      - '@azure/ms-rest-js.URLBuilder.replaceAll'
      - '@azure/ms-rest-js.URLBuilder.setHost'
      - '@azure/ms-rest-js.URLBuilder.setPath'
      - '@azure/ms-rest-js.URLBuilder.setPort'
      - '@azure/ms-rest-js.URLBuilder.setQuery'
      - '@azure/ms-rest-js.URLBuilder.setQueryParameter'
      - '@azure/ms-rest-js.URLBuilder.setScheme'
      - '@azure/ms-rest-js.URLBuilder.toString'
    langs:
      - typeScript
    type: class
    summary: 'Une classe qui gère la création, modification et l’analyse des URL.'
    package: '@azure/ms-rest-js'
  - uid: '@azure/ms-rest-js.URLBuilder.appendPath'
    name: appendPath(string | undefined)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Ajoutez le chemin d’accès fourni pour le chemin d’accès existant de cette URL. Si le chemin d’accès fourni contient une requête, il sera ajouté à cette URL ainsi.'
    syntax:
      content: 'function appendPath(path: string | undefined)'
      parameters:
        - id: path
          type:
            - string | undefined
          description: ''
    package: '@azure/ms-rest-js'
  - uid: '@azure/ms-rest-js.URLBuilder.getHost'
    name: getHost()
    children: []
    type: method
    langs:
      - typeScript
    summary: Obtenir de l’hôte qui a été définie dans cette URL.
    syntax:
      content: function getHost()
      parameters: []
      return:
        type:
          - string | undefined
    package: '@azure/ms-rest-js'
  - uid: '@azure/ms-rest-js.URLBuilder.getPath'
    name: getPath()
    children: []
    type: method
    langs:
      - typeScript
    summary: Obtenir le chemin d’accès qui a été définie dans cette URL.
    syntax:
      content: function getPath()
      parameters: []
      return:
        type:
          - string | undefined
    package: '@azure/ms-rest-js'
  - uid: '@azure/ms-rest-js.URLBuilder.getPort'
    name: getPort()
    children: []
    type: method
    langs:
      - typeScript
    summary: Obtenir le port qui a été défini dans cette URL.
    syntax:
      content: function getPort()
      parameters: []
      return:
        type:
          - string | undefined
    package: '@azure/ms-rest-js'
  - uid: '@azure/ms-rest-js.URLBuilder.getQuery'
    name: getQuery()
    children: []
    type: method
    langs:
      - typeScript
    summary: Obtenir la requête dans cette URL.
    syntax:
      content: function getQuery()
      parameters: []
      return:
        type:
          - string | undefined
    package: '@azure/ms-rest-js'
  - uid: '@azure/ms-rest-js.URLBuilder.getQueryParameterValue'
    name: getQueryParameterValue(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Obtenir la valeur du paramètre de requête avec le nom de paramètre de requête fournie. Si aucun paramètre de requête portant le nom fourni existe, non définie s’affichera.'
    syntax:
      content: 'function getQueryParameterValue(queryParameterName: string)'
      parameters:
        - id: queryParameterName
          type:
            - string
          description: ''
      return:
        type:
          - 'string | string[] | undefined'
    package: '@azure/ms-rest-js'
  - uid: '@azure/ms-rest-js.URLBuilder.getScheme'
    name: getScheme()
    children: []
    type: method
    langs:
      - typeScript
    summary: Obtenir le schéma qui a été défini dans cette URL.
    syntax:
      content: function getScheme()
      parameters: []
      return:
        type:
          - string | undefined
    package: '@azure/ms-rest-js'
  - uid: '@azure/ms-rest-js.URLBuilder.parse'
    name: parse(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function parse(text: string)'
      parameters:
        - id: text
          type:
            - string
          description: ''
      return:
        type:
          - '@azure/ms-rest-js.URLBuilder'
    package: '@azure/ms-rest-js'
  - uid: '@azure/ms-rest-js.URLBuilder.replaceAll'
    name: 'replaceAll(string, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Si le searchValue fourni se trouve dans cette URLBuilder, puis remplacez-la par le replaceValue fourni.'
    syntax:
      content: 'function replaceAll(searchValue: string, replaceValue: string)'
      parameters:
        - id: searchValue
          type:
            - string
          description: ''
        - id: replaceValue
          type:
            - string
          description: ''
    package: '@azure/ms-rest-js'
  - uid: '@azure/ms-rest-js.URLBuilder.setHost'
    name: setHost(string | undefined)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Définir l’hôte de cette URL. Si l’hôte fourni contient d’autres parties d’une URL (par exemple, un port, chemin d’accès ou requête), ces parties figurera également cette URL.'
    syntax:
      content: 'function setHost(host: string | undefined)'
      parameters:
        - id: host
          type:
            - string | undefined
          description: ''
    package: '@azure/ms-rest-js'
  - uid: '@azure/ms-rest-js.URLBuilder.setPath'
    name: setPath(string | undefined)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Définir le chemin d’accès pour cette URL. Si le chemin d’accès fourni contient une requête, il sera ajouté à cette URL ainsi.'
    syntax:
      content: 'function setPath(path: string | undefined)'
      parameters:
        - id: path
          type:
            - string | undefined
          description: ''
    package: '@azure/ms-rest-js'
  - uid: '@azure/ms-rest-js.URLBuilder.setPort'
    name: setPort(number | string | undefined)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Définissez le port pour cette URL. Si le port fourni contient d’autres parties d’une URL (par exemple, un chemin d’accès ou de la requête), ces parties figurera également cette URL.'
    syntax:
      content: 'function setPort(port: number | string | undefined)'
      parameters:
        - id: port
          type:
            - number | string | undefined
          description: ''
    package: '@azure/ms-rest-js'
  - uid: '@azure/ms-rest-js.URLBuilder.setQuery'
    name: setQuery(string | undefined)
    children: []
    type: method
    langs:
      - typeScript
    summary: Définissez la requête dans cette URL.
    syntax:
      content: 'function setQuery(query: string | undefined)'
      parameters:
        - id: query
          type:
            - string | undefined
          description: ''
    package: '@azure/ms-rest-js'
  - uid: '@azure/ms-rest-js.URLBuilder.setQueryParameter'
    name: 'setQueryParameter(string, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Définir un paramètre de requête avec la valeur et le nom fourni dans la requête de cette URL. Si la valeur de paramètre de requête fournie n’est pas définie ou vide, le paramètre de requête sera supprimé si elle existait.'
    syntax:
      content: 'function setQueryParameter(queryParameterName: string, queryParameterValue: any)'
      parameters:
        - id: queryParameterName
          type:
            - string
          description: ''
        - id: queryParameterValue
          type:
            - any
          description: ''
    package: '@azure/ms-rest-js'
  - uid: '@azure/ms-rest-js.URLBuilder.setScheme'
    name: setScheme(string | undefined)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Définir le schéma/protocole pour cette URL. Si le schéma fourni contienne d’autres parties d’une URL (par exemple, un hôte, port, chemin d’accès ou requête), ces parties figurera également cette URL.'
    syntax:
      content: 'function setScheme(scheme: string | undefined)'
      parameters:
        - id: scheme
          type:
            - string | undefined
          description: ''
    package: '@azure/ms-rest-js'
  - uid: '@azure/ms-rest-js.URLBuilder.toString'
    name: toString()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function toString()
      parameters: []
      return:
        type:
          - string
    package: '@azure/ms-rest-js'
references:
  - uid: '@azure/ms-rest-js.URLBuilder'
    name: URLBuilder
    spec.typeScript:
      - name: URLBuilder
        fullName: URLBuilder
        uid: '@azure/ms-rest-js.URLBuilder'