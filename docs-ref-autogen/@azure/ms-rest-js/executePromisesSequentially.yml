### YamlMime:UniversalReference
items:
  - uid: '@azure/ms-rest-js.executePromisesSequentially'
    name: 'executePromisesSequentially(Array<any>, any)'
    children: []
    type: function
    langs:
      - typeScript
    summary: "<span data-ttu-id=\"d5a36-101\">Exécute un tableau des promesses de manière séquentielle.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5a36-101\">Executes an array of promises sequentially.</span></span> <span data-ttu-id=\"d5a36-102\">Cette méthode source d’inspiration est ici\_: https://pouchdb.com/2015/05/18/we-have-a-problem-with-promises.html.</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5a36-102\">Inspiration of this method is here: https://pouchdb.com/2015/05/18/we-have-a-problem-with-promises.html.</span></span> <span data-ttu-id=\"d5a36-103\">Un blog awesome promesses\_!</span><span class=\"sxs-lookup\"><span data-stu-id=\"d5a36-103\">An awesome blog on promises!</span></span>"
    syntax:
      content: 'function executePromisesSequentially(promiseFactories: Array<any>, kickstart: any)'
      parameters:
        - id: promiseFactories
          type:
            - Array<any>
          description: |
            <span data-ttu-id="d5a36-104">Un tableau de fabriques de promesse (une fonction qui retourne une promesse)</span><span class="sxs-lookup"><span data-stu-id="d5a36-104">An array of promise factories(A function that return a promise)</span></span>
        - id: kickstart
          type:
            - any
          description: ''
      return:
        type:
          - Promise<any>
    package: '@azure/ms-rest-js'