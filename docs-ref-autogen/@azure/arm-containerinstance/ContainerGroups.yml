### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-containerinstance.ContainerGroups'
    name: ContainerGroups
    fullName: ContainerGroups
    children:
      - '@azure/arm-containerinstance.ContainerGroups.beginCreateOrUpdate'
      - '@azure/arm-containerinstance.ContainerGroups.beginRestart'
      - '@azure/arm-containerinstance.ContainerGroups.beginStart'
      - '@azure/arm-containerinstance.ContainerGroups.constructor'
      - '@azure/arm-containerinstance.ContainerGroups.createOrUpdate'
      - '@azure/arm-containerinstance.ContainerGroups.deleteMethod'
      - '@azure/arm-containerinstance.ContainerGroups.deleteMethod_2'
      - '@azure/arm-containerinstance.ContainerGroups.deleteMethod_1'
      - '@azure/arm-containerinstance.ContainerGroups.get'
      - '@azure/arm-containerinstance.ContainerGroups.get_2'
      - '@azure/arm-containerinstance.ContainerGroups.get_1'
      - '@azure/arm-containerinstance.ContainerGroups.list'
      - '@azure/arm-containerinstance.ContainerGroups.list_2'
      - '@azure/arm-containerinstance.ContainerGroups.list_1'
      - '@azure/arm-containerinstance.ContainerGroups.listByResourceGroup'
      - '@azure/arm-containerinstance.ContainerGroups.listByResourceGroup_2'
      - '@azure/arm-containerinstance.ContainerGroups.listByResourceGroup_1'
      - '@azure/arm-containerinstance.ContainerGroups.listByResourceGroupNext'
      - '@azure/arm-containerinstance.ContainerGroups.listByResourceGroupNext_2'
      - '@azure/arm-containerinstance.ContainerGroups.listByResourceGroupNext_1'
      - '@azure/arm-containerinstance.ContainerGroups.listNext'
      - '@azure/arm-containerinstance.ContainerGroups.listNext_2'
      - '@azure/arm-containerinstance.ContainerGroups.listNext_1'
      - '@azure/arm-containerinstance.ContainerGroups.restart'
      - '@azure/arm-containerinstance.ContainerGroups.start'
      - '@azure/arm-containerinstance.ContainerGroups.stop'
      - '@azure/arm-containerinstance.ContainerGroups.stop_2'
      - '@azure/arm-containerinstance.ContainerGroups.stop_1'
      - '@azure/arm-containerinstance.ContainerGroups.update'
      - '@azure/arm-containerinstance.ContainerGroups.update_2'
      - '@azure/arm-containerinstance.ContainerGroups.update_1'
    langs:
      - typeScript
    type: class
    summary: Classe représentant un ContainerGroups.
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerGroups.beginCreateOrUpdate'
    name: 'beginCreateOrUpdate(string, string, ContainerGroup, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Créer ou mettre à jour des groupes de conteneurs avec des configurations spécifiques.
    syntax:
      content: 'function beginCreateOrUpdate(resourceGroupName: string, containerGroupName: string, containerGroup: ContainerGroup, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Nom du groupe de ressources.
        - id: containerGroupName
          type:
            - string
          description: Le nom du groupe de conteneurs.
        - id: containerGroup
          type:
            - '@azure/arm-containerinstance.ContainerGroup'
          description: Les propriétés du groupe de conteneurs à être créé ou mis à jour.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerGroups.beginRestart'
    name: 'beginRestart(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Redémarre tous les conteneurs dans un groupe de conteneurs en place. Si l’image de conteneur a des mises à jour, la nouvelle image sera téléchargée.'
    syntax:
      content: 'function beginRestart(resourceGroupName: string, containerGroupName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Nom du groupe de ressources.
        - id: containerGroupName
          type:
            - string
          description: Le nom du groupe de conteneurs.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerGroups.beginStart'
    name: 'beginStart(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Démarre tous les conteneurs dans un groupe de conteneurs.
    syntax:
      content: 'function beginStart(resourceGroupName: string, containerGroupName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Nom du groupe de ressources.
        - id: containerGroupName
          type:
            - string
          description: Le nom du groupe de conteneurs.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerGroups.constructor'
    name: ContainerGroups(ContainerInstanceManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Créer un ContainerGroups.
    syntax:
      content: 'new ContainerGroups(client: ContainerInstanceManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-containerinstance.ContainerInstanceManagementClientContext'
          description: |
            Référence au client du service.
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerGroups.createOrUpdate'
    name: 'createOrUpdate(string, string, ContainerGroup, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Créer ou mettre à jour des groupes de conteneurs avec des configurations spécifiques.
    syntax:
      content: 'function createOrUpdate(resourceGroupName: string, containerGroupName: string, containerGroup: ContainerGroup, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Nom du groupe de ressources.
        - id: containerGroupName
          type:
            - string
          description: Le nom du groupe de conteneurs.
        - id: containerGroup
          type:
            - '@azure/arm-containerinstance.ContainerGroup'
          description: Les propriétés du groupe de conteneurs à être créé ou mis à jour.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ContainerGroupsCreateOrUpdateResponse>
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerGroups.deleteMethod'
    name: 'deleteMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Supprimez le groupe de conteneurs spécifié dans l’abonnement spécifié et le groupe de ressources. L’opération ne supprime pas les autres ressources fournies par l’utilisateur, tels que les volumes.'
    syntax:
      content: 'function deleteMethod(resourceGroupName: string, containerGroupName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Nom du groupe de ressources.
        - id: containerGroupName
          type:
            - string
          description: Le nom du groupe de conteneurs.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ContainerGroupsDeleteMethodResponse>
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerGroups.deleteMethod_2'
    name: 'deleteMethod(string, string, RequestOptionsBase, ServiceCallback<ContainerGroup>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(resourceGroupName: string, containerGroupName: string, options: RequestOptionsBase, callback: ServiceCallback<ContainerGroup>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Nom du groupe de ressources.
        - id: containerGroupName
          type:
            - string
          description: Le nom du groupe de conteneurs.
        - id: options
          type:
            - RequestOptionsBase
          description: Les paramètres facultatifs
        - id: callback
          type:
            - ServiceCallback<@azure/arm-containerinstance.ContainerGroup>
          description: |
            Le rappel
      return:
        type:
          - Promise<Models.ContainerGroupsDeleteMethodResponse>
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerGroups.deleteMethod_1'
    name: 'deleteMethod(string, string, ServiceCallback<ContainerGroup>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(resourceGroupName: string, containerGroupName: string, callback: ServiceCallback<ContainerGroup>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Nom du groupe de ressources.
        - id: containerGroupName
          type:
            - string
          description: Le nom du groupe de conteneurs.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-containerinstance.ContainerGroup>
          description: |
            Le rappel
      return:
        type:
          - Promise<Models.ContainerGroupsDeleteMethodResponse>
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerGroups.get'
    name: 'get(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Obtient les propriétés du groupe de ressources et du groupe de conteneurs spécifié dans l’abonnement spécifié. L’opération retourne les propriétés de chaque groupe de conteneurs, y compris les conteneurs, les informations d’identification du Registre image, redémarrez la stratégie, type d’adresse IP, type de système d’exploitation, état et les volumes.'
    syntax:
      content: 'function get(resourceGroupName: string, containerGroupName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Nom du groupe de ressources.
        - id: containerGroupName
          type:
            - string
          description: Le nom du groupe de conteneurs.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ContainerGroupsGetResponse>
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerGroups.get_2'
    name: 'get(string, string, RequestOptionsBase, ServiceCallback<ContainerGroup>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(resourceGroupName: string, containerGroupName: string, options: RequestOptionsBase, callback: ServiceCallback<ContainerGroup>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Nom du groupe de ressources.
        - id: containerGroupName
          type:
            - string
          description: Le nom du groupe de conteneurs.
        - id: options
          type:
            - RequestOptionsBase
          description: Les paramètres facultatifs
        - id: callback
          type:
            - ServiceCallback<@azure/arm-containerinstance.ContainerGroup>
          description: |
            Le rappel
      return:
        type:
          - Promise<Models.ContainerGroupsGetResponse>
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerGroups.get_1'
    name: 'get(string, string, ServiceCallback<ContainerGroup>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(resourceGroupName: string, containerGroupName: string, callback: ServiceCallback<ContainerGroup>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Nom du groupe de ressources.
        - id: containerGroupName
          type:
            - string
          description: Le nom du groupe de conteneurs.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-containerinstance.ContainerGroup>
          description: |
            Le rappel
      return:
        type:
          - Promise<Models.ContainerGroupsGetResponse>
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerGroups.list'
    name: list(msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Obtenir la liste des groupes de conteneurs dans l’abonnement spécifié. Cette opération retourne les propriétés de chaque groupe de conteneurs, y compris les conteneurs, informations d’identification du Registre image, la stratégie de redémarrage, type d’adresse IP, type de système d’exploitation, état et les volumes.'
    syntax:
      content: 'function list(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ContainerGroupsListResponse>
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerGroups.list_2'
    name: 'list(RequestOptionsBase, ServiceCallback<ContainerGroupListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(options: RequestOptionsBase, callback: ServiceCallback<ContainerGroupListResult>)'
      parameters:
        - id: options
          type:
            - RequestOptionsBase
          description: Les paramètres facultatifs
        - id: callback
          type:
            - ServiceCallback<@azure/arm-containerinstance.ContainerGroupListResult>
          description: |
            Le rappel
      return:
        type:
          - Promise<Models.ContainerGroupsListResponse>
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerGroups.list_1'
    name: list(ServiceCallback<ContainerGroupListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(callback: ServiceCallback<ContainerGroupListResult>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/arm-containerinstance.ContainerGroupListResult>
          description: |
            Le rappel
      return:
        type:
          - Promise<Models.ContainerGroupsListResponse>
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerGroups.listByResourceGroup'
    name: 'listByResourceGroup(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Obtenir la liste des groupes de conteneurs dans un abonnement spécifié et le groupe de ressources. Cette opération retourne les propriétés de chaque groupe de conteneurs, y compris les conteneurs, informations d’identification du Registre image, la stratégie de redémarrage, type d’adresse IP, type de système d’exploitation, état et les volumes.'
    syntax:
      content: 'function listByResourceGroup(resourceGroupName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Nom du groupe de ressources.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ContainerGroupsListByResourceGroupResponse>
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerGroups.listByResourceGroup_2'
    name: 'listByResourceGroup(string, RequestOptionsBase, ServiceCallback<ContainerGroupListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByResourceGroup(resourceGroupName: string, options: RequestOptionsBase, callback: ServiceCallback<ContainerGroupListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Nom du groupe de ressources.
        - id: options
          type:
            - RequestOptionsBase
          description: Les paramètres facultatifs
        - id: callback
          type:
            - ServiceCallback<@azure/arm-containerinstance.ContainerGroupListResult>
          description: |
            Le rappel
      return:
        type:
          - Promise<Models.ContainerGroupsListByResourceGroupResponse>
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerGroups.listByResourceGroup_1'
    name: 'listByResourceGroup(string, ServiceCallback<ContainerGroupListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByResourceGroup(resourceGroupName: string, callback: ServiceCallback<ContainerGroupListResult>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Nom du groupe de ressources.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-containerinstance.ContainerGroupListResult>
          description: |
            Le rappel
      return:
        type:
          - Promise<Models.ContainerGroupsListByResourceGroupResponse>
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerGroups.listByResourceGroupNext'
    name: 'listByResourceGroupNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Obtenir la liste des groupes de conteneurs dans un abonnement spécifié et le groupe de ressources. Cette opération retourne les propriétés de chaque groupe de conteneurs, y compris les conteneurs, informations d’identification du Registre image, la stratégie de redémarrage, type d’adresse IP, type de système d’exploitation, état et les volumes.'
    syntax:
      content: 'function listByResourceGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: NextLink de l’appel réussi précédent à l’opération de liste.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ContainerGroupsListByResourceGroupNextResponse>
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerGroups.listByResourceGroupNext_2'
    name: 'listByResourceGroupNext(string, RequestOptionsBase, ServiceCallback<ContainerGroupListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByResourceGroupNext(nextPageLink: string, options: RequestOptionsBase, callback: ServiceCallback<ContainerGroupListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: NextLink de l’appel réussi précédent à l’opération de liste.
        - id: options
          type:
            - RequestOptionsBase
          description: Les paramètres facultatifs
        - id: callback
          type:
            - ServiceCallback<@azure/arm-containerinstance.ContainerGroupListResult>
          description: |
            Le rappel
      return:
        type:
          - Promise<Models.ContainerGroupsListByResourceGroupNextResponse>
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerGroups.listByResourceGroupNext_1'
    name: 'listByResourceGroupNext(string, ServiceCallback<ContainerGroupListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByResourceGroupNext(nextPageLink: string, callback: ServiceCallback<ContainerGroupListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: NextLink de l’appel réussi précédent à l’opération de liste.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-containerinstance.ContainerGroupListResult>
          description: |
            Le rappel
      return:
        type:
          - Promise<Models.ContainerGroupsListByResourceGroupNextResponse>
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerGroups.listNext'
    name: 'listNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Obtenir la liste des groupes de conteneurs dans l’abonnement spécifié. Cette opération retourne les propriétés de chaque groupe de conteneurs, y compris les conteneurs, informations d’identification du Registre image, la stratégie de redémarrage, type d’adresse IP, type de système d’exploitation, état et les volumes.'
    syntax:
      content: 'function listNext(nextPageLink: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: NextLink de l’appel réussi précédent à l’opération de liste.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ContainerGroupsListNextResponse>
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerGroups.listNext_2'
    name: 'listNext(string, RequestOptionsBase, ServiceCallback<ContainerGroupListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listNext(nextPageLink: string, options: RequestOptionsBase, callback: ServiceCallback<ContainerGroupListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: NextLink de l’appel réussi précédent à l’opération de liste.
        - id: options
          type:
            - RequestOptionsBase
          description: Les paramètres facultatifs
        - id: callback
          type:
            - ServiceCallback<@azure/arm-containerinstance.ContainerGroupListResult>
          description: |
            Le rappel
      return:
        type:
          - Promise<Models.ContainerGroupsListNextResponse>
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerGroups.listNext_1'
    name: 'listNext(string, ServiceCallback<ContainerGroupListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listNext(nextPageLink: string, callback: ServiceCallback<ContainerGroupListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: NextLink de l’appel réussi précédent à l’opération de liste.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-containerinstance.ContainerGroupListResult>
          description: |
            Le rappel
      return:
        type:
          - Promise<Models.ContainerGroupsListNextResponse>
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerGroups.restart'
    name: 'restart(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Redémarre tous les conteneurs dans un groupe de conteneurs en place. Si l’image de conteneur a des mises à jour, la nouvelle image sera téléchargée.'
    syntax:
      content: 'function restart(resourceGroupName: string, containerGroupName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Nom du groupe de ressources.
        - id: containerGroupName
          type:
            - string
          description: Le nom du groupe de conteneurs.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerGroups.start'
    name: 'start(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Démarre tous les conteneurs dans un groupe de conteneurs.
    syntax:
      content: 'function start(resourceGroupName: string, containerGroupName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Nom du groupe de ressources.
        - id: containerGroupName
          type:
            - string
          description: Le nom du groupe de conteneurs.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerGroups.stop'
    name: 'stop(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Arrête tous les conteneurs dans un groupe de conteneurs. Les ressources de calcul sont désallouées et la facturation est arrêtée.
    syntax:
      content: 'function stop(resourceGroupName: string, containerGroupName: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Nom du groupe de ressources.
        - id: containerGroupName
          type:
            - string
          description: Le nom du groupe de conteneurs.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerGroups.stop_2'
    name: 'stop(string, string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function stop(resourceGroupName: string, containerGroupName: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Nom du groupe de ressources.
        - id: containerGroupName
          type:
            - string
          description: Le nom du groupe de conteneurs.
        - id: options
          type:
            - RequestOptionsBase
          description: Les paramètres facultatifs
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Le rappel
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerGroups.stop_1'
    name: 'stop(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function stop(resourceGroupName: string, containerGroupName: string, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Nom du groupe de ressources.
        - id: containerGroupName
          type:
            - string
          description: Le nom du groupe de conteneurs.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Le rappel
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerGroups.update'
    name: 'update(string, string, Resource, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Met à jour les étiquettes de groupe de conteneurs avec les valeurs spécifiées.
    syntax:
      content: 'function update(resourceGroupName: string, containerGroupName: string, resource: Resource, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Nom du groupe de ressources.
        - id: containerGroupName
          type:
            - string
          description: Le nom du groupe de conteneurs.
        - id: resource
          type:
            - '@azure/arm-containerinstance.Resource'
          description: La ressource du groupe conteneur avec balises à mettre à jour.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ContainerGroupsUpdateResponse>
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerGroups.update_2'
    name: 'update(string, string, Resource, RequestOptionsBase, ServiceCallback<ContainerGroup>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(resourceGroupName: string, containerGroupName: string, resource: Resource, options: RequestOptionsBase, callback: ServiceCallback<ContainerGroup>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Nom du groupe de ressources.
        - id: containerGroupName
          type:
            - string
          description: Le nom du groupe de conteneurs.
        - id: resource
          type:
            - '@azure/arm-containerinstance.Resource'
          description: La ressource du groupe conteneur avec balises à mettre à jour.
        - id: options
          type:
            - RequestOptionsBase
          description: Les paramètres facultatifs
        - id: callback
          type:
            - ServiceCallback<@azure/arm-containerinstance.ContainerGroup>
          description: |
            Le rappel
      return:
        type:
          - Promise<Models.ContainerGroupsUpdateResponse>
    package: '@azure/arm-containerinstance'
  - uid: '@azure/arm-containerinstance.ContainerGroups.update_1'
    name: 'update(string, string, Resource, ServiceCallback<ContainerGroup>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(resourceGroupName: string, containerGroupName: string, resource: Resource, callback: ServiceCallback<ContainerGroup>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Nom du groupe de ressources.
        - id: containerGroupName
          type:
            - string
          description: Le nom du groupe de conteneurs.
        - id: resource
          type:
            - '@azure/arm-containerinstance.Resource'
          description: La ressource du groupe conteneur avec balises à mettre à jour.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-containerinstance.ContainerGroup>
          description: |
            Le rappel
      return:
        type:
          - Promise<Models.ContainerGroupsUpdateResponse>
    package: '@azure/arm-containerinstance'
references:
  - uid: '@azure/arm-containerinstance.ContainerInstanceManagementClientContext'
    name: ContainerInstanceManagementClientContext
    spec.typeScript:
      - name: ContainerInstanceManagementClientContext
        fullName: ContainerInstanceManagementClientContext
        uid: '@azure/arm-containerinstance.ContainerInstanceManagementClientContext'
  - uid: '@azure/arm-containerinstance.ContainerGroup'
    name: ContainerGroup
    spec.typeScript:
      - name: ContainerGroup
        fullName: ContainerGroup
        uid: '@azure/arm-containerinstance.ContainerGroup'
  - uid: ServiceCallback<@azure/arm-containerinstance.ContainerGroup>
    name: ContainerGroup>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ContainerGroup
        fullName: ContainerGroup
        uid: '@azure/arm-containerinstance.ContainerGroup'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-containerinstance.ContainerGroupListResult>
    name: ContainerGroupListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ContainerGroupListResult
        fullName: ContainerGroupListResult
        uid: '@azure/arm-containerinstance.ContainerGroupListResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-containerinstance.Resource'
    name: Resource
    spec.typeScript:
      - name: Resource
        fullName: Resource
        uid: '@azure/arm-containerinstance.Resource'