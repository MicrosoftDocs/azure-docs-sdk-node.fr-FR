### YamlMime:UniversalReference
items:
  - uid: '@azure/keyvault-secrets.SecretsClient'
    name: SecretsClient
    fullName: SecretsClient
    children:
      - '@azure/keyvault-secrets.SecretsClient.backupSecret'
      - '@azure/keyvault-secrets.SecretsClient.deleteSecret'
      - '@azure/keyvault-secrets.SecretsClient.getDefaultPipeline'
      - '@azure/keyvault-secrets.SecretsClient.getDeletedSecret'
      - '@azure/keyvault-secrets.SecretsClient.getSecret'
      - '@azure/keyvault-secrets.SecretsClient.listDeletedSecrets'
      - '@azure/keyvault-secrets.SecretsClient.listSecrets'
      - '@azure/keyvault-secrets.SecretsClient.listSecretVersions'
      - '@azure/keyvault-secrets.SecretsClient.pipeline'
      - '@azure/keyvault-secrets.SecretsClient.purgeDeletedSecret'
      - '@azure/keyvault-secrets.SecretsClient.recoverDeletedSecret'
      - '@azure/keyvault-secrets.SecretsClient.restoreSecret'
      - '@azure/keyvault-secrets.SecretsClient.constructor'
      - '@azure/keyvault-secrets.SecretsClient.setSecret'
      - '@azure/keyvault-secrets.SecretsClient.updateSecretAttributes'
      - '@azure/keyvault-secrets.SecretsClient.vaultBaseUrl'
    langs:
      - typeScript
    type: class
    summary: <span data-ttu-id="520cf-101">Le client pour interagir avec les fonctionnalités de secrets de coffre de clés</span><span class="sxs-lookup"><span data-stu-id="520cf-101">The client to interact with the KeyVault secrets functionality</span></span>
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.backupSecret'
    name: 'backupSecret(string, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: "<span data-ttu-id=\"520cf-102\">Demande qu’une sauvegarde du secret spécifié soit téléchargé vers le client.</span><span class=\"sxs-lookup\"><span data-stu-id=\"520cf-102\">Requests that a backup of the specified secret be downloaded to the client.</span></span> <span data-ttu-id=\"520cf-103\">Toutes les versions de la clé secrète seront téléchargées.</span><span class=\"sxs-lookup\"><span data-stu-id=\"520cf-103\">All versions of the secret will be downloaded.</span></span> <span data-ttu-id=\"520cf-104\">Cette opération nécessite l’autorisation secrets/de sauvegarde.</span><span class=\"sxs-lookup\"><span data-stu-id=\"520cf-104\">This operation requires the secrets/backup permission.</span></span>\n<span data-ttu-id=\"520cf-105\">Exemple d’utilisation\_:</span><span class=\"sxs-lookup\"><span data-stu-id=\"520cf-105\">Example usage:</span></span>\n```ts\nlet client = new SecretsClient(url, credentials);\nlet backupResult = await client.backupSecret(\"MySecretName\");\n```"
    syntax:
      content: 'function backupSecret(secretName: string, options?: RequestOptionsBase)'
      parameters:
        - id: secretName
          type:
            - string
          description: <span data-ttu-id="520cf-106">Nom du secret.</span><span class="sxs-lookup"><span data-stu-id="520cf-106">The name of the secret.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Uint8Array>
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.deleteSecret'
    name: 'deleteSecret(string, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: "<span data-ttu-id=\"520cf-107\">L’opération de suppression s’applique à toute clé secrète stockée dans Azure Key Vault.</span><span class=\"sxs-lookup\"><span data-stu-id=\"520cf-107\">The DELETE operation applies to any secret stored in Azure Key Vault.</span></span> <span data-ttu-id=\"520cf-108\">DELETE ne peut pas être appliqué à une version spécifique d’une clé secrète.</span><span class=\"sxs-lookup\"><span data-stu-id=\"520cf-108\">DELETE cannot be applied to an individual version of a secret.</span></span> <span data-ttu-id=\"520cf-109\">Cette opération nécessite l’autorisation secrets/delete.</span><span class=\"sxs-lookup\"><span data-stu-id=\"520cf-109\">This operation requires the secrets/delete permission.</span></span>\n<span data-ttu-id=\"520cf-110\">Exemple d’utilisation\_:</span><span class=\"sxs-lookup\"><span data-stu-id=\"520cf-110\">Example usage:</span></span>\n```ts\nlet client = new SecretsClient(url, credentials);\nawait client.deleteSecret(\"MySecretName\");\n```"
    syntax:
      content: 'function deleteSecret(secretName: string, options?: RequestOptionsBase)'
      parameters:
        - id: secretName
          type:
            - string
          description: <span data-ttu-id="520cf-111">Nom du secret.</span><span class="sxs-lookup"><span data-stu-id="520cf-111">The name of the secret.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/keyvault-secrets.DeletedSecret>
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.getDefaultPipeline'
    name: 'getDefaultPipeline(ServiceClientCredentials | TokenCredential, NewPipelineOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="520cf-112">Une méthode statique utilisée pour créer un nouvel objet de Pipeline avec les informations d’identification fournies.</span><span class="sxs-lookup"><span data-stu-id="520cf-112">A static method used to create a new Pipeline object with the provided Credential.</span></span>
    syntax:
      content: 'static function getDefaultPipeline(credential: ServiceClientCredentials | TokenCredential, pipelineOptions?: NewPipelineOptions)'
      parameters:
        - id: credential
          type:
            - ServiceClientCredentials | TokenCredential
          description: ''
        - id: pipelineOptions
          type:
            - '@azure/keyvault-secrets.NewPipelineOptions'
          description: ''
          optional: true
      return:
        type:
          - ServiceClientOptions
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.getDeletedSecret'
    name: 'getDeletedSecret(string, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: "<span data-ttu-id=\"520cf-113\">L’opération obtenir le Secret supprimés retourne le secret spécifié supprimé, ainsi que ses attributs.</span><span class=\"sxs-lookup\"><span data-stu-id=\"520cf-113\">The Get Deleted Secret operation returns the specified deleted secret along with its attributes.</span></span>\n<span data-ttu-id=\"520cf-114\">Cette opération nécessite l’autorisation secrets/get.</span><span class=\"sxs-lookup\"><span data-stu-id=\"520cf-114\">This operation requires the secrets/get permission.</span></span>\n<span data-ttu-id=\"520cf-115\">Exemple d’utilisation\_:</span><span class=\"sxs-lookup\"><span data-stu-id=\"520cf-115\">Example usage:</span></span>\n```ts\nlet client = new SecretsClient(url, credentials);\nawait client.getDeletedSecret(\"MyDeletedSecret\");\n```"
    syntax:
      content: 'function getDeletedSecret(secretName: string, options?: RequestOptionsBase)'
      parameters:
        - id: secretName
          type:
            - string
          description: <span data-ttu-id="520cf-116">Nom du secret.</span><span class="sxs-lookup"><span data-stu-id="520cf-116">The name of the secret.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/keyvault-secrets.DeletedSecret>
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.getSecret'
    name: 'getSecret(string, GetSecretOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: "<span data-ttu-id=\"520cf-117\">L’opération GET s’applique à toute clé secrète stockée dans Azure Key Vault.</span><span class=\"sxs-lookup\"><span data-stu-id=\"520cf-117\">The GET operation is applicable to any secret stored in Azure Key Vault.</span></span> <span data-ttu-id=\"520cf-118\">Cette opération nécessite l’autorisation secrets/get.</span><span class=\"sxs-lookup\"><span data-stu-id=\"520cf-118\">This operation requires the secrets/get permission.</span></span>\n<span data-ttu-id=\"520cf-119\">Exemple d’utilisation\_:</span><span class=\"sxs-lookup\"><span data-stu-id=\"520cf-119\">Example usage:</span></span>\n```ts\nlet client = new SecretsClient(url, credentials);\nlet secret = await client.getSecret(\"MySecretName\");\n```"
    syntax:
      content: 'function getSecret(secretName: string, options?: GetSecretOptions)'
      parameters:
        - id: secretName
          type:
            - string
          description: <span data-ttu-id="520cf-120">Nom du secret.</span><span class="sxs-lookup"><span data-stu-id="520cf-120">The name of the secret.</span></span>
        - id: options
          type:
            - '@azure/keyvault-secrets.GetSecretOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/keyvault-secrets.Secret>
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.listDeletedSecrets'
    name: listDeletedSecrets(GetSecretsOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: "<span data-ttu-id=\"520cf-121\">Itère les secrets supprimés dans le coffre.</span><span class=\"sxs-lookup\"><span data-stu-id=\"520cf-121\">Iterates the deleted secrets in the vault.</span></span>  <span data-ttu-id=\"520cf-122\">L’identificateur de clé secrète complète et les attributs sont fournies dans la réponse.</span><span class=\"sxs-lookup\"><span data-stu-id=\"520cf-122\">The full secret identifier and attributes are provided in the response.</span></span> <span data-ttu-id=\"520cf-123\">Aucune valeur n’est retournées pour les clés secrètes.</span><span class=\"sxs-lookup\"><span data-stu-id=\"520cf-123\">No values are returned for the secrets.</span></span> <span data-ttu-id=\"520cf-124\">Cette opération nécessite l’autorisation secrets/list.</span><span class=\"sxs-lookup\"><span data-stu-id=\"520cf-124\">This operations requires the secrets/list permission.</span></span>\n<span data-ttu-id=\"520cf-125\">Exemple d’utilisation\_:</span><span class=\"sxs-lookup\"><span data-stu-id=\"520cf-125\">Example usage:</span></span>\n```ts\nlet client = new SecretsClient(url, credentials);\nfor await (const secretAttr of client.listDeletedSecrets()) {\n  const deletedSecret = await client.getSecret(secretAttr.name);\n  console.log(\"deleted secret: \", deletedSecret);\n}\n```"
    syntax:
      content: 'function listDeletedSecrets(options?: GetSecretsOptions)'
      parameters:
        - id: options
          type:
            - '@azure/keyvault-secrets.GetSecretsOptions'
          description: ''
          optional: true
      return:
        type:
          - 'PagedAsyncIterableIterator<@azure/keyvault-secrets.SecretAttributes, @azure/keyvault-secrets.SecretAttributes[]>'
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.listSecrets'
    name: listSecrets(GetSecretsOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: "<span data-ttu-id=\"520cf-126\">Effectue une itération de la dernière version de tous les secrets dans le coffre.</span><span class=\"sxs-lookup\"><span data-stu-id=\"520cf-126\">Iterates the latest version of all secrets in the vault.</span></span>  <span data-ttu-id=\"520cf-127\">L’identificateur de clé secrète complète et les attributs sont fournies dans la réponse.</span><span class=\"sxs-lookup\"><span data-stu-id=\"520cf-127\">The full secret identifier and attributes are provided in the response.</span></span> <span data-ttu-id=\"520cf-128\">Aucune valeur n’est retournées pour les clés secrètes.</span><span class=\"sxs-lookup\"><span data-stu-id=\"520cf-128\">No values are returned for the secrets.</span></span> <span data-ttu-id=\"520cf-129\">Cette opération nécessite l’autorisation secrets/list.</span><span class=\"sxs-lookup\"><span data-stu-id=\"520cf-129\">This operations requires the secrets/list permission.</span></span>\n<span data-ttu-id=\"520cf-130\">Exemple d’utilisation\_:</span><span class=\"sxs-lookup\"><span data-stu-id=\"520cf-130\">Example usage:</span></span>\n```ts\nlet client = new SecretsClient(url, credentials);\nfor await (const secretAttr of client.listSecrets()) {\n  const secret = await client.getSecret(secretAttr.name);\n  console.log(\"secret: \", secret);\n}\n```"
    syntax:
      content: 'function listSecrets(options?: GetSecretsOptions)'
      parameters:
        - id: options
          type:
            - '@azure/keyvault-secrets.GetSecretsOptions'
          description: ''
          optional: true
      return:
        type:
          - 'PagedAsyncIterableIterator<@azure/keyvault-secrets.SecretAttributes, @azure/keyvault-secrets.SecretAttributes[]>'
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.listSecretVersions'
    name: 'listSecretVersions(string, GetSecretsOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: "<span data-ttu-id=\"520cf-131\">Effectue une itération de toutes les versions de la clé secrète donnée dans le coffre.</span><span class=\"sxs-lookup\"><span data-stu-id=\"520cf-131\">Iterates all versions of the given secret in the vault.</span></span> <span data-ttu-id=\"520cf-132\">L’identificateur de clé secrète complète et les attributs sont fournies dans la réponse.</span><span class=\"sxs-lookup\"><span data-stu-id=\"520cf-132\">The full secret identifier and attributes are provided in the response.</span></span> <span data-ttu-id=\"520cf-133\">Aucune valeur n’est retournées pour les clés secrètes.</span><span class=\"sxs-lookup\"><span data-stu-id=\"520cf-133\">No values are returned for the secrets.</span></span> <span data-ttu-id=\"520cf-134\">Cette opération nécessite l’autorisation secrets/list.</span><span class=\"sxs-lookup\"><span data-stu-id=\"520cf-134\">This operations requires the secrets/list permission.</span></span>\n<span data-ttu-id=\"520cf-135\">Exemple d’utilisation\_:</span><span class=\"sxs-lookup\"><span data-stu-id=\"520cf-135\">Example usage:</span></span>\n```ts\nlet client = new SecretsClient(url, credentials);\nfor await (const secretAttr of client.listSecretVersions(\"MySecretName\")) {\n  const secret = await client.getSecret(secretAttr.name);\n  console.log(\"secret version: \", secret);\n}\n```"
    syntax:
      content: 'function listSecretVersions(secretName: string, options?: GetSecretsOptions)'
      parameters:
        - id: secretName
          type:
            - string
          description: <span data-ttu-id="520cf-136">Nom de la clé secrète pour extraire les versions pour</span><span class="sxs-lookup"><span data-stu-id="520cf-136">Name of the secret to fetch versions for</span></span>
        - id: options
          type:
            - '@azure/keyvault-secrets.GetSecretsOptions'
          description: ''
          optional: true
      return:
        type:
          - 'PagedAsyncIterableIterator<@azure/keyvault-secrets.SecretAttributes, @azure/keyvault-secrets.SecretAttributes[]>'
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.pipeline'
    name: pipeline
    fullName: pipeline
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="520cf-137">Les options pour créer la connexion au service</span><span class="sxs-lookup"><span data-stu-id="520cf-137">The options to create the connection to the service</span></span>
    syntax:
      content: 'pipeline: ServiceClientOptions'
      return:
        type:
          - ServiceClientOptions
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.purgeDeletedSecret'
    name: 'purgeDeletedSecret(string, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: "<span data-ttu-id=\"520cf-138\">L’opération de secret de vidage supprimé supprime définitivement, le secret sans possibilité de récupération.</span><span class=\"sxs-lookup\"><span data-stu-id=\"520cf-138\">The purge deleted secret operation removes the secret permanently, without the possibility of recovery.</span></span> <span data-ttu-id=\"520cf-139\">Cette opération peut uniquement être activée sur un coffre de suppression réversible est activé.</span><span class=\"sxs-lookup\"><span data-stu-id=\"520cf-139\">This operation can only be enabled on a soft-delete enabled vault.</span></span> <span data-ttu-id=\"520cf-140\">Cette opération nécessite l’autorisation secrets/purge.</span><span class=\"sxs-lookup\"><span data-stu-id=\"520cf-140\">This operation requires the secrets/purge permission.</span></span>\n<span data-ttu-id=\"520cf-141\">Exemple d’utilisation\_:</span><span class=\"sxs-lookup\"><span data-stu-id=\"520cf-141\">Example usage:</span></span>\n```ts\nlet client = new SecretsClient(url, credentials);\nawait client.deleteSecret(\"MySecretName\");\nawait client.purgeDeletedSecret(\"MySecretName\");\n```"
    syntax:
      content: 'function purgeDeletedSecret(secretName: string, options?: RequestOptionsBase)'
      parameters:
        - id: secretName
          type:
            - string
          description: <span data-ttu-id="520cf-142">Nom du secret.</span><span class="sxs-lookup"><span data-stu-id="520cf-142">The name of the secret.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.recoverDeletedSecret'
    name: 'recoverDeletedSecret(string, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: "<span data-ttu-id=\"520cf-143\">Récupère la clé secrète supprimée dans le coffre spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"520cf-143\">Recovers the deleted secret in the specified vault.</span></span> <span data-ttu-id=\"520cf-144\">Cette opération peut uniquement être effectuée sur un coffre de suppression réversible est activé.</span><span class=\"sxs-lookup\"><span data-stu-id=\"520cf-144\">This operation can only be performed on a soft-delete enabled vault.</span></span> <span data-ttu-id=\"520cf-145\">Cette opération nécessite l’autorisation secrets/restauration.</span><span class=\"sxs-lookup\"><span data-stu-id=\"520cf-145\">This operation requires the secrets/recover permission.</span></span>\n<span data-ttu-id=\"520cf-146\">Exemple d’utilisation\_:</span><span class=\"sxs-lookup\"><span data-stu-id=\"520cf-146\">Example usage:</span></span>\n```ts\nlet client = new SecretsClient(url, credentials);\nawait client.deleteSecret(\"MySecretName\");\nawait client.recoverDeletedSecret(\"MySecretName\");\n```"
    syntax:
      content: 'function recoverDeletedSecret(secretName: string, options?: RequestOptionsBase)'
      parameters:
        - id: secretName
          type:
            - string
          description: <span data-ttu-id="520cf-147">Le nom de la clé secrète supprimé.</span><span class="sxs-lookup"><span data-stu-id="520cf-147">The name of the deleted secret.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/keyvault-secrets.Secret>
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.restoreSecret'
    name: 'restoreSecret(Uint8Array, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: "<span data-ttu-id=\"520cf-148\">Restaure un secret sauvegardé et toutes ses versions, dans un coffre.</span><span class=\"sxs-lookup\"><span data-stu-id=\"520cf-148\">Restores a backed up secret, and all its versions, to a vault.</span></span> <span data-ttu-id=\"520cf-149\">Cette opération nécessite l’autorisation secrets/restauration.</span><span class=\"sxs-lookup\"><span data-stu-id=\"520cf-149\">This operation requires the secrets/restore permission.</span></span>\n<span data-ttu-id=\"520cf-150\">Exemple d’utilisation\_:</span><span class=\"sxs-lookup\"><span data-stu-id=\"520cf-150\">Example usage:</span></span>\n```ts\nlet client = new SecretsClient(url, credentials);\nlet mySecretBundle = await client.backupSecret(\"MySecretName\");\n// ...\nawait client.restoreSecret(mySecretBundle);\n```"
    syntax:
      content: 'function restoreSecret(secretBundleBackup: Uint8Array, options?: RequestOptionsBase)'
      parameters:
        - id: secretBundleBackup
          type:
            - Uint8Array
          description: <span data-ttu-id="520cf-151">L’objets blob de sauvegarde associé à un regroupement de secret.</span><span class="sxs-lookup"><span data-stu-id="520cf-151">The backup blob associated with a secret bundle.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/keyvault-secrets.Secret>
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.constructor'
    name: 'SecretsClient(string, ServiceClientCredentials | TokenCredential, ServiceClientOptions | NewPipelineOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: "<span data-ttu-id=\"520cf-152\">Crée une instance de SecretsClient.</span><span class=\"sxs-lookup\"><span data-stu-id=\"520cf-152\">Creates an instance of SecretsClient.</span></span>\n<span data-ttu-id=\"520cf-153\">Exemple d’utilisation\_:</span><span class=\"sxs-lookup\"><span data-stu-id=\"520cf-153\">Example usage:</span></span>\n```ts\nimport { SecretsClient } from \"@azure/keyvault-secrets\";\nimport { EnvironmentCredential } from \"@azure/identity\";\n\nlet url = `https://<MY KEYVAULT HERE>.vault.azure.net`;\nlet credentials = new EnvironmentCredential();\n\nlet client = new SecretsClient(url, credentials);\n```"
    syntax:
      content: 'new SecretsClient(url: string, credential: ServiceClientCredentials | TokenCredential, pipelineOrOptions?: ServiceClientOptions | NewPipelineOptions)'
      parameters:
        - id: url
          type:
            - string
          description: <span data-ttu-id="520cf-154">l’url de base pour le coffre de clés.</span><span class="sxs-lookup"><span data-stu-id="520cf-154">the base url to the key vault.</span></span>
        - id: credential
          type:
            - ServiceClientCredentials | TokenCredential
          description: ''
        - id: pipelineOrOptions
          type:
            - ServiceClientOptions | @azure/keyvault-secrets.NewPipelineOptions
          description: ''
          optional: true
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.setSecret'
    name: 'setSecret(string, string, SetSecretOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: "<span data-ttu-id=\"520cf-155\">L’opération de définition ajoute une clé secrète à Azure Key Vault.</span><span class=\"sxs-lookup\"><span data-stu-id=\"520cf-155\">The SET operation adds a secret to the Azure Key Vault.</span></span> <span data-ttu-id=\"520cf-156\">Si la clé secrète nommée existe déjà, Azure Key Vault en crée une nouvelle version de cette clé secrète.</span><span class=\"sxs-lookup\"><span data-stu-id=\"520cf-156\">If the named secret already exists, Azure Key Vault creates a new version of that secret.</span></span> <span data-ttu-id=\"520cf-157\">Cette opération nécessite l’autorisation secrets/set.</span><span class=\"sxs-lookup\"><span data-stu-id=\"520cf-157\">This operation requires the secrets/set permission.</span></span>\n<span data-ttu-id=\"520cf-158\">Exemple d’utilisation\_:</span><span class=\"sxs-lookup\"><span data-stu-id=\"520cf-158\">Example usage:</span></span>\n```ts\nlet client = new SecretsClient(url, credentials);\nawait client.setSecret(\"MySecretName\", \"ABC123\");\n```"
    syntax:
      content: 'function setSecret(secretName: string, value: string, options?: SetSecretOptions)'
      parameters:
        - id: secretName
          type:
            - string
          description: <span data-ttu-id="520cf-159">Nom du secret.</span><span class="sxs-lookup"><span data-stu-id="520cf-159">The name of the secret.</span></span>
        - id: value
          type:
            - string
          description: <span data-ttu-id="520cf-160">La valeur de la clé secrète.</span><span class="sxs-lookup"><span data-stu-id="520cf-160">The value of the secret.</span></span>
        - id: options
          type:
            - '@azure/keyvault-secrets.SetSecretOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/keyvault-secrets.Secret>
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.updateSecretAttributes'
    name: 'updateSecretAttributes(string, string, UpdateSecretOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: "<span data-ttu-id=\"520cf-161\">L’opération UPDATE modifie des attributs spécifiés d’une clé secrète stockée existante.</span><span class=\"sxs-lookup\"><span data-stu-id=\"520cf-161\">The UPDATE operation changes specified attributes of an existing stored secret.</span></span> <span data-ttu-id=\"520cf-162\">Attributs qui ne sont pas spécifiés dans la demande sont laissés inchangées.</span><span class=\"sxs-lookup\"><span data-stu-id=\"520cf-162\">Attributes that are not specified in the request are left unchanged.</span></span> <span data-ttu-id=\"520cf-163\">La valeur d’une clé secrète elle-même ne peut pas être modifiée.</span><span class=\"sxs-lookup\"><span data-stu-id=\"520cf-163\">The value of a secret itself cannot be changed.</span></span> <span data-ttu-id=\"520cf-164\">Cette opération nécessite l’autorisation secrets/set.</span><span class=\"sxs-lookup\"><span data-stu-id=\"520cf-164\">This operation requires the secrets/set permission.</span></span>\n<span data-ttu-id=\"520cf-165\">Exemple d’utilisation\_:</span><span class=\"sxs-lookup\"><span data-stu-id=\"520cf-165\">Example usage:</span></span>\n```ts\nlet secretName = \"MySecretName\";\nlet client = new SecretsClient(url, credentials);\nlet secret = await client.getSecret(secretName);\nawait client.updateSecret(secretName, secret.version, { enabled: false });\n```"
    syntax:
      content: 'function updateSecretAttributes(secretName: string, secretVersion: string, options?: UpdateSecretOptions)'
      parameters:
        - id: secretName
          type:
            - string
          description: <span data-ttu-id="520cf-166">Nom du secret.</span><span class="sxs-lookup"><span data-stu-id="520cf-166">The name of the secret.</span></span>
        - id: secretVersion
          type:
            - string
          description: <span data-ttu-id="520cf-167">La version de la clé secrète.</span><span class="sxs-lookup"><span data-stu-id="520cf-167">The version of the secret.</span></span>
        - id: options
          type:
            - '@azure/keyvault-secrets.UpdateSecretOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/keyvault-secrets.Secret>
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.vaultBaseUrl'
    name: vaultBaseUrl
    fullName: vaultBaseUrl
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="520cf-168">L’URL de base dans le coffre</span><span class="sxs-lookup"><span data-stu-id="520cf-168">The base URL to the vault</span></span>
    syntax:
      content: 'vaultBaseUrl: string'
      return:
        type:
          - string
    package: '@azure/keyvault-secrets'
references:
  - uid: ServiceClientOptions | @azure/keyvault-secrets.NewPipelineOptions
    name: NewPipelineOptions
    spec.typeScript:
      - name: 'ServiceClientOptions | '
        fullName: 'ServiceClientOptions | '
      - name: NewPipelineOptions
        fullName: NewPipelineOptions
        uid: '@azure/keyvault-secrets.NewPipelineOptions'
  - uid: Promise<@azure/keyvault-secrets.DeletedSecret>
    name: DeletedSecret>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: DeletedSecret
        fullName: DeletedSecret
        uid: '@azure/keyvault-secrets.DeletedSecret'
      - name: '>'
        fullName: '>'
  - uid: '@azure/keyvault-secrets.GetSecretOptions'
    name: GetSecretOptions
    spec.typeScript:
      - name: GetSecretOptions
        fullName: GetSecretOptions
        uid: '@azure/keyvault-secrets.GetSecretOptions'
  - uid: Promise<@azure/keyvault-secrets.Secret>
    name: Secret>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Secret
        fullName: Secret
        uid: '@azure/keyvault-secrets.Secret'
      - name: '>'
        fullName: '>'
  - uid: '@azure/keyvault-secrets.GetSecretsOptions'
    name: GetSecretsOptions
    spec.typeScript:
      - name: GetSecretsOptions
        fullName: GetSecretsOptions
        uid: '@azure/keyvault-secrets.GetSecretsOptions'
  - uid: 'PagedAsyncIterableIterator<@azure/keyvault-secrets.SecretAttributes, @azure/keyvault-secrets.SecretAttributes[]>'
    name: 'SecretAttributes[]>'
    spec.typeScript:
      - name: PagedAsyncIterableIterator<
        fullName: PagedAsyncIterableIterator<
      - name: SecretAttributes
        fullName: SecretAttributes
        uid: '@azure/keyvault-secrets.SecretAttributes'
      - name: ', '
        fullName: ', '
      - name: SecretAttributes
        fullName: SecretAttributes
        uid: '@azure/keyvault-secrets.SecretAttributes'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/keyvault-secrets.SetSecretOptions'
    name: SetSecretOptions
    spec.typeScript:
      - name: SetSecretOptions
        fullName: SetSecretOptions
        uid: '@azure/keyvault-secrets.SetSecretOptions'
  - uid: '@azure/keyvault-secrets.UpdateSecretOptions'
    name: UpdateSecretOptions
    spec.typeScript:
      - name: UpdateSecretOptions
        fullName: UpdateSecretOptions
        uid: '@azure/keyvault-secrets.UpdateSecretOptions'
  - uid: '@azure/keyvault-secrets.NewPipelineOptions'
    name: NewPipelineOptions
    spec.typeScript:
      - name: NewPipelineOptions
        fullName: NewPipelineOptions
        uid: '@azure/keyvault-secrets.NewPipelineOptions'