### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementTerm'
    name: ListManagementTerm
    fullName: ListManagementTerm
    children:
      - '@azure/cognitiveservices-contentmoderator.ListManagementTerm.addTerm'
      - '@azure/cognitiveservices-contentmoderator.ListManagementTerm.addTerm_2'
      - '@azure/cognitiveservices-contentmoderator.ListManagementTerm.addTerm_1'
      - '@azure/cognitiveservices-contentmoderator.ListManagementTerm.deleteAllTerms'
      - '@azure/cognitiveservices-contentmoderator.ListManagementTerm.deleteAllTerms_2'
      - '@azure/cognitiveservices-contentmoderator.ListManagementTerm.deleteAllTerms_1'
      - '@azure/cognitiveservices-contentmoderator.ListManagementTerm.deleteTerm'
      - '@azure/cognitiveservices-contentmoderator.ListManagementTerm.deleteTerm_2'
      - '@azure/cognitiveservices-contentmoderator.ListManagementTerm.deleteTerm_1'
      - '@azure/cognitiveservices-contentmoderator.ListManagementTerm.getAllTerms_2'
      - '@azure/cognitiveservices-contentmoderator.ListManagementTerm.getAllTerms'
      - '@azure/cognitiveservices-contentmoderator.ListManagementTerm.getAllTerms_1'
      - '@azure/cognitiveservices-contentmoderator.ListManagementTerm.constructor'
    langs:
      - typeScript
    type: class
    summary: <span data-ttu-id="ddf75-101">Classe représentant un ListManagementTerm.</span><span class="sxs-lookup"><span data-stu-id="ddf75-101">Class representing a ListManagementTerm.</span></span>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementTerm.addTerm'
    name: 'addTerm(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="ddf75-102">Ajouter un terme à la liste des termes avec l’Id est égal à la liste passé de l’Id de liste.</span><span class="sxs-lookup"><span data-stu-id="ddf75-102">Add a term to the term list with list Id equal to list Id passed.</span></span>
    syntax:
      content: 'function addTerm(listId: string, term: string, language: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: listId
          type:
            - string
          description: <span data-ttu-id="ddf75-103">Id de liste de la liste d’images.</span><span class="sxs-lookup"><span data-stu-id="ddf75-103">List Id of the image list.</span></span>
        - id: term
          type:
            - string
          description: <span data-ttu-id="ddf75-104">Terme à supprimer</span><span class="sxs-lookup"><span data-stu-id="ddf75-104">Term to be deleted</span></span>
        - id: language
          type:
            - string
          description: <span data-ttu-id="ddf75-105">Langue des termes du contrat.</span><span class="sxs-lookup"><span data-stu-id="ddf75-105">Language of the terms.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ListManagementTermAddTermResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementTerm.addTerm_2'
    name: 'addTerm(string, string, string, RequestOptionsBase, ServiceCallback<any>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addTerm(listId: string, term: string, language: string, options: RequestOptionsBase, callback: ServiceCallback<any>)'
      parameters:
        - id: listId
          type:
            - string
          description: <span data-ttu-id="ddf75-106">Id de liste de la liste d’images.</span><span class="sxs-lookup"><span data-stu-id="ddf75-106">List Id of the image list.</span></span>
        - id: term
          type:
            - string
          description: <span data-ttu-id="ddf75-107">Terme à supprimer</span><span class="sxs-lookup"><span data-stu-id="ddf75-107">Term to be deleted</span></span>
        - id: language
          type:
            - string
          description: <span data-ttu-id="ddf75-108">Langue des termes du contrat.</span><span class="sxs-lookup"><span data-stu-id="ddf75-108">Language of the terms.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="ddf75-109">Les paramètres facultatifs</span><span class="sxs-lookup"><span data-stu-id="ddf75-109">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<any>
          description: |
            <span data-ttu-id="ddf75-110">Le rappel</span><span class="sxs-lookup"><span data-stu-id="ddf75-110">The callback</span></span>
      return:
        type:
          - Promise<Models.ListManagementTermAddTermResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementTerm.addTerm_1'
    name: 'addTerm(string, string, string, ServiceCallback<any>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addTerm(listId: string, term: string, language: string, callback: ServiceCallback<any>)'
      parameters:
        - id: listId
          type:
            - string
          description: <span data-ttu-id="ddf75-111">Id de liste de la liste d’images.</span><span class="sxs-lookup"><span data-stu-id="ddf75-111">List Id of the image list.</span></span>
        - id: term
          type:
            - string
          description: <span data-ttu-id="ddf75-112">Terme à supprimer</span><span class="sxs-lookup"><span data-stu-id="ddf75-112">Term to be deleted</span></span>
        - id: language
          type:
            - string
          description: <span data-ttu-id="ddf75-113">Langue des termes du contrat.</span><span class="sxs-lookup"><span data-stu-id="ddf75-113">Language of the terms.</span></span>
        - id: callback
          type:
            - ServiceCallback<any>
          description: |
            <span data-ttu-id="ddf75-114">Le rappel</span><span class="sxs-lookup"><span data-stu-id="ddf75-114">The callback</span></span>
      return:
        type:
          - Promise<Models.ListManagementTermAddTermResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementTerm.deleteAllTerms'
    name: 'deleteAllTerms(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="ddf75-115">Supprime tous les termes de la liste avec l’Id est égal à la liste passé de l’Id de liste.</span><span class="sxs-lookup"><span data-stu-id="ddf75-115">Deletes all terms from the list with list Id equal to the list Id passed.</span></span>
    syntax:
      content: 'function deleteAllTerms(listId: string, language: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: listId
          type:
            - string
          description: <span data-ttu-id="ddf75-116">Id de liste de la liste d’images.</span><span class="sxs-lookup"><span data-stu-id="ddf75-116">List Id of the image list.</span></span>
        - id: language
          type:
            - string
          description: <span data-ttu-id="ddf75-117">Langue des termes du contrat.</span><span class="sxs-lookup"><span data-stu-id="ddf75-117">Language of the terms.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ListManagementTermDeleteAllTermsResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementTerm.deleteAllTerms_2'
    name: 'deleteAllTerms(string, string, RequestOptionsBase, ServiceCallback<string>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteAllTerms(listId: string, language: string, options: RequestOptionsBase, callback: ServiceCallback<string>)'
      parameters:
        - id: listId
          type:
            - string
          description: <span data-ttu-id="ddf75-118">Id de liste de la liste d’images.</span><span class="sxs-lookup"><span data-stu-id="ddf75-118">List Id of the image list.</span></span>
        - id: language
          type:
            - string
          description: <span data-ttu-id="ddf75-119">Langue des termes du contrat.</span><span class="sxs-lookup"><span data-stu-id="ddf75-119">Language of the terms.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="ddf75-120">Les paramètres facultatifs</span><span class="sxs-lookup"><span data-stu-id="ddf75-120">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<string>
          description: |
            <span data-ttu-id="ddf75-121">Le rappel</span><span class="sxs-lookup"><span data-stu-id="ddf75-121">The callback</span></span>
      return:
        type:
          - Promise<Models.ListManagementTermDeleteAllTermsResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementTerm.deleteAllTerms_1'
    name: 'deleteAllTerms(string, string, ServiceCallback<string>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteAllTerms(listId: string, language: string, callback: ServiceCallback<string>)'
      parameters:
        - id: listId
          type:
            - string
          description: <span data-ttu-id="ddf75-122">Id de liste de la liste d’images.</span><span class="sxs-lookup"><span data-stu-id="ddf75-122">List Id of the image list.</span></span>
        - id: language
          type:
            - string
          description: <span data-ttu-id="ddf75-123">Langue des termes du contrat.</span><span class="sxs-lookup"><span data-stu-id="ddf75-123">Language of the terms.</span></span>
        - id: callback
          type:
            - ServiceCallback<string>
          description: |
            <span data-ttu-id="ddf75-124">Le rappel</span><span class="sxs-lookup"><span data-stu-id="ddf75-124">The callback</span></span>
      return:
        type:
          - Promise<Models.ListManagementTermDeleteAllTermsResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementTerm.deleteTerm'
    name: 'deleteTerm(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="ddf75-125">Supprime un terme de la liste avec l’Id est égal à la liste passé de l’Id de liste.</span><span class="sxs-lookup"><span data-stu-id="ddf75-125">Deletes a term from the list with list Id equal to the list Id passed.</span></span>
    syntax:
      content: 'function deleteTerm(listId: string, term: string, language: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: listId
          type:
            - string
          description: <span data-ttu-id="ddf75-126">Id de liste de la liste d’images.</span><span class="sxs-lookup"><span data-stu-id="ddf75-126">List Id of the image list.</span></span>
        - id: term
          type:
            - string
          description: <span data-ttu-id="ddf75-127">Terme à supprimer</span><span class="sxs-lookup"><span data-stu-id="ddf75-127">Term to be deleted</span></span>
        - id: language
          type:
            - string
          description: <span data-ttu-id="ddf75-128">Langue des termes du contrat.</span><span class="sxs-lookup"><span data-stu-id="ddf75-128">Language of the terms.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ListManagementTermDeleteTermResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementTerm.deleteTerm_2'
    name: 'deleteTerm(string, string, string, RequestOptionsBase, ServiceCallback<string>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteTerm(listId: string, term: string, language: string, options: RequestOptionsBase, callback: ServiceCallback<string>)'
      parameters:
        - id: listId
          type:
            - string
          description: <span data-ttu-id="ddf75-129">Id de liste de la liste d’images.</span><span class="sxs-lookup"><span data-stu-id="ddf75-129">List Id of the image list.</span></span>
        - id: term
          type:
            - string
          description: <span data-ttu-id="ddf75-130">Terme à supprimer</span><span class="sxs-lookup"><span data-stu-id="ddf75-130">Term to be deleted</span></span>
        - id: language
          type:
            - string
          description: <span data-ttu-id="ddf75-131">Langue des termes du contrat.</span><span class="sxs-lookup"><span data-stu-id="ddf75-131">Language of the terms.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="ddf75-132">Les paramètres facultatifs</span><span class="sxs-lookup"><span data-stu-id="ddf75-132">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<string>
          description: |
            <span data-ttu-id="ddf75-133">Le rappel</span><span class="sxs-lookup"><span data-stu-id="ddf75-133">The callback</span></span>
      return:
        type:
          - Promise<Models.ListManagementTermDeleteTermResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementTerm.deleteTerm_1'
    name: 'deleteTerm(string, string, string, ServiceCallback<string>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteTerm(listId: string, term: string, language: string, callback: ServiceCallback<string>)'
      parameters:
        - id: listId
          type:
            - string
          description: <span data-ttu-id="ddf75-134">Id de liste de la liste d’images.</span><span class="sxs-lookup"><span data-stu-id="ddf75-134">List Id of the image list.</span></span>
        - id: term
          type:
            - string
          description: <span data-ttu-id="ddf75-135">Terme à supprimer</span><span class="sxs-lookup"><span data-stu-id="ddf75-135">Term to be deleted</span></span>
        - id: language
          type:
            - string
          description: <span data-ttu-id="ddf75-136">Langue des termes du contrat.</span><span class="sxs-lookup"><span data-stu-id="ddf75-136">Language of the terms.</span></span>
        - id: callback
          type:
            - ServiceCallback<string>
          description: |
            <span data-ttu-id="ddf75-137">Le rappel</span><span class="sxs-lookup"><span data-stu-id="ddf75-137">The callback</span></span>
      return:
        type:
          - Promise<Models.ListManagementTermDeleteTermResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementTerm.getAllTerms_2'
    name: 'getAllTerms(string, string, ListManagementTermGetAllTermsOptionalParams, ServiceCallback<Terms>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getAllTerms(listId: string, language: string, options: ListManagementTermGetAllTermsOptionalParams, callback: ServiceCallback<Terms>)'
      parameters:
        - id: listId
          type:
            - string
          description: <span data-ttu-id="ddf75-138">Id de liste de la liste d’images.</span><span class="sxs-lookup"><span data-stu-id="ddf75-138">List Id of the image list.</span></span>
        - id: language
          type:
            - string
          description: <span data-ttu-id="ddf75-139">Langue des termes du contrat.</span><span class="sxs-lookup"><span data-stu-id="ddf75-139">Language of the terms.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-contentmoderator.ListManagementTermGetAllTermsOptionalParams'
          description: <span data-ttu-id="ddf75-140">Les paramètres facultatifs</span><span class="sxs-lookup"><span data-stu-id="ddf75-140">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.Terms>
          description: |
            <span data-ttu-id="ddf75-141">Le rappel</span><span class="sxs-lookup"><span data-stu-id="ddf75-141">The callback</span></span>
      return:
        type:
          - Promise<Models.ListManagementTermGetAllTermsResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementTerm.getAllTerms'
    name: 'getAllTerms(string, string, Models.ListManagementTermGetAllTermsOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="ddf75-142">Obtient tous les termes à partir de la liste avec l’Id de liste égale à la liste de Qu'id transmis.</span><span class="sxs-lookup"><span data-stu-id="ddf75-142">Gets all terms from the list with list Id equal to the list Id passed.</span></span>
    syntax:
      content: 'function getAllTerms(listId: string, language: string, options?: Models.ListManagementTermGetAllTermsOptionalParams)'
      parameters:
        - id: listId
          type:
            - string
          description: <span data-ttu-id="ddf75-143">Id de liste de la liste d’images.</span><span class="sxs-lookup"><span data-stu-id="ddf75-143">List Id of the image list.</span></span>
        - id: language
          type:
            - string
          description: <span data-ttu-id="ddf75-144">Langue des termes du contrat.</span><span class="sxs-lookup"><span data-stu-id="ddf75-144">Language of the terms.</span></span>
        - id: options
          type:
            - Models.ListManagementTermGetAllTermsOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ListManagementTermGetAllTermsResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementTerm.getAllTerms_1'
    name: 'getAllTerms(string, string, ServiceCallback<Terms>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getAllTerms(listId: string, language: string, callback: ServiceCallback<Terms>)'
      parameters:
        - id: listId
          type:
            - string
          description: <span data-ttu-id="ddf75-145">Id de liste de la liste d’images.</span><span class="sxs-lookup"><span data-stu-id="ddf75-145">List Id of the image list.</span></span>
        - id: language
          type:
            - string
          description: <span data-ttu-id="ddf75-146">Langue des termes du contrat.</span><span class="sxs-lookup"><span data-stu-id="ddf75-146">Language of the terms.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-contentmoderator.Terms>
          description: |
            <span data-ttu-id="ddf75-147">Le rappel</span><span class="sxs-lookup"><span data-stu-id="ddf75-147">The callback</span></span>
      return:
        type:
          - Promise<Models.ListManagementTermGetAllTermsResponse>
    package: '@azure/cognitiveservices-contentmoderator'
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementTerm.constructor'
    name: ListManagementTerm(ContentModeratorClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: <span data-ttu-id="ddf75-148">Créer un ListManagementTerm.</span><span class="sxs-lookup"><span data-stu-id="ddf75-148">Create a ListManagementTerm.</span></span>
    syntax:
      content: 'new ListManagementTerm(client: ContentModeratorClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/cognitiveservices-contentmoderator.ContentModeratorClientContext'
          description: |
            <span data-ttu-id="ddf75-149">Référence au client du service.</span><span class="sxs-lookup"><span data-stu-id="ddf75-149">Reference to the service client.</span></span>
    package: '@azure/cognitiveservices-contentmoderator'
references:
  - uid: '@azure/cognitiveservices-contentmoderator.ContentModeratorClientContext'
    name: ContentModeratorClientContext
    spec.typeScript:
      - name: ContentModeratorClientContext
        fullName: ContentModeratorClientContext
        uid: '@azure/cognitiveservices-contentmoderator.ContentModeratorClientContext'
  - uid: ServiceCallback<@azure/cognitiveservices-contentmoderator.Terms>
    name: Terms>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Terms
        fullName: Terms
        uid: '@azure/cognitiveservices-contentmoderator.Terms'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-contentmoderator.ListManagementTermGetAllTermsOptionalParams'
    name: ListManagementTermGetAllTermsOptionalParams
    spec.typeScript:
      - name: ListManagementTermGetAllTermsOptionalParams
        fullName: ListManagementTermGetAllTermsOptionalParams
        uid: '@azure/cognitiveservices-contentmoderator.ListManagementTermGetAllTermsOptionalParams'