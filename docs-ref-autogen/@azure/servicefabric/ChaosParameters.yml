### YamlMime:UniversalReference
items:
  - uid: '@azure/servicefabric.ChaosParameters'
    name: ChaosParameters
    fullName: ChaosParameters
    children:
      - '@azure/servicefabric.ChaosParameters.chaosTargetFilter'
      - '@azure/servicefabric.ChaosParameters.clusterHealthPolicy'
      - '@azure/servicefabric.ChaosParameters.context'
      - '@azure/servicefabric.ChaosParameters.enableMoveReplicaFaults'
      - '@azure/servicefabric.ChaosParameters.maxClusterStabilizationTimeoutInSeconds'
      - '@azure/servicefabric.ChaosParameters.maxConcurrentFaults'
      - '@azure/servicefabric.ChaosParameters.timeToRunInSeconds'
      - '@azure/servicefabric.ChaosParameters.waitTimeBetweenFaultsInSeconds'
      - '@azure/servicefabric.ChaosParameters.waitTimeBetweenIterationsInSeconds'
    langs:
      - typeScript
    type: interface
    summary: Définit tous les paramètres pour configurer une exécution de Chaos.
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ChaosParameters.chaosTargetFilter'
    name: chaosTargetFilter
    fullName: chaosTargetFilter
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Liste des entités de cluster à cibler pour les erreurs Chaos.
      Ce filtre peut être utilisé pour cibler les erreurs de Chaos seulement sur certains types de nœuds ou certaines instances d’application. Si ChaosTargetFilter n’est pas utilisé, Chaos provoque des erreurs sur toutes les entités de cluster.
      Si ChaosTargetFilter est utilisé, Chaos provoque uniquement des erreurs sur les entités qui répondent à la spécification ChaosTargetFilter.
    optional: true
    syntax:
      content: 'chaosTargetFilter?: ChaosTargetFilter'
      return:
        type:
          - '@azure/servicefabric.ChaosTargetFilter'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ChaosParameters.clusterHealthPolicy'
    name: clusterHealthPolicy
    fullName: clusterHealthPolicy
    children: []
    langs:
      - typeScript
    type: property
    summary: Stratégie de contrôle d’intégrité passée dans le cluster est utilisé pour valider l’intégrité du cluster entre les itérations de Chaos. Si l’intégrité du cluster est erroné ou si une exception inattendue se produit pendant l’exécution d’erreurs--pour fournir le cluster avec des temps de récupération--Chaos attendra 30 minutes avant le prochain contrôle d’intégrité.
    optional: true
    syntax:
      content: 'clusterHealthPolicy?: ClusterHealthPolicy'
      return:
        type:
          - '@azure/servicefabric.ClusterHealthPolicy'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ChaosParameters.context'
    name: context
    fullName: context
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Décrit un mappage, qui est une collection de (string, string) tapez les paires clé-valeur. La carte peut être utilisée pour enregistrer des informations relatives à l’exécution de Chaos. Il ne peut pas y avoir plus de 100 de ces paires et chaque chaîne (clé ou valeur) peut comporter au maximum 4095 caractères.
      Ce mappage est défini par le démarrage de l’exécution de Chaos afin d’éventuellement stocker le contexte de l’exécution spécifique.
    optional: true
    syntax:
      content: 'context?: ChaosContext'
      return:
        type:
          - '@azure/servicefabric.ChaosContext'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ChaosParameters.enableMoveReplicaFaults'
    name: enableMoveReplicaFaults
    fullName: enableMoveReplicaFaults
    children: []
    langs:
      - typeScript
    type: property
    summary: "Active ou désactive les erreurs moveprimary et movesecondary. Valeur par défaut\_: true."
    optional: true
    syntax:
      content: 'enableMoveReplicaFaults?: undefined | false | true'
      return:
        type:
          - undefined | false | true
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ChaosParameters.maxClusterStabilizationTimeoutInSeconds'
    name: maxClusterStabilizationTimeoutInSeconds
    fullName: maxClusterStabilizationTimeoutInSeconds
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Délai d’attente maximal avant que toutes les entités de cluster ne se stabilisent et deviennent saines.
      Chaos s’exécute en itérations, et au début de chaque itération, il valide l’intégrité des entités de cluster.
      Lors de la validation, si une entité de cluster n’est pas stable et intègre dans le délai spécifié par MaxClusterStabilizationTimeoutInSeconds, Chaos génère un événement d’échec de validation. Valeur par défaut : 60.
    optional: true
    syntax:
      content: 'maxClusterStabilizationTimeoutInSeconds?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ChaosParameters.maxConcurrentFaults'
    name: maxConcurrentFaults
    fullName: maxConcurrentFaults
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      MaxConcurrentFaults est le nombre maximal d’erreurs simultanées introduites dans chaque itération.
      Chaos s’exécute en itérations, deux itérations consécutives étant séparées par une phase de validation.
      Plus la concurrence est élevée, plus agressive l’injection d’erreurs, conduisant à induire des séries d’états plus complexes pour détecter des bogues.
      Il est recommandé de démarrer avec une valeur de 2 ou 3 et de faire preuve de prudence lors de l’augmentation de cette valeur.
      Valeur par défaut : 1.
    optional: true
    syntax:
      content: 'maxConcurrentFaults?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ChaosParameters.timeToRunInSeconds'
    name: timeToRunInSeconds
    fullName: timeToRunInSeconds
    children: []
    langs:
      - typeScript
    type: property
    summary: "Durée totale d’exécution (en secondes) de Chaos avant son arrêt automatique. La valeur maximale autorisée est de 4\_294\_967\_295 (System.UInt32.MaxValue). Valeur par défaut : '4294967295'."
    optional: true
    syntax:
      content: 'timeToRunInSeconds?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ChaosParameters.waitTimeBetweenFaultsInSeconds'
    name: waitTimeBetweenFaultsInSeconds
    fullName: waitTimeBetweenFaultsInSeconds
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Temps d’attente (en secondes) entre les erreurs consécutives au sein d’une seule itération.
      Plus la valeur est grande, plus le chevauchement entre les erreurs est faible et plus la séquence de transitions d’état dont fait l’objet le cluster est simple.
      Il est recommandé de démarrer avec une valeur comprise entre 1 et 5 et de faire preuve de prudence lors de l’augmentation de cette valeur. Valeur par défaut : 20.
    optional: true
    syntax:
      content: 'waitTimeBetweenFaultsInSeconds?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.ChaosParameters.waitTimeBetweenIterationsInSeconds'
    name: waitTimeBetweenIterationsInSeconds
    fullName: waitTimeBetweenIterationsInSeconds
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Temps d’attente (en secondes) entre deux itérations consécutives de Chaos.
      Plus la valeur est grande, plus le taux d’injection d’erreurs est faible. Valeur par défaut : 30.
    optional: true
    syntax:
      content: 'waitTimeBetweenIterationsInSeconds?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/servicefabric'
references:
  - uid: '@azure/servicefabric.ChaosTargetFilter'
    name: ChaosTargetFilter
    spec.typeScript:
      - name: ChaosTargetFilter
        fullName: ChaosTargetFilter
        uid: '@azure/servicefabric.ChaosTargetFilter'
  - uid: '@azure/servicefabric.ClusterHealthPolicy'
    name: ClusterHealthPolicy
    spec.typeScript:
      - name: ClusterHealthPolicy
        fullName: ClusterHealthPolicy
        uid: '@azure/servicefabric.ClusterHealthPolicy'
  - uid: '@azure/servicefabric.ChaosContext'
    name: ChaosContext
    spec.typeScript:
      - name: ChaosContext
        fullName: ChaosContext
        uid: '@azure/servicefabric.ChaosContext'