### YamlMime:UniversalReference
ms.openlocfilehash: c42f476b7b2548bfccf1b3212b5a267458f632a2
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 08/12/2018
ms.locfileid: "40061195"
items:
- uid: '@azure/cosmos.CosmosClient'
  name: CosmosClient
  fullName: CosmosClient
  children:
  - '@azure/cosmos.CosmosClient.constructor'
  - '@azure/cosmos.CosmosClient.database'
  - '@azure/cosmos.CosmosClient.databases'
  - '@azure/cosmos.CosmosClient.getDatabaseAccount'
  - '@azure/cosmos.CosmosClient.offer'
  - '@azure/cosmos.CosmosClient.offers'
  langs:
  - typeScript
  type: class
  summary: >-
    Fournit une représentation logique côté client du compte de base de données Azure Cosmos DB.

    Ce client est utilisé pour configurer et exécuter des requêtes dans le service de base de données Azure Cosmos DB.
  package: '@azure/cosmos'
- uid: '@azure/cosmos.CosmosClient.constructor'
  name: CosmosClient
  children: []
  type: constructor
  langs:
  - typeScript
  summary: Crée un nouveau <xref:CosmosClient> objet. Consultez <xref:CosmosClientOptions> pour plus d’informations sur les options que vous peuvent utiliser.
  syntax:
    content: 'new CosmosClient(options: CosmosClientOptions)'
    parameters:
    - id: options
      type:
      - '@azure/cosmos.CosmosClientOptions'
      description: >
        conteneur des options - nécessitent au moins point de terminaison et d’authentification à configurer
  package: '@azure/cosmos'
- uid: '@azure/cosmos.CosmosClient.database'
  name: database
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Utilisé pour la lecture, la mise à jour, ou la suppression d’une base de données existante par id ou l’accès à des conteneurs appartenant à cette base de données.

    Cela ne pas appeler un réseau. Utilisez `.read` pour obtenir des informations sur la base de données après avoir obtenu le <xref:Database> objet.
  syntax:
    content: 'function database(id: string)'
    parameters:
    - id: id
      type:
      - string
      description: Id de la base de données.
    return:
      type:
      - '@azure/cosmos.Database'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.CosmosClient.databases'
  name: databases
  fullName: databases
  children: []
  langs:
  - typeScript
  type: property
  summary: >
    Utilisé pour la création de nouvelles bases de données ou l’interrogation ou la lecture de toutes les bases de données.

    Utilisez `.database(id)` pour lire, remplacer ou supprimer une base de données existante spécifique par id.
  syntax:
    content: 'databases: Databases'
    return:
      type:
      - '@azure/cosmos.Databases'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.CosmosClient.getDatabaseAccount'
  name: getDatabaseAccount
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtenir des informations sur les cours <xref:DatabaseAccount> (y compris les régions sont prises en charge, etc.).
  syntax:
    content: function getDatabaseAccount()
    parameters: []
    return:
      type:
      - Promise<@azure/cosmos.CosmosResponse<@azure/cosmos.DatabaseAccount, @azure/cosmos.CosmosClient>>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.CosmosClient.offer'
  name: offer
  children: []
  type: method
  langs:
  - typeScript
  summary: Utilisé pour la lecture ou la mise à jour d’une offre existante par id.
  syntax:
    content: 'function offer(id: string)'
    parameters:
    - id: id
      type:
      - string
      description: >
        L’id de l’offre.
    return:
      type:
      - '@azure/cosmos.Offer'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.CosmosClient.offers'
  name: offers
  fullName: offers
  children: []
  langs:
  - typeScript
  type: property
  summary: >
    Utilisé pour l’interrogation & lecture de toutes les offres.

    Utilisez `.offer(id)` pour lire ou remplacer des offres existantes.
  syntax:
    content: 'offers: Offers'
    return:
      type:
      - '@azure/cosmos.Offers'
  package: '@azure/cosmos'
references:
- uid: '@azure/cosmos.CosmosClientOptions'
  spec.typeScript:
  - name: CosmosClientOptions
    fullName: CosmosClientOptions
    uid: '@azure/cosmos.CosmosClientOptions'
- uid: '@azure/cosmos.Databases'
  spec.typeScript:
  - name: Databases
    fullName: Databases
    uid: '@azure/cosmos.Databases'
- uid: '@azure/cosmos.Offers'
  spec.typeScript:
  - name: Offers
    fullName: Offers
    uid: '@azure/cosmos.Offers'
- uid: '@azure/cosmos.Database'
  spec.typeScript:
  - name: Database
    fullName: Database
    uid: '@azure/cosmos.Database'
- uid: Promise<@azure/cosmos.CosmosResponse<@azure/cosmos.DatabaseAccount, @azure/cosmos.CosmosClient>>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: CosmosResponse
    fullName: CosmosResponse
    uid: '@azure/cosmos.CosmosResponse'
  - name: <
    fullName: <
  - name: DatabaseAccount
    fullName: DatabaseAccount
    uid: '@azure/cosmos.DatabaseAccount'
  - name: ', '
    fullName: ', '
  - name: CosmosClient
    fullName: CosmosClient
    uid: '@azure/cosmos.CosmosClient'
  - name: '>>'
    fullName: '>>'
- uid: '@azure/cosmos.Offer'
  spec.typeScript:
  - name: Offer
    fullName: Offer
    uid: '@azure/cosmos.Offer'
