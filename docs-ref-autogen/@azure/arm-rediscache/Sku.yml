### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-rediscache.Sku'
    name: Sku
    fullName: Sku
    children:
      - '@azure/arm-rediscache.Sku.capacity'
      - '@azure/arm-rediscache.Sku.family'
      - '@azure/arm-rediscache.Sku.name'
    langs:
      - typeScript
    type: interface
    summary: <span data-ttu-id="0905d-101">Paramètres de référence (SKU) fournis à l’opération de Redis créer.</span><span class="sxs-lookup"><span data-stu-id="0905d-101">SKU parameters supplied to the create Redis operation.</span></span>
    package: '@azure/arm-rediscache'
  - uid: '@azure/arm-rediscache.Sku.capacity'
    name: capacity
    fullName: capacity
    children: []
    langs:
      - typeScript
    type: property
    summary: "<span data-ttu-id=\"0905d-102\">La taille du cache Redis à déployer.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0905d-102\">The size of the Redis cache to deploy.</span></span> <span data-ttu-id=\"0905d-103\">Valeurs valides\_: pour C (Basic/Standard) famille (0, 1, 2, 3, 4, 5, 6), pour la famille de P (Premium) (1, 2, 3, 4).</span><span class=\"sxs-lookup\"><span data-stu-id=\"0905d-103\">Valid values: for C (Basic/Standard) family (0, 1, 2, 3, 4, 5, 6), for P (Premium) family (1, 2, 3, 4).</span></span>"
    syntax:
      content: 'capacity: number'
      return:
        type:
          - number
    package: '@azure/arm-rediscache'
  - uid: '@azure/arm-rediscache.Sku.family'
    name: family
    fullName: family
    children: []
    langs:
      - typeScript
    type: property
    summary: "<span data-ttu-id=\"0905d-104\">La famille de référence (SKU) à utiliser.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0905d-104\">The SKU family to use.</span></span> <span data-ttu-id=\"0905d-105\">Valeurs valides\_:  (C, P).</span><span class=\"sxs-lookup\"><span data-stu-id=\"0905d-105\">Valid values: (C, P).</span></span> <span data-ttu-id=\"0905d-106\">(C = de base/Standard, P = Premium).</span><span class=\"sxs-lookup\"><span data-stu-id=\"0905d-106\">(C = Basic/Standard, P = Premium).</span></span> <span data-ttu-id=\"0905d-107\">Les valeurs possibles incluent\_: 'C', 'P'</span><span class=\"sxs-lookup\"><span data-stu-id=\"0905d-107\">Possible values include: 'C', 'P'</span></span>"
    syntax:
      content: 'family: SkuFamily'
      return:
        type:
          - '@azure/arm-rediscache.SkuFamily'
    package: '@azure/arm-rediscache'
  - uid: '@azure/arm-rediscache.Sku.name'
    name: name
    fullName: name
    children: []
    langs:
      - typeScript
    type: property
    summary: "<span data-ttu-id=\"0905d-108\">Le type de cache Redis à déployer.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0905d-108\">The type of Redis cache to deploy.</span></span> <span data-ttu-id=\"0905d-109\">Valeurs valides\_:  (Basic, Standard, Premium).</span><span class=\"sxs-lookup\"><span data-stu-id=\"0905d-109\">Valid values: (Basic, Standard, Premium).</span></span> <span data-ttu-id=\"0905d-110\">Les valeurs possibles incluent\_: 'Basic', 'Standard', 'Premium'</span><span class=\"sxs-lookup\"><span data-stu-id=\"0905d-110\">Possible values include: 'Basic', 'Standard', 'Premium'</span></span>"
    syntax:
      content: 'name: SkuName'
      return:
        type:
          - '@azure/arm-rediscache.SkuName'
    package: '@azure/arm-rediscache'
references:
  - uid: '@azure/arm-rediscache.SkuFamily'
    name: SkuFamily
    spec.typeScript:
      - name: SkuFamily
        fullName: SkuFamily
        uid: '@azure/arm-rediscache.SkuFamily'
  - uid: '@azure/arm-rediscache.SkuName'
    name: SkuName
    spec.typeScript:
      - name: SkuName
        fullName: SkuName
        uid: '@azure/arm-rediscache.SkuName'