### YamlMime:UniversalReference
ms.openlocfilehash: a00377b11a0a4f5c6d2453d40f079b28cb2f6aff
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 12/13/2018
ms.locfileid: "52121116"
items:
- uid: '@azure/event-processor-host.CheckpointManager'
  name: CheckpointManager
  fullName: CheckpointManager
  children:
  - '@azure/event-processor-host.CheckpointManager.checkpointStoreExists'
  - '@azure/event-processor-host.CheckpointManager.createAllCheckpointsIfNotExists'
  - '@azure/event-processor-host.CheckpointManager.createCheckpointStoreIfNotExists'
  - '@azure/event-processor-host.CheckpointManager.deleteCheckpoint'
  - '@azure/event-processor-host.CheckpointManager.deleteCheckpointStore'
  - '@azure/event-processor-host.CheckpointManager.getCheckpoint'
  - '@azure/event-processor-host.CheckpointManager.updateCheckpoint'
  langs:
  - typeScript
  type: interface
  summary: ''
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.CheckpointManager.checkpointStoreExists'
  name: checkpointStoreExists()
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="b0144-101">Le magasin de point de contrôle existe ?</span><span class="sxs-lookup"><span data-stu-id="b0144-101">Does the checkpoint store exist?</span></span>
  syntax:
    content: function checkpointStoreExists()
    parameters: []
    return:
      type:
      - Promise<boolean>
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.CheckpointManager.createAllCheckpointsIfNotExists'
  name: createAllCheckpointsIfNotExists(string[])
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="b0144-102">Crée le point de contrôle détenteurs pour les partitions données.</span><span class="sxs-lookup"><span data-stu-id="b0144-102">Creates the checkpoint HOLDERs for the given partitions.</span></span> <span data-ttu-id="b0144-103">Ne fait rien pour n’importe quel point de contrôle qui existent déjà.</span><span class="sxs-lookup"><span data-stu-id="b0144-103">Does nothing for any checkpoint HOLDERs that already exist.</span></span>

    <span data-ttu-id="b0144-104">La sémantique de ceci est compliquée, car il est possible d’utiliser le même magasin pour les baux et les points de contrôle (l’implémentation de stockage Azure fait) et il est nécessaire d’avoir un bail pour chaque partition, mais il n’est pas nécessaire de disposer d’un point de contrôle pour une partition.</span><span class="sxs-lookup"><span data-stu-id="b0144-104">The semantics of this are complicated because it is possible to use the same store for both leases and checkpoints (the Azure Storage implementation does so) and it is required to have a lease for every partition but it is not required to have a checkpoint for a partition.</span></span>

    <span data-ttu-id="b0144-105">Il est tout, n’utilisez jamais les points de contrôle d’un scénario valide Il est donc important de la banque pour faire la distinction entre la création des ou les structures qui contiendront un point de contrôle et créez en fait un point de contrôle (stockage d’une paire de numéros de décalage/séquence dans la structure).</span><span class="sxs-lookup"><span data-stu-id="b0144-105">It is a valid scenario to never use checkpoints at all, so it is important for the store to distinguish between creating the structure(s) that will hold a checkpoint and actually creating a checkpoint (storing an offset/sequence number pair in the structure).</span></span>
  syntax:
    content: 'function createAllCheckpointsIfNotExists(partitionIds: string[])'
    parameters:
    - id: partitionIds
      type:
      - string[]
      description: <span data-ttu-id="b0144-106">Liste de partitions à créer des espaces réservés de point de contrôle pour.</span><span class="sxs-lookup"><span data-stu-id="b0144-106">List of partitions to create checkpoint HOLDERs for.</span></span>
    return:
      type:
      - Promise<void>
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.CheckpointManager.createCheckpointStoreIfNotExists'
  name: createCheckpointStoreIfNotExists()
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="b0144-107">Créer le magasin de point de contrôle s’il n’existe pas.</span><span class="sxs-lookup"><span data-stu-id="b0144-107">Create the checkpoint store if it doesn't exist.</span></span> <span data-ttu-id="b0144-108">Ne fait rien si elle existe.</span><span class="sxs-lookup"><span data-stu-id="b0144-108">Does nothing if it exists.</span></span>
  syntax:
    content: function createCheckpointStoreIfNotExists()
    parameters: []
    return:
      type:
      - Promise<void>
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.CheckpointManager.deleteCheckpoint'
  name: deleteCheckpoint(string)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="b0144-109">Supprimer le point de contrôle stockée pour la partition donnée.</span><span class="sxs-lookup"><span data-stu-id="b0144-109">Delete the stored checkpoint for the given partition.</span></span> <span data-ttu-id="b0144-110">S’il n’existe aucun point de contrôle stockée pour la partition donnée, qui est considéré comme un succès.</span><span class="sxs-lookup"><span data-stu-id="b0144-110">If there is no stored checkpoint for the given partition, that is treated as success.</span></span> <span data-ttu-id="b0144-111">Supprimer le point de contrôle détenteur est autorisé mais pas obligatoire ; votre implémentation est libre d’effectuer selon ce qui est plus pratique.</span><span class="sxs-lookup"><span data-stu-id="b0144-111">Deleting the checkpoint HOLDER is allowed but not required; your implementation is free to do whichever is more convenient.</span></span>
  syntax:
    content: 'function deleteCheckpoint(partitionId: string)'
    parameters:
    - id: partitionId
      type:
      - string
      description: <span data-ttu-id="b0144-112">PartitionId pour supprimer le point de contrôle à partir du magasin.</span><span class="sxs-lookup"><span data-stu-id="b0144-112">The partitionId to delete the checkpoint from the store.</span></span>
    return:
      type:
      - Promise<void>
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.CheckpointManager.deleteCheckpointStore'
  name: deleteCheckpointStore()
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="b0144-113">Supprime le magasin de point de contrôle.</span><span class="sxs-lookup"><span data-stu-id="b0144-113">Deletes the checkpoint store.</span></span>
  syntax:
    content: function deleteCheckpointStore()
    parameters: []
    return:
      type:
      - Promise<void>
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.CheckpointManager.getCheckpoint'
  name: getCheckpoint(string)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="b0144-114">Obtient les informations de point de contrôle associée à la partition donnée.</span><span class="sxs-lookup"><span data-stu-id="b0144-114">Gets the checkpoint info associated with the given partition.</span></span> <span data-ttu-id="b0144-115">Peut retourner non défini si aucun point de contrôle n’a été créé pour cette partition.</span><span class="sxs-lookup"><span data-stu-id="b0144-115">Could return undefined if no checkpoint has been created for that partition.</span></span>
  syntax:
    content: 'function getCheckpoint(partitionId: string)'
    parameters:
    - id: partitionId
      type:
      - string
      description: <span data-ttu-id="b0144-116">PartitionId pour obtenir les informations de point de contrôle pour.</span><span class="sxs-lookup"><span data-stu-id="b0144-116">The partitionId to get the checkpoint info for.</span></span>
    return:
      type:
      - Promise<@azure/event-processor-host.CheckpointInfo | undefined>
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.CheckpointManager.updateCheckpoint'
  name: updateCheckpoint(CompleteLease, CheckpointInfo)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="b0144-117">Mettre à jour le point de contrôle dans le magasin avec le décalage/sequenceNumber dans le point de contrôle fourni.</span><span class="sxs-lookup"><span data-stu-id="b0144-117">Update the checkpoint in the store with the offset/sequenceNumber in the provided checkpoint.</span></span>
  syntax:
    content: 'function updateCheckpoint(lease: CompleteLease, checkpoint: CheckpointInfo)'
    parameters:
    - id: lease
      type:
      - '@azure/event-processor-host.CompleteLease'
      description: <span data-ttu-id="b0144-118">Informations de partition par rapport auquel effectuer un point de contrôle.</span><span class="sxs-lookup"><span data-stu-id="b0144-118">Partition information against which to perform a checkpoint.</span></span>
    - id: checkpoint
      type:
      - '@azure/event-processor-host.CheckpointInfo'
      description: <span data-ttu-id="b0144-119">décalage/sequeceNumber pour mettre à jour le magasin avec</span><span class="sxs-lookup"><span data-stu-id="b0144-119">offset/sequeceNumber to update the store with</span></span>
    return:
      type:
      - Promise<void>
  package: '@azure/event-processor-host'
references:
- uid: Promise<@azure/event-processor-host.CheckpointInfo | undefined>
  name: CheckpointInfo | undefined>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: CheckpointInfo
    fullName: CheckpointInfo
    uid: '@azure/event-processor-host.CheckpointInfo'
  - name: " | undefined>"
    fullName: " | undefined>"
- uid: '@azure/event-processor-host.CompleteLease'
  name: CompleteLease
  spec.typeScript:
  - name: CompleteLease
    fullName: CompleteLease
    uid: '@azure/event-processor-host.CompleteLease'
- uid: '@azure/event-processor-host.CheckpointInfo'
  name: CheckpointInfo
  spec.typeScript:
  - name: CheckpointInfo
    fullName: CheckpointInfo
    uid: '@azure/event-processor-host.CheckpointInfo'
