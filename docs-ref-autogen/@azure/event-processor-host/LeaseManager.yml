### YamlMime:UniversalReference
ms.openlocfilehash: ed7f92526f273477e153fad3fe0ab03db0704f34
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 12/13/2018
ms.locfileid: "52104224"
items:
- uid: '@azure/event-processor-host.LeaseManager'
  name: LeaseManager
  fullName: LeaseManager
  children:
  - '@azure/event-processor-host.LeaseManager.acquireLease'
  - '@azure/event-processor-host.LeaseManager.createAllLeasesIfNotExists'
  - '@azure/event-processor-host.LeaseManager.createLeaseStoreIfNotExists'
  - '@azure/event-processor-host.LeaseManager.deleteLease'
  - '@azure/event-processor-host.LeaseManager.deleteLeaseStore'
  - '@azure/event-processor-host.LeaseManager.getAllLeases'
  - '@azure/event-processor-host.LeaseManager.getLease'
  - '@azure/event-processor-host.LeaseManager.leaseDuration'
  - '@azure/event-processor-host.LeaseManager.leaseRenewInterval'
  - '@azure/event-processor-host.LeaseManager.leaseStoreExists'
  - '@azure/event-processor-host.LeaseManager.releaseLease'
  - '@azure/event-processor-host.LeaseManager.renewLease'
  - '@azure/event-processor-host.LeaseManager.updateLease'
  langs:
  - typeScript
  type: interface
  summary: ''
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.LeaseManager.acquireLease'
  name: acquireLease(CompleteLease)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="2fe99-101">Acquérir le bail sur la partition de votre choix pour ce EventProcessorHost.</span><span class="sxs-lookup"><span data-stu-id="2fe99-101">Acquire the lease on the desired partition for this EventProcessorHost.</span></span>

    <span data-ttu-id="2fe99-102">Notez qu’il est permis d’acquérir un bail qui est déjà détenu par un autre hôte.</span><span class="sxs-lookup"><span data-stu-id="2fe99-102">Note that it is legal to acquire a lease that is already owned by another host.</span></span>

    <span data-ttu-id="2fe99-103">Vol de bail est comment les partitions sont redistribuées lorsque des hôtes supplémentaires sont démarrés.</span><span class="sxs-lookup"><span data-stu-id="2fe99-103">Lease-stealing is how partitions are redistributed when additional hosts are started.</span></span>


    <span data-ttu-id="2fe99-104">L’implémentation de stockage Azure existante peut rencontrer des concurrences entre deux instances de l’hôte tente d’acquérir ou de voler le bail en même temps.</span><span class="sxs-lookup"><span data-stu-id="2fe99-104">The existing Azure Storage implementation can experience races between two host instances attempting to acquire or steal the lease at the same time.</span></span> <span data-ttu-id="2fe99-105">Pour éviter les situations où deux instances d’hôte à la fois croire qu’ils sont propriétaires du bail, l’acquisition peut échouer sans erreurs en retournant la valeur false et doit faire lorsqu’il existe un doute--le pire qui peut se produire est qu’aucune instance de l’hôte ne détenteur du bail pendant une courte période.</span><span class="sxs-lookup"><span data-stu-id="2fe99-105">To avoid situations where two host instances both believe that they own the lease, acquisition can fail without errors by returning false and should do so when there is any doubt -- the worst that can happen is that no host instance owns the lease for a short time.</span></span> <span data-ttu-id="2fe99-106">Cela diffère qualitative, par exemple, le magasin sous-jacent lever une exception d’accès, qui est une erreur.</span><span class="sxs-lookup"><span data-stu-id="2fe99-106">This is qualitatively different from, for example, the underlying store throwing an access exception, which is an error.</span></span>
  syntax:
    content: 'function acquireLease(lease: CompleteLease)'
    parameters:
    - id: lease
      type:
      - '@azure/event-processor-host.CompleteLease'
      description: <span data-ttu-id="2fe99-107">Informations pour la partition de votre choix comme précédemment obtenue à partir de bail `getLease()`.</span><span class="sxs-lookup"><span data-stu-id="2fe99-107">Lease info for the desired partition as previously obtained from `getLease()`.</span></span>
    return:
      type:
      - Promise<boolean>
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.LeaseManager.createAllLeasesIfNotExists'
  name: createAllLeasesIfNotExists(string[])
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="2fe99-108">Créer dans le magasin les informations de bail pour la partition donnée, si elle n’existe pas.</span><span class="sxs-lookup"><span data-stu-id="2fe99-108">Create in the store the lease info for the given partition, if it does not exist.</span></span> <span data-ttu-id="2fe99-109">Ne rien faire s’il existe déjà dans le magasin.</span><span class="sxs-lookup"><span data-stu-id="2fe99-109">Do nothing if it does exist in the store already.</span></span>
  syntax:
    content: 'function createAllLeasesIfNotExists(partitionIds: string[])'
    parameters:
    - id: partitionIds
      type:
      - string[]
      description: <span data-ttu-id="2fe99-110">ID des partitions à créer les informations de bail pour</span><span class="sxs-lookup"><span data-stu-id="2fe99-110">ids of partitions to create lease info for</span></span>
    return:
      type:
      - Promise<void>
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.LeaseManager.createLeaseStoreIfNotExists'
  name: createLeaseStoreIfNotExists()
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="2fe99-111">Créer le magasin de bail s’il n’existe pas.</span><span class="sxs-lookup"><span data-stu-id="2fe99-111">Create the lease store if it doesn't exist.</span></span> <span data-ttu-id="2fe99-112">Ne rien faire s’il existe.</span><span class="sxs-lookup"><span data-stu-id="2fe99-112">Do nothing if it does exist.</span></span>
  syntax:
    content: function createLeaseStoreIfNotExists()
    parameters: []
    return:
      type:
      - Promise<void>
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.LeaseManager.deleteLease'
  name: deleteLease(CompleteLease)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="2fe99-113">Supprimer les informations de bail pour la partition donnée à partir du magasin.</span><span class="sxs-lookup"><span data-stu-id="2fe99-113">Delete the lease info for the given partition from the store.</span></span> <span data-ttu-id="2fe99-114">S’il n’existe aucun bail stockée pour la partition donnée, qui est considéré comme un succès.</span><span class="sxs-lookup"><span data-stu-id="2fe99-114">If there is no stored lease for the given partition, that is treated as success.</span></span>
  syntax:
    content: 'function deleteLease(lease: CompleteLease)'
    parameters:
    - id: lease
      type:
      - '@azure/event-processor-host.CompleteLease'
      description: <span data-ttu-id="2fe99-115">Informations pour la partition de votre choix comme précédemment obtenue à partir de bail `getLease()`.</span><span class="sxs-lookup"><span data-stu-id="2fe99-115">Lease info for the desired partition as previously obtained from `getLease()`.</span></span>
    return:
      type:
      - Promise<void>
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.LeaseManager.deleteLeaseStore'
  name: deleteLeaseStore()
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="2fe99-116">Supprimer le magasin de bail.</span><span class="sxs-lookup"><span data-stu-id="2fe99-116">Delete lease store.</span></span>
  syntax:
    content: function deleteLeaseStore()
    parameters: []
    return:
      type:
      - Promise<void>
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.LeaseManager.getAllLeases'
  name: getAllLeases()
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="2fe99-117">Retourne un léger BaseLease pour tous les baux, qui inclut le nom du propriétaire d’hôte et indique si le bail a expiré.</span><span class="sxs-lookup"><span data-stu-id="2fe99-117">Returns lightweight BaseLease for all leases, which includes name of owning host and whether lease is expired.</span></span> <span data-ttu-id="2fe99-118">Une implémentation est libre de renvoyer CompleteLease ou sa propre classe dérivée de CompleteLease, mais il est important que getAllLeases exécuter aussi rapidement que possible.</span><span class="sxs-lookup"><span data-stu-id="2fe99-118">An implementation is free to return CompleteLease or its own class derived from CompleteLease, but it is important that getAllLeases run as fast as possible.</span></span> <span data-ttu-id="2fe99-119">Si elle est plus rapide pour obtenir uniquement les informations requises pour un BaseLease, nous vous recommandons fortement de faisant.</span><span class="sxs-lookup"><span data-stu-id="2fe99-119">If it is faster to obtain only the information required for a BaseLease, we heavily recommend doing that.</span></span>
  syntax:
    content: function getAllLeases()
    parameters: []
    return:
      type:
      - Promise<@azure/event-processor-host.BaseLease[]>
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.LeaseManager.getLease'
  name: getLease(string)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="2fe99-120">Obtient les informations de bail pour la partition spécifiée.</span><span class="sxs-lookup"><span data-stu-id="2fe99-120">Gets the lease info for the specified partition.</span></span> <span data-ttu-id="2fe99-121">Peut retourner `undefined` si aucun bail n’a été créé dans le magasin pour la partition spécifiée.</span><span class="sxs-lookup"><span data-stu-id="2fe99-121">Can return `undefined` if no lease has been created in the store for the specified partition.</span></span>
  syntax:
    content: 'function getLease(partitionId: string)'
    parameters:
    - id: partitionId
      type:
      - string
      description: <span data-ttu-id="2fe99-122">Id de partition afin d’obtenir le bail pour.</span><span class="sxs-lookup"><span data-stu-id="2fe99-122">Partition id to get the lease for.</span></span>
    return:
      type:
      - Promise<@azure/event-processor-host.CompleteLease | undefined>
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.LeaseManager.leaseDuration'
  name: leaseDuration
  fullName: leaseDuration
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="2fe99-123">{number} leaseDuration durée d’un bail **en secondes** avant son expiration, sauf si renouvelé.</span><span class="sxs-lookup"><span data-stu-id="2fe99-123">{number} leaseDuration Duration of a lease **in seconds** before it expires unless renewed.</span></span>
  syntax:
    content: 'leaseDuration: number'
    return:
      type:
      - number
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.LeaseManager.leaseRenewInterval'
  name: leaseRenewInterval
  fullName: leaseRenewInterval
  children: []
  langs:
  - typeScript
  type: property
  summary: >-
    <span data-ttu-id="2fe99-124">{number} leaseRenewInterval l’intervalle de veille **en secondes** entre les analyses.</span><span class="sxs-lookup"><span data-stu-id="2fe99-124">{number} leaseRenewInterval The sleep interval **in seconds** between scans.</span></span>


    <span data-ttu-id="2fe99-125">Permet une implémentation de gestionnaire de bail indiquer à PartitionManager la fréquence à laquelle il doit analyser les baux et de les renouveler.</span><span class="sxs-lookup"><span data-stu-id="2fe99-125">Allows a lease manager implementation to specify to PartitionManager how often it should scan leases and renew them.</span></span> <span data-ttu-id="2fe99-126">Pour redistribuer les baux en temps voulu après un ordinateur hôte en cas d’arrêt, nous vous recommandons d’un intervalle relativement court, par exemple les dix secondes.</span><span class="sxs-lookup"><span data-stu-id="2fe99-126">In order to redistribute leases in a timely fashion after a host ceases operating, we recommend a relatively short interval, such as ten seconds.</span></span> <span data-ttu-id="2fe99-127">Évidemment, il doit être inférieure à la moitié de la durée du bail, afin d’éviter une expiration accidentelle.</span><span class="sxs-lookup"><span data-stu-id="2fe99-127">Obviously it should be less than half of the lease length, to prevent accidental expiration.</span></span>
  syntax:
    content: 'leaseRenewInterval: number'
    return:
      type:
      - number
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.LeaseManager.leaseStoreExists'
  name: leaseStoreExists()
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="2fe99-128">Le magasin de bail existe ?</span><span class="sxs-lookup"><span data-stu-id="2fe99-128">Does the lease store exist?</span></span>
  syntax:
    content: function leaseStoreExists()
    parameters: []
    return:
      type:
      - Promise<boolean>
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.LeaseManager.releaseLease'
  name: releaseLease(CompleteLease)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="2fe99-129">Abandonner un bail actuellement maintenu par cet hôte.</span><span class="sxs-lookup"><span data-stu-id="2fe99-129">Give up a lease currently held by this host.</span></span>

    <span data-ttu-id="2fe99-130">Si le bail a été volé ou expiré, mettre en œuvre n’est pas nécessaire et will fail if tentée.</span><span class="sxs-lookup"><span data-stu-id="2fe99-130">If the lease has been stolen, or expired, releasing it is unnecessary, and will fail if attempted.</span></span>
  syntax:
    content: 'function releaseLease(lease: CompleteLease)'
    parameters:
    - id: lease
      type:
      - '@azure/event-processor-host.CompleteLease'
      description: <span data-ttu-id="2fe99-131">Informations pour la partition de votre choix comme précédemment obtenue à partir de bail `getLease()`.</span><span class="sxs-lookup"><span data-stu-id="2fe99-131">Lease info for the desired partition as previously obtained from `getLease()`.</span></span>
    return:
      type:
      - Promise<void>
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.LeaseManager.renewLease'
  name: renewLease(CompleteLease)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="2fe99-132">Renouveler un bail actuellement maintenu par cet hôte.</span><span class="sxs-lookup"><span data-stu-id="2fe99-132">Renew a lease currently held by this host.</span></span>

    <span data-ttu-id="2fe99-133">Si le bail a été pris par une autre instance de l’hôte (volée ou après l’expiration) ou explicitement libéré, renewLease doit retourner false.</span><span class="sxs-lookup"><span data-stu-id="2fe99-133">If the lease has been taken by another host instance (either stolen or after expiration) or explicitly released, renewLease must return false.</span></span> <span data-ttu-id="2fe99-134">Avec l’implémentation basée sur le stockage Azure, il est possible de renouveler un bail expiré qui n’a pas été pris par un autre hôte, donc votre implémentation qui autorise ou non, selon ce qui est pratique.</span><span class="sxs-lookup"><span data-stu-id="2fe99-134">With the Azure Storage-based implementation, it IS possible to renew an expired lease that has not been taken by another host, so your implementation can allow that or not, whichever is convenient.</span></span> <span data-ttu-id="2fe99-135">Si elle n’est pas le cas, renewLease doit retourner false.</span><span class="sxs-lookup"><span data-stu-id="2fe99-135">If it does not, renewLease should return false.</span></span>
  syntax:
    content: 'function renewLease(lease: CompleteLease)'
    parameters:
    - id: lease
      type:
      - '@azure/event-processor-host.CompleteLease'
      description: <span data-ttu-id="2fe99-136">bail à renouveler.</span><span class="sxs-lookup"><span data-stu-id="2fe99-136">lease to be renewed.</span></span>
    return:
      type:
      - Promise<boolean>
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.LeaseManager.updateLease'
  name: updateLease(CompleteLease)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="2fe99-137">Mettre à jour le magasin avec les informations contenues dans le bail fourni.</span><span class="sxs-lookup"><span data-stu-id="2fe99-137">Update the store with the information in the provided lease.</span></span>

    <span data-ttu-id="2fe99-138">Il est nécessaire contenir actuellement un bail afin de mettre à jour.</span><span class="sxs-lookup"><span data-stu-id="2fe99-138">It is necessary to currently hold a lease in order to update it.</span></span> <span data-ttu-id="2fe99-139">Si le bail a été volé, expiré ou publié, il ne peut pas être mis à jour.</span><span class="sxs-lookup"><span data-stu-id="2fe99-139">If the lease has been stolen, or expired, or released, it cannot be updated.</span></span> <span data-ttu-id="2fe99-140">Les implémentations de gestionnaire de bail doivent renouveler le bail avant d’effectuer la mise à jour pour éviter l’expiration du bail pendant le processus.</span><span class="sxs-lookup"><span data-stu-id="2fe99-140">Lease manager implementations should renew the lease before performing the update to avoid lease expiration during the process.</span></span>
  syntax:
    content: 'function updateLease(lease: CompleteLease)'
    parameters:
    - id: lease
      type:
      - '@azure/event-processor-host.CompleteLease'
      description: <span data-ttu-id="2fe99-141">Nouvelles informations de bail à stocker.</span><span class="sxs-lookup"><span data-stu-id="2fe99-141">New lease information to be stored.</span></span>
    return:
      type:
      - Promise<boolean>
  package: '@azure/event-processor-host'
references:
- uid: '@azure/event-processor-host.CompleteLease'
  name: CompleteLease
  spec.typeScript:
  - name: CompleteLease
    fullName: CompleteLease
    uid: '@azure/event-processor-host.CompleteLease'
- uid: Promise<@azure/event-processor-host.BaseLease[]>
  name: BaseLease[]>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: BaseLease
    fullName: BaseLease
    uid: '@azure/event-processor-host.BaseLease'
  - name: '[]>'
    fullName: '[]>'
- uid: Promise<@azure/event-processor-host.CompleteLease | undefined>
  name: CompleteLease | undefined>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: CompleteLease
    fullName: CompleteLease
    uid: '@azure/event-processor-host.CompleteLease'
  - name: " | undefined>"
    fullName: " | undefined>"
