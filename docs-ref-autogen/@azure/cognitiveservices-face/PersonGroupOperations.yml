### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations'
    name: PersonGroupOperations
    fullName: PersonGroupOperations
    children:
      - '@azure/cognitiveservices-face.PersonGroupOperations.create'
      - '@azure/cognitiveservices-face.PersonGroupOperations.create_2'
      - '@azure/cognitiveservices-face.PersonGroupOperations.create_1'
      - '@azure/cognitiveservices-face.PersonGroupOperations.deleteMethod'
      - '@azure/cognitiveservices-face.PersonGroupOperations.deleteMethod_2'
      - '@azure/cognitiveservices-face.PersonGroupOperations.deleteMethod_1'
      - '@azure/cognitiveservices-face.PersonGroupOperations.get'
      - '@azure/cognitiveservices-face.PersonGroupOperations.get_2'
      - '@azure/cognitiveservices-face.PersonGroupOperations.get_1'
      - '@azure/cognitiveservices-face.PersonGroupOperations.getTrainingStatus'
      - '@azure/cognitiveservices-face.PersonGroupOperations.getTrainingStatus_2'
      - '@azure/cognitiveservices-face.PersonGroupOperations.getTrainingStatus_1'
      - '@azure/cognitiveservices-face.PersonGroupOperations.list'
      - '@azure/cognitiveservices-face.PersonGroupOperations.list_2'
      - '@azure/cognitiveservices-face.PersonGroupOperations.list_1'
      - '@azure/cognitiveservices-face.PersonGroupOperations.constructor'
      - '@azure/cognitiveservices-face.PersonGroupOperations.train'
      - '@azure/cognitiveservices-face.PersonGroupOperations.train_2'
      - '@azure/cognitiveservices-face.PersonGroupOperations.train_1'
      - '@azure/cognitiveservices-face.PersonGroupOperations.update'
      - '@azure/cognitiveservices-face.PersonGroupOperations.update_2'
      - '@azure/cognitiveservices-face.PersonGroupOperations.update_1'
    langs:
      - typeScript
    type: class
    summary: Classe représentant une PersonGroupOperations.
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.create'
    name: 'create(string, Models.PersonGroupCreateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: "Créer un nouveau groupe de personnes avec personGroupId spécifié, le nom, fourni par l’utilisateur userData et recognitionModel.\n<br /> Un groupe de personnes est le conteneur des données téléchargées personne, y compris les images de visage et des fonctionnalités de reconnaissance faciale.\n<br /> Après la création, utilisez [créer de groupe de personnes personne -](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523c) pour ajouter des personnes dans le groupe, puis appelez [groupe de personnes - Train](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395249) pour préparer ce groupe [doivent faire Face\_: identifier](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395239).\n<br /> Visage de la personne, l’image et userData seront stockés sur le serveur jusqu'à [groupe de personnes personne\n- DELETE](/docs/services/563879b61984550e40cbbe8d/Operations/563879b61984550f3039523d) ou [groupe de personnes - Delete](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395245) est appelée.\n<br />\n* Quota d’abonnement de niveau gratuit\_: 1 000 groupes de personnes. Chacun conserve jusqu'à 1 000 personnes.\n* Quota d’abonnement le niveau s0\_: 1 000 000 groupes de personnes. Chacun conserve jusqu'à 10 000 personnes.\n* pour gérer le problème d’identification de visage de mise à l’échelle plus important, envisagez d’utiliser [LargePersonGroup](/docs/services/563879b61984550e40cbbe8d/operations/599acdee6ac60f11b48b5a9d).\n<br />\n'recognitionModel' doit être spécifié à associer à ce groupe de personnes. La valeur par défaut pour 'recognitionModel' est 'recognition_01', si le dernier modèle nécessaire, veuillez spécifier explicitement le modèle que vous avez besoin dans ce paramètre. Nouvelles faces qui sont ajoutés à un groupe existant de la personne utilisera le modèle de reconnaissance qui a déjà associé à la collection. Les fonctionnalités de visage existantes dans un groupe de personnes ne peut pas être mis à jour aux fonctionnalités extraites par une autre version de modèle de reconnaissance."
    syntax:
      content: 'function create(personGroupId: string, options?: Models.PersonGroupCreateOptionalParams)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID faisant référence à un groupe de personnes particulier.
        - id: options
          type:
            - Models.PersonGroupCreateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.create_2'
    name: 'create(string, PersonGroupCreateOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function create(personGroupId: string, options: PersonGroupCreateOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID faisant référence à un groupe de personnes particulier.
        - id: options
          type:
            - '@azure/cognitiveservices-face.PersonGroupCreateOptionalParams'
          description: Les paramètres facultatifs
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Le rappel
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.create_1'
    name: 'create(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function create(personGroupId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID faisant référence à un groupe de personnes particulier.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Le rappel
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.deleteMethod'
    name: 'deleteMethod(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Supprimer un groupe existant de la personne. Conservées face les fonctionnalités de toutes les personnes dans le groupe de personnes seront également supprimées.
    syntax:
      content: 'function deleteMethod(personGroupId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID faisant référence à un groupe de personnes particulier.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.deleteMethod_2'
    name: 'deleteMethod(string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(personGroupId: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID faisant référence à un groupe de personnes particulier.
        - id: options
          type:
            - RequestOptionsBase
          description: Les paramètres facultatifs
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Le rappel
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.deleteMethod_1'
    name: 'deleteMethod(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(personGroupId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID faisant référence à un groupe de personnes particulier.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Le rappel
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.get'
    name: 'get(string, Models.PersonGroupGetOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Récupérer recognitionModel, userData et le nom de groupe de personne. Pour obtenir des informations de la personne sous ce groupe de personnes, utilisez [personne du groupe de personnes - liste](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395241).'
    syntax:
      content: 'function get(personGroupId: string, options?: Models.PersonGroupGetOptionalParams)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID faisant référence à un groupe de personnes particulier.
        - id: options
          type:
            - Models.PersonGroupGetOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PersonGroupGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.get_2'
    name: 'get(string, PersonGroupGetOptionalParams, ServiceCallback<PersonGroup>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(personGroupId: string, options: PersonGroupGetOptionalParams, callback: ServiceCallback<PersonGroup>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID faisant référence à un groupe de personnes particulier.
        - id: options
          type:
            - '@azure/cognitiveservices-face.PersonGroupGetOptionalParams'
          description: Les paramètres facultatifs
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersonGroup>
          description: |
            Le rappel
      return:
        type:
          - Promise<Models.PersonGroupGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.get_1'
    name: 'get(string, ServiceCallback<PersonGroup>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(personGroupId: string, callback: ServiceCallback<PersonGroup>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID faisant référence à un groupe de personnes particulier.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersonGroup>
          description: |
            Le rappel
      return:
        type:
          - Promise<Models.PersonGroupGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.getTrainingStatus'
    name: 'getTrainingStatus(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Récupérer l’état de la formation d’un groupe de personnes (terminé ou en cours).
    syntax:
      content: 'function getTrainingStatus(personGroupId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID faisant référence à un groupe de personnes particulier.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PersonGroupGetTrainingStatusResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.getTrainingStatus_2'
    name: 'getTrainingStatus(string, RequestOptionsBase, ServiceCallback<TrainingStatus>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getTrainingStatus(personGroupId: string, options: RequestOptionsBase, callback: ServiceCallback<TrainingStatus>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID faisant référence à un groupe de personnes particulier.
        - id: options
          type:
            - RequestOptionsBase
          description: Les paramètres facultatifs
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.TrainingStatus>
          description: |
            Le rappel
      return:
        type:
          - Promise<Models.PersonGroupGetTrainingStatusResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.getTrainingStatus_1'
    name: 'getTrainingStatus(string, ServiceCallback<TrainingStatus>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getTrainingStatus(personGroupId: string, callback: ServiceCallback<TrainingStatus>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID faisant référence à un groupe de personnes particulier.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.TrainingStatus>
          description: |
            Le rappel
      return:
        type:
          - Promise<Models.PersonGroupGetTrainingStatusResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.list'
    name: list(Models.PersonGroupListOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: "Liste des groupes de personnes personGroupId, nom, userData et recognitionModel.<br />\n* Groupes de personnes sont stockées dans l’ordre alphabétique de personGroupId.\n* paramètre «\_start\_» (chaîne, facultatif) est une valeur de personGroupId fourni par l’utilisateur qui les entrées ayant le plus grands ID par comparaison de chaînes retournés. «\_start\_» la valeur vide pour indiquer le retour à partir du premier élément.\n* paramètre «\_top\_» (int, facultatif) spécifie le nombre d’entrées à retourner. Un nombre maximal de 1 000 entrées peut être retournée dans un seul appel. Pour extraire plus, vous pouvez spécifier «\_start\_» avec l’Id de l’entrée retournée dernière de l’appel actuel.\n<br />\nPar exemple, nombre total de groupes de personnes 5\_: «\_group1\_»,..., «\_Groupe5\_».\n<br /> «\_Démarrer = & haut =\_» renvoie tous les groupes de 5.\n<br /> «\_Démarrer = & haut = 2\_» retournera «\_group1\_», «\_group2\_».\n<br /> «\_Démarrer = group2 & haut = 3\_» retournera «\_Groupe3\_», «\_groupe 4\_», «\_Groupe5\_»."
    syntax:
      content: 'function list(options?: Models.PersonGroupListOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.PersonGroupListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PersonGroupListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.list_2'
    name: 'list(PersonGroupListOptionalParams, ServiceCallback<PersonGroup[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(options: PersonGroupListOptionalParams, callback: ServiceCallback<PersonGroup[]>)'
      parameters:
        - id: options
          type:
            - '@azure/cognitiveservices-face.PersonGroupListOptionalParams'
          description: Les paramètres facultatifs
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.PersonGroup[]>'
          description: |
            Le rappel
      return:
        type:
          - Promise<Models.PersonGroupListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.list_1'
    name: 'list(ServiceCallback<PersonGroup[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(callback: ServiceCallback<PersonGroup[]>)'
      parameters:
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.PersonGroup[]>'
          description: |
            Le rappel
      return:
        type:
          - Promise<Models.PersonGroupListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.constructor'
    name: PersonGroupOperations(FaceClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Créer une PersonGroupOperations.
    syntax:
      content: 'new PersonGroupOperations(client: FaceClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/cognitiveservices-face.FaceClientContext'
          description: |
            Référence au client du service.
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.train'
    name: 'train(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Une tâche de formation de groupe personne en file d’attente, la tâche de formation ne peut pas être démarrée immédiatement.'
    syntax:
      content: 'function train(personGroupId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID faisant référence à un groupe de personnes particulier.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.train_2'
    name: 'train(string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function train(personGroupId: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID faisant référence à un groupe de personnes particulier.
        - id: options
          type:
            - RequestOptionsBase
          description: Les paramètres facultatifs
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Le rappel
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.train_1'
    name: 'train(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function train(personGroupId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID faisant référence à un groupe de personnes particulier.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Le rappel
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.update'
    name: 'update(string, Models.PersonGroupUpdateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Mettre à jour le nom d’affichage d’un groupe de personne existante et userData. Les propriétés qui n’apparaît pas dans le corps de la demande ne seront pas mis à jour.
    syntax:
      content: 'function update(personGroupId: string, options?: Models.PersonGroupUpdateOptionalParams)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID faisant référence à un groupe de personnes particulier.
        - id: options
          type:
            - Models.PersonGroupUpdateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.update_2'
    name: 'update(string, PersonGroupUpdateOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(personGroupId: string, options: PersonGroupUpdateOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID faisant référence à un groupe de personnes particulier.
        - id: options
          type:
            - '@azure/cognitiveservices-face.PersonGroupUpdateOptionalParams'
          description: Les paramètres facultatifs
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Le rappel
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.update_1'
    name: 'update(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(personGroupId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID faisant référence à un groupe de personnes particulier.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Le rappel
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
references:
  - uid: '@azure/cognitiveservices-face.FaceClientContext'
    name: FaceClientContext
    spec.typeScript:
      - name: FaceClientContext
        fullName: FaceClientContext
        uid: '@azure/cognitiveservices-face.FaceClientContext'
  - uid: '@azure/cognitiveservices-face.PersonGroupCreateOptionalParams'
    name: PersonGroupCreateOptionalParams
    spec.typeScript:
      - name: PersonGroupCreateOptionalParams
        fullName: PersonGroupCreateOptionalParams
        uid: '@azure/cognitiveservices-face.PersonGroupCreateOptionalParams'
  - uid: ServiceCallback<@azure/cognitiveservices-face.PersonGroup>
    name: PersonGroup>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PersonGroup
        fullName: PersonGroup
        uid: '@azure/cognitiveservices-face.PersonGroup'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-face.PersonGroupGetOptionalParams'
    name: PersonGroupGetOptionalParams
    spec.typeScript:
      - name: PersonGroupGetOptionalParams
        fullName: PersonGroupGetOptionalParams
        uid: '@azure/cognitiveservices-face.PersonGroupGetOptionalParams'
  - uid: ServiceCallback<@azure/cognitiveservices-face.TrainingStatus>
    name: TrainingStatus>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: TrainingStatus
        fullName: TrainingStatus
        uid: '@azure/cognitiveservices-face.TrainingStatus'
      - name: '>'
        fullName: '>'
  - uid: 'ServiceCallback<@azure/cognitiveservices-face.PersonGroup[]>'
    name: 'PersonGroup[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PersonGroup
        fullName: PersonGroup
        uid: '@azure/cognitiveservices-face.PersonGroup'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/cognitiveservices-face.PersonGroupListOptionalParams'
    name: PersonGroupListOptionalParams
    spec.typeScript:
      - name: PersonGroupListOptionalParams
        fullName: PersonGroupListOptionalParams
        uid: '@azure/cognitiveservices-face.PersonGroupListOptionalParams'
  - uid: '@azure/cognitiveservices-face.PersonGroupUpdateOptionalParams'
    name: PersonGroupUpdateOptionalParams
    spec.typeScript:
      - name: PersonGroupUpdateOptionalParams
        fullName: PersonGroupUpdateOptionalParams
        uid: '@azure/cognitiveservices-face.PersonGroupUpdateOptionalParams'