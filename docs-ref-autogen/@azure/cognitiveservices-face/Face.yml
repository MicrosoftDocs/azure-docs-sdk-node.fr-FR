### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-face.Face'
    name: Face
    fullName: Face
    children:
      - '@azure/cognitiveservices-face.Face.detectWithStream_2'
      - '@azure/cognitiveservices-face.Face.detectWithStream'
      - '@azure/cognitiveservices-face.Face.detectWithStream_1'
      - '@azure/cognitiveservices-face.Face.detectWithUrl_2'
      - '@azure/cognitiveservices-face.Face.detectWithUrl'
      - '@azure/cognitiveservices-face.Face.detectWithUrl_1'
      - '@azure/cognitiveservices-face.Face.constructor'
      - '@azure/cognitiveservices-face.Face.findSimilar_2'
      - '@azure/cognitiveservices-face.Face.findSimilar'
      - '@azure/cognitiveservices-face.Face.findSimilar_1'
      - '@azure/cognitiveservices-face.Face.group'
      - '@azure/cognitiveservices-face.Face.group_2'
      - '@azure/cognitiveservices-face.Face.group_1'
      - '@azure/cognitiveservices-face.Face.identify_2'
      - '@azure/cognitiveservices-face.Face.identify'
      - '@azure/cognitiveservices-face.Face.identify_1'
      - '@azure/cognitiveservices-face.Face.verifyFaceToFace'
      - '@azure/cognitiveservices-face.Face.verifyFaceToFace_2'
      - '@azure/cognitiveservices-face.Face.verifyFaceToFace_1'
      - '@azure/cognitiveservices-face.Face.verifyFaceToPerson_2'
      - '@azure/cognitiveservices-face.Face.verifyFaceToPerson'
      - '@azure/cognitiveservices-face.Face.verifyFaceToPerson_1'
    langs:
      - typeScript
    type: class
    summary: <span data-ttu-id="0f34d-101">Classe représentant un visage.</span><span class="sxs-lookup"><span data-stu-id="0f34d-101">Class representing a Face.</span></span>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.detectWithStream_2'
    name: 'detectWithStream(msRest.HttpRequestBody, FaceDetectWithStreamOptionalParams, ServiceCallback<DetectedFace[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectWithStream(image: msRest.HttpRequestBody, options: FaceDetectWithStreamOptionalParams, callback: ServiceCallback<DetectedFace[]>)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="0f34d-102">Un flux d’image.</span><span class="sxs-lookup"><span data-stu-id="0f34d-102">An image stream.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-face.FaceDetectWithStreamOptionalParams'
          description: <span data-ttu-id="0f34d-103">Les paramètres facultatifs</span><span class="sxs-lookup"><span data-stu-id="0f34d-103">The optional parameters</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.DetectedFace[]>'
          description: |
            <span data-ttu-id="0f34d-104">Le rappel</span><span class="sxs-lookup"><span data-stu-id="0f34d-104">The callback</span></span>
      return:
        type:
          - Promise<Models.FaceDetectWithStreamResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.detectWithStream'
    name: 'detectWithStream(msRest.HttpRequestBody, Models.FaceDetectWithStreamOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="0f34d-105">Détectez les visages humains dans une image et retourne des emplacements de visage et éventuellement avec faceIds, des points de repère et des attributs.</span><span class="sxs-lookup"><span data-stu-id="0f34d-105">Detect human faces in an image and returns face locations, and optionally with faceIds, landmarks, and attributes.</span></span>'
    syntax:
      content: 'function detectWithStream(image: msRest.HttpRequestBody, options?: Models.FaceDetectWithStreamOptionalParams)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="0f34d-106">Un flux d’image.</span><span class="sxs-lookup"><span data-stu-id="0f34d-106">An image stream.</span></span>
        - id: options
          type:
            - Models.FaceDetectWithStreamOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FaceDetectWithStreamResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.detectWithStream_1'
    name: 'detectWithStream(msRest.HttpRequestBody, ServiceCallback<DetectedFace[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectWithStream(image: msRest.HttpRequestBody, callback: ServiceCallback<DetectedFace[]>)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="0f34d-107">Un flux d’image.</span><span class="sxs-lookup"><span data-stu-id="0f34d-107">An image stream.</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.DetectedFace[]>'
          description: |
            <span data-ttu-id="0f34d-108">Le rappel</span><span class="sxs-lookup"><span data-stu-id="0f34d-108">The callback</span></span>
      return:
        type:
          - Promise<Models.FaceDetectWithStreamResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.detectWithUrl_2'
    name: 'detectWithUrl(string, FaceDetectWithUrlOptionalParams, ServiceCallback<DetectedFace[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectWithUrl(url: string, options: FaceDetectWithUrlOptionalParams, callback: ServiceCallback<DetectedFace[]>)'
      parameters:
        - id: url
          type:
            - string
          description: <span data-ttu-id="0f34d-109">URL accessible publiquement d’une image</span><span class="sxs-lookup"><span data-stu-id="0f34d-109">Publicly reachable URL of an image</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-face.FaceDetectWithUrlOptionalParams'
          description: <span data-ttu-id="0f34d-110">Les paramètres facultatifs</span><span class="sxs-lookup"><span data-stu-id="0f34d-110">The optional parameters</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.DetectedFace[]>'
          description: |
            <span data-ttu-id="0f34d-111">Le rappel</span><span class="sxs-lookup"><span data-stu-id="0f34d-111">The callback</span></span>
      return:
        type:
          - Promise<Models.FaceDetectWithUrlResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.detectWithUrl'
    name: 'detectWithUrl(string, Models.FaceDetectWithUrlOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: "<span data-ttu-id=\"0f34d-112\">Détectez les visages humains dans une image, les rectangles de visage de retour et éventuellement avec faceIds, des points de repère et des attributs.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-112\">Detect human faces in an image, return face rectangles, and optionally with faceIds, landmarks, and attributes.</span></span><br />\n* <span data-ttu-id=\"0f34d-113\">Paramètres facultatifs, y compris faceId, des points de repère et des attributs.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-113\">Optional parameters including faceId, landmarks, and attributes.</span></span> <span data-ttu-id=\"0f34d-114\">Attributs incluent l’âge, sexe, headPose, sourire, facialHair, lunettes, émotion, cheveux, composition, occlusion, Accessoires, flou, exposition et bruit.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-114\">Attributes include age, gender, headPose, smile, facialHair, glasses, emotion, hair, makeup, occlusion, accessories, blur, exposure and noise.</span></span>\n* <span data-ttu-id=\"0f34d-115\">La fonctionnalité de visage extrait, au lieu de l’image réelle, est stockée sur le serveur.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-115\">The extracted face feature, instead of the actual image, will be stored on server.</span></span> <span data-ttu-id=\"0f34d-116\">Le faceId représente l’identificateur de la fonctionnalité de visage et sera utilisé dans [doivent faire Face\_: identifier](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395239), [doivent faire Face\_: Vérifiez](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523a)et [Face</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-116\">The faceId is an identifier of the face feature and will be used in [Face - Identify](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395239), [Face - Verify](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523a), and [Face</span></span>\n- <span data-ttu-id=\"0f34d-117\">Recherchez Similar](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395237).</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-117\">Find Similar](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395237).</span></span> <span data-ttu-id=\"0f34d-118\">Date d’expiration des dernières 24 heures après l’appel de la détection.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-118\">It will expire 24 hours after the detection call.</span></span>\n* <span data-ttu-id=\"0f34d-119\">Qualité d’image face supérieure signifie une meilleure détection et la précision de la reconnaissance.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-119\">Higher face image quality means better detection and recognition precision.</span></span> <span data-ttu-id=\"0f34d-120\">Pensez aux visages de haute qualité\_: frontal, clear et face taille est de 200 x 200 pixels (100 pixels entre les yeux) ou plus grand.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-120\">Please consider high-quality faces: frontal, clear, and face size is 200x200 pixels (100 pixels between eyes) or bigger.</span></span>\n* <span data-ttu-id=\"0f34d-121\">JPEG, PNG, GIF (la première image) et format BMP sont pris en charge.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-121\">JPEG, PNG, GIF (the first frame), and BMP format are supported.</span></span> <span data-ttu-id=\"0f34d-122\">La taille du fichier image autorisée est de 1 Ko à 6 Mo.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-122\">The allowed image file size is from 1KB to 6MB.</span></span>\n* <span data-ttu-id=\"0f34d-123\">Visages sont détectables lors de sa taille est de 36 x 36 à 4096 x 4096 pixels.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-123\">Faces are detectable when its size is 36x36 to 4096x4096 pixels.</span></span> <span data-ttu-id=\"0f34d-124\">Si avez besoin afin de détecter les visages très petits mais plus clair, veuillez réessayer agrandir l’image d’entrée.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-124\">If need to detect very small but clear faces, please try to enlarge the input image.</span></span>\n* <span data-ttu-id=\"0f34d-125\">Jusqu'à 64 visages peuvent être retournés pour une image.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-125\">Up to 64 faces can be returned for an image.</span></span> <span data-ttu-id=\"0f34d-126\">Faces sont classés par taille de rectangle de face du plus grand à petite.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-126\">Faces are ranked by face rectangle size from large to small.</span></span>\n* <span data-ttu-id=\"0f34d-127\">Détecteur de visage préférer des faces frontales et quasi-frontales.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-127\">Face detector prefer frontal and near-frontal faces.</span></span> <span data-ttu-id=\"0f34d-128\">Il existe des cas visages peuvent ne pas être détectées, par exemple, particulièrement volumineux face angles (head-pose) ou en cours bloqués ou l’orientation d’image incorrect.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-128\">There are cases that faces may not be detected, e.g. exceptionally large face angles (head-pose) or being occluded, or wrong image orientation.</span></span>\n* <span data-ttu-id=\"0f34d-129\">Attributs (âge, sexe, headPose, sourire, facialHair, lunettes, émotion, cheveux, composition, occlusion, Accessoires, flou, exposition et bruit) ne peuvent pas être parfaitement précis.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-129\">Attributes (age, gender, headPose, smile, facialHair, glasses, emotion, hair, makeup, occlusion, accessories, blur, exposure and noise) may not be perfectly accurate.</span></span> <span data-ttu-id=\"0f34d-130\">Valeur de pas de HeadPose est un champ réservé et retourne toujours 0.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-130\">HeadPose's pitch value is a reserved field and will always return 0.</span></span>\n* <span data-ttu-id=\"0f34d-131\">'recognitionModel' différentes valeurs sont fournies.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-131\">Different 'recognitionModel' values are provided.</span></span> <span data-ttu-id=\"0f34d-132\">Si les opérations de suivi telles que vérifier, identifier, Rechercher similaire sont nécessaires, spécifiez le modèle de reconnaissance avec 'recognitionModel' paramètre.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-132\">If follow-up operations like Verify, Identify, Find Similar are needed, please specify the recognition model with 'recognitionModel' parameter.</span></span> <span data-ttu-id=\"0f34d-133\">La valeur par défaut pour 'recognitionModel' est 'recognition_01', si le modèle le plus récent nécessaire, veuillez spécifier explicitement le modèle que vous avez besoin dans ce paramètre.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-133\">The default value for 'recognitionModel' is 'recognition_01', if latest model needed, please explicitly specify the model you need in this parameter.</span></span> <span data-ttu-id=\"0f34d-134\">Une fois spécifié, le faceIds détectés sera associée au modèle de reconnaissance spécifié.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-134\">Once specified, the detected faceIds will be associated with the specified recognition model.</span></span> <span data-ttu-id=\"0f34d-135\">Plus de détails, reportez-vous à [comment spécifier un modèle de reconnaissance](https://docs.microsoft.com/en-us/azure/cognitive-services/face/face-api-how-to-topics/specify-recognition-model)</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-135\">More details, please refer to [How to specify a recognition model](https://docs.microsoft.com/en-us/azure/cognitive-services/face/face-api-how-to-topics/specify-recognition-model)</span></span>"
    syntax:
      content: 'function detectWithUrl(url: string, options?: Models.FaceDetectWithUrlOptionalParams)'
      parameters:
        - id: url
          type:
            - string
          description: <span data-ttu-id="0f34d-136">URL accessible publiquement d’une image</span><span class="sxs-lookup"><span data-stu-id="0f34d-136">Publicly reachable URL of an image</span></span>
        - id: options
          type:
            - Models.FaceDetectWithUrlOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FaceDetectWithUrlResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.detectWithUrl_1'
    name: 'detectWithUrl(string, ServiceCallback<DetectedFace[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectWithUrl(url: string, callback: ServiceCallback<DetectedFace[]>)'
      parameters:
        - id: url
          type:
            - string
          description: <span data-ttu-id="0f34d-137">URL accessible publiquement d’une image</span><span class="sxs-lookup"><span data-stu-id="0f34d-137">Publicly reachable URL of an image</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.DetectedFace[]>'
          description: |
            <span data-ttu-id="0f34d-138">Le rappel</span><span class="sxs-lookup"><span data-stu-id="0f34d-138">The callback</span></span>
      return:
        type:
          - Promise<Models.FaceDetectWithUrlResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.constructor'
    name: Face(FaceClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: <span data-ttu-id="0f34d-139">Créer une Face.</span><span class="sxs-lookup"><span data-stu-id="0f34d-139">Create a Face.</span></span>
    syntax:
      content: 'new Face(client: FaceClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/cognitiveservices-face.FaceClientContext'
          description: |
            <span data-ttu-id="0f34d-140">Référence au client du service.</span><span class="sxs-lookup"><span data-stu-id="0f34d-140">Reference to the service client.</span></span>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.findSimilar_2'
    name: 'findSimilar(string, FaceFindSimilarOptionalParams, ServiceCallback<SimilarFace[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function findSimilar(faceId: string, options: FaceFindSimilarOptionalParams, callback: ServiceCallback<SimilarFace[]>)'
      parameters:
        - id: faceId
          type:
            - string
          description: "<span data-ttu-id=\"0f34d-141\">FaceId de la face de la requête.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-141\">FaceId of the query face.</span></span> <span data-ttu-id=\"0f34d-142\">Utilisateur doit appeler Face\_: détecter la première pour obtenir un faceId valide.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-142\">User needs to call Face - Detect first to get a valid faceId.</span></span> <span data-ttu-id=\"0f34d-143\">Notez que cette faceId n’est pas persistant et expirera après l’appel de la détection des dernières 24 heures</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-143\">Note that this faceId is not persisted and will expire 24 hours after the detection call</span></span>"
        - id: options
          type:
            - '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams'
          description: <span data-ttu-id="0f34d-144">Les paramètres facultatifs</span><span class="sxs-lookup"><span data-stu-id="0f34d-144">The optional parameters</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.SimilarFace[]>'
          description: |
            <span data-ttu-id="0f34d-145">Le rappel</span><span class="sxs-lookup"><span data-stu-id="0f34d-145">The callback</span></span>
      return:
        type:
          - Promise<Models.FaceFindSimilarResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.findSimilar'
    name: 'findSimilar(string, Models.FaceFindSimilarOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: "<span data-ttu-id=\"0f34d-146\">Étant donné faceId requête face, pour rechercher les visages similaires à partir d’un tableau faceId, une liste de visage ou une liste de visages de grande taille.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-146\">Given query face's faceId, to search the similar-looking faces from a faceId array, a face list or a large face list.</span></span> <span data-ttu-id=\"0f34d-147\">faceId tableau contient les visages créés par [doivent faire Face\_: détecter](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236), ce qui va expirer après la création des dernières 24 heures.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-147\">faceId array contains the faces created by [Face - Detect](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236), which will expire 24 hours after creation.</span></span> <span data-ttu-id=\"0f34d-148\">Un «\_faceListId\_» est créé par [FaceList - créer](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039524b) contenant persistedFaceIds n’expirent pas.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-148\">A \"faceListId\" is created by [FaceList - Create](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039524b) containing persistedFaceIds that will not expire.</span></span> <span data-ttu-id=\"0f34d-149\">Et un «\_largeFaceListId\_» est créé par [LargeFaceList - créer](/docs/services/563879b61984550e40cbbe8d/operations/5a157b68d2de3616c086f2cc) contenant persistedFaceIds également expirent pas.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-149\">And a \"largeFaceListId\" is created by [LargeFaceList - Create](/docs/services/563879b61984550e40cbbe8d/operations/5a157b68d2de3616c086f2cc) containing persistedFaceIds that will also not expire.</span></span> <span data-ttu-id=\"0f34d-150\">En fonction de l’entrée de la liste de visages similaires retournée contient faceIds ou persistedFaceIds classés par similarité.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-150\">Depending on the input the returned similar faces list contains faceIds or persistedFaceIds ranked by similarity.</span></span>\n<br/><span data-ttu-id=\"0f34d-151\">Rechercher similaire a deux modes de travail, «\_matchPerson\_» et «\_matchFace\_».</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-151\">Find similar has two working modes, \"matchPerson\" and \"matchFace\".</span></span> <span data-ttu-id=\"0f34d-152\">«\_matchPerson\_» est le mode par défaut qui tente de trouver de visage de la même personne que possible à l’aide de seuils même personne internes.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-152\">\"matchPerson\" is the default mode that it tries to find faces of the same person as possible by using internal same-person thresholds.</span></span> <span data-ttu-id=\"0f34d-153\">Il est utile rechercher un autre autres photos personne.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-153\">It is useful to find a known person's other photos.</span></span> <span data-ttu-id=\"0f34d-154\">Notez qu’une liste vide est retournée si aucun visage ne passer les seuils internes.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-154\">Note that an empty list will be returned if no faces pass the internal thresholds.</span></span> <span data-ttu-id=\"0f34d-155\">en mode «\_matchFace\_» ignore les seuils de la même personne et le retourne classés visages similaires malgré tout, même la similarité est faible.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-155\">\"matchFace\" mode ignores same-person thresholds and returns ranked similar faces anyway, even the similarity is low.</span></span> <span data-ttu-id=\"0f34d-156\">Il peut être utilisé dans les cas comme la recherche de visages célébrités.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-156\">It can be used in the cases like searching celebrity-looking faces.</span></span>\n<br/><span data-ttu-id=\"0f34d-157\">Le recognitionModel associé faceId de la face requête doit être le même que le recognitionModel utilisé par la tableau faceId de cible, liste de visage ou face volumineux.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-157\">The 'recognitionModel' associated with the query face's faceId should be the same as the 'recognitionModel' used by the target faceId array, face list or large face list.</span></span>"
    syntax:
      content: 'function findSimilar(faceId: string, options?: Models.FaceFindSimilarOptionalParams)'
      parameters:
        - id: faceId
          type:
            - string
          description: "<span data-ttu-id=\"0f34d-158\">FaceId de la face de la requête.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-158\">FaceId of the query face.</span></span> <span data-ttu-id=\"0f34d-159\">Utilisateur doit appeler Face\_: détecter la première pour obtenir un faceId valide.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-159\">User needs to call Face - Detect first to get a valid faceId.</span></span> <span data-ttu-id=\"0f34d-160\">Notez que cette faceId n’est pas persistant et expirera après l’appel de la détection des dernières 24 heures</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-160\">Note that this faceId is not persisted and will expire 24 hours after the detection call</span></span>"
        - id: options
          type:
            - Models.FaceFindSimilarOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FaceFindSimilarResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.findSimilar_1'
    name: 'findSimilar(string, ServiceCallback<SimilarFace[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function findSimilar(faceId: string, callback: ServiceCallback<SimilarFace[]>)'
      parameters:
        - id: faceId
          type:
            - string
          description: "<span data-ttu-id=\"0f34d-161\">FaceId de la face de la requête.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-161\">FaceId of the query face.</span></span> <span data-ttu-id=\"0f34d-162\">Utilisateur doit appeler Face\_: détecter la première pour obtenir un faceId valide.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-162\">User needs to call Face - Detect first to get a valid faceId.</span></span> <span data-ttu-id=\"0f34d-163\">Notez que cette faceId n’est pas persistant et expirera après l’appel de la détection des dernières 24 heures</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-163\">Note that this faceId is not persisted and will expire 24 hours after the detection call</span></span>"
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.SimilarFace[]>'
          description: |
            <span data-ttu-id="0f34d-164">Le rappel</span><span class="sxs-lookup"><span data-stu-id="0f34d-164">The callback</span></span>
      return:
        type:
          - Promise<Models.FaceFindSimilarResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.group'
    name: 'group(string[], msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: "<span data-ttu-id=\"0f34d-165\">Diviser candidate visages en groupes en fonction de similarité de face.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-165\">Divide candidate faces into groups based on face similarity.</span></span><br />\n* <span data-ttu-id=\"0f34d-166\">La sortie est un ou plusieurs groupes de visages disjoint et un messyGroup.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-166\">The output is one or more disjointed face groups and a messyGroup.</span></span> <span data-ttu-id=\"0f34d-167\">Un groupe de visage contient les visages qui ont similaire vous recherchez, souvent de la même personne.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-167\">A face group contains faces that have similar looking, often of the same person.</span></span> <span data-ttu-id=\"0f34d-168\">Groupes de visages sont classés par taille de groupe, c'est-à-dire le nombre de visages.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-168\">Face groups are ranked by group size, i.e. number of faces.</span></span> <span data-ttu-id=\"0f34d-169\">Notez que les faces appartenant à une même personne peuvent être fractionnés en plusieurs groupes dans le résultat.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-169\">Notice that faces belonging to a same person might be split into several groups in the result.</span></span>\n* <span data-ttu-id=\"0f34d-170\">MessyGroup est un groupe de visage spécial contenant des visages qui ne peut pas trouver n’importe quel face équivalent similaire du visage d’origine.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-170\">MessyGroup is a special face group containing faces that cannot find any similar counterpart face from original faces.</span></span> <span data-ttu-id=\"0f34d-171\">Le messyGroup n’apparaîtra pas dans le résultat si tous les visages trouvé leurs équivalents.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-171\">The messyGroup will not appear in the result if all faces found their counterparts.</span></span>\n* <span data-ttu-id=\"0f34d-172\">API de groupe a besoin d’au moins 2 candidate visages et 1000 au maximum.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-172\">Group API needs at least 2 candidate faces and 1000 at most.</span></span> <span data-ttu-id=\"0f34d-173\">Nous vous suggérons essayez [doivent faire Face\_: Vérifiez](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523a) lorsque vous avez uniquement des visages candidate 2.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-173\">We suggest to try [Face - Verify](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523a) when you only have 2 candidate faces.</span></span>\n* <span data-ttu-id=\"0f34d-174\">Le recognitionModel associé faceIds des visages de la requête doit être le même.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-174\">The 'recognitionModel' associated with the query faces' faceIds should be the same.</span></span>"
    syntax:
      content: 'function group(faceIds: string[], options?: msRest.RequestOptionsBase)'
      parameters:
        - id: faceIds
          type:
            - 'string[]'
          description: "<span data-ttu-id=\"0f34d-175\">Tableau de candidat faceId créé en Face\_: détecter.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-175\">Array of candidate faceId created by Face - Detect.</span></span> <span data-ttu-id=\"0f34d-176\">La valeur maximale est 1 000 visages</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-176\">The maximum is 1000 faces</span></span>"
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FaceGroupResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.group_2'
    name: 'group(string[], RequestOptionsBase, ServiceCallback<GroupResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function group(faceIds: string[], options: RequestOptionsBase, callback: ServiceCallback<GroupResult>)'
      parameters:
        - id: faceIds
          type:
            - 'string[]'
          description: "<span data-ttu-id=\"0f34d-177\">Tableau de candidat faceId créé en Face\_: détecter.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-177\">Array of candidate faceId created by Face - Detect.</span></span> <span data-ttu-id=\"0f34d-178\">La valeur maximale est 1 000 visages</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-178\">The maximum is 1000 faces</span></span>"
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="0f34d-179">Les paramètres facultatifs</span><span class="sxs-lookup"><span data-stu-id="0f34d-179">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.GroupResult>
          description: |
            <span data-ttu-id="0f34d-180">Le rappel</span><span class="sxs-lookup"><span data-stu-id="0f34d-180">The callback</span></span>
      return:
        type:
          - Promise<Models.FaceGroupResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.group_1'
    name: 'group(string[], ServiceCallback<GroupResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function group(faceIds: string[], callback: ServiceCallback<GroupResult>)'
      parameters:
        - id: faceIds
          type:
            - 'string[]'
          description: "<span data-ttu-id=\"0f34d-181\">Tableau de candidat faceId créé en Face\_: détecter.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-181\">Array of candidate faceId created by Face - Detect.</span></span> <span data-ttu-id=\"0f34d-182\">La valeur maximale est 1 000 visages</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-182\">The maximum is 1000 faces</span></span>"
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.GroupResult>
          description: |
            <span data-ttu-id="0f34d-183">Le rappel</span><span class="sxs-lookup"><span data-stu-id="0f34d-183">The callback</span></span>
      return:
        type:
          - Promise<Models.FaceGroupResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.identify_2'
    name: 'identify(string[], FaceIdentifyOptionalParams, ServiceCallback<IdentifyResult[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function identify(faceIds: string[], options: FaceIdentifyOptionalParams, callback: ServiceCallback<IdentifyResult[]>)'
      parameters:
        - id: faceIds
          type:
            - 'string[]'
          description: "<span data-ttu-id=\"0f34d-184\">Tableau de requête est confrontée faceIds, créé par la Face\_: détecter.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-184\">Array of query faces faceIds, created by the Face - Detect.</span></span> <span data-ttu-id=\"0f34d-185\">Chacune des faces sont identifiées indépendamment.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-185\">Each of the faces are identified independently.</span></span> <span data-ttu-id=\"0f34d-186\">Le nombre de faceIds valide est comprise entre [1, 10].</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-186\">The valid number of faceIds is between [1, 10].</span></span>"
        - id: options
          type:
            - '@azure/cognitiveservices-face.FaceIdentifyOptionalParams'
          description: <span data-ttu-id="0f34d-187">Les paramètres facultatifs</span><span class="sxs-lookup"><span data-stu-id="0f34d-187">The optional parameters</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.IdentifyResult[]>'
          description: |
            <span data-ttu-id="0f34d-188">Le rappel</span><span class="sxs-lookup"><span data-stu-id="0f34d-188">The callback</span></span>
      return:
        type:
          - Promise<Models.FaceIdentifyResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.identify'
    name: 'identify(string[], Models.FaceIdentifyOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: "<span data-ttu-id=\"0f34d-189\">identification de 1-à-plusieurs pour rechercher les correspondances les plus proches de la face de personne de requête spécifique à partir d’un groupe de personnes ou d’un groupe de personne volumineux.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-189\">1-to-many identification to find the closest matches of the specific query person face from a person group or large person group.</span></span>\n<br/> <span data-ttu-id=\"0f34d-190\">Pour chaque face dans le tableau faceIds, identifier des visages calculera les similitudes entre le visage de la requête et tous les visages dans le groupe de personnes (donné par personGroupId) ou personne grand groupe (donné par largePersonGroupId), revenez candidat ou les personnes pour auxquels sont confrontées classées par niveau de confiance de similarité.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-190\">For each face in the faceIds array, Face Identify will compute similarities between the query face and all the faces in the person group (given by personGroupId) or large person group (given by largePersonGroupId), and return candidate person(s) for that face ranked by similarity confidence.</span></span> <span data-ttu-id=\"0f34d-191\">Le groupe de personnes volumineux/groupe de personne doit être formé pour le rendre prêt pour l’identification.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-191\">The person group/large person group should be trained to make it ready for identification.</span></span> <span data-ttu-id=\"0f34d-192\">En savoir plus dans [groupe de personnes - Train](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395249) et [LargePersonGroup - Train](/docs/services/563879b61984550e40cbbe8d/operations/599ae2d16ac60f11b48b5aa4).</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-192\">See more in [PersonGroup - Train](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395249) and [LargePersonGroup - Train](/docs/services/563879b61984550e40cbbe8d/operations/599ae2d16ac60f11b48b5aa4).</span></span>\n<br/>\n<span data-ttu-id=\"0f34d-193\">Remarques :</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-193\">Remarks:</span></span><br />\n* <span data-ttu-id=\"0f34d-194\">L’algorithme permet plus d’un visage doit être assurée indépendamment à la même requête, mais pas plus de 10 faces.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-194\">The algorithm allows more than one face to be identified independently at the same request, but no more than 10 faces.</span></span>\n* <span data-ttu-id=\"0f34d-195\">Chaque personne dans le groupe de groupe/grande personne personne peut avoir plusieurs visages, mais pas plus de 248 visages.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-195\">Each person in the person group/large person group could have more than one face, but no more than 248 faces.</span></span>\n* <span data-ttu-id=\"0f34d-196\">Qualité d’image face supérieure signifie une plus grande précision de l’identification.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-196\">Higher face image quality means better identification precision.</span></span> <span data-ttu-id=\"0f34d-197\">Pensez aux visages de haute qualité\_: frontal, clear et face taille est de 200 x 200 pixels (100 pixels entre les yeux) ou plus grand.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-197\">Please consider high-quality faces: frontal, clear, and face size is 200x200 pixels (100 pixels between eyes) or bigger.</span></span>\n* <span data-ttu-id=\"0f34d-198\">Nombre de candidats retourné est restreint par maxNumOfCandidatesReturned et confidenceThreshold.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-198\">Number of candidates returned is restricted by maxNumOfCandidatesReturned and confidenceThreshold.</span></span> <span data-ttu-id=\"0f34d-199\">Si aucune personne n’est identifié, les candidats retournées sera un tableau vide.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-199\">If no person is identified, the returned candidates will be an empty array.</span></span>\n* <span data-ttu-id=\"0f34d-200\">Essayez [Face - Rechercher similaire](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395237) lorsque vous devez rechercher des visages similaires dans une liste de visage liste/grande face plutôt qu’un groupe de groupe/grande personne personne.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-200\">Try [Face - Find Similar](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395237) when you need to find similar faces from a face list/large face list instead of a person group/large person group.</span></span>\n* <span data-ttu-id=\"0f34d-201\">Le recognitionModel associé faceIds des visages de la requête doit être le même que le recognitionModel utilisé par le groupe de personnes cible ou le groupe de personne volumineux.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-201\">The 'recognitionModel' associated with the query faces' faceIds should be the same as the 'recognitionModel' used by the target person group or large person group.</span></span>"
    syntax:
      content: 'function identify(faceIds: string[], options?: Models.FaceIdentifyOptionalParams)'
      parameters:
        - id: faceIds
          type:
            - 'string[]'
          description: "<span data-ttu-id=\"0f34d-202\">Tableau de requête est confrontée faceIds, créé par la Face\_: détecter.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-202\">Array of query faces faceIds, created by the Face - Detect.</span></span> <span data-ttu-id=\"0f34d-203\">Chacune des faces sont identifiées indépendamment.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-203\">Each of the faces are identified independently.</span></span> <span data-ttu-id=\"0f34d-204\">Le nombre de faceIds valide est comprise entre [1, 10].</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-204\">The valid number of faceIds is between [1, 10].</span></span>"
        - id: options
          type:
            - Models.FaceIdentifyOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FaceIdentifyResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.identify_1'
    name: 'identify(string[], ServiceCallback<IdentifyResult[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function identify(faceIds: string[], callback: ServiceCallback<IdentifyResult[]>)'
      parameters:
        - id: faceIds
          type:
            - 'string[]'
          description: "<span data-ttu-id=\"0f34d-205\">Tableau de requête est confrontée faceIds, créé par la Face\_: détecter.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-205\">Array of query faces faceIds, created by the Face - Detect.</span></span> <span data-ttu-id=\"0f34d-206\">Chacune des faces sont identifiées indépendamment.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-206\">Each of the faces are identified independently.</span></span> <span data-ttu-id=\"0f34d-207\">Le nombre de faceIds valide est comprise entre [1, 10].</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-207\">The valid number of faceIds is between [1, 10].</span></span>"
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.IdentifyResult[]>'
          description: |
            <span data-ttu-id="0f34d-208">Le rappel</span><span class="sxs-lookup"><span data-stu-id="0f34d-208">The callback</span></span>
      return:
        type:
          - Promise<Models.FaceIdentifyResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.verifyFaceToFace'
    name: 'verifyFaceToFace(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: "<span data-ttu-id=\"0f34d-209\">Vérifiez si les deux visages appartiennent à une même personne, ou si un visage appartient à une personne.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-209\">Verify whether two faces belong to a same person or whether one face belongs to a person.</span></span>\n<br/>\n<span data-ttu-id=\"0f34d-210\">Remarques :</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-210\">Remarks:</span></span><br />\n* <span data-ttu-id=\"0f34d-211\">Qualité d’image face supérieure signifie une plus grande précision de l’identification.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-211\">Higher face image quality means better identification precision.</span></span> <span data-ttu-id=\"0f34d-212\">Pensez aux visages de haute qualité\_: frontal, clear et face taille est de 200 x 200 pixels (100 pixels entre les yeux) ou plus grand.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-212\">Please consider high-quality faces: frontal, clear, and face size is 200x200 pixels (100 pixels between eyes) or bigger.</span></span>\n* <span data-ttu-id=\"0f34d-213\">Pour les scénarios qui sont sensibles à la précision Vérifiez votre propre jugement.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-213\">For the scenarios that are sensitive to accuracy please make your own judgment.</span></span>\n* <span data-ttu-id=\"0f34d-214\">Le recognitionModel associé faceIds des visages de la requête doit être le même que le recognitionModel utilisé par le visage de la cible, le groupe de personnes ou le groupe de personne volumineux.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-214\">The 'recognitionModel' associated with the query faces' faceIds should be the same as the 'recognitionModel' used by the target face, person group or large person group.</span></span>"
    syntax:
      content: 'function verifyFaceToFace(faceId1: string, faceId2: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: faceId1
          type:
            - string
          description: "<span data-ttu-id=\"0f34d-215\">faceId de la première face provient de la Face\_: détecter</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-215\">FaceId of the first face, comes from Face - Detect</span></span>"
        - id: faceId2
          type:
            - string
          description: "<span data-ttu-id=\"0f34d-216\">faceId de la deuxième face, provient de la Face\_: détecter</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-216\">FaceId of the second face, comes from Face - Detect</span></span>"
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FaceVerifyFaceToFaceResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.verifyFaceToFace_2'
    name: 'verifyFaceToFace(string, string, RequestOptionsBase, ServiceCallback<VerifyResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function verifyFaceToFace(faceId1: string, faceId2: string, options: RequestOptionsBase, callback: ServiceCallback<VerifyResult>)'
      parameters:
        - id: faceId1
          type:
            - string
          description: "<span data-ttu-id=\"0f34d-217\">faceId de la première face provient de la Face\_: détecter</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-217\">FaceId of the first face, comes from Face - Detect</span></span>"
        - id: faceId2
          type:
            - string
          description: "<span data-ttu-id=\"0f34d-218\">faceId de la deuxième face, provient de la Face\_: détecter</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-218\">FaceId of the second face, comes from Face - Detect</span></span>"
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="0f34d-219">Les paramètres facultatifs</span><span class="sxs-lookup"><span data-stu-id="0f34d-219">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.VerifyResult>
          description: |
            <span data-ttu-id="0f34d-220">Le rappel</span><span class="sxs-lookup"><span data-stu-id="0f34d-220">The callback</span></span>
      return:
        type:
          - Promise<Models.FaceVerifyFaceToFaceResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.verifyFaceToFace_1'
    name: 'verifyFaceToFace(string, string, ServiceCallback<VerifyResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function verifyFaceToFace(faceId1: string, faceId2: string, callback: ServiceCallback<VerifyResult>)'
      parameters:
        - id: faceId1
          type:
            - string
          description: "<span data-ttu-id=\"0f34d-221\">faceId de la première face provient de la Face\_: détecter</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-221\">FaceId of the first face, comes from Face - Detect</span></span>"
        - id: faceId2
          type:
            - string
          description: "<span data-ttu-id=\"0f34d-222\">faceId de la deuxième face, provient de la Face\_: détecter</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-222\">FaceId of the second face, comes from Face - Detect</span></span>"
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.VerifyResult>
          description: |
            <span data-ttu-id="0f34d-223">Le rappel</span><span class="sxs-lookup"><span data-stu-id="0f34d-223">The callback</span></span>
      return:
        type:
          - Promise<Models.FaceVerifyFaceToFaceResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.verifyFaceToPerson_2'
    name: 'verifyFaceToPerson(string, string, FaceVerifyFaceToPersonOptionalParams, ServiceCallback<VerifyResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function verifyFaceToPerson(faceId: string, personId: string, options: FaceVerifyFaceToPersonOptionalParams, callback: ServiceCallback<VerifyResult>)'
      parameters:
        - id: faceId
          type:
            - string
          description: "<span data-ttu-id=\"0f34d-224\">FaceId du visage, provient de la Face\_: détecter</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-224\">FaceId of the face, comes from Face - Detect</span></span>"
        - id: personId
          type:
            - string
          description: "<span data-ttu-id=\"0f34d-225\">Spécifiez une personne spécifique dans un groupe de personnes ou d’un groupe de personnes volumineux.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-225\">Specify a certain person in a person group or a large person group.</span></span> <span data-ttu-id=\"0f34d-226\">personId est créé dans le groupe de personnes personne\_: créez ou LargePersonGroup personne - créer.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-226\">personId is created in PersonGroup Person - Create or LargePersonGroup Person - Create.</span></span>"
        - id: options
          type:
            - '@azure/cognitiveservices-face.FaceVerifyFaceToPersonOptionalParams'
          description: <span data-ttu-id="0f34d-227">Les paramètres facultatifs</span><span class="sxs-lookup"><span data-stu-id="0f34d-227">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.VerifyResult>
          description: |
            <span data-ttu-id="0f34d-228">Le rappel</span><span class="sxs-lookup"><span data-stu-id="0f34d-228">The callback</span></span>
      return:
        type:
          - Promise<Models.FaceVerifyFaceToPersonResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.verifyFaceToPerson'
    name: 'verifyFaceToPerson(string, string, Models.FaceVerifyFaceToPersonOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="0f34d-229">Vérifiez si les deux visages appartiennent à une même personne.</span><span class="sxs-lookup"><span data-stu-id="0f34d-229">Verify whether two faces belong to a same person.</span></span> <span data-ttu-id="0f34d-230">Compare une face Id avec un Id de la personne</span><span class="sxs-lookup"><span data-stu-id="0f34d-230">Compares a face Id with a Person Id</span></span>
    syntax:
      content: 'function verifyFaceToPerson(faceId: string, personId: string, options?: Models.FaceVerifyFaceToPersonOptionalParams)'
      parameters:
        - id: faceId
          type:
            - string
          description: "<span data-ttu-id=\"0f34d-231\">FaceId du visage, provient de la Face\_: détecter</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-231\">FaceId of the face, comes from Face - Detect</span></span>"
        - id: personId
          type:
            - string
          description: "<span data-ttu-id=\"0f34d-232\">Spécifiez une personne spécifique dans un groupe de personnes ou d’un groupe de personnes volumineux.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-232\">Specify a certain person in a person group or a large person group.</span></span> <span data-ttu-id=\"0f34d-233\">personId est créé dans le groupe de personnes personne\_: créez ou LargePersonGroup personne - créer.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-233\">personId is created in PersonGroup Person - Create or LargePersonGroup Person - Create.</span></span>"
        - id: options
          type:
            - Models.FaceVerifyFaceToPersonOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FaceVerifyFaceToPersonResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.verifyFaceToPerson_1'
    name: 'verifyFaceToPerson(string, string, ServiceCallback<VerifyResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function verifyFaceToPerson(faceId: string, personId: string, callback: ServiceCallback<VerifyResult>)'
      parameters:
        - id: faceId
          type:
            - string
          description: "<span data-ttu-id=\"0f34d-234\">FaceId du visage, provient de la Face\_: détecter</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-234\">FaceId of the face, comes from Face - Detect</span></span>"
        - id: personId
          type:
            - string
          description: "<span data-ttu-id=\"0f34d-235\">Spécifiez une personne spécifique dans un groupe de personnes ou d’un groupe de personnes volumineux.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-235\">Specify a certain person in a person group or a large person group.</span></span> <span data-ttu-id=\"0f34d-236\">personId est créé dans le groupe de personnes personne\_: créez ou LargePersonGroup personne - créer.</span><span class=\"sxs-lookup\"><span data-stu-id=\"0f34d-236\">personId is created in PersonGroup Person - Create or LargePersonGroup Person - Create.</span></span>"
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.VerifyResult>
          description: |
            <span data-ttu-id="0f34d-237">Le rappel</span><span class="sxs-lookup"><span data-stu-id="0f34d-237">The callback</span></span>
      return:
        type:
          - Promise<Models.FaceVerifyFaceToPersonResponse>
    package: '@azure/cognitiveservices-face'
references:
  - uid: '@azure/cognitiveservices-face.FaceClientContext'
    name: FaceClientContext
    spec.typeScript:
      - name: FaceClientContext
        fullName: FaceClientContext
        uid: '@azure/cognitiveservices-face.FaceClientContext'
  - uid: 'ServiceCallback<@azure/cognitiveservices-face.DetectedFace[]>'
    name: 'DetectedFace[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DetectedFace
        fullName: DetectedFace
        uid: '@azure/cognitiveservices-face.DetectedFace'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/cognitiveservices-face.FaceDetectWithStreamOptionalParams'
    name: FaceDetectWithStreamOptionalParams
    spec.typeScript:
      - name: FaceDetectWithStreamOptionalParams
        fullName: FaceDetectWithStreamOptionalParams
        uid: '@azure/cognitiveservices-face.FaceDetectWithStreamOptionalParams'
  - uid: '@azure/cognitiveservices-face.FaceDetectWithUrlOptionalParams'
    name: FaceDetectWithUrlOptionalParams
    spec.typeScript:
      - name: FaceDetectWithUrlOptionalParams
        fullName: FaceDetectWithUrlOptionalParams
        uid: '@azure/cognitiveservices-face.FaceDetectWithUrlOptionalParams'
  - uid: 'ServiceCallback<@azure/cognitiveservices-face.SimilarFace[]>'
    name: 'SimilarFace[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SimilarFace
        fullName: SimilarFace
        uid: '@azure/cognitiveservices-face.SimilarFace'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams'
    name: FaceFindSimilarOptionalParams
    spec.typeScript:
      - name: FaceFindSimilarOptionalParams
        fullName: FaceFindSimilarOptionalParams
        uid: '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams'
  - uid: ServiceCallback<@azure/cognitiveservices-face.GroupResult>
    name: GroupResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: GroupResult
        fullName: GroupResult
        uid: '@azure/cognitiveservices-face.GroupResult'
      - name: '>'
        fullName: '>'
  - uid: 'ServiceCallback<@azure/cognitiveservices-face.IdentifyResult[]>'
    name: 'IdentifyResult[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: IdentifyResult
        fullName: IdentifyResult
        uid: '@azure/cognitiveservices-face.IdentifyResult'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/cognitiveservices-face.FaceIdentifyOptionalParams'
    name: FaceIdentifyOptionalParams
    spec.typeScript:
      - name: FaceIdentifyOptionalParams
        fullName: FaceIdentifyOptionalParams
        uid: '@azure/cognitiveservices-face.FaceIdentifyOptionalParams'
  - uid: ServiceCallback<@azure/cognitiveservices-face.VerifyResult>
    name: VerifyResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: VerifyResult
        fullName: VerifyResult
        uid: '@azure/cognitiveservices-face.VerifyResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-face.FaceVerifyFaceToPersonOptionalParams'
    name: FaceVerifyFaceToPersonOptionalParams
    spec.typeScript:
      - name: FaceVerifyFaceToPersonOptionalParams
        fullName: FaceVerifyFaceToPersonOptionalParams
        uid: '@azure/cognitiveservices-face.FaceVerifyFaceToPersonOptionalParams'