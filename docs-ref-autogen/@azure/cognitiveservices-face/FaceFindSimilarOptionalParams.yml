### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams'
    name: FaceFindSimilarOptionalParams
    fullName: FaceFindSimilarOptionalParams
    children:
      - '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams.abortSignal'
      - '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams.customHeaders'
      - '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams.faceIds'
      - '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams.faceListId'
      - '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams.largeFaceListId'
      - '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams.maxNumOfCandidatesReturned'
      - '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams.mode'
      - '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams.onDownloadProgress'
      - '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams.onUploadProgress'
      - '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams.timeout'
    langs:
      - typeScript
    type: interface
    summary: Paramètres facultatifs.
    extends:
      name: RequestOptionsBase
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams.abortSignal'
    name: abortSignal
    fullName: abortSignal
    children: []
    langs:
      - typeScript
    type: property
    summary: Le signal qui peut être utilisé pour les demandes d’abandon.
    optional: true
    syntax:
      content: 'abortSignal?: AbortSignalLike'
      return:
        type:
          - AbortSignalLike
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams.customHeaders'
    name: customHeaders
    fullName: customHeaders
    children: []
    langs:
      - typeScript
    type: property
    summary: '{objet} [customHeaders] En-têtes de requête personnalisés qui seront appliqués avant que la demande est envoyée défini par l’utilisateur.'
    optional: true
    syntax:
      content: 'customHeaders?: undefined | [key: string]: string'
      return:
        type:
          - 'undefined | [key: string]: string'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams.faceIds'
    name: faceIds
    fullName: faceIds
    children: []
    langs:
      - typeScript
    type: property
    summary: "Tableau de candidat faceIds. D'entre eux sont créés en Face\_: détecter et le faceIds expirera après l’appel de la détection des dernières 24 heures. Le nombre de faceIds est limité à 1000. FaceIds, largeFaceListId et faceListId de paramètre ne doit pas être fournie en même temps."
    optional: true
    syntax:
      content: 'faceIds?: string[]'
      return:
        type:
          - 'string[]'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams.faceListId'
    name: faceListId
    fullName: faceListId
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Une liste de face spécifié par l’utilisateur un candidat unique existante, créée dans la liste de visages - créer une liste de visages. Liste de visages contient un ensemble de persistedFaceIds qui sont conservés et n’expire jamais.
      FaceIds, largeFaceListId et faceListId de paramètre ne doit pas être fournie en même temps.
    optional: true
    syntax:
      content: 'faceListId?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams.largeFaceListId'
    name: largeFaceListId
    fullName: largeFaceListId
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Une liste de grandes face spécifié par l’utilisateur un candidat unique existante, créée dans LargeFaceList - créer. Liste de visage volumineux contient un ensemble de persistedFaceIds qui sont conservés et n’expire jamais. FaceIds, largeFaceListId et faceListId de paramètre ne doit pas être fournie en même temps.'
    optional: true
    syntax:
      content: 'largeFaceListId?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams.maxNumOfCandidatesReturned'
    name: maxNumOfCandidatesReturned
    fullName: maxNumOfCandidatesReturned
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Le nombre de visages similaires supérieurs est retourné. La plage valide est [1, 1000]. Valeur par défaut : 20.'
    optional: true
    syntax:
      content: 'maxNumOfCandidatesReturned?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams.mode'
    name: mode
    fullName: mode
    children: []
    langs:
      - typeScript
    type: property
    summary: "Mode de recherche de visage similaire. Il peut être «\_matchPerson\_» ou «\_matchFace\_». Les valeurs possibles sont\_: 'matchPerson', 'matchFace'. Valeur par défaut\_: «\_matchPerson\_»."
    optional: true
    syntax:
      content: 'mode?: FindSimilarMatchMode'
      return:
        type:
          - '@azure/cognitiveservices-face.FindSimilarMatchMode'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams.onDownloadProgress'
    name: onDownloadProgress
    fullName: onDownloadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: Rappel qui se déclenche lors de progression du téléchargement.
    optional: true
    syntax:
      content: 'onDownloadProgress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams.onUploadProgress'
    name: onUploadProgress
    fullName: onUploadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: Rappel qui se déclenche lors de progression du chargement.
    optional: true
    syntax:
      content: 'onUploadProgress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams.timeout'
    name: timeout
    fullName: timeout
    children: []
    langs:
      - typeScript
    type: property
    summary: Le nombre de millisecondes qu’une demande peut prendre avant automatiquement son interruption.
    optional: true
    syntax:
      content: 'timeout?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/cognitiveservices-face'
references:
  - uid: '@azure/cognitiveservices-face.FindSimilarMatchMode'
    name: FindSimilarMatchMode
    spec.typeScript:
      - name: FindSimilarMatchMode
        fullName: FindSimilarMatchMode
        uid: '@azure/cognitiveservices-face.FindSimilarMatchMode'