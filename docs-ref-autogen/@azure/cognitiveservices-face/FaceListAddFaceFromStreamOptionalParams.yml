### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams'
    name: FaceListAddFaceFromStreamOptionalParams
    fullName: FaceListAddFaceFromStreamOptionalParams
    children:
      - '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.abortSignal'
      - '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.customHeaders'
      - '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.onDownloadProgress'
      - '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.onUploadProgress'
      - '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.targetFace'
      - '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.timeout'
      - '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.userData'
    langs:
      - typeScript
    type: interface
    summary: <span data-ttu-id="1fa2b-101">Paramètres facultatifs.</span><span class="sxs-lookup"><span data-stu-id="1fa2b-101">Optional Parameters.</span></span>
    extends:
      name: RequestOptionsBase
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.abortSignal'
    name: abortSignal
    fullName: abortSignal
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="1fa2b-102">Le signal qui peut être utilisé pour les demandes d’abandon.</span><span class="sxs-lookup"><span data-stu-id="1fa2b-102">The signal which can be used to abort requests.</span></span>
    optional: true
    syntax:
      content: 'abortSignal?: AbortSignalLike'
      return:
        type:
          - AbortSignalLike
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.customHeaders'
    name: customHeaders
    fullName: customHeaders
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="1fa2b-103">{objet} [customHeaders] En-têtes de requête personnalisés qui seront appliqués avant que la demande est envoyée défini par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="1fa2b-103">{object} [customHeaders] User defined custom request headers that will be applied before the request is sent.</span></span>'
    optional: true
    syntax:
      content: 'customHeaders?: undefined | [key: string]: string'
      return:
        type:
          - 'undefined | [key: string]: string'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.onDownloadProgress'
    name: onDownloadProgress
    fullName: onDownloadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="1fa2b-104">Rappel qui se déclenche lors de progression du téléchargement.</span><span class="sxs-lookup"><span data-stu-id="1fa2b-104">Callback which fires upon download progress.</span></span>
    optional: true
    syntax:
      content: 'onDownloadProgress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.onUploadProgress'
    name: onUploadProgress
    fullName: onUploadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="1fa2b-105">Rappel qui se déclenche lors de progression du chargement.</span><span class="sxs-lookup"><span data-stu-id="1fa2b-105">Callback which fires upon upload progress.</span></span>
    optional: true
    syntax:
      content: 'onUploadProgress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.targetFace'
    name: targetFace
    fullName: targetFace
    children: []
    langs:
      - typeScript
    type: property
    summary: "<span data-ttu-id=\"1fa2b-106\">Un rectangle de face pour spécifier la face de la cible à ajouter à une personne au format «\_targetFace = gauche, haut, largeur, hauteur\_».</span><span class=\"sxs-lookup\"><span data-stu-id=\"1fa2b-106\">A face rectangle to specify the target face to be added to a person in the format of \"targetFace=left,top,width,height\".</span></span> <span data-ttu-id=\"1fa2b-107\">Par exemple,</span><span class=\"sxs-lookup\"><span data-stu-id=\"1fa2b-107\">E.g.</span></span> <span data-ttu-id=\"1fa2b-108\">\"targetFace=10,10,100,100\".</span><span class=\"sxs-lookup\"><span data-stu-id=\"1fa2b-108\">\"targetFace=10,10,100,100\".</span></span> <span data-ttu-id=\"1fa2b-109\">S’il existe plusieurs visages dans l’image, targetFace est nécessaire de spécifier qui doivent faire face à ajouter.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1fa2b-109\">If there is more than one face in the image, targetFace is required to specify which face to add.</span></span> <span data-ttu-id=\"1fa2b-110\">Aucun targetFace ne ne signifie qu’une seule face détectée dans l’image entière.</span><span class=\"sxs-lookup\"><span data-stu-id=\"1fa2b-110\">No targetFace means there is only one face detected in the entire image.</span></span>"
    optional: true
    syntax:
      content: 'targetFace?: number[]'
      return:
        type:
          - 'number[]'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.timeout'
    name: timeout
    fullName: timeout
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="1fa2b-111">Le nombre de millisecondes qu’une demande peut prendre avant automatiquement son interruption.</span><span class="sxs-lookup"><span data-stu-id="1fa2b-111">The number of milliseconds a request can take before automatically being terminated.</span></span>
    optional: true
    syntax:
      content: 'timeout?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams.userData'
    name: userData
    fullName: userData
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="1fa2b-112">Données spécifiées par l’utilisateur sur la face à des fins.</span><span class="sxs-lookup"><span data-stu-id="1fa2b-112">User-specified data about the face for any purpose.</span></span> <span data-ttu-id="1fa2b-113">La longueur maximale est de 1 Ko.</span><span class="sxs-lookup"><span data-stu-id="1fa2b-113">The maximum length is 1KB.</span></span>
    optional: true
    syntax:
      content: 'userData?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/cognitiveservices-face'