### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson'
    name: PersonGroupPerson
    fullName: PersonGroupPerson
    children:
      - '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromStream'
      - '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromStream_2'
      - '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromStream_1'
      - '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromUrl'
      - '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromUrl_2'
      - '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromUrl_1'
      - '@azure/cognitiveservices-face.PersonGroupPerson.create'
      - '@azure/cognitiveservices-face.PersonGroupPerson.create_2'
      - '@azure/cognitiveservices-face.PersonGroupPerson.create_1'
      - '@azure/cognitiveservices-face.PersonGroupPerson.deleteFace'
      - '@azure/cognitiveservices-face.PersonGroupPerson.deleteFace_2'
      - '@azure/cognitiveservices-face.PersonGroupPerson.deleteFace_1'
      - '@azure/cognitiveservices-face.PersonGroupPerson.deleteMethod'
      - '@azure/cognitiveservices-face.PersonGroupPerson.deleteMethod_2'
      - '@azure/cognitiveservices-face.PersonGroupPerson.deleteMethod_1'
      - '@azure/cognitiveservices-face.PersonGroupPerson.get'
      - '@azure/cognitiveservices-face.PersonGroupPerson.get_2'
      - '@azure/cognitiveservices-face.PersonGroupPerson.get_1'
      - '@azure/cognitiveservices-face.PersonGroupPerson.getFace'
      - '@azure/cognitiveservices-face.PersonGroupPerson.getFace_2'
      - '@azure/cognitiveservices-face.PersonGroupPerson.getFace_1'
      - '@azure/cognitiveservices-face.PersonGroupPerson.list'
      - '@azure/cognitiveservices-face.PersonGroupPerson.list_2'
      - '@azure/cognitiveservices-face.PersonGroupPerson.list_1'
      - '@azure/cognitiveservices-face.PersonGroupPerson.constructor'
      - '@azure/cognitiveservices-face.PersonGroupPerson.update'
      - '@azure/cognitiveservices-face.PersonGroupPerson.update_2'
      - '@azure/cognitiveservices-face.PersonGroupPerson.update_1'
      - '@azure/cognitiveservices-face.PersonGroupPerson.updateFace'
      - '@azure/cognitiveservices-face.PersonGroupPerson.updateFace_2'
      - '@azure/cognitiveservices-face.PersonGroupPerson.updateFace_1'
    langs:
      - typeScript
    type: class
    summary: Classe représentant un PersonGroupPerson.
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromStream'
    name: 'addFaceFromStream(string, string, msRest.HttpRequestBody, Models.PersonGroupPersonAddFaceFromStreamOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: "Ajouter une face à une personne dans un groupe de personnes pour l’identification des visages ou de vérification. Pour faire face à une image contient plusieurs visages, face d’entrée peut être spécifié en tant qu’image avec un rectangle targetFace. Elle retourne un persistedFaceId représentant la face ajoutée. Aucune image ne sera stockée.\nUniquement la fonctionnalité de visage extraits est stockée sur le serveur jusqu'à ce que [PersonGroup PersonFace - supprimer](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523e), [supprimer du groupe de personnes personne -](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523d) ou [groupe de personnes - Delete](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395245) est appelée.\n<br /> Remarque persistedFaceId est différent de faceId généré par [doivent faire Face\_: détecter](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236).\n*   Qualité d’image face supérieure signifie une plus grande précision de la reconnaissance. Pensez aux visages de haute qualité\_: frontal, clear et face taille est de 200 x 200 pixels (100 pixels entre les yeux) ou plus grand.\n*   Chaque entrée de la personne peut contenir jusqu'à 248 visages.\n*   JPEG, PNG, GIF (la première image) et format BMP sont pris en charge. La taille du fichier image autorisée est de 1 Ko à 6 Mo.\n*   rectangle de «\_targetFace\_» doit contenir une face. Zéro ou plusieurs faces sont considérées comme une erreur. Si le rectangle fourni «\_targetFace\_» n’est pas retourné à partir de [doivent faire Face\_: détecter](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236), il n’existe aucune garantie pour détecter et ajouter la face avec succès.\n*   En dehors de la taille de la face détectables (36 x 36-4096 pixels de 4096 x), grandes occlusions de tête ou de grande taille entraîne des échecs.\n*   Ajout/Suppression de visages vers/à partir d’une même personne seront traitée séquentiellement. Ajout/Suppression de visages à différentes personnes sont traitées en parallèle.\n* La taille minimale de visages sont détectables selon est une image ne dépasse pas 1920 x 1080 pixels 36 x 36 pixels.\nLes images avec des dimensions supérieurs à 1920 x 1080 pixels aurez besoin d’une taille de police minimale proportionnellement plus importantes.\n* Les valeurs de différents «\_detectionModel\_» peuvent être fournis. Pour utiliser et comparer des modèles de détection différents, reportez-vous à [comment spécifier un modèle de détection](https://docs.microsoft.com/en-us/azure/cognitive-services/face/face-api-how-to-topics/specify-detection-model)\n| Modèle | Utilisation recommandée-case(s) |\n| ---------- | -------- |\n| 'detection_01'\_: | Le modèle de détection par défaut pour [groupe de personnes personne - ajouter\nFace](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523b). Recommander pour près de détection de visage de face. Pour les scénarios avec des visages angle particulièrement volumineux (head-pose), un vaisseau faces ou l’orientation d’image incorrect, les visages dans ce cas ne peuvent pas être détectés. | | 'detection_02'\_: | Modèle de détection publiée en 2019 peut avec une meilleure précision en particulier sur les visages de petite, côtés et est flous. |"
    syntax:
      content: 'function addFaceFromStream(personGroupId: string, personId: string, image: msRest.HttpRequestBody, options?: Models.PersonGroupPersonAddFaceFromStreamOptionalParams)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID faisant référence à un groupe de personnes particulier.
        - id: personId
          type:
            - string
          description: ID faisant référence à une personne particulière.
        - id: image
          type:
            - msRest.HttpRequestBody
          description: Un flux d’image.
        - id: options
          type:
            - Models.PersonGroupPersonAddFaceFromStreamOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PersonGroupPersonAddFaceFromStreamResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromStream_2'
    name: 'addFaceFromStream(string, string, msRest.HttpRequestBody, PersonGroupPersonAddFaceFromStreamOptionalParams, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addFaceFromStream(personGroupId: string, personId: string, image: msRest.HttpRequestBody, options: PersonGroupPersonAddFaceFromStreamOptionalParams, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID faisant référence à un groupe de personnes particulier.
        - id: personId
          type:
            - string
          description: ID faisant référence à une personne particulière.
        - id: image
          type:
            - msRest.HttpRequestBody
          description: Un flux d’image.
        - id: options
          type:
            - '@azure/cognitiveservices-face.PersonGroupPersonAddFaceFromStreamOptionalParams'
          description: Les paramètres facultatifs
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            Le rappel
      return:
        type:
          - Promise<Models.PersonGroupPersonAddFaceFromStreamResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromStream_1'
    name: 'addFaceFromStream(string, string, msRest.HttpRequestBody, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addFaceFromStream(personGroupId: string, personId: string, image: msRest.HttpRequestBody, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID faisant référence à un groupe de personnes particulier.
        - id: personId
          type:
            - string
          description: ID faisant référence à une personne particulière.
        - id: image
          type:
            - msRest.HttpRequestBody
          description: Un flux d’image.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            Le rappel
      return:
        type:
          - Promise<Models.PersonGroupPersonAddFaceFromStreamResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromUrl'
    name: 'addFaceFromUrl(string, string, string, Models.PersonGroupPersonAddFaceFromUrlOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: "Ajouter une face à une personne dans un groupe de personnes pour l’identification des visages ou de vérification. Pour faire face à une image contient plusieurs visages, face d’entrée peut être spécifié en tant qu’image avec un rectangle targetFace. Elle retourne un persistedFaceId représentant la face ajoutée. Aucune image ne sera stockée.\nUniquement la fonctionnalité de visage extraits est stockée sur le serveur jusqu'à ce que [PersonGroup PersonFace - supprimer](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523e), [supprimer du groupe de personnes personne -](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523d) ou [groupe de personnes - Delete](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395245) est appelée.\n<br /> Remarque persistedFaceId est différent de faceId généré par [doivent faire Face\_: détecter](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236).\n*   Qualité d’image face supérieure signifie une plus grande précision de la reconnaissance. Pensez aux visages de haute qualité\_: frontal, clear et face taille est de 200 x 200 pixels (100 pixels entre les yeux) ou plus grand.\n*   Chaque entrée de la personne peut contenir jusqu'à 248 visages.\n*   JPEG, PNG, GIF (la première image) et format BMP sont pris en charge. La taille du fichier image autorisée est de 1 Ko à 6 Mo.\n*   rectangle de «\_targetFace\_» doit contenir une face. Zéro ou plusieurs faces sont considérées comme une erreur. Si le rectangle fourni «\_targetFace\_» n’est pas retourné à partir de [doivent faire Face\_: détecter](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236), il n’existe aucune garantie pour détecter et ajouter la face avec succès.\n*   En dehors de la taille de la face détectables (36 x 36-4096 pixels de 4096 x), grandes occlusions de tête ou de grande taille entraîne des échecs.\n*   Ajout/Suppression de visages vers/à partir d’une même personne seront traitée séquentiellement. Ajout/Suppression de visages à différentes personnes sont traitées en parallèle.\n* La taille minimale de visages sont détectables selon est une image ne dépasse pas 1920 x 1080 pixels 36 x 36 pixels.\nLes images avec des dimensions supérieurs à 1920 x 1080 pixels aurez besoin d’une taille de police minimale proportionnellement plus importantes.\n* Les valeurs de différents «\_detectionModel\_» peuvent être fournis. Pour utiliser et comparer des modèles de détection différents, reportez-vous à [comment spécifier un modèle de détection](https://docs.microsoft.com/en-us/azure/cognitive-services/face/face-api-how-to-topics/specify-detection-model)\n| Modèle | Utilisation recommandée-case(s) |\n| ---------- | -------- |\n| 'detection_01'\_: | Le modèle de détection par défaut pour [groupe de personnes personne - ajouter\nFace](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523b). Recommander pour près de détection de visage de face. Pour les scénarios avec des visages angle particulièrement volumineux (head-pose), un vaisseau faces ou l’orientation d’image incorrect, les visages dans ce cas ne peuvent pas être détectés. | | 'detection_02'\_: | Modèle de détection publiée en 2019 peut avec une meilleure précision en particulier sur les visages de petite, côtés et est flous. |"
    syntax:
      content: 'function addFaceFromUrl(personGroupId: string, personId: string, url: string, options?: Models.PersonGroupPersonAddFaceFromUrlOptionalParams)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID faisant référence à un groupe de personnes particulier.
        - id: personId
          type:
            - string
          description: ID faisant référence à une personne particulière.
        - id: url
          type:
            - string
          description: URL accessible publiquement d’une image
        - id: options
          type:
            - Models.PersonGroupPersonAddFaceFromUrlOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PersonGroupPersonAddFaceFromUrlResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromUrl_2'
    name: 'addFaceFromUrl(string, string, string, PersonGroupPersonAddFaceFromUrlOptionalParams, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addFaceFromUrl(personGroupId: string, personId: string, url: string, options: PersonGroupPersonAddFaceFromUrlOptionalParams, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID faisant référence à un groupe de personnes particulier.
        - id: personId
          type:
            - string
          description: ID faisant référence à une personne particulière.
        - id: url
          type:
            - string
          description: URL accessible publiquement d’une image
        - id: options
          type:
            - '@azure/cognitiveservices-face.PersonGroupPersonAddFaceFromUrlOptionalParams'
          description: Les paramètres facultatifs
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            Le rappel
      return:
        type:
          - Promise<Models.PersonGroupPersonAddFaceFromUrlResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromUrl_1'
    name: 'addFaceFromUrl(string, string, string, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addFaceFromUrl(personGroupId: string, personId: string, url: string, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID faisant référence à un groupe de personnes particulier.
        - id: personId
          type:
            - string
          description: ID faisant référence à une personne particulière.
        - id: url
          type:
            - string
          description: URL accessible publiquement d’une image
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            Le rappel
      return:
        type:
          - Promise<Models.PersonGroupPersonAddFaceFromUrlResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.create'
    name: 'create(string, Models.PersonGroupPersonCreateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Créer une nouvelle personne dans un groupe de personnes spécifié.
    syntax:
      content: 'function create(personGroupId: string, options?: Models.PersonGroupPersonCreateOptionalParams)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID faisant référence à un groupe de personnes particulier.
        - id: options
          type:
            - Models.PersonGroupPersonCreateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PersonGroupPersonCreateResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.create_2'
    name: 'create(string, PersonGroupPersonCreateOptionalParams, ServiceCallback<Person>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function create(personGroupId: string, options: PersonGroupPersonCreateOptionalParams, callback: ServiceCallback<Person>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID faisant référence à un groupe de personnes particulier.
        - id: options
          type:
            - '@azure/cognitiveservices-face.PersonGroupPersonCreateOptionalParams'
          description: Les paramètres facultatifs
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.Person>
          description: |
            Le rappel
      return:
        type:
          - Promise<Models.PersonGroupPersonCreateResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.create_1'
    name: 'create(string, ServiceCallback<Person>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function create(personGroupId: string, callback: ServiceCallback<Person>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID faisant référence à un groupe de personnes particulier.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.Person>
          description: |
            Le rappel
      return:
        type:
          - Promise<Models.PersonGroupPersonCreateResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.deleteFace'
    name: 'deleteFace(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Supprimer un visage à partir d’une personne dans un groupe de personnes par persistedFaceId, personId et personGroupId spécifié.
      <br /> Ajout/Suppression de visages vers/à partir d’une même personne seront traitée séquentiellement.
      Ajout/Suppression de visages à différentes personnes sont traitées en parallèle.
    syntax:
      content: 'function deleteFace(personGroupId: string, personId: string, persistedFaceId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID faisant référence à un groupe de personnes particulier.
        - id: personId
          type:
            - string
          description: ID faisant référence à une personne particulière.
        - id: persistedFaceId
          type:
            - string
          description: ID faisant référence à un persistedFaceId particulier d’un visage existant.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.deleteFace_2'
    name: 'deleteFace(string, string, string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteFace(personGroupId: string, personId: string, persistedFaceId: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID faisant référence à un groupe de personnes particulier.
        - id: personId
          type:
            - string
          description: ID faisant référence à une personne particulière.
        - id: persistedFaceId
          type:
            - string
          description: ID faisant référence à un persistedFaceId particulier d’un visage existant.
        - id: options
          type:
            - RequestOptionsBase
          description: Les paramètres facultatifs
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Le rappel
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.deleteFace_1'
    name: 'deleteFace(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteFace(personGroupId: string, personId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID faisant référence à un groupe de personnes particulier.
        - id: personId
          type:
            - string
          description: ID faisant référence à une personne particulière.
        - id: persistedFaceId
          type:
            - string
          description: ID faisant référence à un persistedFaceId particulier d’un visage existant.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Le rappel
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.deleteMethod'
    name: 'deleteMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Supprimer une personne existante à partir d’un groupe de personnes. Le persistedFaceId, userData, fonctionnalité de face et de nom de personne dans l’entrée de la personne est tous supprimée.'
    syntax:
      content: 'function deleteMethod(personGroupId: string, personId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID faisant référence à un groupe de personnes particulier.
        - id: personId
          type:
            - string
          description: ID faisant référence à une personne particulière.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.deleteMethod_2'
    name: 'deleteMethod(string, string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(personGroupId: string, personId: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID faisant référence à un groupe de personnes particulier.
        - id: personId
          type:
            - string
          description: ID faisant référence à une personne particulière.
        - id: options
          type:
            - RequestOptionsBase
          description: Les paramètres facultatifs
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Le rappel
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.deleteMethod_1'
    name: 'deleteMethod(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(personGroupId: string, personId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID faisant référence à un groupe de personnes particulier.
        - id: personId
          type:
            - string
          description: ID faisant référence à une personne particulière.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Le rappel
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.get'
    name: 'get(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Récupérer les informations d’une personne, y compris userData, le nom et inscrit des visages persistants.'
    syntax:
      content: 'function get(personGroupId: string, personId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID faisant référence à un groupe de personnes particulier.
        - id: personId
          type:
            - string
          description: ID faisant référence à une personne particulière.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PersonGroupPersonGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.get_2'
    name: 'get(string, string, RequestOptionsBase, ServiceCallback<Person>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(personGroupId: string, personId: string, options: RequestOptionsBase, callback: ServiceCallback<Person>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID faisant référence à un groupe de personnes particulier.
        - id: personId
          type:
            - string
          description: ID faisant référence à une personne particulière.
        - id: options
          type:
            - RequestOptionsBase
          description: Les paramètres facultatifs
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.Person>
          description: |
            Le rappel
      return:
        type:
          - Promise<Models.PersonGroupPersonGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.get_1'
    name: 'get(string, string, ServiceCallback<Person>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(personGroupId: string, personId: string, callback: ServiceCallback<Person>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID faisant référence à un groupe de personnes particulier.
        - id: personId
          type:
            - string
          description: ID faisant référence à une personne particulière.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.Person>
          description: |
            Le rappel
      return:
        type:
          - Promise<Models.PersonGroupPersonGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.getFace'
    name: 'getFace(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Récupérer des informations sur une face persistante (spécifiée par persistedFaceId, personId et son personGroupId appartenant).'
    syntax:
      content: 'function getFace(personGroupId: string, personId: string, persistedFaceId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID faisant référence à un groupe de personnes particulier.
        - id: personId
          type:
            - string
          description: ID faisant référence à une personne particulière.
        - id: persistedFaceId
          type:
            - string
          description: ID faisant référence à un persistedFaceId particulier d’un visage existant.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PersonGroupPersonGetFaceResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.getFace_2'
    name: 'getFace(string, string, string, RequestOptionsBase, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getFace(personGroupId: string, personId: string, persistedFaceId: string, options: RequestOptionsBase, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID faisant référence à un groupe de personnes particulier.
        - id: personId
          type:
            - string
          description: ID faisant référence à une personne particulière.
        - id: persistedFaceId
          type:
            - string
          description: ID faisant référence à un persistedFaceId particulier d’un visage existant.
        - id: options
          type:
            - RequestOptionsBase
          description: Les paramètres facultatifs
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            Le rappel
      return:
        type:
          - Promise<Models.PersonGroupPersonGetFaceResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.getFace_1'
    name: 'getFace(string, string, string, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getFace(personGroupId: string, personId: string, persistedFaceId: string, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID faisant référence à un groupe de personnes particulier.
        - id: personId
          type:
            - string
          description: ID faisant référence à une personne particulière.
        - id: persistedFaceId
          type:
            - string
          description: ID faisant référence à un persistedFaceId particulier d’un visage existant.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            Le rappel
      return:
        type:
          - Promise<Models.PersonGroupPersonGetFaceResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.list'
    name: 'list(string, Models.PersonGroupPersonListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Liste de toutes les personnes dans un groupe de personnes et récupérer des informations de personne (y compris personId, nom, userData et persistedFaceIds des faces inscrites de la personne).'
    syntax:
      content: 'function list(personGroupId: string, options?: Models.PersonGroupPersonListOptionalParams)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID faisant référence à un groupe de personnes particulier.
        - id: options
          type:
            - Models.PersonGroupPersonListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PersonGroupPersonListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.list_2'
    name: 'list(string, PersonGroupPersonListOptionalParams, ServiceCallback<Person[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(personGroupId: string, options: PersonGroupPersonListOptionalParams, callback: ServiceCallback<Person[]>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID faisant référence à un groupe de personnes particulier.
        - id: options
          type:
            - '@azure/cognitiveservices-face.PersonGroupPersonListOptionalParams'
          description: Les paramètres facultatifs
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.Person[]>'
          description: |
            Le rappel
      return:
        type:
          - Promise<Models.PersonGroupPersonListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.list_1'
    name: 'list(string, ServiceCallback<Person[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(personGroupId: string, callback: ServiceCallback<Person[]>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID faisant référence à un groupe de personnes particulier.
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.Person[]>'
          description: |
            Le rappel
      return:
        type:
          - Promise<Models.PersonGroupPersonListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.constructor'
    name: PersonGroupPerson(FaceClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Créer un PersonGroupPerson.
    syntax:
      content: 'new PersonGroupPerson(client: FaceClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/cognitiveservices-face.FaceClientContext'
          description: |
            Référence au client du service.
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.update'
    name: 'update(string, string, Models.PersonGroupPersonUpdateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Nom de la mise à jour ou userData d’une personne.
    syntax:
      content: 'function update(personGroupId: string, personId: string, options?: Models.PersonGroupPersonUpdateOptionalParams)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID faisant référence à un groupe de personnes particulier.
        - id: personId
          type:
            - string
          description: ID faisant référence à une personne particulière.
        - id: options
          type:
            - Models.PersonGroupPersonUpdateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.update_2'
    name: 'update(string, string, PersonGroupPersonUpdateOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(personGroupId: string, personId: string, options: PersonGroupPersonUpdateOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID faisant référence à un groupe de personnes particulier.
        - id: personId
          type:
            - string
          description: ID faisant référence à une personne particulière.
        - id: options
          type:
            - '@azure/cognitiveservices-face.PersonGroupPersonUpdateOptionalParams'
          description: Les paramètres facultatifs
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Le rappel
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.update_1'
    name: 'update(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(personGroupId: string, personId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID faisant référence à un groupe de personnes particulier.
        - id: personId
          type:
            - string
          description: ID faisant référence à une personne particulière.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Le rappel
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.updateFace'
    name: 'updateFace(string, string, string, Models.PersonGroupPersonUpdateFaceOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: "Ajouter une face à une personne dans un groupe de personnes pour l’identification des visages ou de vérification. Pour faire face à une image contient plusieurs visages, face d’entrée peut être spécifié en tant qu’image avec un rectangle targetFace. Elle retourne un persistedFaceId représentant la face ajoutée. Aucune image ne sera stockée.\nUniquement la fonctionnalité de visage extraits est stockée sur le serveur jusqu'à ce que [PersonGroup PersonFace - supprimer](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523e), [supprimer du groupe de personnes personne -](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523d) ou [groupe de personnes - Delete](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395245) est appelée.\n<br /> Remarque persistedFaceId est différent de faceId généré par [doivent faire Face\_: détecter](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236).\n* Qualité d’image face supérieure signifie une plus grande précision de la reconnaissance. Pensez aux visages de haute qualité\_: frontal, clear et face taille est de 200 x 200 pixels (100 pixels entre les yeux) ou plus grand.\n* Chaque entrée de la personne peut contenir jusqu'à 248 visages.\n* JPEG, PNG, GIF (la première image) et format BMP sont pris en charge. La taille du fichier image autorisée est de 1 Ko à 6 Mo.\n* rectangle de «\_targetFace\_» doit contenir une face. Zéro ou plusieurs faces sont considérées comme une erreur. Si le rectangle fourni «\_targetFace\_» n’est pas retourné à partir de [doivent faire Face\_: détecter](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236), il n’existe aucune garantie pour détecter et ajouter la face avec succès.\n* En dehors de la taille de la face détectables (36 x 36-4096 pixels de 4096 x), grandes occlusions de tête ou de grande taille entraîne des échecs.\n* Ajout/Suppression de visages vers/à partir d’une même personne seront traitée séquentiellement. Ajout/Suppression de visages à différentes personnes sont traitées en parallèle."
    syntax:
      content: 'function updateFace(personGroupId: string, personId: string, persistedFaceId: string, options?: Models.PersonGroupPersonUpdateFaceOptionalParams)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID faisant référence à un groupe de personnes particulier.
        - id: personId
          type:
            - string
          description: ID faisant référence à une personne particulière.
        - id: persistedFaceId
          type:
            - string
          description: ID faisant référence à un persistedFaceId particulier d’un visage existant.
        - id: options
          type:
            - Models.PersonGroupPersonUpdateFaceOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.updateFace_2'
    name: 'updateFace(string, string, string, PersonGroupPersonUpdateFaceOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateFace(personGroupId: string, personId: string, persistedFaceId: string, options: PersonGroupPersonUpdateFaceOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID faisant référence à un groupe de personnes particulier.
        - id: personId
          type:
            - string
          description: ID faisant référence à une personne particulière.
        - id: persistedFaceId
          type:
            - string
          description: ID faisant référence à un persistedFaceId particulier d’un visage existant.
        - id: options
          type:
            - '@azure/cognitiveservices-face.PersonGroupPersonUpdateFaceOptionalParams'
          description: Les paramètres facultatifs
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Le rappel
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.updateFace_1'
    name: 'updateFace(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateFace(personGroupId: string, personId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: ID faisant référence à un groupe de personnes particulier.
        - id: personId
          type:
            - string
          description: ID faisant référence à une personne particulière.
        - id: persistedFaceId
          type:
            - string
          description: ID faisant référence à un persistedFaceId particulier d’un visage existant.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Le rappel
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
references:
  - uid: '@azure/cognitiveservices-face.FaceClientContext'
    name: FaceClientContext
    spec.typeScript:
      - name: FaceClientContext
        fullName: FaceClientContext
        uid: '@azure/cognitiveservices-face.FaceClientContext'
  - uid: ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
    name: PersistedFace>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PersistedFace
        fullName: PersistedFace
        uid: '@azure/cognitiveservices-face.PersistedFace'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-face.PersonGroupPersonAddFaceFromStreamOptionalParams'
    name: PersonGroupPersonAddFaceFromStreamOptionalParams
    spec.typeScript:
      - name: PersonGroupPersonAddFaceFromStreamOptionalParams
        fullName: PersonGroupPersonAddFaceFromStreamOptionalParams
        uid: '@azure/cognitiveservices-face.PersonGroupPersonAddFaceFromStreamOptionalParams'
  - uid: '@azure/cognitiveservices-face.PersonGroupPersonAddFaceFromUrlOptionalParams'
    name: PersonGroupPersonAddFaceFromUrlOptionalParams
    spec.typeScript:
      - name: PersonGroupPersonAddFaceFromUrlOptionalParams
        fullName: PersonGroupPersonAddFaceFromUrlOptionalParams
        uid: '@azure/cognitiveservices-face.PersonGroupPersonAddFaceFromUrlOptionalParams'
  - uid: ServiceCallback<@azure/cognitiveservices-face.Person>
    name: Person>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Person
        fullName: Person
        uid: '@azure/cognitiveservices-face.Person'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-face.PersonGroupPersonCreateOptionalParams'
    name: PersonGroupPersonCreateOptionalParams
    spec.typeScript:
      - name: PersonGroupPersonCreateOptionalParams
        fullName: PersonGroupPersonCreateOptionalParams
        uid: '@azure/cognitiveservices-face.PersonGroupPersonCreateOptionalParams'
  - uid: 'ServiceCallback<@azure/cognitiveservices-face.Person[]>'
    name: 'Person[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Person
        fullName: Person
        uid: '@azure/cognitiveservices-face.Person'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/cognitiveservices-face.PersonGroupPersonListOptionalParams'
    name: PersonGroupPersonListOptionalParams
    spec.typeScript:
      - name: PersonGroupPersonListOptionalParams
        fullName: PersonGroupPersonListOptionalParams
        uid: '@azure/cognitiveservices-face.PersonGroupPersonListOptionalParams'
  - uid: '@azure/cognitiveservices-face.PersonGroupPersonUpdateOptionalParams'
    name: PersonGroupPersonUpdateOptionalParams
    spec.typeScript:
      - name: PersonGroupPersonUpdateOptionalParams
        fullName: PersonGroupPersonUpdateOptionalParams
        uid: '@azure/cognitiveservices-face.PersonGroupPersonUpdateOptionalParams'
  - uid: '@azure/cognitiveservices-face.PersonGroupPersonUpdateFaceOptionalParams'
    name: PersonGroupPersonUpdateFaceOptionalParams
    spec.typeScript:
      - name: PersonGroupPersonUpdateFaceOptionalParams
        fullName: PersonGroupPersonUpdateFaceOptionalParams
        uid: '@azure/cognitiveservices-face.PersonGroupPersonUpdateFaceOptionalParams'