### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-apimanagement.Logger'
    name: Logger
    fullName: Logger
    children:
      - '@azure/arm-apimanagement.Logger.createOrUpdate_2'
      - '@azure/arm-apimanagement.Logger.createOrUpdate'
      - '@azure/arm-apimanagement.Logger.createOrUpdate_1'
      - '@azure/arm-apimanagement.Logger.deleteMethod_2'
      - '@azure/arm-apimanagement.Logger.deleteMethod'
      - '@azure/arm-apimanagement.Logger.deleteMethod_1'
      - '@azure/arm-apimanagement.Logger.get'
      - '@azure/arm-apimanagement.Logger.get_2'
      - '@azure/arm-apimanagement.Logger.get_1'
      - '@azure/arm-apimanagement.Logger.getEntityTag'
      - '@azure/arm-apimanagement.Logger.getEntityTag_2'
      - '@azure/arm-apimanagement.Logger.getEntityTag_1'
      - '@azure/arm-apimanagement.Logger.listByService_2'
      - '@azure/arm-apimanagement.Logger.listByService'
      - '@azure/arm-apimanagement.Logger.listByService_1'
      - '@azure/arm-apimanagement.Logger.listByServiceNext'
      - '@azure/arm-apimanagement.Logger.listByServiceNext_2'
      - '@azure/arm-apimanagement.Logger.listByServiceNext_1'
      - '@azure/arm-apimanagement.Logger.constructor'
      - '@azure/arm-apimanagement.Logger.update'
      - '@azure/arm-apimanagement.Logger.update_2'
      - '@azure/arm-apimanagement.Logger.update_1'
    langs:
      - typeScript
    type: class
    summary: <span data-ttu-id="e208d-101">Classe représentant un enregistreur d’événements.</span><span class="sxs-lookup"><span data-stu-id="e208d-101">Class representing a Logger.</span></span>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.createOrUpdate_2'
    name: 'createOrUpdate(string, string, string, LoggerContract, LoggerCreateOrUpdateOptionalParams, ServiceCallback<LoggerContract>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createOrUpdate(resourceGroupName: string, serviceName: string, loggerId: string, parameters: LoggerContract, options: LoggerCreateOrUpdateOptionalParams, callback: ServiceCallback<LoggerContract>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e208d-102">Nom du groupe de ressources.</span><span class="sxs-lookup"><span data-stu-id="e208d-102">The name of the resource group.</span></span>
        - id: serviceName
          type:
            - string
          description: <span data-ttu-id="e208d-103">Le nom du service Gestion des API.</span><span class="sxs-lookup"><span data-stu-id="e208d-103">The name of the API Management service.</span></span>
        - id: loggerId
          type:
            - string
          description: <span data-ttu-id="e208d-104">Identificateur de l’enregistreur d’événements.</span><span class="sxs-lookup"><span data-stu-id="e208d-104">Logger identifier.</span></span> <span data-ttu-id="e208d-105">Doit être unique dans l’instance de service de gestion des API.</span><span class="sxs-lookup"><span data-stu-id="e208d-105">Must be unique in the API Management service instance.</span></span>
        - id: parameters
          type:
            - '@azure/arm-apimanagement.LoggerContract'
          description: <span data-ttu-id="e208d-106">Créer des paramètres.</span><span class="sxs-lookup"><span data-stu-id="e208d-106">Create parameters.</span></span>
        - id: options
          type:
            - '@azure/arm-apimanagement.LoggerCreateOrUpdateOptionalParams'
          description: <span data-ttu-id="e208d-107">Les paramètres facultatifs</span><span class="sxs-lookup"><span data-stu-id="e208d-107">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.LoggerContract>
          description: |
            <span data-ttu-id="e208d-108">Le rappel</span><span class="sxs-lookup"><span data-stu-id="e208d-108">The callback</span></span>
      return:
        type:
          - Promise<Models.LoggerCreateOrUpdateResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.createOrUpdate'
    name: 'createOrUpdate(string, string, string, LoggerContract, Models.LoggerCreateOrUpdateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e208d-109">Crée ou met à jour un enregistreur d’événements.</span><span class="sxs-lookup"><span data-stu-id="e208d-109">Creates or Updates a logger.</span></span>
    syntax:
      content: 'function createOrUpdate(resourceGroupName: string, serviceName: string, loggerId: string, parameters: LoggerContract, options?: Models.LoggerCreateOrUpdateOptionalParams)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e208d-110">Nom du groupe de ressources.</span><span class="sxs-lookup"><span data-stu-id="e208d-110">The name of the resource group.</span></span>
        - id: serviceName
          type:
            - string
          description: <span data-ttu-id="e208d-111">Le nom du service Gestion des API.</span><span class="sxs-lookup"><span data-stu-id="e208d-111">The name of the API Management service.</span></span>
        - id: loggerId
          type:
            - string
          description: <span data-ttu-id="e208d-112">Identificateur de l’enregistreur d’événements.</span><span class="sxs-lookup"><span data-stu-id="e208d-112">Logger identifier.</span></span> <span data-ttu-id="e208d-113">Doit être unique dans l’instance de service de gestion des API.</span><span class="sxs-lookup"><span data-stu-id="e208d-113">Must be unique in the API Management service instance.</span></span>
        - id: parameters
          type:
            - '@azure/arm-apimanagement.LoggerContract'
          description: <span data-ttu-id="e208d-114">Créer des paramètres.</span><span class="sxs-lookup"><span data-stu-id="e208d-114">Create parameters.</span></span>
        - id: options
          type:
            - Models.LoggerCreateOrUpdateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LoggerCreateOrUpdateResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.createOrUpdate_1'
    name: 'createOrUpdate(string, string, string, LoggerContract, ServiceCallback<LoggerContract>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createOrUpdate(resourceGroupName: string, serviceName: string, loggerId: string, parameters: LoggerContract, callback: ServiceCallback<LoggerContract>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e208d-115">Nom du groupe de ressources.</span><span class="sxs-lookup"><span data-stu-id="e208d-115">The name of the resource group.</span></span>
        - id: serviceName
          type:
            - string
          description: <span data-ttu-id="e208d-116">Le nom du service Gestion des API.</span><span class="sxs-lookup"><span data-stu-id="e208d-116">The name of the API Management service.</span></span>
        - id: loggerId
          type:
            - string
          description: <span data-ttu-id="e208d-117">Identificateur de l’enregistreur d’événements.</span><span class="sxs-lookup"><span data-stu-id="e208d-117">Logger identifier.</span></span> <span data-ttu-id="e208d-118">Doit être unique dans l’instance de service de gestion des API.</span><span class="sxs-lookup"><span data-stu-id="e208d-118">Must be unique in the API Management service instance.</span></span>
        - id: parameters
          type:
            - '@azure/arm-apimanagement.LoggerContract'
          description: <span data-ttu-id="e208d-119">Créer des paramètres.</span><span class="sxs-lookup"><span data-stu-id="e208d-119">Create parameters.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.LoggerContract>
          description: |
            <span data-ttu-id="e208d-120">Le rappel</span><span class="sxs-lookup"><span data-stu-id="e208d-120">The callback</span></span>
      return:
        type:
          - Promise<Models.LoggerCreateOrUpdateResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.deleteMethod_2'
    name: 'deleteMethod(string, string, string, string, LoggerDeleteMethodOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(resourceGroupName: string, serviceName: string, loggerId: string, ifMatch: string, options: LoggerDeleteMethodOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e208d-121">Nom du groupe de ressources.</span><span class="sxs-lookup"><span data-stu-id="e208d-121">The name of the resource group.</span></span>
        - id: serviceName
          type:
            - string
          description: <span data-ttu-id="e208d-122">Le nom du service Gestion des API.</span><span class="sxs-lookup"><span data-stu-id="e208d-122">The name of the API Management service.</span></span>
        - id: loggerId
          type:
            - string
          description: <span data-ttu-id="e208d-123">Identificateur de l’enregistreur d’événements.</span><span class="sxs-lookup"><span data-stu-id="e208d-123">Logger identifier.</span></span> <span data-ttu-id="e208d-124">Doit être unique dans l’instance de service de gestion des API.</span><span class="sxs-lookup"><span data-stu-id="e208d-124">Must be unique in the API Management service instance.</span></span>
        - id: ifMatch
          type:
            - string
          description: '<span data-ttu-id="e208d-125">ETag de l’entité.</span><span class="sxs-lookup"><span data-stu-id="e208d-125">ETag of the Entity.</span></span> <span data-ttu-id="e208d-126">ETag doit correspondre à l’état d’entité en cours à partir de la réponse de l’en-tête de la demande GET, ou elle doit être \* pour une mise à jour inconditionnelle.</span><span class="sxs-lookup"><span data-stu-id="e208d-126">ETag should match the current entity state from the header response of the GET request or it should be \* for unconditional update.</span></span>'
        - id: options
          type:
            - '@azure/arm-apimanagement.LoggerDeleteMethodOptionalParams'
          description: <span data-ttu-id="e208d-127">Les paramètres facultatifs</span><span class="sxs-lookup"><span data-stu-id="e208d-127">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="e208d-128">Le rappel</span><span class="sxs-lookup"><span data-stu-id="e208d-128">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.deleteMethod'
    name: 'deleteMethod(string, string, string, string, Models.LoggerDeleteMethodOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e208d-129">Supprime l’enregistreur d’événements spécifié.</span><span class="sxs-lookup"><span data-stu-id="e208d-129">Deletes the specified logger.</span></span>
    syntax:
      content: 'function deleteMethod(resourceGroupName: string, serviceName: string, loggerId: string, ifMatch: string, options?: Models.LoggerDeleteMethodOptionalParams)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e208d-130">Nom du groupe de ressources.</span><span class="sxs-lookup"><span data-stu-id="e208d-130">The name of the resource group.</span></span>
        - id: serviceName
          type:
            - string
          description: <span data-ttu-id="e208d-131">Le nom du service Gestion des API.</span><span class="sxs-lookup"><span data-stu-id="e208d-131">The name of the API Management service.</span></span>
        - id: loggerId
          type:
            - string
          description: <span data-ttu-id="e208d-132">Identificateur de l’enregistreur d’événements.</span><span class="sxs-lookup"><span data-stu-id="e208d-132">Logger identifier.</span></span> <span data-ttu-id="e208d-133">Doit être unique dans l’instance de service de gestion des API.</span><span class="sxs-lookup"><span data-stu-id="e208d-133">Must be unique in the API Management service instance.</span></span>
        - id: ifMatch
          type:
            - string
          description: '<span data-ttu-id="e208d-134">ETag de l’entité.</span><span class="sxs-lookup"><span data-stu-id="e208d-134">ETag of the Entity.</span></span> <span data-ttu-id="e208d-135">ETag doit correspondre à l’état d’entité en cours à partir de la réponse de l’en-tête de la demande GET, ou elle doit être \* pour une mise à jour inconditionnelle.</span><span class="sxs-lookup"><span data-stu-id="e208d-135">ETag should match the current entity state from the header response of the GET request or it should be \* for unconditional update.</span></span>'
        - id: options
          type:
            - Models.LoggerDeleteMethodOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.deleteMethod_1'
    name: 'deleteMethod(string, string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(resourceGroupName: string, serviceName: string, loggerId: string, ifMatch: string, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e208d-136">Nom du groupe de ressources.</span><span class="sxs-lookup"><span data-stu-id="e208d-136">The name of the resource group.</span></span>
        - id: serviceName
          type:
            - string
          description: <span data-ttu-id="e208d-137">Le nom du service Gestion des API.</span><span class="sxs-lookup"><span data-stu-id="e208d-137">The name of the API Management service.</span></span>
        - id: loggerId
          type:
            - string
          description: <span data-ttu-id="e208d-138">Identificateur de l’enregistreur d’événements.</span><span class="sxs-lookup"><span data-stu-id="e208d-138">Logger identifier.</span></span> <span data-ttu-id="e208d-139">Doit être unique dans l’instance de service de gestion des API.</span><span class="sxs-lookup"><span data-stu-id="e208d-139">Must be unique in the API Management service instance.</span></span>
        - id: ifMatch
          type:
            - string
          description: '<span data-ttu-id="e208d-140">ETag de l’entité.</span><span class="sxs-lookup"><span data-stu-id="e208d-140">ETag of the Entity.</span></span> <span data-ttu-id="e208d-141">ETag doit correspondre à l’état d’entité en cours à partir de la réponse de l’en-tête de la demande GET, ou elle doit être \* pour une mise à jour inconditionnelle.</span><span class="sxs-lookup"><span data-stu-id="e208d-141">ETag should match the current entity state from the header response of the GET request or it should be \* for unconditional update.</span></span>'
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="e208d-142">Le rappel</span><span class="sxs-lookup"><span data-stu-id="e208d-142">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.get'
    name: 'get(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e208d-143">Obtient les détails de l’enregistreur d’événements spécifié par son identificateur.</span><span class="sxs-lookup"><span data-stu-id="e208d-143">Gets the details of the logger specified by its identifier.</span></span>
    syntax:
      content: 'function get(resourceGroupName: string, serviceName: string, loggerId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e208d-144">Nom du groupe de ressources.</span><span class="sxs-lookup"><span data-stu-id="e208d-144">The name of the resource group.</span></span>
        - id: serviceName
          type:
            - string
          description: <span data-ttu-id="e208d-145">Le nom du service Gestion des API.</span><span class="sxs-lookup"><span data-stu-id="e208d-145">The name of the API Management service.</span></span>
        - id: loggerId
          type:
            - string
          description: <span data-ttu-id="e208d-146">Identificateur de l’enregistreur d’événements.</span><span class="sxs-lookup"><span data-stu-id="e208d-146">Logger identifier.</span></span> <span data-ttu-id="e208d-147">Doit être unique dans l’instance de service de gestion des API.</span><span class="sxs-lookup"><span data-stu-id="e208d-147">Must be unique in the API Management service instance.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LoggerGetResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.get_2'
    name: 'get(string, string, string, RequestOptionsBase, ServiceCallback<LoggerContract>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(resourceGroupName: string, serviceName: string, loggerId: string, options: RequestOptionsBase, callback: ServiceCallback<LoggerContract>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e208d-148">Nom du groupe de ressources.</span><span class="sxs-lookup"><span data-stu-id="e208d-148">The name of the resource group.</span></span>
        - id: serviceName
          type:
            - string
          description: <span data-ttu-id="e208d-149">Le nom du service Gestion des API.</span><span class="sxs-lookup"><span data-stu-id="e208d-149">The name of the API Management service.</span></span>
        - id: loggerId
          type:
            - string
          description: <span data-ttu-id="e208d-150">Identificateur de l’enregistreur d’événements.</span><span class="sxs-lookup"><span data-stu-id="e208d-150">Logger identifier.</span></span> <span data-ttu-id="e208d-151">Doit être unique dans l’instance de service de gestion des API.</span><span class="sxs-lookup"><span data-stu-id="e208d-151">Must be unique in the API Management service instance.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="e208d-152">Les paramètres facultatifs</span><span class="sxs-lookup"><span data-stu-id="e208d-152">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.LoggerContract>
          description: |
            <span data-ttu-id="e208d-153">Le rappel</span><span class="sxs-lookup"><span data-stu-id="e208d-153">The callback</span></span>
      return:
        type:
          - Promise<Models.LoggerGetResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.get_1'
    name: 'get(string, string, string, ServiceCallback<LoggerContract>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(resourceGroupName: string, serviceName: string, loggerId: string, callback: ServiceCallback<LoggerContract>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e208d-154">Nom du groupe de ressources.</span><span class="sxs-lookup"><span data-stu-id="e208d-154">The name of the resource group.</span></span>
        - id: serviceName
          type:
            - string
          description: <span data-ttu-id="e208d-155">Le nom du service Gestion des API.</span><span class="sxs-lookup"><span data-stu-id="e208d-155">The name of the API Management service.</span></span>
        - id: loggerId
          type:
            - string
          description: <span data-ttu-id="e208d-156">Identificateur de l’enregistreur d’événements.</span><span class="sxs-lookup"><span data-stu-id="e208d-156">Logger identifier.</span></span> <span data-ttu-id="e208d-157">Doit être unique dans l’instance de service de gestion des API.</span><span class="sxs-lookup"><span data-stu-id="e208d-157">Must be unique in the API Management service instance.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.LoggerContract>
          description: |
            <span data-ttu-id="e208d-158">Le rappel</span><span class="sxs-lookup"><span data-stu-id="e208d-158">The callback</span></span>
      return:
        type:
          - Promise<Models.LoggerGetResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.getEntityTag'
    name: 'getEntityTag(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e208d-159">Obtient la version de l’état (Etag) d’entité de l’enregistreur d’événements spécifié par son identificateur.</span><span class="sxs-lookup"><span data-stu-id="e208d-159">Gets the entity state (Etag) version of the logger specified by its identifier.</span></span>
    syntax:
      content: 'function getEntityTag(resourceGroupName: string, serviceName: string, loggerId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e208d-160">Nom du groupe de ressources.</span><span class="sxs-lookup"><span data-stu-id="e208d-160">The name of the resource group.</span></span>
        - id: serviceName
          type:
            - string
          description: <span data-ttu-id="e208d-161">Le nom du service Gestion des API.</span><span class="sxs-lookup"><span data-stu-id="e208d-161">The name of the API Management service.</span></span>
        - id: loggerId
          type:
            - string
          description: <span data-ttu-id="e208d-162">Identificateur de l’enregistreur d’événements.</span><span class="sxs-lookup"><span data-stu-id="e208d-162">Logger identifier.</span></span> <span data-ttu-id="e208d-163">Doit être unique dans l’instance de service de gestion des API.</span><span class="sxs-lookup"><span data-stu-id="e208d-163">Must be unique in the API Management service instance.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LoggerGetEntityTagResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.getEntityTag_2'
    name: 'getEntityTag(string, string, string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getEntityTag(resourceGroupName: string, serviceName: string, loggerId: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e208d-164">Nom du groupe de ressources.</span><span class="sxs-lookup"><span data-stu-id="e208d-164">The name of the resource group.</span></span>
        - id: serviceName
          type:
            - string
          description: <span data-ttu-id="e208d-165">Le nom du service Gestion des API.</span><span class="sxs-lookup"><span data-stu-id="e208d-165">The name of the API Management service.</span></span>
        - id: loggerId
          type:
            - string
          description: <span data-ttu-id="e208d-166">Identificateur de l’enregistreur d’événements.</span><span class="sxs-lookup"><span data-stu-id="e208d-166">Logger identifier.</span></span> <span data-ttu-id="e208d-167">Doit être unique dans l’instance de service de gestion des API.</span><span class="sxs-lookup"><span data-stu-id="e208d-167">Must be unique in the API Management service instance.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="e208d-168">Les paramètres facultatifs</span><span class="sxs-lookup"><span data-stu-id="e208d-168">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="e208d-169">Le rappel</span><span class="sxs-lookup"><span data-stu-id="e208d-169">The callback</span></span>
      return:
        type:
          - Promise<Models.LoggerGetEntityTagResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.getEntityTag_1'
    name: 'getEntityTag(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getEntityTag(resourceGroupName: string, serviceName: string, loggerId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e208d-170">Nom du groupe de ressources.</span><span class="sxs-lookup"><span data-stu-id="e208d-170">The name of the resource group.</span></span>
        - id: serviceName
          type:
            - string
          description: <span data-ttu-id="e208d-171">Le nom du service Gestion des API.</span><span class="sxs-lookup"><span data-stu-id="e208d-171">The name of the API Management service.</span></span>
        - id: loggerId
          type:
            - string
          description: <span data-ttu-id="e208d-172">Identificateur de l’enregistreur d’événements.</span><span class="sxs-lookup"><span data-stu-id="e208d-172">Logger identifier.</span></span> <span data-ttu-id="e208d-173">Doit être unique dans l’instance de service de gestion des API.</span><span class="sxs-lookup"><span data-stu-id="e208d-173">Must be unique in the API Management service instance.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="e208d-174">Le rappel</span><span class="sxs-lookup"><span data-stu-id="e208d-174">The callback</span></span>
      return:
        type:
          - Promise<Models.LoggerGetEntityTagResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.listByService_2'
    name: 'listByService(string, string, LoggerListByServiceOptionalParams, ServiceCallback<LoggerCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByService(resourceGroupName: string, serviceName: string, options: LoggerListByServiceOptionalParams, callback: ServiceCallback<LoggerCollection>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e208d-175">Nom du groupe de ressources.</span><span class="sxs-lookup"><span data-stu-id="e208d-175">The name of the resource group.</span></span>
        - id: serviceName
          type:
            - string
          description: <span data-ttu-id="e208d-176">Le nom du service Gestion des API.</span><span class="sxs-lookup"><span data-stu-id="e208d-176">The name of the API Management service.</span></span>
        - id: options
          type:
            - '@azure/arm-apimanagement.LoggerListByServiceOptionalParams'
          description: <span data-ttu-id="e208d-177">Les paramètres facultatifs</span><span class="sxs-lookup"><span data-stu-id="e208d-177">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.LoggerCollection>
          description: |
            <span data-ttu-id="e208d-178">Le rappel</span><span class="sxs-lookup"><span data-stu-id="e208d-178">The callback</span></span>
      return:
        type:
          - Promise<Models.LoggerListByServiceResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.listByService'
    name: 'listByService(string, string, Models.LoggerListByServiceOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e208d-179">Répertorie une collection d’enregistreurs d’événements dans l’instance de service spécifié.</span><span class="sxs-lookup"><span data-stu-id="e208d-179">Lists a collection of loggers in the specified service instance.</span></span>
    syntax:
      content: 'function listByService(resourceGroupName: string, serviceName: string, options?: Models.LoggerListByServiceOptionalParams)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e208d-180">Nom du groupe de ressources.</span><span class="sxs-lookup"><span data-stu-id="e208d-180">The name of the resource group.</span></span>
        - id: serviceName
          type:
            - string
          description: <span data-ttu-id="e208d-181">Le nom du service Gestion des API.</span><span class="sxs-lookup"><span data-stu-id="e208d-181">The name of the API Management service.</span></span>
        - id: options
          type:
            - Models.LoggerListByServiceOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LoggerListByServiceResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.listByService_1'
    name: 'listByService(string, string, ServiceCallback<LoggerCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByService(resourceGroupName: string, serviceName: string, callback: ServiceCallback<LoggerCollection>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e208d-182">Nom du groupe de ressources.</span><span class="sxs-lookup"><span data-stu-id="e208d-182">The name of the resource group.</span></span>
        - id: serviceName
          type:
            - string
          description: <span data-ttu-id="e208d-183">Le nom du service Gestion des API.</span><span class="sxs-lookup"><span data-stu-id="e208d-183">The name of the API Management service.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.LoggerCollection>
          description: |
            <span data-ttu-id="e208d-184">Le rappel</span><span class="sxs-lookup"><span data-stu-id="e208d-184">The callback</span></span>
      return:
        type:
          - Promise<Models.LoggerListByServiceResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.listByServiceNext'
    name: 'listByServiceNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e208d-185">Répertorie une collection d’enregistreurs d’événements dans l’instance de service spécifié.</span><span class="sxs-lookup"><span data-stu-id="e208d-185">Lists a collection of loggers in the specified service instance.</span></span>
    syntax:
      content: 'function listByServiceNext(nextPageLink: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: <span data-ttu-id="e208d-186">NextLink de l’appel réussi précédent à l’opération de liste.</span><span class="sxs-lookup"><span data-stu-id="e208d-186">The NextLink from the previous successful call to List operation.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LoggerListByServiceNextResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.listByServiceNext_2'
    name: 'listByServiceNext(string, RequestOptionsBase, ServiceCallback<LoggerCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByServiceNext(nextPageLink: string, options: RequestOptionsBase, callback: ServiceCallback<LoggerCollection>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: <span data-ttu-id="e208d-187">NextLink de l’appel réussi précédent à l’opération de liste.</span><span class="sxs-lookup"><span data-stu-id="e208d-187">The NextLink from the previous successful call to List operation.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="e208d-188">Les paramètres facultatifs</span><span class="sxs-lookup"><span data-stu-id="e208d-188">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.LoggerCollection>
          description: |
            <span data-ttu-id="e208d-189">Le rappel</span><span class="sxs-lookup"><span data-stu-id="e208d-189">The callback</span></span>
      return:
        type:
          - Promise<Models.LoggerListByServiceNextResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.listByServiceNext_1'
    name: 'listByServiceNext(string, ServiceCallback<LoggerCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listByServiceNext(nextPageLink: string, callback: ServiceCallback<LoggerCollection>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: <span data-ttu-id="e208d-190">NextLink de l’appel réussi précédent à l’opération de liste.</span><span class="sxs-lookup"><span data-stu-id="e208d-190">The NextLink from the previous successful call to List operation.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-apimanagement.LoggerCollection>
          description: |
            <span data-ttu-id="e208d-191">Le rappel</span><span class="sxs-lookup"><span data-stu-id="e208d-191">The callback</span></span>
      return:
        type:
          - Promise<Models.LoggerListByServiceNextResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.constructor'
    name: Logger(ApiManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: <span data-ttu-id="e208d-192">Créer un enregistreur d’événements.</span><span class="sxs-lookup"><span data-stu-id="e208d-192">Create a Logger.</span></span>
    syntax:
      content: 'new Logger(client: ApiManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-apimanagement.ApiManagementClientContext'
          description: |
            <span data-ttu-id="e208d-193">Référence au client du service.</span><span class="sxs-lookup"><span data-stu-id="e208d-193">Reference to the service client.</span></span>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.update'
    name: 'update(string, string, string, LoggerUpdateContract, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="e208d-194">Met à jour un enregistreur d’événements existant.</span><span class="sxs-lookup"><span data-stu-id="e208d-194">Updates an existing logger.</span></span>
    syntax:
      content: 'function update(resourceGroupName: string, serviceName: string, loggerId: string, parameters: LoggerUpdateContract, ifMatch: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e208d-195">Nom du groupe de ressources.</span><span class="sxs-lookup"><span data-stu-id="e208d-195">The name of the resource group.</span></span>
        - id: serviceName
          type:
            - string
          description: <span data-ttu-id="e208d-196">Le nom du service Gestion des API.</span><span class="sxs-lookup"><span data-stu-id="e208d-196">The name of the API Management service.</span></span>
        - id: loggerId
          type:
            - string
          description: <span data-ttu-id="e208d-197">Identificateur de l’enregistreur d’événements.</span><span class="sxs-lookup"><span data-stu-id="e208d-197">Logger identifier.</span></span> <span data-ttu-id="e208d-198">Doit être unique dans l’instance de service de gestion des API.</span><span class="sxs-lookup"><span data-stu-id="e208d-198">Must be unique in the API Management service instance.</span></span>
        - id: parameters
          type:
            - '@azure/arm-apimanagement.LoggerUpdateContract'
          description: <span data-ttu-id="e208d-199">Mettre à jour des paramètres.</span><span class="sxs-lookup"><span data-stu-id="e208d-199">Update parameters.</span></span>
        - id: ifMatch
          type:
            - string
          description: '<span data-ttu-id="e208d-200">ETag de l’entité.</span><span class="sxs-lookup"><span data-stu-id="e208d-200">ETag of the Entity.</span></span> <span data-ttu-id="e208d-201">ETag doit correspondre à l’état d’entité en cours à partir de la réponse de l’en-tête de la demande GET, ou elle doit être \* pour une mise à jour inconditionnelle.</span><span class="sxs-lookup"><span data-stu-id="e208d-201">ETag should match the current entity state from the header response of the GET request or it should be \* for unconditional update.</span></span>'
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.update_2'
    name: 'update(string, string, string, LoggerUpdateContract, string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(resourceGroupName: string, serviceName: string, loggerId: string, parameters: LoggerUpdateContract, ifMatch: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e208d-202">Nom du groupe de ressources.</span><span class="sxs-lookup"><span data-stu-id="e208d-202">The name of the resource group.</span></span>
        - id: serviceName
          type:
            - string
          description: <span data-ttu-id="e208d-203">Le nom du service Gestion des API.</span><span class="sxs-lookup"><span data-stu-id="e208d-203">The name of the API Management service.</span></span>
        - id: loggerId
          type:
            - string
          description: <span data-ttu-id="e208d-204">Identificateur de l’enregistreur d’événements.</span><span class="sxs-lookup"><span data-stu-id="e208d-204">Logger identifier.</span></span> <span data-ttu-id="e208d-205">Doit être unique dans l’instance de service de gestion des API.</span><span class="sxs-lookup"><span data-stu-id="e208d-205">Must be unique in the API Management service instance.</span></span>
        - id: parameters
          type:
            - '@azure/arm-apimanagement.LoggerUpdateContract'
          description: <span data-ttu-id="e208d-206">Mettre à jour des paramètres.</span><span class="sxs-lookup"><span data-stu-id="e208d-206">Update parameters.</span></span>
        - id: ifMatch
          type:
            - string
          description: '<span data-ttu-id="e208d-207">ETag de l’entité.</span><span class="sxs-lookup"><span data-stu-id="e208d-207">ETag of the Entity.</span></span> <span data-ttu-id="e208d-208">ETag doit correspondre à l’état d’entité en cours à partir de la réponse de l’en-tête de la demande GET, ou elle doit être \* pour une mise à jour inconditionnelle.</span><span class="sxs-lookup"><span data-stu-id="e208d-208">ETag should match the current entity state from the header response of the GET request or it should be \* for unconditional update.</span></span>'
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="e208d-209">Les paramètres facultatifs</span><span class="sxs-lookup"><span data-stu-id="e208d-209">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="e208d-210">Le rappel</span><span class="sxs-lookup"><span data-stu-id="e208d-210">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-apimanagement'
  - uid: '@azure/arm-apimanagement.Logger.update_1'
    name: 'update(string, string, string, LoggerUpdateContract, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(resourceGroupName: string, serviceName: string, loggerId: string, parameters: LoggerUpdateContract, ifMatch: string, callback: ServiceCallback<void>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: <span data-ttu-id="e208d-211">Nom du groupe de ressources.</span><span class="sxs-lookup"><span data-stu-id="e208d-211">The name of the resource group.</span></span>
        - id: serviceName
          type:
            - string
          description: <span data-ttu-id="e208d-212">Le nom du service Gestion des API.</span><span class="sxs-lookup"><span data-stu-id="e208d-212">The name of the API Management service.</span></span>
        - id: loggerId
          type:
            - string
          description: <span data-ttu-id="e208d-213">Identificateur de l’enregistreur d’événements.</span><span class="sxs-lookup"><span data-stu-id="e208d-213">Logger identifier.</span></span> <span data-ttu-id="e208d-214">Doit être unique dans l’instance de service de gestion des API.</span><span class="sxs-lookup"><span data-stu-id="e208d-214">Must be unique in the API Management service instance.</span></span>
        - id: parameters
          type:
            - '@azure/arm-apimanagement.LoggerUpdateContract'
          description: <span data-ttu-id="e208d-215">Mettre à jour des paramètres.</span><span class="sxs-lookup"><span data-stu-id="e208d-215">Update parameters.</span></span>
        - id: ifMatch
          type:
            - string
          description: '<span data-ttu-id="e208d-216">ETag de l’entité.</span><span class="sxs-lookup"><span data-stu-id="e208d-216">ETag of the Entity.</span></span> <span data-ttu-id="e208d-217">ETag doit correspondre à l’état d’entité en cours à partir de la réponse de l’en-tête de la demande GET, ou elle doit être \* pour une mise à jour inconditionnelle.</span><span class="sxs-lookup"><span data-stu-id="e208d-217">ETag should match the current entity state from the header response of the GET request or it should be \* for unconditional update.</span></span>'
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="e208d-218">Le rappel</span><span class="sxs-lookup"><span data-stu-id="e208d-218">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-apimanagement'
references:
  - uid: '@azure/arm-apimanagement.ApiManagementClientContext'
    name: ApiManagementClientContext
    spec.typeScript:
      - name: ApiManagementClientContext
        fullName: ApiManagementClientContext
        uid: '@azure/arm-apimanagement.ApiManagementClientContext'
  - uid: '@azure/arm-apimanagement.LoggerContract'
    name: LoggerContract
    spec.typeScript:
      - name: LoggerContract
        fullName: LoggerContract
        uid: '@azure/arm-apimanagement.LoggerContract'
  - uid: ServiceCallback<@azure/arm-apimanagement.LoggerContract>
    name: LoggerContract>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: LoggerContract
        fullName: LoggerContract
        uid: '@azure/arm-apimanagement.LoggerContract'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-apimanagement.LoggerCreateOrUpdateOptionalParams'
    name: LoggerCreateOrUpdateOptionalParams
    spec.typeScript:
      - name: LoggerCreateOrUpdateOptionalParams
        fullName: LoggerCreateOrUpdateOptionalParams
        uid: '@azure/arm-apimanagement.LoggerCreateOrUpdateOptionalParams'
  - uid: '@azure/arm-apimanagement.LoggerDeleteMethodOptionalParams'
    name: LoggerDeleteMethodOptionalParams
    spec.typeScript:
      - name: LoggerDeleteMethodOptionalParams
        fullName: LoggerDeleteMethodOptionalParams
        uid: '@azure/arm-apimanagement.LoggerDeleteMethodOptionalParams'
  - uid: ServiceCallback<@azure/arm-apimanagement.LoggerCollection>
    name: LoggerCollection>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: LoggerCollection
        fullName: LoggerCollection
        uid: '@azure/arm-apimanagement.LoggerCollection'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-apimanagement.LoggerListByServiceOptionalParams'
    name: LoggerListByServiceOptionalParams
    spec.typeScript:
      - name: LoggerListByServiceOptionalParams
        fullName: LoggerListByServiceOptionalParams
        uid: '@azure/arm-apimanagement.LoggerListByServiceOptionalParams'
  - uid: '@azure/arm-apimanagement.LoggerUpdateContract'
    name: LoggerUpdateContract
    spec.typeScript:
      - name: LoggerUpdateContract
        fullName: LoggerUpdateContract
        uid: '@azure/arm-apimanagement.LoggerUpdateContract'