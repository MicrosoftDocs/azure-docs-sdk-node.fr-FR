### YamlMime:UniversalReference
items:
  - uid: '@azure/storage-datalake.FilesystemOperations'
    name: FilesystemOperations
    fullName: FilesystemOperations
    children:
      - '@azure/storage-datalake.FilesystemOperations.create_2'
      - '@azure/storage-datalake.FilesystemOperations.create'
      - '@azure/storage-datalake.FilesystemOperations.create_1'
      - '@azure/storage-datalake.FilesystemOperations.deleteMethod_2'
      - '@azure/storage-datalake.FilesystemOperations.deleteMethod'
      - '@azure/storage-datalake.FilesystemOperations.deleteMethod_1'
      - '@azure/storage-datalake.FilesystemOperations.constructor'
      - '@azure/storage-datalake.FilesystemOperations.getProperties_2'
      - '@azure/storage-datalake.FilesystemOperations.getProperties'
      - '@azure/storage-datalake.FilesystemOperations.getProperties_1'
      - '@azure/storage-datalake.FilesystemOperations.list_2'
      - '@azure/storage-datalake.FilesystemOperations.list'
      - '@azure/storage-datalake.FilesystemOperations.list_1'
      - '@azure/storage-datalake.FilesystemOperations.setProperties_2'
      - '@azure/storage-datalake.FilesystemOperations.setProperties'
      - '@azure/storage-datalake.FilesystemOperations.setProperties_1'
    langs:
      - typeScript
    type: class
    summary: Classe représentant une FilesystemOperations.
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.FilesystemOperations.create_2'
    name: 'create(string, FilesystemCreateOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function create(filesystem: string, options: FilesystemCreateOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: filesystem
          type:
            - string
          description: 'L’identificateur de système de fichiers.  La valeur doit commencer et se terminer par une lettre ou le numéro et doit contenir uniquement des lettres, des chiffres et des tirets (-).  Tirets consécutifs ne sont pas autorisés.  Toutes les lettres doivent être en minuscules.  La valeur doit avoir entre 3 et 63 caractères.'
        - id: options
          type:
            - '@azure/storage-datalake.FilesystemCreateOptionalParams'
          description: Les paramètres facultatifs
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Le rappel
      return:
        type:
          - Promise<Models.FilesystemCreateResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.FilesystemOperations.create'
    name: 'create(string, Models.FilesystemCreateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Créer un système de fichiers racine est à l’emplacement spécifié. Si le système de fichiers existe déjà, l’opération échoue.  Cette opération ne prend pas en charge des requêtes HTTP conditionnelles.'
    syntax:
      content: 'function create(filesystem: string, options?: Models.FilesystemCreateOptionalParams)'
      parameters:
        - id: filesystem
          type:
            - string
          description: 'L’identificateur de système de fichiers.  La valeur doit commencer et se terminer par une lettre ou le numéro et doit contenir uniquement des lettres, des chiffres et des tirets (-).  Tirets consécutifs ne sont pas autorisés.  Toutes les lettres doivent être en minuscules.  La valeur doit avoir entre 3 et 63 caractères.'
        - id: options
          type:
            - Models.FilesystemCreateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FilesystemCreateResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.FilesystemOperations.create_1'
    name: 'create(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function create(filesystem: string, callback: ServiceCallback<void>)'
      parameters:
        - id: filesystem
          type:
            - string
          description: 'L’identificateur de système de fichiers.  La valeur doit commencer et se terminer par une lettre ou le numéro et doit contenir uniquement des lettres, des chiffres et des tirets (-).  Tirets consécutifs ne sont pas autorisés.  Toutes les lettres doivent être en minuscules.  La valeur doit avoir entre 3 et 63 caractères.'
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Le rappel
      return:
        type:
          - Promise<Models.FilesystemCreateResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.FilesystemOperations.deleteMethod_2'
    name: 'deleteMethod(string, FilesystemDeleteMethodOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(filesystem: string, options: FilesystemDeleteMethodOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: filesystem
          type:
            - string
          description: 'L’identificateur de système de fichiers.  La valeur doit commencer et se terminer par une lettre ou le numéro et doit contenir uniquement des lettres, des chiffres et des tirets (-).  Tirets consécutifs ne sont pas autorisés.  Toutes les lettres doivent être en minuscules.  La valeur doit avoir entre 3 et 63 caractères.'
        - id: options
          type:
            - '@azure/storage-datalake.FilesystemDeleteMethodOptionalParams'
          description: Les paramètres facultatifs
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Le rappel
      return:
        type:
          - Promise<Models.FilesystemDeleteResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.FilesystemOperations.deleteMethod'
    name: 'deleteMethod(string, Models.FilesystemDeleteMethodOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Marque le système de fichiers pour la suppression.  Lorsqu’un système de fichiers est supprimé, un système de fichiers avec le même identificateur ne peut être créée pour au moins 30 secondes. Bien que le système de fichiers est en cours de suppression, tente de créer un système de fichiers avec le même identificateur échoue avec le code d’état 409 (conflit), et le service renvoie des informations d’erreur supplémentaire indiquant que le système de fichiers est en cours de suppression. Toutes les autres opérations, y compris les opérations sur des fichiers ou répertoires dans le système de fichiers, échouera avec le code d’état 404 (introuvable) pendant que le système de fichiers est en cours de suppression. Cette opération prend en charge des requêtes HTTP conditionnelles.  Pour plus d’informations, consultez [spécification des en-têtes conditionnels pour les opérations de Service Blob](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations).'
    syntax:
      content: 'function deleteMethod(filesystem: string, options?: Models.FilesystemDeleteMethodOptionalParams)'
      parameters:
        - id: filesystem
          type:
            - string
          description: 'L’identificateur de système de fichiers.  La valeur doit commencer et se terminer par une lettre ou le numéro et doit contenir uniquement des lettres, des chiffres et des tirets (-).  Tirets consécutifs ne sont pas autorisés.  Toutes les lettres doivent être en minuscules.  La valeur doit avoir entre 3 et 63 caractères.'
        - id: options
          type:
            - Models.FilesystemDeleteMethodOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FilesystemDeleteResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.FilesystemOperations.deleteMethod_1'
    name: 'deleteMethod(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(filesystem: string, callback: ServiceCallback<void>)'
      parameters:
        - id: filesystem
          type:
            - string
          description: 'L’identificateur de système de fichiers.  La valeur doit commencer et se terminer par une lettre ou le numéro et doit contenir uniquement des lettres, des chiffres et des tirets (-).  Tirets consécutifs ne sont pas autorisés.  Toutes les lettres doivent être en minuscules.  La valeur doit avoir entre 3 et 63 caractères.'
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Le rappel
      return:
        type:
          - Promise<Models.FilesystemDeleteResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.FilesystemOperations.constructor'
    name: FilesystemOperations(DataLakeStorageClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Créer une FilesystemOperations.
    syntax:
      content: 'new FilesystemOperations(client: DataLakeStorageClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/storage-datalake.DataLakeStorageClientContext'
          description: |
            Référence au client du service.
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.FilesystemOperations.getProperties_2'
    name: 'getProperties(string, FilesystemGetPropertiesOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getProperties(filesystem: string, options: FilesystemGetPropertiesOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: filesystem
          type:
            - string
          description: 'L’identificateur de système de fichiers.  La valeur doit commencer et se terminer par une lettre ou le numéro et doit contenir uniquement des lettres, des chiffres et des tirets (-).  Tirets consécutifs ne sont pas autorisés.  Toutes les lettres doivent être en minuscules.  La valeur doit avoir entre 3 et 63 caractères.'
        - id: options
          type:
            - '@azure/storage-datalake.FilesystemGetPropertiesOptionalParams'
          description: Les paramètres facultatifs
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Le rappel
      return:
        type:
          - Promise<Models.FilesystemGetPropertiesResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.FilesystemOperations.getProperties'
    name: 'getProperties(string, Models.FilesystemGetPropertiesOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Tous les système et les propriétés de système de fichiers défini par l’utilisateur sont spécifiées dans les en-têtes de réponse.
    syntax:
      content: 'function getProperties(filesystem: string, options?: Models.FilesystemGetPropertiesOptionalParams)'
      parameters:
        - id: filesystem
          type:
            - string
          description: 'L’identificateur de système de fichiers.  La valeur doit commencer et se terminer par une lettre ou le numéro et doit contenir uniquement des lettres, des chiffres et des tirets (-).  Tirets consécutifs ne sont pas autorisés.  Toutes les lettres doivent être en minuscules.  La valeur doit avoir entre 3 et 63 caractères.'
        - id: options
          type:
            - Models.FilesystemGetPropertiesOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FilesystemGetPropertiesResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.FilesystemOperations.getProperties_1'
    name: 'getProperties(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getProperties(filesystem: string, callback: ServiceCallback<void>)'
      parameters:
        - id: filesystem
          type:
            - string
          description: 'L’identificateur de système de fichiers.  La valeur doit commencer et se terminer par une lettre ou le numéro et doit contenir uniquement des lettres, des chiffres et des tirets (-).  Tirets consécutifs ne sont pas autorisés.  Toutes les lettres doivent être en minuscules.  La valeur doit avoir entre 3 et 63 caractères.'
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Le rappel
      return:
        type:
          - Promise<Models.FilesystemGetPropertiesResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.FilesystemOperations.list_2'
    name: 'list(FilesystemListOptionalParams, ServiceCallback<FilesystemList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(options: FilesystemListOptionalParams, callback: ServiceCallback<FilesystemList>)'
      parameters:
        - id: options
          type:
            - '@azure/storage-datalake.FilesystemListOptionalParams'
          description: Les paramètres facultatifs
        - id: callback
          type:
            - ServiceCallback<@azure/storage-datalake.FilesystemList>
          description: |
            Le rappel
      return:
        type:
          - Promise<Models.FilesystemListResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.FilesystemOperations.list'
    name: list(Models.FilesystemListOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: Liste des systèmes de fichiers et leurs propriétés dans des compte donné.
    syntax:
      content: 'function list(options?: Models.FilesystemListOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.FilesystemListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FilesystemListResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.FilesystemOperations.list_1'
    name: list(ServiceCallback<FilesystemList>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(callback: ServiceCallback<FilesystemList>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/storage-datalake.FilesystemList>
          description: |
            Le rappel
      return:
        type:
          - Promise<Models.FilesystemListResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.FilesystemOperations.setProperties_2'
    name: 'setProperties(string, FilesystemSetPropertiesOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setProperties(filesystem: string, options: FilesystemSetPropertiesOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: filesystem
          type:
            - string
          description: 'L’identificateur de système de fichiers.  La valeur doit commencer et se terminer par une lettre ou le numéro et doit contenir uniquement des lettres, des chiffres et des tirets (-).  Tirets consécutifs ne sont pas autorisés.  Toutes les lettres doivent être en minuscules.  La valeur doit avoir entre 3 et 63 caractères.'
        - id: options
          type:
            - '@azure/storage-datalake.FilesystemSetPropertiesOptionalParams'
          description: Les paramètres facultatifs
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Le rappel
      return:
        type:
          - Promise<Models.FilesystemSetPropertiesResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.FilesystemOperations.setProperties'
    name: 'setProperties(string, Models.FilesystemSetPropertiesOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Définir des propriétés pour le système de fichiers.  Cette opération prend en charge des requêtes HTTP conditionnelles.  Pour plus d’informations, consultez [spécification des en-têtes conditionnels pour les opérations de Service Blob](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations).'
    syntax:
      content: 'function setProperties(filesystem: string, options?: Models.FilesystemSetPropertiesOptionalParams)'
      parameters:
        - id: filesystem
          type:
            - string
          description: 'L’identificateur de système de fichiers.  La valeur doit commencer et se terminer par une lettre ou le numéro et doit contenir uniquement des lettres, des chiffres et des tirets (-).  Tirets consécutifs ne sont pas autorisés.  Toutes les lettres doivent être en minuscules.  La valeur doit avoir entre 3 et 63 caractères.'
        - id: options
          type:
            - Models.FilesystemSetPropertiesOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FilesystemSetPropertiesResponse>
    package: '@azure/storage-datalake'
  - uid: '@azure/storage-datalake.FilesystemOperations.setProperties_1'
    name: 'setProperties(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setProperties(filesystem: string, callback: ServiceCallback<void>)'
      parameters:
        - id: filesystem
          type:
            - string
          description: 'L’identificateur de système de fichiers.  La valeur doit commencer et se terminer par une lettre ou le numéro et doit contenir uniquement des lettres, des chiffres et des tirets (-).  Tirets consécutifs ne sont pas autorisés.  Toutes les lettres doivent être en minuscules.  La valeur doit avoir entre 3 et 63 caractères.'
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            Le rappel
      return:
        type:
          - Promise<Models.FilesystemSetPropertiesResponse>
    package: '@azure/storage-datalake'
references:
  - uid: '@azure/storage-datalake.DataLakeStorageClientContext'
    name: DataLakeStorageClientContext
    spec.typeScript:
      - name: DataLakeStorageClientContext
        fullName: DataLakeStorageClientContext
        uid: '@azure/storage-datalake.DataLakeStorageClientContext'
  - uid: '@azure/storage-datalake.FilesystemCreateOptionalParams'
    name: FilesystemCreateOptionalParams
    spec.typeScript:
      - name: FilesystemCreateOptionalParams
        fullName: FilesystemCreateOptionalParams
        uid: '@azure/storage-datalake.FilesystemCreateOptionalParams'
  - uid: '@azure/storage-datalake.FilesystemDeleteMethodOptionalParams'
    name: FilesystemDeleteMethodOptionalParams
    spec.typeScript:
      - name: FilesystemDeleteMethodOptionalParams
        fullName: FilesystemDeleteMethodOptionalParams
        uid: '@azure/storage-datalake.FilesystemDeleteMethodOptionalParams'
  - uid: '@azure/storage-datalake.FilesystemGetPropertiesOptionalParams'
    name: FilesystemGetPropertiesOptionalParams
    spec.typeScript:
      - name: FilesystemGetPropertiesOptionalParams
        fullName: FilesystemGetPropertiesOptionalParams
        uid: '@azure/storage-datalake.FilesystemGetPropertiesOptionalParams'
  - uid: ServiceCallback<@azure/storage-datalake.FilesystemList>
    name: FilesystemList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: FilesystemList
        fullName: FilesystemList
        uid: '@azure/storage-datalake.FilesystemList'
      - name: '>'
        fullName: '>'
  - uid: '@azure/storage-datalake.FilesystemListOptionalParams'
    name: FilesystemListOptionalParams
    spec.typeScript:
      - name: FilesystemListOptionalParams
        fullName: FilesystemListOptionalParams
        uid: '@azure/storage-datalake.FilesystemListOptionalParams'
  - uid: '@azure/storage-datalake.FilesystemSetPropertiesOptionalParams'
    name: FilesystemSetPropertiesOptionalParams
    spec.typeScript:
      - name: FilesystemSetPropertiesOptionalParams
        fullName: FilesystemSetPropertiesOptionalParams
        uid: '@azure/storage-datalake.FilesystemSetPropertiesOptionalParams'