### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-commerce.RateCard'
    name: RateCard
    fullName: RateCard
    children:
      - '@azure/arm-commerce.RateCard.get'
      - '@azure/arm-commerce.RateCard.get_2'
      - '@azure/arm-commerce.RateCard.get_1'
      - '@azure/arm-commerce.RateCard.constructor'
    langs:
      - typeScript
    type: class
    summary: Classe représentant un RateCard.
    package: '@azure/arm-commerce'
  - uid: '@azure/arm-commerce.RateCard.get'
    name: 'get(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Vous permet d’interroger des métadonnées de ressource/compteur et les prix associés utilisés dans un abonnement donné par ID de l’offre, de devise, de paramètres régionaux et de région. Les métadonnées associées aux compteurs de facturation, y compris, mais ne pas limitée aux noms de service, types, les ressources, les unités de mesure et les régions, est susceptible de changer à tout moment et sans préavis. Si vous avez l’intention d’utiliser ces données de facturation de façon automatisée, utilisez le compteur de facturation GUID pour identifier de façon unique chaque élément facturable. Si le compteur de facturation GUID est planifié pour modifier en raison d’un nouveau modèle de facturation, vous serez averti avant la modification.'
    syntax:
      content: 'function get(filter: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: filter
          type:
            - string
          description: "Le filtre à appliquer sur l’opération. Il prend uniquement en charge le «\_eq\_» et «\_et\_» des opérateurs logiques pour l’instant. Toutes les 4 paramètres de requête 'OfferDurableId', 'Currency', 'Aux paramètres régionaux', 'Region' doit être une partie de la $filter."
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.RateCardGetResponse>
    package: '@azure/arm-commerce'
  - uid: '@azure/arm-commerce.RateCard.get_2'
    name: 'get(string, RequestOptionsBase, ServiceCallback<ResourceRateCardInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(filter: string, options: RequestOptionsBase, callback: ServiceCallback<ResourceRateCardInfo>)'
      parameters:
        - id: filter
          type:
            - string
          description: "Le filtre à appliquer sur l’opération. Il prend uniquement en charge le «\_eq\_» et «\_et\_» des opérateurs logiques pour l’instant. Toutes les 4 paramètres de requête 'OfferDurableId', 'Currency', 'Aux paramètres régionaux', 'Region' doit être une partie de la $filter."
        - id: options
          type:
            - RequestOptionsBase
          description: Les paramètres facultatifs
        - id: callback
          type:
            - ServiceCallback<@azure/arm-commerce.ResourceRateCardInfo>
          description: |
            Le rappel
      return:
        type:
          - Promise<Models.RateCardGetResponse>
    package: '@azure/arm-commerce'
  - uid: '@azure/arm-commerce.RateCard.get_1'
    name: 'get(string, ServiceCallback<ResourceRateCardInfo>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(filter: string, callback: ServiceCallback<ResourceRateCardInfo>)'
      parameters:
        - id: filter
          type:
            - string
          description: "Le filtre à appliquer sur l’opération. Il prend uniquement en charge le «\_eq\_» et «\_et\_» des opérateurs logiques pour l’instant. Toutes les 4 paramètres de requête 'OfferDurableId', 'Currency', 'Aux paramètres régionaux', 'Region' doit être une partie de la $filter."
        - id: callback
          type:
            - ServiceCallback<@azure/arm-commerce.ResourceRateCardInfo>
          description: |
            Le rappel
      return:
        type:
          - Promise<Models.RateCardGetResponse>
    package: '@azure/arm-commerce'
  - uid: '@azure/arm-commerce.RateCard.constructor'
    name: RateCard(UsageManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Créer un RateCard.
    syntax:
      content: 'new RateCard(client: UsageManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-commerce.UsageManagementClientContext'
          description: |
            Référence au client du service.
    package: '@azure/arm-commerce'
references:
  - uid: '@azure/arm-commerce.UsageManagementClientContext'
    name: UsageManagementClientContext
    spec.typeScript:
      - name: UsageManagementClientContext
        fullName: UsageManagementClientContext
        uid: '@azure/arm-commerce.UsageManagementClientContext'
  - uid: ServiceCallback<@azure/arm-commerce.ResourceRateCardInfo>
    name: ResourceRateCardInfo>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ResourceRateCardInfo
        fullName: ResourceRateCardInfo
        uid: '@azure/arm-commerce.ResourceRateCardInfo'
      - name: '>'
        fullName: '>'