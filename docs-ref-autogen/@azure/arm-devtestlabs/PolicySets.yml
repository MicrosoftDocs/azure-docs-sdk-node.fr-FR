### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-devtestlabs.PolicySets'
    name: PolicySets
    fullName: PolicySets
    children:
      - '@azure/arm-devtestlabs.PolicySets.evaluatePolicies'
      - '@azure/arm-devtestlabs.PolicySets.evaluatePolicies_2'
      - '@azure/arm-devtestlabs.PolicySets.evaluatePolicies_1'
      - '@azure/arm-devtestlabs.PolicySets.constructor'
    langs:
      - typeScript
    type: class
    summary: Classe représentant un PolicySets.
    package: '@azure/arm-devtestlabs'
  - uid: '@azure/arm-devtestlabs.PolicySets.evaluatePolicies'
    name: 'evaluatePolicies(string, string, string, EvaluatePoliciesRequest, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Évaluer la stratégie de laboratoire.
    syntax:
      content: 'function evaluatePolicies(resourceGroupName: string, labName: string, name: string, evaluatePoliciesRequest: EvaluatePoliciesRequest, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Nom du groupe de ressources.
        - id: labName
          type:
            - string
          description: Le nom de l’atelier.
        - id: name
          type:
            - string
          description: Le nom de l’ensemble de stratégies.
        - id: evaluatePoliciesRequest
          type:
            - '@azure/arm-devtestlabs.EvaluatePoliciesRequest'
          description: Corps pour l’évaluation d’un jeu de stratégie de la demande.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PolicySetsEvaluatePoliciesResponse>
    package: '@azure/arm-devtestlabs'
  - uid: '@azure/arm-devtestlabs.PolicySets.evaluatePolicies_2'
    name: 'evaluatePolicies(string, string, string, EvaluatePoliciesRequest, RequestOptionsBase, ServiceCallback<EvaluatePoliciesResponse>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function evaluatePolicies(resourceGroupName: string, labName: string, name: string, evaluatePoliciesRequest: EvaluatePoliciesRequest, options: RequestOptionsBase, callback: ServiceCallback<EvaluatePoliciesResponse>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Nom du groupe de ressources.
        - id: labName
          type:
            - string
          description: Le nom de l’atelier.
        - id: name
          type:
            - string
          description: Le nom de l’ensemble de stratégies.
        - id: evaluatePoliciesRequest
          type:
            - '@azure/arm-devtestlabs.EvaluatePoliciesRequest'
          description: Corps pour l’évaluation d’un jeu de stratégie de la demande.
        - id: options
          type:
            - RequestOptionsBase
          description: Les paramètres facultatifs
        - id: callback
          type:
            - ServiceCallback<@azure/arm-devtestlabs.EvaluatePoliciesResponse>
          description: |
            Le rappel
      return:
        type:
          - Promise<Models.PolicySetsEvaluatePoliciesResponse>
    package: '@azure/arm-devtestlabs'
  - uid: '@azure/arm-devtestlabs.PolicySets.evaluatePolicies_1'
    name: 'evaluatePolicies(string, string, string, EvaluatePoliciesRequest, ServiceCallback<EvaluatePoliciesResponse>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function evaluatePolicies(resourceGroupName: string, labName: string, name: string, evaluatePoliciesRequest: EvaluatePoliciesRequest, callback: ServiceCallback<EvaluatePoliciesResponse>)'
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: Nom du groupe de ressources.
        - id: labName
          type:
            - string
          description: Le nom de l’atelier.
        - id: name
          type:
            - string
          description: Le nom de l’ensemble de stratégies.
        - id: evaluatePoliciesRequest
          type:
            - '@azure/arm-devtestlabs.EvaluatePoliciesRequest'
          description: Corps pour l’évaluation d’un jeu de stratégie de la demande.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-devtestlabs.EvaluatePoliciesResponse>
          description: |
            Le rappel
      return:
        type:
          - Promise<Models.PolicySetsEvaluatePoliciesResponse>
    package: '@azure/arm-devtestlabs'
  - uid: '@azure/arm-devtestlabs.PolicySets.constructor'
    name: PolicySets(DevTestLabsClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Créer un PolicySets.
    syntax:
      content: 'new PolicySets(client: DevTestLabsClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-devtestlabs.DevTestLabsClientContext'
          description: |
            Référence au client du service.
    package: '@azure/arm-devtestlabs'
references:
  - uid: '@azure/arm-devtestlabs.DevTestLabsClientContext'
    name: DevTestLabsClientContext
    spec.typeScript:
      - name: DevTestLabsClientContext
        fullName: DevTestLabsClientContext
        uid: '@azure/arm-devtestlabs.DevTestLabsClientContext'
  - uid: '@azure/arm-devtestlabs.EvaluatePoliciesRequest'
    name: EvaluatePoliciesRequest
    spec.typeScript:
      - name: EvaluatePoliciesRequest
        fullName: EvaluatePoliciesRequest
        uid: '@azure/arm-devtestlabs.EvaluatePoliciesRequest'
  - uid: ServiceCallback<@azure/arm-devtestlabs.EvaluatePoliciesResponse>
    name: EvaluatePoliciesResponse>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: EvaluatePoliciesResponse
        fullName: EvaluatePoliciesResponse
        uid: '@azure/arm-devtestlabs.EvaluatePoliciesResponse'
      - name: '>'
        fullName: '>'