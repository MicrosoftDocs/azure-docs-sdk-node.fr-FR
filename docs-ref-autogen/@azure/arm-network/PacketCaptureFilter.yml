### YamlMime:UniversalReference
ms.openlocfilehash: cc2c17aba264a76ae90515c414037a0b696f3061
ms.sourcegitcommit: 0e294f7c4dcdfae9df18ff3e82b6563680ef2519
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 01/25/2019
ms.locfileid: "55056160"
items:
- uid: '@azure/arm-network.PacketCaptureFilter'
  name: PacketCaptureFilter
  fullName: PacketCaptureFilter
  children:
  - '@azure/arm-network.PacketCaptureFilter.localIPAddress'
  - '@azure/arm-network.PacketCaptureFilter.localPort'
  - '@azure/arm-network.PacketCaptureFilter.protocol'
  - '@azure/arm-network.PacketCaptureFilter.remoteIPAddress'
  - '@azure/arm-network.PacketCaptureFilter.remotePort'
  langs:
  - typeScript
  type: interface
  summary: Filtre qui est appliqué à la demande de capture de paquets. Plusieurs filtres peuvent être appliqués.
  package: '@azure/arm-network'
- uid: '@azure/arm-network.PacketCaptureFilter.localIPAddress'
  name: localIPAddress
  fullName: localIPAddress
  children: []
  langs:
  - typeScript
  type: property
  summary: >-
    Adresse IP locale sur lequel filtrer. Notation : « 127.0.0.1 » pour l’entrée d’adresse unique.

    « 127.0.0.1-127.0.0.255 » pour la plage. "127.0.0.1;127.0.0.5"? pour plusieurs entrées. Plusieurs plages non pris en charge. Plages mixtes comprenant plusieurs entrées non pris en charge.

    Par défaut = null.
  optional: true
  syntax:
    content: 'localIPAddress?: undefined | string'
    return:
      type:
      - undefined | string
  package: '@azure/arm-network'
- uid: '@azure/arm-network.PacketCaptureFilter.localPort'
  name: localPort
  fullName: localPort
  children: []
  langs:
  - typeScript
  type: property
  summary: >-
    Port local sur lequel filtrer. Notation : « 80 » pour une entrée de port unique. » 80-85 » pour une plage.

    « 80 ; 443 ; » pour plusieurs entrées. Plusieurs plages non pris en charge. Plages mixtes comprenant plusieurs entrées non pris en charge. Par défaut = null.
  optional: true
  syntax:
    content: 'localPort?: undefined | string'
    return:
      type:
      - undefined | string
  package: '@azure/arm-network'
- uid: '@azure/arm-network.PacketCaptureFilter.protocol'
  name: protocol
  fullName: protocol
  children: []
  langs:
  - typeScript
  type: property
  summary: "Protocole sur lequel filtrer. Les valeurs possibles incluent : « TCP », « UDP », 'Any'. Valeur par défaut : 'Any'."
  optional: true
  syntax:
    content: 'protocol?: PcProtocol'
    return:
      type:
      - '@azure/arm-network.PcProtocol'
  package: '@azure/arm-network'
- uid: '@azure/arm-network.PacketCaptureFilter.remoteIPAddress'
  name: remoteIPAddress
  fullName: remoteIPAddress
  children: []
  langs:
  - typeScript
  type: property
  summary: >-
    Adresse IP locale sur lequel filtrer. Notation : « 127.0.0.1 » pour l’entrée d’adresse unique.

    « 127.0.0.1-127.0.0.255 » pour la plage. « 127.0.0.1 ; 127.0.0.5 » pour plusieurs entrées. Plusieurs plages non pris en charge. Plages mixtes comprenant plusieurs entrées non pris en charge.

    Par défaut = null.
  optional: true
  syntax:
    content: 'remoteIPAddress?: undefined | string'
    return:
      type:
      - undefined | string
  package: '@azure/arm-network'
- uid: '@azure/arm-network.PacketCaptureFilter.remotePort'
  name: remotePort
  fullName: remotePort
  children: []
  langs:
  - typeScript
  type: property
  summary: >-
    Port distant sur lequel filtrer. Notation : « 80 » pour une entrée de port unique. » 80-85 » pour une plage.

    « 80 ; 443 ; » pour plusieurs entrées. Plusieurs plages non pris en charge. Plages mixtes comprenant plusieurs entrées non pris en charge. Par défaut = null.
  optional: true
  syntax:
    content: 'remotePort?: undefined | string'
    return:
      type:
      - undefined | string
  package: '@azure/arm-network'
references:
- uid: '@azure/arm-network.PcProtocol'
  name: PcProtocol
  spec.typeScript:
  - name: PcProtocol
    fullName: PcProtocol
    uid: '@azure/arm-network.PcProtocol'
