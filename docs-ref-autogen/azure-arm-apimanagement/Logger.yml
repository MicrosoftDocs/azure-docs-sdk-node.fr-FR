### YamlMime:UniversalReference
ms.openlocfilehash: 96f9d4709d005a5853b5ca459b292208f15e4b2e
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 12/13/2018
ms.locfileid: "52169694"
items:
- uid: azure-arm-apimanagement.Logger
  name: Logger
  fullName: Logger
  children:
  - azure-arm-apimanagement.Logger.createOrUpdate
  - azure-arm-apimanagement.Logger.createOrUpdate_2
  - azure-arm-apimanagement.Logger.createOrUpdate_1
  - azure-arm-apimanagement.Logger.createOrUpdateWithHttpOperationResponse
  - azure-arm-apimanagement.Logger.deleteMethod
  - azure-arm-apimanagement.Logger.deleteMethod_2
  - azure-arm-apimanagement.Logger.deleteMethod_1
  - azure-arm-apimanagement.Logger.deleteMethodWithHttpOperationResponse
  - azure-arm-apimanagement.Logger.get
  - azure-arm-apimanagement.Logger.get_2
  - azure-arm-apimanagement.Logger.get_1
  - azure-arm-apimanagement.Logger.getEntityTag
  - azure-arm-apimanagement.Logger.getEntityTag_2
  - azure-arm-apimanagement.Logger.getEntityTag_1
  - azure-arm-apimanagement.Logger.getEntityTagWithHttpOperationResponse
  - azure-arm-apimanagement.Logger.getWithHttpOperationResponse
  - azure-arm-apimanagement.Logger.listByService
  - azure-arm-apimanagement.Logger.listByService_2
  - azure-arm-apimanagement.Logger.listByService_1
  - azure-arm-apimanagement.Logger.listByServiceNext
  - azure-arm-apimanagement.Logger.listByServiceNext_2
  - azure-arm-apimanagement.Logger.listByServiceNext_1
  - azure-arm-apimanagement.Logger.listByServiceNextWithHttpOperationResponse
  - azure-arm-apimanagement.Logger.listByServiceWithHttpOperationResponse
  - azure-arm-apimanagement.Logger.update
  - azure-arm-apimanagement.Logger.update_2
  - azure-arm-apimanagement.Logger.update_1
  - azure-arm-apimanagement.Logger.updateWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.Logger.createOrUpdate
  name: createOrUpdate(string, string, string, LoggerContract, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8cc01-101">Crée ou met à jour un enregistreur d’événements.</span><span class="sxs-lookup"><span data-stu-id="8cc01-101">Creates or Updates a logger.</span></span>
  syntax:
    content: 'function createOrUpdate(resourceGroupName: string, serviceName: string, loggerid: string, parameters: LoggerContract, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="8cc01-102">Nom du groupe de ressources.</span><span class="sxs-lookup"><span data-stu-id="8cc01-102">The name of the resource group.</span></span>
    - id: serviceName
      type:
      - string
      description: >
        <span data-ttu-id="8cc01-103">Le nom du service Gestion des API.</span><span class="sxs-lookup"><span data-stu-id="8cc01-103">The name of the API Management service.</span></span>
    - id: loggerid
      type:
      - string
      description: >
        <span data-ttu-id="8cc01-104">Identificateur de l’enregistreur d’événements.</span><span class="sxs-lookup"><span data-stu-id="8cc01-104">Logger identifier.</span></span> <span data-ttu-id="8cc01-105">Doit être unique dans l’instance de service de gestion des API.</span><span class="sxs-lookup"><span data-stu-id="8cc01-105">Must be unique in the API Management service instance.</span></span>
    - id: parameters
      type:
      - azure-arm-apimanagement.LoggerContract
      description: >
        <span data-ttu-id="8cc01-106">Créer des paramètres.</span><span class="sxs-lookup"><span data-stu-id="8cc01-106">Create parameters.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-apimanagement.LoggerContract>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.Logger.createOrUpdate_2
  name: createOrUpdate(string, string, string, LoggerContract, Object, ServiceCallback<LoggerContract>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8cc01-107">Crée ou met à jour un enregistreur d’événements.</span><span class="sxs-lookup"><span data-stu-id="8cc01-107">Creates or Updates a logger.</span></span>
  syntax:
    content: 'function createOrUpdate(resourceGroupName: string, serviceName: string, loggerid: string, parameters: LoggerContract, options: Object, callback: ServiceCallback<LoggerContract>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: serviceName
      type:
      - string
      description: ''
    - id: loggerid
      type:
      - string
      description: ''
    - id: parameters
      type:
      - azure-arm-apimanagement.LoggerContract
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-apimanagement.LoggerContract>
      description: ''
    return:
      type:
      - Promise<azure-arm-apimanagement.LoggerContract>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.Logger.createOrUpdate_1
  name: createOrUpdate(string, string, string, LoggerContract, ServiceCallback<LoggerContract>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8cc01-108">Crée ou met à jour un enregistreur d’événements.</span><span class="sxs-lookup"><span data-stu-id="8cc01-108">Creates or Updates a logger.</span></span>
  syntax:
    content: 'function createOrUpdate(resourceGroupName: string, serviceName: string, loggerid: string, parameters: LoggerContract, callback: ServiceCallback<LoggerContract>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: serviceName
      type:
      - string
      description: ''
    - id: loggerid
      type:
      - string
      description: ''
    - id: parameters
      type:
      - azure-arm-apimanagement.LoggerContract
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-apimanagement.LoggerContract>
      description: ''
    return:
      type:
      - Promise<azure-arm-apimanagement.LoggerContract>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.Logger.createOrUpdateWithHttpOperationResponse
  name: createOrUpdateWithHttpOperationResponse(string, string, string, LoggerContract, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8cc01-109">Crée ou met à jour un enregistreur d’événements.</span><span class="sxs-lookup"><span data-stu-id="8cc01-109">Creates or Updates a logger.</span></span>
  syntax:
    content: 'function createOrUpdateWithHttpOperationResponse(resourceGroupName: string, serviceName: string, loggerid: string, parameters: LoggerContract, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="8cc01-110">Nom du groupe de ressources.</span><span class="sxs-lookup"><span data-stu-id="8cc01-110">The name of the resource group.</span></span>
    - id: serviceName
      type:
      - string
      description: >
        <span data-ttu-id="8cc01-111">Le nom du service Gestion des API.</span><span class="sxs-lookup"><span data-stu-id="8cc01-111">The name of the API Management service.</span></span>
    - id: loggerid
      type:
      - string
      description: >
        <span data-ttu-id="8cc01-112">Identificateur de l’enregistreur d’événements.</span><span class="sxs-lookup"><span data-stu-id="8cc01-112">Logger identifier.</span></span> <span data-ttu-id="8cc01-113">Doit être unique dans l’instance de service de gestion des API.</span><span class="sxs-lookup"><span data-stu-id="8cc01-113">Must be unique in the API Management service instance.</span></span>
    - id: parameters
      type:
      - azure-arm-apimanagement.LoggerContract
      description: >
        <span data-ttu-id="8cc01-114">Créer des paramètres.</span><span class="sxs-lookup"><span data-stu-id="8cc01-114">Create parameters.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-apimanagement.LoggerContract>>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.Logger.deleteMethod
  name: deleteMethod(string, string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8cc01-115">Supprime l’enregistreur d’événements spécifié.</span><span class="sxs-lookup"><span data-stu-id="8cc01-115">Deletes the specified logger.</span></span>
  syntax:
    content: 'function deleteMethod(resourceGroupName: string, serviceName: string, loggerid: string, ifMatch: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="8cc01-116">Nom du groupe de ressources.</span><span class="sxs-lookup"><span data-stu-id="8cc01-116">The name of the resource group.</span></span>
    - id: serviceName
      type:
      - string
      description: >
        <span data-ttu-id="8cc01-117">Le nom du service Gestion des API.</span><span class="sxs-lookup"><span data-stu-id="8cc01-117">The name of the API Management service.</span></span>
    - id: loggerid
      type:
      - string
      description: >
        <span data-ttu-id="8cc01-118">Identificateur de l’enregistreur d’événements.</span><span class="sxs-lookup"><span data-stu-id="8cc01-118">Logger identifier.</span></span> <span data-ttu-id="8cc01-119">Doit être unique dans l’instance de service de gestion des API.</span><span class="sxs-lookup"><span data-stu-id="8cc01-119">Must be unique in the API Management service instance.</span></span>
    - id: ifMatch
      type:
      - string
      description: >
        <span data-ttu-id="8cc01-120">ETag de l’entité.</span><span class="sxs-lookup"><span data-stu-id="8cc01-120">ETag of the Entity.</span></span> <span data-ttu-id="8cc01-121">ETag doit correspondre à l’état d’entité en cours à partir de la réponse de l’en-tête de la demande GET, ou elle doit être \* pour une mise à jour inconditionnelle.</span><span class="sxs-lookup"><span data-stu-id="8cc01-121">ETag should match the current entity state from the header response of the GET request or it should be \* for unconditional update.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.Logger.deleteMethod_2
  name: deleteMethod(string, string, string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8cc01-122">Supprime l’enregistreur d’événements spécifié.</span><span class="sxs-lookup"><span data-stu-id="8cc01-122">Deletes the specified logger.</span></span>
  syntax:
    content: 'function deleteMethod(resourceGroupName: string, serviceName: string, loggerid: string, ifMatch: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: serviceName
      type:
      - string
      description: ''
    - id: loggerid
      type:
      - string
      description: ''
    - id: ifMatch
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.Logger.deleteMethod_1
  name: deleteMethod(string, string, string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8cc01-123">Supprime l’enregistreur d’événements spécifié.</span><span class="sxs-lookup"><span data-stu-id="8cc01-123">Deletes the specified logger.</span></span>
  syntax:
    content: 'function deleteMethod(resourceGroupName: string, serviceName: string, loggerid: string, ifMatch: string, callback: ServiceCallback<void>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: serviceName
      type:
      - string
      description: ''
    - id: loggerid
      type:
      - string
      description: ''
    - id: ifMatch
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.Logger.deleteMethodWithHttpOperationResponse
  name: deleteMethodWithHttpOperationResponse(string, string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8cc01-124">Supprime l’enregistreur d’événements spécifié.</span><span class="sxs-lookup"><span data-stu-id="8cc01-124">Deletes the specified logger.</span></span>
  syntax:
    content: 'function deleteMethodWithHttpOperationResponse(resourceGroupName: string, serviceName: string, loggerid: string, ifMatch: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="8cc01-125">Nom du groupe de ressources.</span><span class="sxs-lookup"><span data-stu-id="8cc01-125">The name of the resource group.</span></span>
    - id: serviceName
      type:
      - string
      description: >
        <span data-ttu-id="8cc01-126">Le nom du service Gestion des API.</span><span class="sxs-lookup"><span data-stu-id="8cc01-126">The name of the API Management service.</span></span>
    - id: loggerid
      type:
      - string
      description: >
        <span data-ttu-id="8cc01-127">Identificateur de l’enregistreur d’événements.</span><span class="sxs-lookup"><span data-stu-id="8cc01-127">Logger identifier.</span></span> <span data-ttu-id="8cc01-128">Doit être unique dans l’instance de service de gestion des API.</span><span class="sxs-lookup"><span data-stu-id="8cc01-128">Must be unique in the API Management service instance.</span></span>
    - id: ifMatch
      type:
      - string
      description: >
        <span data-ttu-id="8cc01-129">ETag de l’entité.</span><span class="sxs-lookup"><span data-stu-id="8cc01-129">ETag of the Entity.</span></span> <span data-ttu-id="8cc01-130">ETag doit correspondre à l’état d’entité en cours à partir de la réponse de l’en-tête de la demande GET, ou elle doit être \* pour une mise à jour inconditionnelle.</span><span class="sxs-lookup"><span data-stu-id="8cc01-130">ETag should match the current entity state from the header response of the GET request or it should be \* for unconditional update.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.Logger.get
  name: get(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8cc01-131">Obtient les détails de l’enregistreur d’événements spécifié par son identificateur.</span><span class="sxs-lookup"><span data-stu-id="8cc01-131">Gets the details of the logger specified by its identifier.</span></span>
  syntax:
    content: 'function get(resourceGroupName: string, serviceName: string, loggerid: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="8cc01-132">Nom du groupe de ressources.</span><span class="sxs-lookup"><span data-stu-id="8cc01-132">The name of the resource group.</span></span>
    - id: serviceName
      type:
      - string
      description: >
        <span data-ttu-id="8cc01-133">Le nom du service Gestion des API.</span><span class="sxs-lookup"><span data-stu-id="8cc01-133">The name of the API Management service.</span></span>
    - id: loggerid
      type:
      - string
      description: >
        <span data-ttu-id="8cc01-134">Identificateur de l’enregistreur d’événements.</span><span class="sxs-lookup"><span data-stu-id="8cc01-134">Logger identifier.</span></span> <span data-ttu-id="8cc01-135">Doit être unique dans l’instance de service de gestion des API.</span><span class="sxs-lookup"><span data-stu-id="8cc01-135">Must be unique in the API Management service instance.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-apimanagement.LoggerContract>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.Logger.get_2
  name: get(string, string, string, Object, ServiceCallback<LoggerContract>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8cc01-136">Obtient les détails de l’enregistreur d’événements spécifié par son identificateur.</span><span class="sxs-lookup"><span data-stu-id="8cc01-136">Gets the details of the logger specified by its identifier.</span></span>
  syntax:
    content: 'function get(resourceGroupName: string, serviceName: string, loggerid: string, options: Object, callback: ServiceCallback<LoggerContract>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: serviceName
      type:
      - string
      description: ''
    - id: loggerid
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-apimanagement.LoggerContract>
      description: ''
    return:
      type:
      - Promise<azure-arm-apimanagement.LoggerContract>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.Logger.get_1
  name: get(string, string, string, ServiceCallback<LoggerContract>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8cc01-137">Obtient les détails de l’enregistreur d’événements spécifié par son identificateur.</span><span class="sxs-lookup"><span data-stu-id="8cc01-137">Gets the details of the logger specified by its identifier.</span></span>
  syntax:
    content: 'function get(resourceGroupName: string, serviceName: string, loggerid: string, callback: ServiceCallback<LoggerContract>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: serviceName
      type:
      - string
      description: ''
    - id: loggerid
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-apimanagement.LoggerContract>
      description: ''
    return:
      type:
      - Promise<azure-arm-apimanagement.LoggerContract>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.Logger.getEntityTag
  name: getEntityTag(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8cc01-138">Obtient la version de l’état (Etag) d’entité de l’enregistreur d’événements spécifié par son identificateur.</span><span class="sxs-lookup"><span data-stu-id="8cc01-138">Gets the entity state (Etag) version of the logger specified by its identifier.</span></span>
  syntax:
    content: 'function getEntityTag(resourceGroupName: string, serviceName: string, loggerid: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="8cc01-139">Nom du groupe de ressources.</span><span class="sxs-lookup"><span data-stu-id="8cc01-139">The name of the resource group.</span></span>
    - id: serviceName
      type:
      - string
      description: >
        <span data-ttu-id="8cc01-140">Le nom du service Gestion des API.</span><span class="sxs-lookup"><span data-stu-id="8cc01-140">The name of the API Management service.</span></span>
    - id: loggerid
      type:
      - string
      description: >
        <span data-ttu-id="8cc01-141">Identificateur de l’enregistreur d’événements.</span><span class="sxs-lookup"><span data-stu-id="8cc01-141">Logger identifier.</span></span> <span data-ttu-id="8cc01-142">Doit être unique dans l’instance de service de gestion des API.</span><span class="sxs-lookup"><span data-stu-id="8cc01-142">Must be unique in the API Management service instance.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.Logger.getEntityTag_2
  name: getEntityTag(string, string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8cc01-143">Obtient la version de l’état (Etag) d’entité de l’enregistreur d’événements spécifié par son identificateur.</span><span class="sxs-lookup"><span data-stu-id="8cc01-143">Gets the entity state (Etag) version of the logger specified by its identifier.</span></span>
  syntax:
    content: 'function getEntityTag(resourceGroupName: string, serviceName: string, loggerid: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: serviceName
      type:
      - string
      description: ''
    - id: loggerid
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.Logger.getEntityTag_1
  name: getEntityTag(string, string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8cc01-144">Obtient la version de l’état (Etag) d’entité de l’enregistreur d’événements spécifié par son identificateur.</span><span class="sxs-lookup"><span data-stu-id="8cc01-144">Gets the entity state (Etag) version of the logger specified by its identifier.</span></span>
  syntax:
    content: 'function getEntityTag(resourceGroupName: string, serviceName: string, loggerid: string, callback: ServiceCallback<void>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: serviceName
      type:
      - string
      description: ''
    - id: loggerid
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.Logger.getEntityTagWithHttpOperationResponse
  name: getEntityTagWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8cc01-145">Obtient la version de l’état (Etag) d’entité de l’enregistreur d’événements spécifié par son identificateur.</span><span class="sxs-lookup"><span data-stu-id="8cc01-145">Gets the entity state (Etag) version of the logger specified by its identifier.</span></span>
  syntax:
    content: 'function getEntityTagWithHttpOperationResponse(resourceGroupName: string, serviceName: string, loggerid: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="8cc01-146">Nom du groupe de ressources.</span><span class="sxs-lookup"><span data-stu-id="8cc01-146">The name of the resource group.</span></span>
    - id: serviceName
      type:
      - string
      description: >
        <span data-ttu-id="8cc01-147">Le nom du service Gestion des API.</span><span class="sxs-lookup"><span data-stu-id="8cc01-147">The name of the API Management service.</span></span>
    - id: loggerid
      type:
      - string
      description: >
        <span data-ttu-id="8cc01-148">Identificateur de l’enregistreur d’événements.</span><span class="sxs-lookup"><span data-stu-id="8cc01-148">Logger identifier.</span></span> <span data-ttu-id="8cc01-149">Doit être unique dans l’instance de service de gestion des API.</span><span class="sxs-lookup"><span data-stu-id="8cc01-149">Must be unique in the API Management service instance.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.Logger.getWithHttpOperationResponse
  name: getWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8cc01-150">Obtient les détails de l’enregistreur d’événements spécifié par son identificateur.</span><span class="sxs-lookup"><span data-stu-id="8cc01-150">Gets the details of the logger specified by its identifier.</span></span>
  syntax:
    content: 'function getWithHttpOperationResponse(resourceGroupName: string, serviceName: string, loggerid: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="8cc01-151">Nom du groupe de ressources.</span><span class="sxs-lookup"><span data-stu-id="8cc01-151">The name of the resource group.</span></span>
    - id: serviceName
      type:
      - string
      description: >
        <span data-ttu-id="8cc01-152">Le nom du service Gestion des API.</span><span class="sxs-lookup"><span data-stu-id="8cc01-152">The name of the API Management service.</span></span>
    - id: loggerid
      type:
      - string
      description: >
        <span data-ttu-id="8cc01-153">Identificateur de l’enregistreur d’événements.</span><span class="sxs-lookup"><span data-stu-id="8cc01-153">Logger identifier.</span></span> <span data-ttu-id="8cc01-154">Doit être unique dans l’instance de service de gestion des API.</span><span class="sxs-lookup"><span data-stu-id="8cc01-154">Must be unique in the API Management service instance.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-apimanagement.LoggerContract>>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.Logger.listByService
  name: listByService(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8cc01-155">Répertorie une collection d’enregistreurs d’événements dans l’instance de service spécifié.</span><span class="sxs-lookup"><span data-stu-id="8cc01-155">Lists a collection of loggers in the specified service instance.</span></span>
  syntax:
    content: 'function listByService(resourceGroupName: string, serviceName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="8cc01-156">Nom du groupe de ressources.</span><span class="sxs-lookup"><span data-stu-id="8cc01-156">The name of the resource group.</span></span>
    - id: serviceName
      type:
      - string
      description: >
        <span data-ttu-id="8cc01-157">Le nom du service Gestion des API.</span><span class="sxs-lookup"><span data-stu-id="8cc01-157">The name of the API Management service.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-apimanagement.LoggerCollection>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.Logger.listByService_2
  name: listByService(string, string, Object, ServiceCallback<LoggerCollection>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8cc01-158">Répertorie une collection d’enregistreurs d’événements dans l’instance de service spécifié.</span><span class="sxs-lookup"><span data-stu-id="8cc01-158">Lists a collection of loggers in the specified service instance.</span></span>
  syntax:
    content: 'function listByService(resourceGroupName: string, serviceName: string, options: Object, callback: ServiceCallback<LoggerCollection>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: serviceName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-apimanagement.LoggerCollection>
      description: ''
    return:
      type:
      - Promise<azure-arm-apimanagement.LoggerCollection>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.Logger.listByService_1
  name: listByService(string, string, ServiceCallback<LoggerCollection>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8cc01-159">Répertorie une collection d’enregistreurs d’événements dans l’instance de service spécifié.</span><span class="sxs-lookup"><span data-stu-id="8cc01-159">Lists a collection of loggers in the specified service instance.</span></span>
  syntax:
    content: 'function listByService(resourceGroupName: string, serviceName: string, callback: ServiceCallback<LoggerCollection>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: serviceName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-apimanagement.LoggerCollection>
      description: ''
    return:
      type:
      - Promise<azure-arm-apimanagement.LoggerCollection>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.Logger.listByServiceNext
  name: listByServiceNext(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8cc01-160">Répertorie une collection d’enregistreurs d’événements dans l’instance de service spécifié.</span><span class="sxs-lookup"><span data-stu-id="8cc01-160">Lists a collection of loggers in the specified service instance.</span></span>
  syntax:
    content: 'function listByServiceNext(nextPageLink: string, options?: Object)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: >
        <span data-ttu-id="8cc01-161">NextLink de l’appel réussi précédent à l’opération de liste.</span><span class="sxs-lookup"><span data-stu-id="8cc01-161">The NextLink from the previous successful call to List operation.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-apimanagement.LoggerCollection>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.Logger.listByServiceNext_2
  name: listByServiceNext(string, Object, ServiceCallback<LoggerCollection>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8cc01-162">Répertorie une collection d’enregistreurs d’événements dans l’instance de service spécifié.</span><span class="sxs-lookup"><span data-stu-id="8cc01-162">Lists a collection of loggers in the specified service instance.</span></span>
  syntax:
    content: 'function listByServiceNext(nextPageLink: string, options: Object, callback: ServiceCallback<LoggerCollection>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-apimanagement.LoggerCollection>
      description: ''
    return:
      type:
      - Promise<azure-arm-apimanagement.LoggerCollection>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.Logger.listByServiceNext_1
  name: listByServiceNext(string, ServiceCallback<LoggerCollection>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8cc01-163">Répertorie une collection d’enregistreurs d’événements dans l’instance de service spécifié.</span><span class="sxs-lookup"><span data-stu-id="8cc01-163">Lists a collection of loggers in the specified service instance.</span></span>
  syntax:
    content: 'function listByServiceNext(nextPageLink: string, callback: ServiceCallback<LoggerCollection>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-apimanagement.LoggerCollection>
      description: ''
    return:
      type:
      - Promise<azure-arm-apimanagement.LoggerCollection>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.Logger.listByServiceNextWithHttpOperationResponse
  name: listByServiceNextWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8cc01-164">Répertorie une collection d’enregistreurs d’événements dans l’instance de service spécifié.</span><span class="sxs-lookup"><span data-stu-id="8cc01-164">Lists a collection of loggers in the specified service instance.</span></span>
  syntax:
    content: 'function listByServiceNextWithHttpOperationResponse(nextPageLink: string, options?: Object)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: >
        <span data-ttu-id="8cc01-165">NextLink de l’appel réussi précédent à l’opération de liste.</span><span class="sxs-lookup"><span data-stu-id="8cc01-165">The NextLink from the previous successful call to List operation.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-apimanagement.LoggerCollection>>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.Logger.listByServiceWithHttpOperationResponse
  name: listByServiceWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8cc01-166">Répertorie une collection d’enregistreurs d’événements dans l’instance de service spécifié.</span><span class="sxs-lookup"><span data-stu-id="8cc01-166">Lists a collection of loggers in the specified service instance.</span></span>
  syntax:
    content: 'function listByServiceWithHttpOperationResponse(resourceGroupName: string, serviceName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="8cc01-167">Nom du groupe de ressources.</span><span class="sxs-lookup"><span data-stu-id="8cc01-167">The name of the resource group.</span></span>
    - id: serviceName
      type:
      - string
      description: >
        <span data-ttu-id="8cc01-168">Le nom du service Gestion des API.</span><span class="sxs-lookup"><span data-stu-id="8cc01-168">The name of the API Management service.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-apimanagement.LoggerCollection>>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.Logger.update
  name: update(string, string, string, LoggerUpdateContract, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8cc01-169">Met à jour un enregistreur d’événements existant.</span><span class="sxs-lookup"><span data-stu-id="8cc01-169">Updates an existing logger.</span></span>
  syntax:
    content: 'function update(resourceGroupName: string, serviceName: string, loggerid: string, parameters: LoggerUpdateContract, ifMatch: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="8cc01-170">Nom du groupe de ressources.</span><span class="sxs-lookup"><span data-stu-id="8cc01-170">The name of the resource group.</span></span>
    - id: serviceName
      type:
      - string
      description: >
        <span data-ttu-id="8cc01-171">Le nom du service Gestion des API.</span><span class="sxs-lookup"><span data-stu-id="8cc01-171">The name of the API Management service.</span></span>
    - id: loggerid
      type:
      - string
      description: >
        <span data-ttu-id="8cc01-172">Identificateur de l’enregistreur d’événements.</span><span class="sxs-lookup"><span data-stu-id="8cc01-172">Logger identifier.</span></span> <span data-ttu-id="8cc01-173">Doit être unique dans l’instance de service de gestion des API.</span><span class="sxs-lookup"><span data-stu-id="8cc01-173">Must be unique in the API Management service instance.</span></span>
    - id: parameters
      type:
      - azure-arm-apimanagement.LoggerUpdateContract
      description: >
        <span data-ttu-id="8cc01-174">Mettre à jour des paramètres.</span><span class="sxs-lookup"><span data-stu-id="8cc01-174">Update parameters.</span></span>
    - id: ifMatch
      type:
      - string
      description: >
        <span data-ttu-id="8cc01-175">ETag de l’entité.</span><span class="sxs-lookup"><span data-stu-id="8cc01-175">ETag of the Entity.</span></span> <span data-ttu-id="8cc01-176">ETag doit correspondre à l’état d’entité en cours à partir de la réponse de l’en-tête de la demande GET, ou elle doit être \* pour une mise à jour inconditionnelle.</span><span class="sxs-lookup"><span data-stu-id="8cc01-176">ETag should match the current entity state from the header response of the GET request or it should be \* for unconditional update.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.Logger.update_2
  name: update(string, string, string, LoggerUpdateContract, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8cc01-177">Met à jour un enregistreur d’événements existant.</span><span class="sxs-lookup"><span data-stu-id="8cc01-177">Updates an existing logger.</span></span>
  syntax:
    content: 'function update(resourceGroupName: string, serviceName: string, loggerid: string, parameters: LoggerUpdateContract, ifMatch: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: serviceName
      type:
      - string
      description: ''
    - id: loggerid
      type:
      - string
      description: ''
    - id: parameters
      type:
      - azure-arm-apimanagement.LoggerUpdateContract
      description: ''
    - id: ifMatch
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.Logger.update_1
  name: update(string, string, string, LoggerUpdateContract, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8cc01-178">Met à jour un enregistreur d’événements existant.</span><span class="sxs-lookup"><span data-stu-id="8cc01-178">Updates an existing logger.</span></span>
  syntax:
    content: 'function update(resourceGroupName: string, serviceName: string, loggerid: string, parameters: LoggerUpdateContract, ifMatch: string, callback: ServiceCallback<void>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: serviceName
      type:
      - string
      description: ''
    - id: loggerid
      type:
      - string
      description: ''
    - id: parameters
      type:
      - azure-arm-apimanagement.LoggerUpdateContract
      description: ''
    - id: ifMatch
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-apimanagement
- uid: azure-arm-apimanagement.Logger.updateWithHttpOperationResponse
  name: updateWithHttpOperationResponse(string, string, string, LoggerUpdateContract, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="8cc01-179">Met à jour un enregistreur d’événements existant.</span><span class="sxs-lookup"><span data-stu-id="8cc01-179">Updates an existing logger.</span></span>
  syntax:
    content: 'function updateWithHttpOperationResponse(resourceGroupName: string, serviceName: string, loggerid: string, parameters: LoggerUpdateContract, ifMatch: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        <span data-ttu-id="8cc01-180">Nom du groupe de ressources.</span><span class="sxs-lookup"><span data-stu-id="8cc01-180">The name of the resource group.</span></span>
    - id: serviceName
      type:
      - string
      description: >
        <span data-ttu-id="8cc01-181">Le nom du service Gestion des API.</span><span class="sxs-lookup"><span data-stu-id="8cc01-181">The name of the API Management service.</span></span>
    - id: loggerid
      type:
      - string
      description: >
        <span data-ttu-id="8cc01-182">Identificateur de l’enregistreur d’événements.</span><span class="sxs-lookup"><span data-stu-id="8cc01-182">Logger identifier.</span></span> <span data-ttu-id="8cc01-183">Doit être unique dans l’instance de service de gestion des API.</span><span class="sxs-lookup"><span data-stu-id="8cc01-183">Must be unique in the API Management service instance.</span></span>
    - id: parameters
      type:
      - azure-arm-apimanagement.LoggerUpdateContract
      description: >
        <span data-ttu-id="8cc01-184">Mettre à jour des paramètres.</span><span class="sxs-lookup"><span data-stu-id="8cc01-184">Update parameters.</span></span>
    - id: ifMatch
      type:
      - string
      description: >
        <span data-ttu-id="8cc01-185">ETag de l’entité.</span><span class="sxs-lookup"><span data-stu-id="8cc01-185">ETag of the Entity.</span></span> <span data-ttu-id="8cc01-186">ETag doit correspondre à l’état d’entité en cours à partir de la réponse de l’en-tête de la demande GET, ou elle doit être \* pour une mise à jour inconditionnelle.</span><span class="sxs-lookup"><span data-stu-id="8cc01-186">ETag should match the current entity state from the header response of the GET request or it should be \* for unconditional update.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-apimanagement
references:
- uid: azure-arm-apimanagement.LoggerContract
  name: LoggerContract
  spec.typeScript:
  - name: LoggerContract
    fullName: LoggerContract
    uid: azure-arm-apimanagement.LoggerContract
- uid: Promise<azure-arm-apimanagement.LoggerContract>
  name: LoggerContract>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: LoggerContract
    fullName: LoggerContract
    uid: azure-arm-apimanagement.LoggerContract
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-apimanagement.LoggerContract>
  name: LoggerContract>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: LoggerContract
    fullName: LoggerContract
    uid: azure-arm-apimanagement.LoggerContract
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-apimanagement.LoggerContract>>
  name: LoggerContract>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: LoggerContract
    fullName: LoggerContract
    uid: azure-arm-apimanagement.LoggerContract
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-apimanagement.LoggerCollection>
  name: LoggerCollection>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: LoggerCollection
    fullName: LoggerCollection
    uid: azure-arm-apimanagement.LoggerCollection
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-apimanagement.LoggerCollection>
  name: LoggerCollection>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: LoggerCollection
    fullName: LoggerCollection
    uid: azure-arm-apimanagement.LoggerCollection
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-apimanagement.LoggerCollection>>
  name: LoggerCollection>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: LoggerCollection
    fullName: LoggerCollection
    uid: azure-arm-apimanagement.LoggerCollection
  - name: '>>'
    fullName: '>>'
- uid: azure-arm-apimanagement.LoggerUpdateContract
  name: LoggerUpdateContract
  spec.typeScript:
  - name: LoggerUpdateContract
    fullName: LoggerUpdateContract
    uid: azure-arm-apimanagement.LoggerUpdateContract
