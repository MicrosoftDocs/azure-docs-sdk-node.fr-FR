### YamlMime:UniversalReference
ms.openlocfilehash: 51f45c7abd2bc5feb2e4ba67ef1a39a812968ea3
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 12/13/2018
ms.locfileid: "52070277"
items:
- uid: azure-arm-authorization.RoleAssignments
  name: RoleAssignments
  fullName: RoleAssignments
  children:
  - azure-arm-authorization.RoleAssignments.create
  - azure-arm-authorization.RoleAssignments.create_2
  - azure-arm-authorization.RoleAssignments.create_1
  - azure-arm-authorization.RoleAssignments.createById
  - azure-arm-authorization.RoleAssignments.createById_2
  - azure-arm-authorization.RoleAssignments.createById_1
  - azure-arm-authorization.RoleAssignments.createByIdWithHttpOperationResponse
  - azure-arm-authorization.RoleAssignments.createWithHttpOperationResponse
  - azure-arm-authorization.RoleAssignments.deleteById
  - azure-arm-authorization.RoleAssignments.deleteById_2
  - azure-arm-authorization.RoleAssignments.deleteById_1
  - azure-arm-authorization.RoleAssignments.deleteByIdWithHttpOperationResponse
  - azure-arm-authorization.RoleAssignments.deleteMethod
  - azure-arm-authorization.RoleAssignments.deleteMethod_2
  - azure-arm-authorization.RoleAssignments.deleteMethod_1
  - azure-arm-authorization.RoleAssignments.deleteMethodWithHttpOperationResponse
  - azure-arm-authorization.RoleAssignments.get
  - azure-arm-authorization.RoleAssignments.get_2
  - azure-arm-authorization.RoleAssignments.get_1
  - azure-arm-authorization.RoleAssignments.getById
  - azure-arm-authorization.RoleAssignments.getById_2
  - azure-arm-authorization.RoleAssignments.getById_1
  - azure-arm-authorization.RoleAssignments.getByIdWithHttpOperationResponse
  - azure-arm-authorization.RoleAssignments.getWithHttpOperationResponse
  - azure-arm-authorization.RoleAssignments.list
  - azure-arm-authorization.RoleAssignments.list_2
  - azure-arm-authorization.RoleAssignments.list_1
  - azure-arm-authorization.RoleAssignments.listForResource
  - azure-arm-authorization.RoleAssignments.listForResource_2
  - azure-arm-authorization.RoleAssignments.listForResource_1
  - azure-arm-authorization.RoleAssignments.listForResourceGroup
  - azure-arm-authorization.RoleAssignments.listForResourceGroup_2
  - azure-arm-authorization.RoleAssignments.listForResourceGroup_1
  - azure-arm-authorization.RoleAssignments.listForResourceGroupNext
  - azure-arm-authorization.RoleAssignments.listForResourceGroupNext_2
  - azure-arm-authorization.RoleAssignments.listForResourceGroupNext_1
  - azure-arm-authorization.RoleAssignments.listForResourceGroupNextWithHttpOperationResponse
  - azure-arm-authorization.RoleAssignments.listForResourceGroupWithHttpOperationResponse
  - azure-arm-authorization.RoleAssignments.listForResourceNext
  - azure-arm-authorization.RoleAssignments.listForResourceNext_2
  - azure-arm-authorization.RoleAssignments.listForResourceNext_1
  - azure-arm-authorization.RoleAssignments.listForResourceNextWithHttpOperationResponse
  - azure-arm-authorization.RoleAssignments.listForResourceWithHttpOperationResponse
  - azure-arm-authorization.RoleAssignments.listForScope
  - azure-arm-authorization.RoleAssignments.listForScope_2
  - azure-arm-authorization.RoleAssignments.listForScope_1
  - azure-arm-authorization.RoleAssignments.listForScopeNext
  - azure-arm-authorization.RoleAssignments.listForScopeNext_2
  - azure-arm-authorization.RoleAssignments.listForScopeNext_1
  - azure-arm-authorization.RoleAssignments.listForScopeNextWithHttpOperationResponse
  - azure-arm-authorization.RoleAssignments.listForScopeWithHttpOperationResponse
  - azure-arm-authorization.RoleAssignments.listNext
  - azure-arm-authorization.RoleAssignments.listNext_2
  - azure-arm-authorization.RoleAssignments.listNext_1
  - azure-arm-authorization.RoleAssignments.listNextWithHttpOperationResponse
  - azure-arm-authorization.RoleAssignments.listWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.create
  name: create(string, string, RoleAssignmentCreateParameters, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Crée une attribution de rôle.
  syntax:
    content: 'function create(scope: string, roleAssignmentName: string, parameters: RoleAssignmentCreateParameters, options?: Object)'
    parameters:
    - id: scope
      type:
      - string
      description: >
        L’étendue de l’attribution de rôle à créer. L’étendue peut être n’importe quelle instance de ressource REST. Par exemple, utilisez « / subscriptions / {id-abonnement} / » pour un abonnement, « / subscriptions / {id-abonnement} /resourceGroups/ {resource-group-name}' pour un groupe de ressources, et « / subscriptions / {id-abonnement} /resourceGroups/ {} Resource-Group-Name}/Providers/{Resource-Provider}/{Resource-type}/{Resource-Name}' pour une ressource.
    - id: roleAssignmentName
      type:
      - string
      description: >
        Le nom de l’attribution de rôle à créer. Il peut être n’importe quel GUID valide.
    - id: parameters
      type:
      - azure-arm-authorization.RoleAssignmentCreateParameters
      description: >
        Paramètres pour l’attribution de rôle.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignment>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.create_2
  name: create(string, string, RoleAssignmentCreateParameters, Object, ServiceCallback<RoleAssignment>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Crée une attribution de rôle.
  syntax:
    content: 'function create(scope: string, roleAssignmentName: string, parameters: RoleAssignmentCreateParameters, options: Object, callback: ServiceCallback<RoleAssignment>)'
    parameters:
    - id: scope
      type:
      - string
      description: ''
    - id: roleAssignmentName
      type:
      - string
      description: ''
    - id: parameters
      type:
      - azure-arm-authorization.RoleAssignmentCreateParameters
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-authorization.RoleAssignment>
      description: ''
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignment>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.create_1
  name: create(string, string, RoleAssignmentCreateParameters, ServiceCallback<RoleAssignment>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Crée une attribution de rôle.
  syntax:
    content: 'function create(scope: string, roleAssignmentName: string, parameters: RoleAssignmentCreateParameters, callback: ServiceCallback<RoleAssignment>)'
    parameters:
    - id: scope
      type:
      - string
      description: ''
    - id: roleAssignmentName
      type:
      - string
      description: ''
    - id: parameters
      type:
      - azure-arm-authorization.RoleAssignmentCreateParameters
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-authorization.RoleAssignment>
      description: ''
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignment>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.createById
  name: createById(string, RoleAssignmentCreateParameters, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Crée une attribution de rôle par ID.
  syntax:
    content: 'function createById(roleId: string, parameters: RoleAssignmentCreateParameters, options?: Object)'
    parameters:
    - id: roleId
      type:
      - string
      description: >
        ID de l’attribution de rôle à créer.
    - id: parameters
      type:
      - azure-arm-authorization.RoleAssignmentCreateParameters
      description: >
        Paramètres pour l’attribution de rôle.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignment>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.createById_2
  name: createById(string, RoleAssignmentCreateParameters, Object, ServiceCallback<RoleAssignment>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Crée une attribution de rôle par ID.
  syntax:
    content: 'function createById(roleId: string, parameters: RoleAssignmentCreateParameters, options: Object, callback: ServiceCallback<RoleAssignment>)'
    parameters:
    - id: roleId
      type:
      - string
      description: ''
    - id: parameters
      type:
      - azure-arm-authorization.RoleAssignmentCreateParameters
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-authorization.RoleAssignment>
      description: ''
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignment>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.createById_1
  name: createById(string, RoleAssignmentCreateParameters, ServiceCallback<RoleAssignment>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Crée une attribution de rôle par ID.
  syntax:
    content: 'function createById(roleId: string, parameters: RoleAssignmentCreateParameters, callback: ServiceCallback<RoleAssignment>)'
    parameters:
    - id: roleId
      type:
      - string
      description: ''
    - id: parameters
      type:
      - azure-arm-authorization.RoleAssignmentCreateParameters
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-authorization.RoleAssignment>
      description: ''
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignment>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.createByIdWithHttpOperationResponse
  name: createByIdWithHttpOperationResponse(string, RoleAssignmentCreateParameters, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Crée une attribution de rôle par ID.
  syntax:
    content: 'function createByIdWithHttpOperationResponse(roleId: string, parameters: RoleAssignmentCreateParameters, options?: Object)'
    parameters:
    - id: roleId
      type:
      - string
      description: >
        ID de l’attribution de rôle à créer.
    - id: parameters
      type:
      - azure-arm-authorization.RoleAssignmentCreateParameters
      description: >
        Paramètres pour l’attribution de rôle.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-authorization.RoleAssignment>>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.createWithHttpOperationResponse
  name: createWithHttpOperationResponse(string, string, RoleAssignmentCreateParameters, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Crée une attribution de rôle.
  syntax:
    content: 'function createWithHttpOperationResponse(scope: string, roleAssignmentName: string, parameters: RoleAssignmentCreateParameters, options?: Object)'
    parameters:
    - id: scope
      type:
      - string
      description: >
        L’étendue de l’attribution de rôle à créer. L’étendue peut être n’importe quelle instance de ressource REST. Par exemple, utilisez « / subscriptions / {id-abonnement} / » pour un abonnement, « / subscriptions / {id-abonnement} /resourceGroups/ {resource-group-name}' pour un groupe de ressources, et « / subscriptions / {id-abonnement} /resourceGroups/ {} Resource-Group-Name}/Providers/{Resource-Provider}/{Resource-type}/{Resource-Name}' pour une ressource.
    - id: roleAssignmentName
      type:
      - string
      description: >
        Le nom de l’attribution de rôle à créer. Il peut être n’importe quel GUID valide.
    - id: parameters
      type:
      - azure-arm-authorization.RoleAssignmentCreateParameters
      description: >
        Paramètres pour l’attribution de rôle.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-authorization.RoleAssignment>>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.deleteById
  name: deleteById(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Supprime une attribution de rôle.
  syntax:
    content: 'function deleteById(roleId: string, options?: Object)'
    parameters:
    - id: roleId
      type:
      - string
      description: >
        L’ID de l’attribution de rôle à supprimer.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignment>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.deleteById_2
  name: deleteById(string, Object, ServiceCallback<RoleAssignment>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Supprime une attribution de rôle.
  syntax:
    content: 'function deleteById(roleId: string, options: Object, callback: ServiceCallback<RoleAssignment>)'
    parameters:
    - id: roleId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-authorization.RoleAssignment>
      description: ''
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignment>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.deleteById_1
  name: deleteById(string, ServiceCallback<RoleAssignment>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Supprime une attribution de rôle.
  syntax:
    content: 'function deleteById(roleId: string, callback: ServiceCallback<RoleAssignment>)'
    parameters:
    - id: roleId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-authorization.RoleAssignment>
      description: ''
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignment>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.deleteByIdWithHttpOperationResponse
  name: deleteByIdWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Supprime une attribution de rôle.
  syntax:
    content: 'function deleteByIdWithHttpOperationResponse(roleId: string, options?: Object)'
    parameters:
    - id: roleId
      type:
      - string
      description: >
        L’ID de l’attribution de rôle à supprimer.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-authorization.RoleAssignment>>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.deleteMethod
  name: deleteMethod(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Supprime une attribution de rôle.
  syntax:
    content: 'function deleteMethod(scope: string, roleAssignmentName: string, options?: Object)'
    parameters:
    - id: scope
      type:
      - string
      description: >
        L’étendue de l’attribution de rôle à supprimer.
    - id: roleAssignmentName
      type:
      - string
      description: >
        Le nom de l’attribution de rôle à supprimer.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignment>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.deleteMethod_2
  name: deleteMethod(string, string, Object, ServiceCallback<RoleAssignment>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Supprime une attribution de rôle.
  syntax:
    content: 'function deleteMethod(scope: string, roleAssignmentName: string, options: Object, callback: ServiceCallback<RoleAssignment>)'
    parameters:
    - id: scope
      type:
      - string
      description: ''
    - id: roleAssignmentName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-authorization.RoleAssignment>
      description: ''
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignment>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.deleteMethod_1
  name: deleteMethod(string, string, ServiceCallback<RoleAssignment>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Supprime une attribution de rôle.
  syntax:
    content: 'function deleteMethod(scope: string, roleAssignmentName: string, callback: ServiceCallback<RoleAssignment>)'
    parameters:
    - id: scope
      type:
      - string
      description: ''
    - id: roleAssignmentName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-authorization.RoleAssignment>
      description: ''
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignment>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.deleteMethodWithHttpOperationResponse
  name: deleteMethodWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Supprime une attribution de rôle.
  syntax:
    content: 'function deleteMethodWithHttpOperationResponse(scope: string, roleAssignmentName: string, options?: Object)'
    parameters:
    - id: scope
      type:
      - string
      description: >
        L’étendue de l’attribution de rôle à supprimer.
    - id: roleAssignmentName
      type:
      - string
      description: >
        Le nom de l’attribution de rôle à supprimer.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-authorization.RoleAssignment>>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.get
  name: get(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtenir l’attribution de rôle spécifié.
  syntax:
    content: 'function get(scope: string, roleAssignmentName: string, options?: Object)'
    parameters:
    - id: scope
      type:
      - string
      description: >
        L’étendue de l’attribution de rôle.
    - id: roleAssignmentName
      type:
      - string
      description: >
        Le nom de l’attribution de rôle à obtenir.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignment>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.get_2
  name: get(string, string, Object, ServiceCallback<RoleAssignment>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtenir l’attribution de rôle spécifié.
  syntax:
    content: 'function get(scope: string, roleAssignmentName: string, options: Object, callback: ServiceCallback<RoleAssignment>)'
    parameters:
    - id: scope
      type:
      - string
      description: ''
    - id: roleAssignmentName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-authorization.RoleAssignment>
      description: ''
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignment>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.get_1
  name: get(string, string, ServiceCallback<RoleAssignment>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtenir l’attribution de rôle spécifié.
  syntax:
    content: 'function get(scope: string, roleAssignmentName: string, callback: ServiceCallback<RoleAssignment>)'
    parameters:
    - id: scope
      type:
      - string
      description: ''
    - id: roleAssignmentName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-authorization.RoleAssignment>
      description: ''
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignment>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.getById
  name: getById(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient une attribution de rôle par ID.
  syntax:
    content: 'function getById(roleId: string, options?: Object)'
    parameters:
    - id: roleId
      type:
      - string
      description: >
        ID de l’attribution de rôle à obtenir.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignment>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.getById_2
  name: getById(string, Object, ServiceCallback<RoleAssignment>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient une attribution de rôle par ID.
  syntax:
    content: 'function getById(roleId: string, options: Object, callback: ServiceCallback<RoleAssignment>)'
    parameters:
    - id: roleId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-authorization.RoleAssignment>
      description: ''
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignment>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.getById_1
  name: getById(string, ServiceCallback<RoleAssignment>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient une attribution de rôle par ID.
  syntax:
    content: 'function getById(roleId: string, callback: ServiceCallback<RoleAssignment>)'
    parameters:
    - id: roleId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-authorization.RoleAssignment>
      description: ''
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignment>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.getByIdWithHttpOperationResponse
  name: getByIdWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient une attribution de rôle par ID.
  syntax:
    content: 'function getByIdWithHttpOperationResponse(roleId: string, options?: Object)'
    parameters:
    - id: roleId
      type:
      - string
      description: >
        ID de l’attribution de rôle à obtenir.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-authorization.RoleAssignment>>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.getWithHttpOperationResponse
  name: getWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtenir l’attribution de rôle spécifié.
  syntax:
    content: 'function getWithHttpOperationResponse(scope: string, roleAssignmentName: string, options?: Object)'
    parameters:
    - id: scope
      type:
      - string
      description: >
        L’étendue de l’attribution de rôle.
    - id: roleAssignmentName
      type:
      - string
      description: >
        Le nom de l’attribution de rôle à obtenir.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-authorization.RoleAssignment>>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.list
  name: list(Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient toutes les attributions de rôle pour l’abonnement.
  syntax:
    content: 'function list(options?: Object)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignmentListResult>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.list_2
  name: list(Object, ServiceCallback<RoleAssignmentListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient toutes les attributions de rôle pour l’abonnement.
  syntax:
    content: 'function list(options: Object, callback: ServiceCallback<RoleAssignmentListResult>)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-authorization.RoleAssignmentListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignmentListResult>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.list_1
  name: list(ServiceCallback<RoleAssignmentListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient toutes les attributions de rôle pour l’abonnement.
  syntax:
    content: 'function list(callback: ServiceCallback<RoleAssignmentListResult>)'
    parameters:
    - id: callback
      type:
      - ServiceCallback<azure-arm-authorization.RoleAssignmentListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignmentListResult>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.listForResource
  name: listForResource(string, string, string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient les attributions de rôle pour une ressource.
  syntax:
    content: 'function listForResource(resourceGroupName: string, resourceProviderNamespace: string, parentResourcePath: string, resourceType: string, resourceName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Nom du groupe de ressources.
    - id: resourceProviderNamespace
      type:
      - string
      description: >
        L’espace de noms du fournisseur de ressources.
    - id: parentResourcePath
      type:
      - string
      description: >
        L’identité de ressource parent.
    - id: resourceType
      type:
      - string
      description: >
        Le type de ressource de la ressource.
    - id: resourceName
      type:
      - string
      description: >
        Le nom de la ressource à obtenir les attributions de rôle pour.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignmentListResult>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.listForResource_2
  name: listForResource(string, string, string, string, string, Object, ServiceCallback<RoleAssignmentListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient les attributions de rôle pour une ressource.
  syntax:
    content: 'function listForResource(resourceGroupName: string, resourceProviderNamespace: string, parentResourcePath: string, resourceType: string, resourceName: string, options: Object, callback: ServiceCallback<RoleAssignmentListResult>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: resourceProviderNamespace
      type:
      - string
      description: ''
    - id: parentResourcePath
      type:
      - string
      description: ''
    - id: resourceType
      type:
      - string
      description: ''
    - id: resourceName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-authorization.RoleAssignmentListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignmentListResult>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.listForResource_1
  name: listForResource(string, string, string, string, string, ServiceCallback<RoleAssignmentListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient les attributions de rôle pour une ressource.
  syntax:
    content: 'function listForResource(resourceGroupName: string, resourceProviderNamespace: string, parentResourcePath: string, resourceType: string, resourceName: string, callback: ServiceCallback<RoleAssignmentListResult>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: resourceProviderNamespace
      type:
      - string
      description: ''
    - id: parentResourcePath
      type:
      - string
      description: ''
    - id: resourceType
      type:
      - string
      description: ''
    - id: resourceName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-authorization.RoleAssignmentListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignmentListResult>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.listForResourceGroup
  name: listForResourceGroup(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient les attributions de rôle pour un groupe de ressources.
  syntax:
    content: 'function listForResourceGroup(resourceGroupName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Nom du groupe de ressources.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignmentListResult>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.listForResourceGroup_2
  name: listForResourceGroup(string, Object, ServiceCallback<RoleAssignmentListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient les attributions de rôle pour un groupe de ressources.
  syntax:
    content: 'function listForResourceGroup(resourceGroupName: string, options: Object, callback: ServiceCallback<RoleAssignmentListResult>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-authorization.RoleAssignmentListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignmentListResult>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.listForResourceGroup_1
  name: listForResourceGroup(string, ServiceCallback<RoleAssignmentListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient les attributions de rôle pour un groupe de ressources.
  syntax:
    content: 'function listForResourceGroup(resourceGroupName: string, callback: ServiceCallback<RoleAssignmentListResult>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-authorization.RoleAssignmentListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignmentListResult>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.listForResourceGroupNext
  name: listForResourceGroupNext(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient les attributions de rôle pour un groupe de ressources.
  syntax:
    content: 'function listForResourceGroupNext(nextPageLink: string, options?: Object)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: >
        NextLink de l’appel réussi précédent à l’opération de liste.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignmentListResult>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.listForResourceGroupNext_2
  name: listForResourceGroupNext(string, Object, ServiceCallback<RoleAssignmentListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient les attributions de rôle pour un groupe de ressources.
  syntax:
    content: 'function listForResourceGroupNext(nextPageLink: string, options: Object, callback: ServiceCallback<RoleAssignmentListResult>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-authorization.RoleAssignmentListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignmentListResult>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.listForResourceGroupNext_1
  name: listForResourceGroupNext(string, ServiceCallback<RoleAssignmentListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient les attributions de rôle pour un groupe de ressources.
  syntax:
    content: 'function listForResourceGroupNext(nextPageLink: string, callback: ServiceCallback<RoleAssignmentListResult>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-authorization.RoleAssignmentListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignmentListResult>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.listForResourceGroupNextWithHttpOperationResponse
  name: listForResourceGroupNextWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient les attributions de rôle pour un groupe de ressources.
  syntax:
    content: 'function listForResourceGroupNextWithHttpOperationResponse(nextPageLink: string, options?: Object)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: >
        NextLink de l’appel réussi précédent à l’opération de liste.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-authorization.RoleAssignmentListResult>>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.listForResourceGroupWithHttpOperationResponse
  name: listForResourceGroupWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient les attributions de rôle pour un groupe de ressources.
  syntax:
    content: 'function listForResourceGroupWithHttpOperationResponse(resourceGroupName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Nom du groupe de ressources.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-authorization.RoleAssignmentListResult>>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.listForResourceNext
  name: listForResourceNext(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient les attributions de rôle pour une ressource.
  syntax:
    content: 'function listForResourceNext(nextPageLink: string, options?: Object)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: >
        NextLink de l’appel réussi précédent à l’opération de liste.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignmentListResult>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.listForResourceNext_2
  name: listForResourceNext(string, Object, ServiceCallback<RoleAssignmentListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient les attributions de rôle pour une ressource.
  syntax:
    content: 'function listForResourceNext(nextPageLink: string, options: Object, callback: ServiceCallback<RoleAssignmentListResult>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-authorization.RoleAssignmentListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignmentListResult>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.listForResourceNext_1
  name: listForResourceNext(string, ServiceCallback<RoleAssignmentListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient les attributions de rôle pour une ressource.
  syntax:
    content: 'function listForResourceNext(nextPageLink: string, callback: ServiceCallback<RoleAssignmentListResult>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-authorization.RoleAssignmentListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignmentListResult>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.listForResourceNextWithHttpOperationResponse
  name: listForResourceNextWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient les attributions de rôle pour une ressource.
  syntax:
    content: 'function listForResourceNextWithHttpOperationResponse(nextPageLink: string, options?: Object)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: >
        NextLink de l’appel réussi précédent à l’opération de liste.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-authorization.RoleAssignmentListResult>>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.listForResourceWithHttpOperationResponse
  name: listForResourceWithHttpOperationResponse(string, string, string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient les attributions de rôle pour une ressource.
  syntax:
    content: 'function listForResourceWithHttpOperationResponse(resourceGroupName: string, resourceProviderNamespace: string, parentResourcePath: string, resourceType: string, resourceName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Nom du groupe de ressources.
    - id: resourceProviderNamespace
      type:
      - string
      description: >
        L’espace de noms du fournisseur de ressources.
    - id: parentResourcePath
      type:
      - string
      description: >
        L’identité de ressource parent.
    - id: resourceType
      type:
      - string
      description: >
        Le type de ressource de la ressource.
    - id: resourceName
      type:
      - string
      description: >
        Le nom de la ressource à obtenir les attributions de rôle pour.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-authorization.RoleAssignmentListResult>>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.listForScope
  name: listForScope(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient les attributions de rôle pour une étendue.
  syntax:
    content: 'function listForScope(scope: string, options?: Object)'
    parameters:
    - id: scope
      type:
      - string
      description: >
        L’étendue des attributions de rôles.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignmentListResult>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.listForScope_2
  name: listForScope(string, Object, ServiceCallback<RoleAssignmentListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient les attributions de rôle pour une étendue.
  syntax:
    content: 'function listForScope(scope: string, options: Object, callback: ServiceCallback<RoleAssignmentListResult>)'
    parameters:
    - id: scope
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-authorization.RoleAssignmentListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignmentListResult>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.listForScope_1
  name: listForScope(string, ServiceCallback<RoleAssignmentListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient les attributions de rôle pour une étendue.
  syntax:
    content: 'function listForScope(scope: string, callback: ServiceCallback<RoleAssignmentListResult>)'
    parameters:
    - id: scope
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-authorization.RoleAssignmentListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignmentListResult>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.listForScopeNext
  name: listForScopeNext(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient les attributions de rôle pour une étendue.
  syntax:
    content: 'function listForScopeNext(nextPageLink: string, options?: Object)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: >
        NextLink de l’appel réussi précédent à l’opération de liste.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignmentListResult>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.listForScopeNext_2
  name: listForScopeNext(string, Object, ServiceCallback<RoleAssignmentListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient les attributions de rôle pour une étendue.
  syntax:
    content: 'function listForScopeNext(nextPageLink: string, options: Object, callback: ServiceCallback<RoleAssignmentListResult>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-authorization.RoleAssignmentListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignmentListResult>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.listForScopeNext_1
  name: listForScopeNext(string, ServiceCallback<RoleAssignmentListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient les attributions de rôle pour une étendue.
  syntax:
    content: 'function listForScopeNext(nextPageLink: string, callback: ServiceCallback<RoleAssignmentListResult>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-authorization.RoleAssignmentListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignmentListResult>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.listForScopeNextWithHttpOperationResponse
  name: listForScopeNextWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient les attributions de rôle pour une étendue.
  syntax:
    content: 'function listForScopeNextWithHttpOperationResponse(nextPageLink: string, options?: Object)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: >
        NextLink de l’appel réussi précédent à l’opération de liste.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-authorization.RoleAssignmentListResult>>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.listForScopeWithHttpOperationResponse
  name: listForScopeWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient les attributions de rôle pour une étendue.
  syntax:
    content: 'function listForScopeWithHttpOperationResponse(scope: string, options?: Object)'
    parameters:
    - id: scope
      type:
      - string
      description: >
        L’étendue des attributions de rôles.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-authorization.RoleAssignmentListResult>>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.listNext
  name: listNext(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient toutes les attributions de rôle pour l’abonnement.
  syntax:
    content: 'function listNext(nextPageLink: string, options?: Object)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: >
        NextLink de l’appel réussi précédent à l’opération de liste.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignmentListResult>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.listNext_2
  name: listNext(string, Object, ServiceCallback<RoleAssignmentListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient toutes les attributions de rôle pour l’abonnement.
  syntax:
    content: 'function listNext(nextPageLink: string, options: Object, callback: ServiceCallback<RoleAssignmentListResult>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-authorization.RoleAssignmentListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignmentListResult>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.listNext_1
  name: listNext(string, ServiceCallback<RoleAssignmentListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient toutes les attributions de rôle pour l’abonnement.
  syntax:
    content: 'function listNext(nextPageLink: string, callback: ServiceCallback<RoleAssignmentListResult>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-authorization.RoleAssignmentListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-authorization.RoleAssignmentListResult>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.listNextWithHttpOperationResponse
  name: listNextWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient toutes les attributions de rôle pour l’abonnement.
  syntax:
    content: 'function listNextWithHttpOperationResponse(nextPageLink: string, options?: Object)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: >
        NextLink de l’appel réussi précédent à l’opération de liste.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-authorization.RoleAssignmentListResult>>
  package: azure-arm-authorization
- uid: azure-arm-authorization.RoleAssignments.listWithHttpOperationResponse
  name: listWithHttpOperationResponse(Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient toutes les attributions de rôle pour l’abonnement.
  syntax:
    content: 'function listWithHttpOperationResponse(options?: Object)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-authorization.RoleAssignmentListResult>>
  package: azure-arm-authorization
references:
- uid: azure-arm-authorization.RoleAssignmentCreateParameters
  name: RoleAssignmentCreateParameters
  spec.typeScript:
  - name: RoleAssignmentCreateParameters
    fullName: RoleAssignmentCreateParameters
    uid: azure-arm-authorization.RoleAssignmentCreateParameters
- uid: Promise<azure-arm-authorization.RoleAssignment>
  name: RoleAssignment>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: RoleAssignment
    fullName: RoleAssignment
    uid: azure-arm-authorization.RoleAssignment
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-authorization.RoleAssignment>
  name: RoleAssignment>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: RoleAssignment
    fullName: RoleAssignment
    uid: azure-arm-authorization.RoleAssignment
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-authorization.RoleAssignment>>
  name: RoleAssignment>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: RoleAssignment
    fullName: RoleAssignment
    uid: azure-arm-authorization.RoleAssignment
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-authorization.RoleAssignmentListResult>
  name: RoleAssignmentListResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: RoleAssignmentListResult
    fullName: RoleAssignmentListResult
    uid: azure-arm-authorization.RoleAssignmentListResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-authorization.RoleAssignmentListResult>
  name: RoleAssignmentListResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: RoleAssignmentListResult
    fullName: RoleAssignmentListResult
    uid: azure-arm-authorization.RoleAssignmentListResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-authorization.RoleAssignmentListResult>>
  name: RoleAssignmentListResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: RoleAssignmentListResult
    fullName: RoleAssignmentListResult
    uid: azure-arm-authorization.RoleAssignmentListResult
  - name: '>>'
    fullName: '>>'
