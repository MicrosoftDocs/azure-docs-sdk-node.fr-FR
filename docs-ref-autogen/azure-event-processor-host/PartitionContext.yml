### YamlMime:UniversalReference
ms.openlocfilehash: db4684c08562757534ddb3cdaab0ab3ba6f4525b
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 08/12/2018
ms.locfileid: "40061518"
items:
- uid: azure-event-processor-host.PartitionContext
  name: PartitionContext
  fullName: PartitionContext
  children:
  - azure-event-processor-host.PartitionContext.checkpoint
  - azure-event-processor-host.PartitionContext.lease
  - azure-event-processor-host.PartitionContext.constructor
  - azure-event-processor-host.PartitionContext.partitionId
  - azure-event-processor-host.PartitionContext.setCheckpointInfo
  - azure-event-processor-host.PartitionContext.updateCheckpointDataFromEventData
  - azure-event-processor-host.PartitionContext.updateCheckpointInfoFromLease
  langs:
  - typeScript
  type: class
  summary: <span data-ttu-id="7a744-101">Décrit le contexte de la Partition.</span><span class="sxs-lookup"><span data-stu-id="7a744-101">Describes the Partition Context.</span></span>
  package: azure-event-processor-host
- uid: azure-event-processor-host.PartitionContext.checkpoint
  name: checkpoint
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="7a744-102">Stocke les données de point de contrôle dans l’objet blob adéquat, en supposant que le bail est maintenu (sinon, rejette).</span><span class="sxs-lookup"><span data-stu-id="7a744-102">Stores the checkpoint data into the appropriate blob, assuming the lease is held (otherwise, rejects).</span></span>

    <span data-ttu-id="7a744-103">Les données de point de contrôle sont structurées comme une charge utile JSON (par exemple) : `{ "PartitionId":"0","Owner":"ephtest","Token":"48e209e3-55f0-41b8-a8dd-d9c09ff6c35a",

    "Epoch":1,"Offset":"","SequenceNumber":0}`.</span><span class="sxs-lookup"><span data-stu-id="7a744-103">The checkpoint data is structured as a JSON payload (example): `{ "PartitionId":"0","Owner":"ephtest","Token":"48e209e3-55f0-41b8-a8dd-d9c09ff6c35a",

    "Epoch":1,"Offset":"","SequenceNumber":0}`.</span></span> <span data-ttu-id="7a744-104">Le format et la casse de clés dans l’objet est synchronisé avec le sdk .net d’Event hubs.</span><span class="sxs-lookup"><span data-stu-id="7a744-104">The format and the casing of keys in the object is in sync with the .net sdk of EventHubs.</span></span>
  syntax:
    content: function checkpoint()
    parameters: []
    return:
      type:
      - Promise<azure-event-processor-host.CheckpointInfo | void>
  package: azure-event-processor-host
- uid: azure-event-processor-host.PartitionContext.lease
  name: lease
  fullName: lease
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'lease: BlobLease'
    return:
      type:
      - azure-event-processor-host.BlobLease
  package: azure-event-processor-host
- uid: azure-event-processor-host.PartitionContext.constructor
  name: PartitionContext
  children: []
  type: constructor
  langs:
  - typeScript
  summary: <span data-ttu-id="7a744-105">Crée un nouveau PartitionContext.</span><span class="sxs-lookup"><span data-stu-id="7a744-105">Creates a new PartitionContext.</span></span>
  syntax:
    content: 'new PartitionContext(partitionId: string, owner: string, lease: BlobLease)'
    parameters:
    - id: partitionId
      type:
      - string
      description: <span data-ttu-id="7a744-106">L’id de partition eventhub.</span><span class="sxs-lookup"><span data-stu-id="7a744-106">The eventhub partition id.</span></span>
    - id: owner
      type:
      - string
      description: <span data-ttu-id="7a744-107">Le nom du propriétaire.</span><span class="sxs-lookup"><span data-stu-id="7a744-107">The name of the owner.</span></span>
    - id: lease
      type:
      - azure-event-processor-host.BlobLease
      description: >
        <span data-ttu-id="7a744-108">L’objet de bail.</span><span class="sxs-lookup"><span data-stu-id="7a744-108">The lease object.</span></span>
  package: azure-event-processor-host
- uid: azure-event-processor-host.PartitionContext.partitionId
  name: partitionId
  fullName: partitionId
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'partitionId: string'
    return:
      type:
      - string
  package: azure-event-processor-host
- uid: azure-event-processor-host.PartitionContext.setCheckpointInfo
  name: setCheckpointInfo
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="7a744-109">Définit les informations de point de contrôle.</span><span class="sxs-lookup"><span data-stu-id="7a744-109">Sets the checkpoint info.</span></span>
  syntax:
    content: 'function setCheckpointInfo(owner: string, token: string, epoch: number, offset: string, sequenceNumber: number)'
    parameters:
    - id: owner
      type:
      - string
      description: <span data-ttu-id="7a744-110">Nom du propriétaire.</span><span class="sxs-lookup"><span data-stu-id="7a744-110">Name of the owner.</span></span>
    - id: token
      type:
      - string
      description: <span data-ttu-id="7a744-111">La chaîne de jeton.</span><span class="sxs-lookup"><span data-stu-id="7a744-111">The token string.</span></span>
    - id: epoch
      type:
      - number
      description: <span data-ttu-id="7a744-112">La valeur de l’époque.</span><span class="sxs-lookup"><span data-stu-id="7a744-112">The epoch value.</span></span>
    - id: offset
      type:
      - string
      description: <span data-ttu-id="7a744-113">Le décalage du message du flux d’événements.</span><span class="sxs-lookup"><span data-stu-id="7a744-113">The offset of the message in the event stream.</span></span>
    - id: sequenceNumber
      type:
      - number
      description: >
        <span data-ttu-id="7a744-114">Le nombre de sequnce du message dans le flux d’événements</span><span class="sxs-lookup"><span data-stu-id="7a744-114">The sequnce number of the message in the event stream</span></span>
  package: azure-event-processor-host
- uid: azure-event-processor-host.PartitionContext.updateCheckpointDataFromEventData
  name: updateCheckpointDataFromEventData
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="7a744-115">Met à jour des données à partir du message, qui doit avoir un champ d’annotations contenant quelque chose comme : « x-opt-sequence-number":6,"x-opt-offset":"480","x-opt-enqueued-time":"2015-12-18T17:26:49.331Z »</span><span class="sxs-lookup"><span data-stu-id="7a744-115">Updates data from the message, which should have an annotations field containing something like: "x-opt-sequence-number":6,"x-opt-offset":"480","x-opt-enqueued-time":"2015-12-18T17:26:49.331Z"</span></span>'
  syntax:
    content: 'function updateCheckpointDataFromEventData(eventData: EventData)'
    parameters:
    - id: eventData
      type:
      - EventData
      description: >
        <span data-ttu-id="7a744-116">Les données d’événement reçues à partir de la EventHubReceiver.</span><span class="sxs-lookup"><span data-stu-id="7a744-116">The event data received from the EventHubReceiver.</span></span>
  package: azure-event-processor-host
- uid: azure-event-processor-host.PartitionContext.updateCheckpointInfoFromLease
  name: updateCheckpointInfoFromLease
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="7a744-117">Met à jour les données de point de contrôle à partir du bail détenu.</span><span class="sxs-lookup"><span data-stu-id="7a744-117">Updates the checkpoint data from the owned lease.</span></span>
  syntax:
    content: function updateCheckpointInfoFromLease()
    parameters: []
    return:
      type:
      - Promise<azure-event-processor-host.CheckpointInfo>
  package: azure-event-processor-host
references:
- uid: azure-event-processor-host.BlobLease
  spec.typeScript:
  - name: BlobLease
    fullName: BlobLease
    uid: azure-event-processor-host.BlobLease
- uid: Promise<azure-event-processor-host.CheckpointInfo | void>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: CheckpointInfo
    fullName: CheckpointInfo
    uid: azure-event-processor-host.CheckpointInfo
  - name: " | void>"
    fullName: " | void>"
- uid: Promise<azure-event-processor-host.CheckpointInfo>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: CheckpointInfo
    fullName: CheckpointInfo
    uid: azure-event-processor-host.CheckpointInfo
  - name: '>'
    fullName: '>'
