### YamlMime:UniversalReference
ms.openlocfilehash: 99d34b9f67f4793f59a448d80cf88796f9b44ae1
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 08/13/2018
ms.locfileid: "40056624"
items:
- uid: documentdb.DocumentClient
  id: documentdb.DocumentClient
  name: DocumentClient
  summary: >-
    Fournit une représentation logique côté client du compte de base de données Azure Cosmos DB.

    Ce client est utilisé pour configurer et exécuter des requêtes dans le service de base de données Azure Cosmos DB.
  fullName: documentdb.DocumentClient
  type: Class
  children:
  - documentdb.DocumentClient.#ctor
  - documentdb.DocumentClient#getWriteEndpoint
  - documentdb.DocumentClient#getReadEndpoint
  - documentdb.DocumentClient#createDatabase
  - documentdb.DocumentClient#createCollection
  - documentdb.DocumentClient#createDocument
  - documentdb.DocumentClient#createAttachment
  - documentdb.DocumentClient#createUser
  - documentdb.DocumentClient#createPermission
  - documentdb.DocumentClient#createTrigger
  - documentdb.DocumentClient#createUserDefinedFunction
  - documentdb.DocumentClient#createStoredProcedure
  - documentdb.DocumentClient#createAttachmentAndUploadMedia
  - documentdb.DocumentClient#readDatabase
  - documentdb.DocumentClient#readCollection
  - documentdb.DocumentClient#readDocument
  - documentdb.DocumentClient#readAttachment
  - documentdb.DocumentClient#readUser
  - documentdb.DocumentClient#readPermission
  - documentdb.DocumentClient#readTrigger
  - documentdb.DocumentClient#readUserDefinedFunction
  - documentdb.DocumentClient#readStoredProcedure
  - documentdb.DocumentClient#readConflict
  - documentdb.DocumentClient#readDatabases
  - documentdb.DocumentClient#readCollections
  - documentdb.DocumentClient#readDocuments
  - documentdb.DocumentClient#readPartitionKeyRanges
  - documentdb.DocumentClient#readAttachments
  - documentdb.DocumentClient#readUsers
  - documentdb.DocumentClient#readPermissions
  - documentdb.DocumentClient#readTriggers
  - documentdb.DocumentClient#readUserDefinedFunctions
  - documentdb.DocumentClient#readStoredProcedures
  - documentdb.DocumentClient#readConflicts
  - documentdb.DocumentClient#queryDatabases
  - documentdb.DocumentClient#queryCollections
  - documentdb.DocumentClient#queryDocuments
  - documentdb.DocumentClient#queryPartitionKeyRanges
  - documentdb.DocumentClient#queryAttachments
  - documentdb.DocumentClient#queryUsers
  - documentdb.DocumentClient#queryPermissions
  - documentdb.DocumentClient#queryTriggers
  - documentdb.DocumentClient#queryUserDefinedFunctions
  - documentdb.DocumentClient#queryStoredProcedures
  - documentdb.DocumentClient#queryConflicts
  - documentdb.DocumentClient#deleteDatabase
  - documentdb.DocumentClient#deleteCollection
  - documentdb.DocumentClient#deleteDocument
  - documentdb.DocumentClient#deleteAttachment
  - documentdb.DocumentClient#deleteUser
  - documentdb.DocumentClient#deletePermission
  - documentdb.DocumentClient#deleteTrigger
  - documentdb.DocumentClient#deleteUserDefinedFunction
  - documentdb.DocumentClient#deleteStoredProcedure
  - documentdb.DocumentClient#deleteConflict
  - documentdb.DocumentClient#replaceCollection
  - documentdb.DocumentClient#replaceDocument
  - documentdb.DocumentClient#replaceAttachment
  - documentdb.DocumentClient#replaceUser
  - documentdb.DocumentClient#replacePermission
  - documentdb.DocumentClient#replaceTrigger
  - documentdb.DocumentClient#replaceUserDefinedFunction
  - documentdb.DocumentClient#replaceStoredProcedure
  - documentdb.DocumentClient#upsertDocument
  - documentdb.DocumentClient#upsertAttachment
  - documentdb.DocumentClient#upsertUser
  - documentdb.DocumentClient#upsertPermission
  - documentdb.DocumentClient#upsertTrigger
  - documentdb.DocumentClient#upsertUserDefinedFunction
  - documentdb.DocumentClient#upsertStoredProcedure
  - documentdb.DocumentClient#upsertAttachmentAndUploadMedia
  - documentdb.DocumentClient#readMedia
  - documentdb.DocumentClient#updateMedia
  - documentdb.DocumentClient#executeStoredProcedure
  - documentdb.DocumentClient#replaceOffer
  - documentdb.DocumentClient#readOffer
  - documentdb.DocumentClient#readOffers
  - documentdb.DocumentClient#queryOffers
  - documentdb.DocumentClient#getDatabaseAccount
  - documentdb.DocumentClient#getSessionToken
  langs:
  - js
- id: documentdb.DocumentClient.#ctor
  uid: documentdb.DocumentClient.#ctor
  parent: documentdb.DocumentClient
  name: DocumentClient(urlConnection, auth, connectionPolicy, consistencyLevel)
  fullName: documentdb.DocumentClient.DocumentClient(urlConnection, auth, connectionPolicy, consistencyLevel)
  summary: >-
    Fournit une représentation logique côté client du compte de base de données Azure Cosmos DB.

    Ce client est utilisé pour configurer et exécuter des requêtes dans le service de base de données Azure Cosmos DB.
  type: Constructor
  syntax:
    parameters:
    - id: urlConnection
      type:
      - string
      description: Le point de terminaison de service à utiliser pour créer le client.
    - id: auth
      type:
      - object
      description: Un objet qui est utilisé pour authentifier des demandes et devez contient une des options
    - id: auth.masterKey
      type:
      - string
      description: La clé principale de l’autorisation à utiliser pour créer le client.
      optional: true
    - id: auth.resourceTokens
      type:
      - Object
      description: Objet qui contient des jetons de ressources. Clés de l’objet sont des ID de ressource et les valeurs sont les jetons de ressource.
      optional: true
    - id: auth.permissionFeed
      type:
      - Array
      description: Un tableau de <xref:Permission> objets.
      optional: true
    - id: connectionPolicy
      type:
      - object
      description: Une instance de <xref:ConnectionPolicy> classe. Ce paramètre est facultatif et le paramètre connectionPolicy par défaut sera utilisé si omise.
      optional: true
    - id: consistencyLevel
      type:
      - string
      description: Un paramètre facultatif qui représente le niveau de cohérence. Il peut prendre n’importe quelle valeur à partir de <xref:ConsistencyLevel>.
      optional: true
    content: new DocumentClient(urlConnection, auth, connectionPolicy, consistencyLevel)
  langs:
  - js
- uid: documentdb.DocumentClient#getWriteEndpoint
  id: documentdb.DocumentClient#getWriteEndpoint
  parent: documentdb.DocumentClient
  name: getWriteEndpoint(callback)
  summary: Obtient le point de terminaison d’écriture actuel d’un compte de base de données géo-répliquée.
  fullName: documentdb.DocumentClient.getWriteEndpoint(callback)
  type: Function
  syntax:
    parameters:
    - id: callback
      type:
      - function
      description: La fonction de rappel qui accepte endpoint(string) en tant qu’argument.
    content: function getWriteEndpoint(callback)
  langs:
  - js
- uid: documentdb.DocumentClient#getReadEndpoint
  id: documentdb.DocumentClient#getReadEndpoint
  parent: documentdb.DocumentClient
  name: getReadEndpoint(callback)
  summary: Obtient le curent lire le point de terminaison pour un compte de base de données géo-répliquée.
  fullName: documentdb.DocumentClient.getReadEndpoint(callback)
  type: Function
  syntax:
    parameters:
    - id: callback
      type:
      - function
      description: La fonction de rappel qui accepte endpoint(string) en tant qu’argument.
    content: function getReadEndpoint(callback)
  langs:
  - js
- uid: documentdb.DocumentClient#createDatabase
  id: documentdb.DocumentClient#createDatabase
  parent: documentdb.DocumentClient
  name: createDatabase(body, options, callback)
  summary: >-
    Envoyer une demande de création d’une base de données.

    <p>
     Une base de données gère les utilisateurs, autorisations et un ensemble de collections.  <br>
     Chaque compte de base de données Azure Cosmos DB est en mesure de prendre en charge plusieurs indépendantes nommées des bases de données, avec la base de données qui est le conteneur logique pour les données. <br>
     Chaque base de données se compose d’un ou plusieurs regroupements, chacun d'entre eux contenant à son tour un ou plusieurs documents. Dans la mesure où les bases de données sont une une ressource d’administration, la clé principale du Service sera requis pour accéder à et de mener à bien une action à l’aide de l’API de l’utilisateur. <br>
    </p>
  fullName: documentdb.DocumentClient.createDatabase(body, options, callback)
  type: Function
  syntax:
    parameters:
    - id: body
      type:
      - Object
      description: Un objet json qui représente la base de données doit être créé.
    - id: body.id
      type:
      - string
      description: Id de la base de données.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Les options de requête.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Le rappel pour la demande.
    content: function createDatabase(body, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#createCollection
  id: documentdb.DocumentClient#createCollection
  parent: documentdb.DocumentClient
  name: createCollection(databaseLink, body, options, callback)
  summary: >-
    Crée une collection.

    <p>

    Une collection est un conteneur nommé logique pour les documents. <br>

    Une base de données peut contenir zéro ou plusieurs collections nommées et chaque collection se compose de zéro ou plusieurs documents JSON. <br>

    En cours sans schéma, les documents dans une collection n’avez pas besoin de partager la même structure ou champs. <br>

    Étant donné que les collections sont des ressources d’application, ils peuvent être autorisés à l’aide de la clé principale ou des clés de ressources. <br>

    </p>
  fullName: documentdb.DocumentClient.createCollection(databaseLink, body, options, callback)
  type: Function
  syntax:
    parameters:
    - id: databaseLink
      type:
      - string
      description: Le lien réflexif de la base de données.
    - id: body
      type:
      - object
      description: Représente le corps de la collection.
    - id: body.id
      type:
      - string
      description: L’id de la collection.
    - id: body.indexingPolicy
      type:
      - documentdb.IndexingPolicy
      description: La stratégie d’indexation associée à la collection.
    - id: body.defaultTtl
      type:
      - number
      description: La valeur par défaut durée de vie en secondes pour les documents dans une collection.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Les options de requête.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Le rappel pour la demande.
    content: function createCollection(databaseLink, body, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#createDocument
  id: documentdb.DocumentClient#createDocument
  parent: documentdb.DocumentClient
  name: createDocument(documentsFeedOrDatabaseLink, body, options, callback)
  summary: >-
    Créez un document.

    <p>

    Il n’existe aucun schéma de jeu pour les documents JSON. Ils peuvent contenir n’importe quel nombre de propriétés personnalisées ainsi qu’une liste facultative de pièces jointes. <br>

    Un Document est une ressource d’application et peut être autorisé à l’aide de la clé principale ou des clés de ressources

    </p>
  fullName: documentdb.DocumentClient.createDocument(documentsFeedOrDatabaseLink, body, options, callback)
  type: Function
  syntax:
    parameters:
    - id: documentsFeedOrDatabaseLink
      type:
      - string
      description: Le lien de la collection ou d’un lien de la base de données si vous utilisez un programme de résolution de partition
    - id: body
      type:
      - object
      description: Représente le corps du document. Peut contenir n’importe quel nombre de propriétés de défini par l’utilisateur.
    - id: body.id
      type:
      - string
      description: L’id du document, doit être unique pour chaque document.
      optional: true
    - id: body.ttl
      type:
      - number
      description: La durée de vie en secondes du document.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Les options de requête.
      optional: true
    - id: options.disableAutomaticIdGeneration
      type:
      - boolean
      description: Désactive la génération de code automatique. Si l’id est manquant dans le corps et cette option a la valeur true, une erreur sera retournée.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Le rappel pour la demande.
    content: function createDocument(documentsFeedOrDatabaseLink, body, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#createAttachment
  id: documentdb.DocumentClient#createAttachment
  parent: documentdb.DocumentClient
  name: createAttachment(documentLink, body, options, callback)
  summary: >-
    Créez une pièce jointe pour l’objet document.

    <p>

    Chaque document peut contenir zéro ou plusieurs pièces jointes. Les pièces jointes peuvent être de n’importe quel type MIME - texte, image, des données binaires. <br>

    Celles-ci sont stockées en externe dans stockage Blob Azure. Les pièces jointes sont automatiquement supprimés lorsque le document parent est supprimé.

    </P>
  fullName: documentdb.DocumentClient.createAttachment(documentLink, body, options, callback)
  type: Function
  syntax:
    parameters:
    - id: documentLink
      type:
      - string
      description: Le lien réflexif du document.
    - id: body
      type:
      - Object
      description: Les métadonnées le définit le support de pièce jointe aimer le média, contentType. Il peut inclure toutes les autres propriétés dans les métadonnées.
    - id: body.contentType
      type:
      - string
      description: Le contentType MIME de la pièce jointe.
    - id: body.media
      type:
      - string
      description: Lien média associé au contenu de pièce jointe.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Les options de requête.
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Le rappel pour la demande.
    content: function createAttachment(documentLink, body, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#createUser
  id: documentdb.DocumentClient#createUser
  parent: documentdb.DocumentClient
  name: createUser(databaseLink, body, options, callback)
  summary: Créer un utilisateur de base de données.
  fullName: documentdb.DocumentClient.createUser(databaseLink, body, options, callback)
  type: Function
  syntax:
    parameters:
    - id: databaseLink
      type:
      - string
      description: Le lien réflexif de la base de données.
    - id: body
      type:
      - object
      description: Représente le corps de l’utilisateur.
    - id: body.id
      type:
      - string
      description: L’id de l’utilisateur.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Les options de requête.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Le rappel pour la demande.
    content: function createUser(databaseLink, body, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#createPermission
  id: documentdb.DocumentClient#createPermission
  parent: documentdb.DocumentClient
  name: createPermission(userLink, body, options, callback)
  summary: >-
    Créer une autorisation.

    <p> Une autorisation représente un autorisation d’accéder à une ressource spécifique, par exemple, documents ou collections par utilisateur.  </p>
  fullName: documentdb.DocumentClient.createPermission(userLink, body, options, callback)
  type: Function
  syntax:
    parameters:
    - id: userLink
      type:
      - string
      description: Le lien réflexif de l’utilisateur.
    - id: body
      type:
      - object
      description: Représente le corps de l’autorisation.
    - id: body.id
      type:
      - string
      description: L’id de l’autorisation
    - id: body.permissionMode
      type:
      - string
      description: Le mode de l’autorisation, doit être une valeur de <xref:documentdb.PermissionMode>
    - id: body.resource
      type:
      - string
      description: Le lien de la ressource qui s’appliquera à l’autorisation.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Les options de requête.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Le rappel pour la demande.
    content: function createPermission(userLink, body, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#createTrigger
  id: documentdb.DocumentClient#createTrigger
  parent: documentdb.DocumentClient
  name: createTrigger(collectionLink, trigger, options, callback)
  summary: >-
    Créer un déclencheur.

    <p>

    Azure Cosmos DB prend en charge les versions antérieures et les déclencheurs de publication définis dans JavaScript à exécuter sur crée, met à jour et le supprime. <br>

    Pour plus d’informations, consultez la documentation d’API JavaScript côté serveur.

    </p>
  fullName: documentdb.DocumentClient.createTrigger(collectionLink, trigger, options, callback)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Le lien réflexif de la collection.
    - id: trigger
      type:
      - object
      description: Représente le corps du déclencheur.
    - id: trigger.id
      type:
      - string
      description: L’id du déclencheur.
    - id: trigger.triggerType
      type:
      - string
      description: Le type du déclencheur, doit être une des valeurs de <xref:documentdb.TriggerType>.
    - id: trigger.triggerOperation
      type:
      - string
      description: L’opération du déclencheur, doit être une des valeurs de <xref:documentdb.TriggerOperation>.
    - id: trigger.serverScript
      type:
      - function
      description: Le corps du déclencheur, elle peut être passée comme champ de chaîne trop.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Les options de requête.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Le rappel pour la demande.
    content: function createTrigger(collectionLink, trigger, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#createUserDefinedFunction
  id: documentdb.DocumentClient#createUserDefinedFunction
  parent: documentdb.DocumentClient
  name: createUserDefinedFunction(collectionLink, udf, options, callback)
  summary: >-
    Créer une UserDefinedFunction.

    <p>

    Azure Cosmos DB prend en charge les fonctions UDF JavaScript qui peut être utilisé à l’intérieur des requêtes, des procédures stockées et des déclencheurs. <br>

    Pour plus d’informations, consultez la documentation d’API JavaScript côté serveur.

    </p>
  fullName: documentdb.DocumentClient.createUserDefinedFunction(collectionLink, udf, options, callback)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Le lien réflexif de la collection.
    - id: udf
      type:
      - object
      description: Représente le corps de l’userDefinedFunction.
    - id: udf.id
      type:
      - string
      description: Id de l’udf.
    - id: udf.userDefinedFunctionType
      type:
      - string
      description: Le type de l’udf, il doit être une des valeurs de <xref:documentdb.UserDefinedFunctionType>
    - id: udf.serverScript
      type:
      - function
      description: Représente le corps de la fonction udf, elle peut être passée comme champ de chaîne trop.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Les options de requête.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Le rappel pour la demande.
    content: function createUserDefinedFunction(collectionLink, udf, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#createStoredProcedure
  id: documentdb.DocumentClient#createStoredProcedure
  parent: documentdb.DocumentClient
  name: createStoredProcedure(collectionLink, sproc, options, callback)
  summary: >-
    Créer une procédure stockée.

    <p>

    Azure Cosmos DB permet des procédures stockées doit être exécuté dans le niveau de stockage, directement par rapport à une collection de documents. Le script <br>

    est exécutée sous les transactions ACID sur la partition de stockage principal de la collection spécifiée. Pour plus d’informations, <br>

    consultez la documentation d’API JavaScript côté serveur.

    </p>
  fullName: documentdb.DocumentClient.createStoredProcedure(collectionLink, sproc, options, callback)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Le lien réflexif de la collection.
    - id: sproc
      type:
      - object
      description: Représente le corps de la procédure stockée.
    - id: sproc.id
      type:
      - string
      description: L’id de la procédure stockée.
    - id: sproc.serverScript
      type:
      - function
      description: Le corps de la procédure stockée, elle peut être passée comme champ de chaîne trop.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Les options de requête.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Le rappel pour la demande.
    content: function createStoredProcedure(collectionLink, sproc, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#createAttachmentAndUploadMedia
  id: documentdb.DocumentClient#createAttachmentAndUploadMedia
  parent: documentdb.DocumentClient
  name: createAttachmentAndUploadMedia(documentLink, readableStream, options, callback)
  summary: Créez une pièce jointe pour l’objet document.
  fullName: documentdb.DocumentClient.createAttachmentAndUploadMedia(documentLink, readableStream, options, callback)
  type: Function
  syntax:
    parameters:
    - id: documentLink
      type:
      - string
      description: Le lien réflexif du document.
    - id: readableStream
      type:
      - documentdb.stream.Readable
      description: flux de données qui représente le média lui-même qui doit être chargé.
    - id: options
      type:
      - documentdb.MediaOptions
      description: Les options de requête.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Le rappel pour la demande.
    content: function createAttachmentAndUploadMedia(documentLink, readableStream, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readDatabase
  id: documentdb.DocumentClient#readDatabase
  parent: documentdb.DocumentClient
  name: readDatabase(databaseLink, options, callback)
  summary: Lit une base de données.
  fullName: documentdb.DocumentClient.readDatabase(databaseLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: databaseLink
      type:
      - string
      description: Le lien réflexif de la base de données.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Les options de requête.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Le rappel pour la demande.
    content: function readDatabase(databaseLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readCollection
  id: documentdb.DocumentClient#readCollection
  parent: documentdb.DocumentClient
  name: readCollection(collectionLink, options, callback)
  summary: Lit une collection.
  fullName: documentdb.DocumentClient.readCollection(collectionLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Le lien réflexif de la collection.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Les options de requête.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Le rappel pour la demande.
    content: function readCollection(collectionLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readDocument
  id: documentdb.DocumentClient#readDocument
  parent: documentdb.DocumentClient
  name: readDocument(documentLink, options, callback)
  summary: Lit un document.
  fullName: documentdb.DocumentClient.readDocument(documentLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: documentLink
      type:
      - string
      description: Le lien réflexif du document.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Les options de requête.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Le rappel pour la demande.
    content: function readDocument(documentLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readAttachment
  id: documentdb.DocumentClient#readAttachment
  parent: documentdb.DocumentClient
  name: readAttachment(attachmentLink, options, callback)
  summary: Lit un objet de pièce jointe.
  fullName: documentdb.DocumentClient.readAttachment(attachmentLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: attachmentLink
      type:
      - string
      description: Le lien réflexif de la pièce jointe.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Les options de requête.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Le rappel pour la demande.
    content: function readAttachment(attachmentLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readUser
  id: documentdb.DocumentClient#readUser
  parent: documentdb.DocumentClient
  name: readUser(userLink, options, callback)
  summary: Lit un utilisateur.
  fullName: documentdb.DocumentClient.readUser(userLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: userLink
      type:
      - string
      description: Le lien réflexif de l’utilisateur.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Les options de requête.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Le rappel pour la demande.
    content: function readUser(userLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readPermission
  id: documentdb.DocumentClient#readPermission
  parent: documentdb.DocumentClient
  name: readPermission(permissionLink, options, callback)
  summary: Lit une autorisation.
  fullName: documentdb.DocumentClient.readPermission(permissionLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: permissionLink
      type:
      - string
      description: Le lien réflexif de l’autorisation.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Les options de requête.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Le rappel pour la demande.
    content: function readPermission(permissionLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readTrigger
  id: documentdb.DocumentClient#readTrigger
  parent: documentdb.DocumentClient
  name: readTrigger(triggerLink, options, callback)
  summary: Lit un objet de déclencheur.
  fullName: documentdb.DocumentClient.readTrigger(triggerLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: triggerLink
      type:
      - string
      description: Le lien réflexif du déclencheur.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Les options de requête.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Le rappel pour la demande.
    content: function readTrigger(triggerLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readUserDefinedFunction
  id: documentdb.DocumentClient#readUserDefinedFunction
  parent: documentdb.DocumentClient
  name: readUserDefinedFunction(udfLink, options, callback)
  summary: Lit un objet de fonction udf.
  fullName: documentdb.DocumentClient.readUserDefinedFunction(udfLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: udfLink
      type:
      - string
      description: Le lien réflexif de l’utilisateur, fonction définie par.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Les options de requête.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Le rappel pour la demande.
    content: function readUserDefinedFunction(udfLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readStoredProcedure
  id: documentdb.DocumentClient#readStoredProcedure
  parent: documentdb.DocumentClient
  name: readStoredProcedure(sprocLink, options, callback)
  summary: Lit un objet StoredProcedure.
  fullName: documentdb.DocumentClient.readStoredProcedure(sprocLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: sprocLink
      type:
      - string
      description: Le lien réflexif de la procédure stockée.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Les options de requête.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Le rappel pour la demande.
    content: function readStoredProcedure(sprocLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readConflict
  id: documentdb.DocumentClient#readConflict
  parent: documentdb.DocumentClient
  name: readConflict(conflictLink, options, callback)
  summary: Lit un conflit.
  fullName: documentdb.DocumentClient.readConflict(conflictLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: conflictLink
      type:
      - string
      description: Le lien réflexif du conflit.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Les options de requête.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Le rappel pour la demande.
    content: function readConflict(conflictLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readDatabases
  id: documentdb.DocumentClient#readDatabases
  parent: documentdb.DocumentClient
  name: readDatabases(options)
  summary: Répertorie toutes les bases de données.
  fullName: documentdb.DocumentClient.readDatabases(options)
  type: Function
  syntax:
    parameters:
    - id: options
      type:
      - documentdb.FeedOptions
      description: Les options de flux.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- Une instance de queryIterator pour gérer des flux de lecture.'
    content: function readDatabases(options)
  langs:
  - js
- uid: documentdb.DocumentClient#readCollections
  id: documentdb.DocumentClient#readCollections
  parent: documentdb.DocumentClient
  name: readCollections(databaseLink, options)
  summary: Obtenir toutes les collections dans cette base de données.
  fullName: documentdb.DocumentClient.readCollections(databaseLink, options)
  type: Function
  syntax:
    parameters:
    - id: databaseLink
      type:
      - string
      description: Le lien réflexif de la base de données.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Les options de flux.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- Une instance de queryIterator pour gérer des flux de lecture.'
    content: function readCollections(databaseLink, options)
  langs:
  - js
- uid: documentdb.DocumentClient#readDocuments
  id: documentdb.DocumentClient#readDocuments
  parent: documentdb.DocumentClient
  name: readDocuments(collectionLink, options)
  summary: Obtenir tous les documents dans cette collection.
  fullName: documentdb.DocumentClient.readDocuments(collectionLink, options)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Le lien réflexif de la collection.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Les options de flux.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- Une instance de queryIterator pour gérer des flux de lecture.'
    content: function readDocuments(collectionLink, options)
  langs:
  - js
- uid: documentdb.DocumentClient#readPartitionKeyRanges
  id: documentdb.DocumentClient#readPartitionKeyRanges
  parent: documentdb.DocumentClient
  name: readPartitionKeyRanges(collectionLink, options)
  summary: Obtenir une Partition de toutes les plages de clé dans cette collection.
  fullName: documentdb.DocumentClient.readPartitionKeyRanges(collectionLink, options)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Le lien réflexif de la collection.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Les options de flux.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- Une instance de queryIterator pour gérer des flux de lecture.'
    content: function readPartitionKeyRanges(collectionLink, options)
  langs:
  - js
- uid: documentdb.DocumentClient#readAttachments
  id: documentdb.DocumentClient#readAttachments
  parent: documentdb.DocumentClient
  name: readAttachments(documentLink, options)
  summary: Obtenir toutes les pièces jointes pour ce document.
  fullName: documentdb.DocumentClient.readAttachments(documentLink, options)
  type: Function
  syntax:
    parameters:
    - id: documentLink
      type:
      - string
      description: Le lien réflexif du document.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Les options de flux.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- Une instance de queryIterator pour gérer des flux de lecture.'
    content: function readAttachments(documentLink, options)
  langs:
  - js
- uid: documentdb.DocumentClient#readUsers
  id: documentdb.DocumentClient#readUsers
  parent: documentdb.DocumentClient
  name: readUsers(databaseLink, feedOptions)
  summary: Obtenir tous les utilisateurs dans cette base de données.
  fullName: documentdb.DocumentClient.readUsers(databaseLink, feedOptions)
  type: Function
  syntax:
    parameters:
    - id: databaseLink
      type:
      - string
      description: Le lien réflexif de la base de données.
    - id: feedOptions
      type:
      - documentdb.FeedOptions
      description: Les options de flux.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- Une instance de queryIterator pour gérer des flux de lecture.'
    content: function readUsers(databaseLink, feedOptions)
  langs:
  - js
- uid: documentdb.DocumentClient#readPermissions
  id: documentdb.DocumentClient#readPermissions
  parent: documentdb.DocumentClient
  name: readPermissions(userLink, feedOptions)
  summary: Obtenir toutes les autorisations pour cet utilisateur.
  fullName: documentdb.DocumentClient.readPermissions(userLink, feedOptions)
  type: Function
  syntax:
    parameters:
    - id: userLink
      type:
      - string
      description: Le lien réflexif de l’utilisateur.
    - id: feedOptions
      type:
      - documentdb.FeedOptions
      description: Les options de flux.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- Une instance de queryIterator pour gérer des flux de lecture.'
    content: function readPermissions(userLink, feedOptions)
  langs:
  - js
- uid: documentdb.DocumentClient#readTriggers
  id: documentdb.DocumentClient#readTriggers
  parent: documentdb.DocumentClient
  name: readTriggers(collectionLink, options)
  summary: Obtenir tous les déclencheurs dans cette collection.
  fullName: documentdb.DocumentClient.readTriggers(collectionLink, options)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Le lien réflexif de la collection.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Les options de flux.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- Une instance de queryIterator pour gérer des flux de lecture.'
    content: function readTriggers(collectionLink, options)
  langs:
  - js
- uid: documentdb.DocumentClient#readUserDefinedFunctions
  id: documentdb.DocumentClient#readUserDefinedFunctions
  parent: documentdb.DocumentClient
  name: readUserDefinedFunctions(collectionLink, options)
  summary: Obtenir tous les UserDefinedFunctions dans cette collection.
  fullName: documentdb.DocumentClient.readUserDefinedFunctions(collectionLink, options)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Le lien réflexif de la collection.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Les options de flux.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- Une instance de queryIterator pour gérer des flux de lecture.'
    content: function readUserDefinedFunctions(collectionLink, options)
  langs:
  - js
- uid: documentdb.DocumentClient#readStoredProcedures
  id: documentdb.DocumentClient#readStoredProcedures
  parent: documentdb.DocumentClient
  name: readStoredProcedures(collectionLink, options)
  summary: Obtenir tous les StoredProcedures dans cette collection.
  fullName: documentdb.DocumentClient.readStoredProcedures(collectionLink, options)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Le lien réflexif de la collection.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Les options de flux.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- Une instance de queryIterator pour gérer des flux de lecture.'
    content: function readStoredProcedures(collectionLink, options)
  langs:
  - js
- uid: documentdb.DocumentClient#readConflicts
  id: documentdb.DocumentClient#readConflicts
  parent: documentdb.DocumentClient
  name: readConflicts(collectionLink, options)
  summary: Obtenir tous les conflits dans cette collection.
  fullName: documentdb.DocumentClient.readConflicts(collectionLink, options)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Le lien réflexif de la collection.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Les options de flux.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- Une instance de QueryIterator pour gérer des flux de lecture.'
    content: function readConflicts(collectionLink, options)
  langs:
  - js
- uid: documentdb.DocumentClient#queryDatabases
  id: documentdb.DocumentClient#queryDatabases
  parent: documentdb.DocumentClient
  name: queryDatabases(query, options)
  summary: Répertorie toutes les bases de données qui répondent à une requête.
  fullName: documentdb.DocumentClient.queryDatabases(query, options)
  type: Function
  syntax:
    parameters:
    - id: query
      type:
      - documentdb.SqlQuerySpec
      - string
      description: Une requête SQL.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Les options de flux.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- Une instance de QueryIterator pour gérer des flux de lecture.'
    content: function queryDatabases(query, options)
  langs:
  - js
- uid: documentdb.DocumentClient#queryCollections
  id: documentdb.DocumentClient#queryCollections
  parent: documentdb.DocumentClient
  name: queryCollections(databaseLink, query, options)
  summary: Interroger les collections de la base de données.
  fullName: documentdb.DocumentClient.queryCollections(databaseLink, query, options)
  type: Function
  syntax:
    parameters:
    - id: databaseLink
      type:
      - string
      description: Le lien réflexif de la base de données.
    - id: query
      type:
      - documentdb.SqlQuerySpec
      - string
      description: Une requête SQL.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Représente les options de flux.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- Une instance de queryIterator pour gérer des flux de lecture.'
    content: function queryCollections(databaseLink, query, options)
  langs:
  - js
- uid: documentdb.DocumentClient#queryDocuments
  id: documentdb.DocumentClient#queryDocuments
  parent: documentdb.DocumentClient
  name: queryDocuments(documentsFeedOrDatabaseLink, query, options)
  summary: Interroger les documents de la collection.
  fullName: documentdb.DocumentClient.queryDocuments(documentsFeedOrDatabaseLink, query, options)
  type: Function
  syntax:
    parameters:
    - id: documentsFeedOrDatabaseLink
      type:
      - string
      description: Le lien de la collection ou d’un lien de la base de données si vous utilisez un programme de résolution de partition
    - id: query
      type:
      - documentdb.SqlQuerySpec
      - string
      description: Une requête SQL.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Représente les options de flux.
      optional: true
    - id: options.partitionKey
      type:
      - object
      description: Clé de partition facultative à utiliser avec le programme de résolution de partition
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- Une instance de queryIterator pour gérer des flux de lecture.'
    content: function queryDocuments(documentsFeedOrDatabaseLink, query, options)
  langs:
  - js
- uid: documentdb.DocumentClient#queryPartitionKeyRanges
  id: documentdb.DocumentClient#queryPartitionKeyRanges
  parent: documentdb.DocumentClient
  name: queryPartitionKeyRanges(databaseLink, query, options)
  summary: Interroger les plages de clés de partition
  fullName: documentdb.DocumentClient.queryPartitionKeyRanges(databaseLink, query, options)
  type: Function
  syntax:
    parameters:
    - id: databaseLink
      type:
      - string
      description: Le lien réflexif de la base de données.
    - id: query
      type:
      - documentdb.SqlQuerySpec
      - string
      description: Une requête SQL.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Représente les options de flux.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- Une instance de queryIterator pour gérer des flux de lecture.'
    content: function queryPartitionKeyRanges(databaseLink, query, options)
  langs:
  - js
- uid: documentdb.DocumentClient#queryAttachments
  id: documentdb.DocumentClient#queryAttachments
  parent: documentdb.DocumentClient
  name: queryAttachments(documentLink, query, options)
  summary: Interroger les pièces jointes pour le document.
  fullName: documentdb.DocumentClient.queryAttachments(documentLink, query, options)
  type: Function
  syntax:
    parameters:
    - id: documentLink
      type:
      - string
      description: Le lien réflexif du document.
    - id: query
      type:
      - documentdb.SqlQuerySpec
      - string
      description: Une requête SQL.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Représente les options de flux.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- Une instance de queryIterator pour gérer des flux de lecture.'
    content: function queryAttachments(documentLink, query, options)
  langs:
  - js
- uid: documentdb.DocumentClient#queryUsers
  id: documentdb.DocumentClient#queryUsers
  parent: documentdb.DocumentClient
  name: queryUsers(databaseLink, query, options)
  summary: Interroger les utilisateurs pour la base de données.
  fullName: documentdb.DocumentClient.queryUsers(databaseLink, query, options)
  type: Function
  syntax:
    parameters:
    - id: databaseLink
      type:
      - string
      description: Le lien réflexif de la base de données.
    - id: query
      type:
      - documentdb.SqlQuerySpec
      - string
      description: Une requête SQL.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Représente les options de flux.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- Une instance de queryIterator pour gérer des flux de lecture.'
    content: function queryUsers(databaseLink, query, options)
  langs:
  - js
- uid: documentdb.DocumentClient#queryPermissions
  id: documentdb.DocumentClient#queryPermissions
  parent: documentdb.DocumentClient
  name: queryPermissions(userLink, query, options)
  summary: L’autorisation de l’utilisateur de la requête.
  fullName: documentdb.DocumentClient.queryPermissions(userLink, query, options)
  type: Function
  syntax:
    parameters:
    - id: userLink
      type:
      - string
      description: Le lien réflexif de l’utilisateur.
    - id: query
      type:
      - documentdb.SqlQuerySpec
      - string
      description: Une requête SQL.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Représente les options de flux.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- Une instance de queryIterator pour gérer des flux de lecture.'
    content: function queryPermissions(userLink, query, options)
  langs:
  - js
- uid: documentdb.DocumentClient#queryTriggers
  id: documentdb.DocumentClient#queryTriggers
  parent: documentdb.DocumentClient
  name: queryTriggers(collectionLink, query, options)
  summary: Interroger les déclencheurs de la collection.
  fullName: documentdb.DocumentClient.queryTriggers(collectionLink, query, options)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Le lien réflexif de la collection.
    - id: query
      type:
      - documentdb.SqlQuerySpec
      - string
      description: Une requête SQL.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Représente les options de flux.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- Une instance de queryIterator pour gérer des flux de lecture.'
    content: function queryTriggers(collectionLink, query, options)
  langs:
  - js
- uid: documentdb.DocumentClient#queryUserDefinedFunctions
  id: documentdb.DocumentClient#queryUserDefinedFunctions
  parent: documentdb.DocumentClient
  name: queryUserDefinedFunctions(collectionLink, query, options)
  summary: Requête de l’utilisateur défini fonctions pour la collection.
  fullName: documentdb.DocumentClient.queryUserDefinedFunctions(collectionLink, query, options)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Le lien réflexif de la collection.
    - id: query
      type:
      - documentdb.SqlQuerySpec
      - string
      description: Une requête SQL.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Représente les options de flux.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- Une instance de queryIterator pour gérer des flux de lecture.'
    content: function queryUserDefinedFunctions(collectionLink, query, options)
  langs:
  - js
- uid: documentdb.DocumentClient#queryStoredProcedures
  id: documentdb.DocumentClient#queryStoredProcedures
  parent: documentdb.DocumentClient
  name: queryStoredProcedures(collectionLink, query, options)
  summary: Interroger le storedProcedures pour la collection.
  fullName: documentdb.DocumentClient.queryStoredProcedures(collectionLink, query, options)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Le lien réflexif de la collection.
    - id: query
      type:
      - documentdb.SqlQuerySpec
      - string
      description: Une requête SQL.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Représente les options de flux.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- Une instance de queryIterator pour gérer des flux de lecture.'
    content: function queryStoredProcedures(collectionLink, query, options)
  langs:
  - js
- uid: documentdb.DocumentClient#queryConflicts
  id: documentdb.DocumentClient#queryConflicts
  parent: documentdb.DocumentClient
  name: queryConflicts(collectionLink, query, options)
  summary: Interroger les conflits pour la collection.
  fullName: documentdb.DocumentClient.queryConflicts(collectionLink, query, options)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Le lien réflexif de la collection.
    - id: query
      type:
      - documentdb.SqlQuerySpec
      - string
      description: Une requête SQL.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Représente les options de flux.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- Une instance de queryIterator pour gérer des flux de lecture.'
    content: function queryConflicts(collectionLink, query, options)
  langs:
  - js
- uid: documentdb.DocumentClient#deleteDatabase
  id: documentdb.DocumentClient#deleteDatabase
  parent: documentdb.DocumentClient
  name: deleteDatabase(databaseLink, options, callback)
  summary: Supprimer l’objet de base de données.
  fullName: documentdb.DocumentClient.deleteDatabase(databaseLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: databaseLink
      type:
      - string
      description: Le lien réflexif de la base de données.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Les options de requête.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Le rappel pour la demande.
    content: function deleteDatabase(databaseLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#deleteCollection
  id: documentdb.DocumentClient#deleteCollection
  parent: documentdb.DocumentClient
  name: deleteCollection(collectionLink, options, callback)
  summary: Supprimer l’objet de collection.
  fullName: documentdb.DocumentClient.deleteCollection(collectionLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Le lien réflexif de la collection.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Les options de requête.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Le rappel pour la demande.
    content: function deleteCollection(collectionLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#deleteDocument
  id: documentdb.DocumentClient#deleteDocument
  parent: documentdb.DocumentClient
  name: deleteDocument(documentLink, options, callback)
  summary: Supprimer l’objet de document.
  fullName: documentdb.DocumentClient.deleteDocument(documentLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: documentLink
      type:
      - string
      description: Le lien réflexif du document.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Les options de requête.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Le rappel pour la demande.
    content: function deleteDocument(documentLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#deleteAttachment
  id: documentdb.DocumentClient#deleteAttachment
  parent: documentdb.DocumentClient
  name: deleteAttachment(attachmentLink, options, callback)
  summary: Supprimer l’objet de pièce jointe.
  fullName: documentdb.DocumentClient.deleteAttachment(attachmentLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: attachmentLink
      type:
      - string
      description: Le lien réflexif de la pièce jointe.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Les options de requête.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Le rappel pour la demande.
    content: function deleteAttachment(attachmentLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#deleteUser
  id: documentdb.DocumentClient#deleteUser
  parent: documentdb.DocumentClient
  name: deleteUser(userLink, options, callback)
  summary: Supprimer l’objet utilisateur.
  fullName: documentdb.DocumentClient.deleteUser(userLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: userLink
      type:
      - string
      description: Le lien réflexif de l’utilisateur.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Les options de requête.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Le rappel pour la demande.
    content: function deleteUser(userLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#deletePermission
  id: documentdb.DocumentClient#deletePermission
  parent: documentdb.DocumentClient
  name: deletePermission(permissionLink, options, callback)
  summary: Supprimer l’objet d’autorisation.
  fullName: documentdb.DocumentClient.deletePermission(permissionLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: permissionLink
      type:
      - string
      description: Le lien réflexif de l’autorisation.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Les options de requête.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Le rappel pour la demande.
    content: function deletePermission(permissionLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#deleteTrigger
  id: documentdb.DocumentClient#deleteTrigger
  parent: documentdb.DocumentClient
  name: deleteTrigger(triggerLink, options, callback)
  summary: Supprimer l’objet déclencheur.
  fullName: documentdb.DocumentClient.deleteTrigger(triggerLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: triggerLink
      type:
      - string
      description: Le lien réflexif du déclencheur.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Les options de requête.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Le rappel pour la demande.
    content: function deleteTrigger(triggerLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#deleteUserDefinedFunction
  id: documentdb.DocumentClient#deleteUserDefinedFunction
  parent: documentdb.DocumentClient
  name: deleteUserDefinedFunction(udfLink, options, callback)
  summary: Supprimer l’objet UserDefinedFunction.
  fullName: documentdb.DocumentClient.deleteUserDefinedFunction(udfLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: udfLink
      type:
      - string
      description: Le lien réflexif de l’utilisateur, fonction définie par.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Les options de requête.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Le rappel pour la demande.
    content: function deleteUserDefinedFunction(udfLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#deleteStoredProcedure
  id: documentdb.DocumentClient#deleteStoredProcedure
  parent: documentdb.DocumentClient
  name: deleteStoredProcedure(sprocLink, options, callback)
  summary: Supprimer l’objet StoredProcedure.
  fullName: documentdb.DocumentClient.deleteStoredProcedure(sprocLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: sprocLink
      type:
      - string
      description: Le lien réflexif de la procédure stockée.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Les options de requête.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Le rappel pour la demande.
    content: function deleteStoredProcedure(sprocLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#deleteConflict
  id: documentdb.DocumentClient#deleteConflict
  parent: documentdb.DocumentClient
  name: deleteConflict(conflictLink, options, callback)
  summary: Supprimer l’objet de conflit.
  fullName: documentdb.DocumentClient.deleteConflict(conflictLink, options, callback)
  type: Function
  syntax:
    parameters:
    - id: conflictLink
      type:
      - string
      description: Le lien réflexif du conflit.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Les options de requête.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Le rappel pour la demande.
    content: function deleteConflict(conflictLink, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#replaceCollection
  id: documentdb.DocumentClient#replaceCollection
  parent: documentdb.DocumentClient
  name: replaceCollection(collectionLink, collection, options, callback)
  summary: Remplacez la collection de documents.
  fullName: documentdb.DocumentClient.replaceCollection(collectionLink, collection, options, callback)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Le lien réflexif de la collection de documents.
    - id: collection
      type:
      - object
      description: Représente le nouveau corps de la collection Documents.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Les options de requête.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Le rappel pour la demande.
    content: function replaceCollection(collectionLink, collection, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#replaceDocument
  id: documentdb.DocumentClient#replaceDocument
  parent: documentdb.DocumentClient
  name: replaceDocument(documentLink, document, options, callback)
  summary: Remplacer l’objet de document.
  fullName: documentdb.DocumentClient.replaceDocument(documentLink, document, options, callback)
  type: Function
  syntax:
    parameters:
    - id: documentLink
      type:
      - string
      description: Le lien réflexif du document.
    - id: document
      type:
      - object
      description: Représente le corps du document.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Les options de requête.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Le rappel pour la demande.
    content: function replaceDocument(documentLink, document, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#replaceAttachment
  id: documentdb.DocumentClient#replaceAttachment
  parent: documentdb.DocumentClient
  name: replaceAttachment(attachmentLink, attachment, options, callback)
  summary: Remplacer l’objet de pièce jointe.
  fullName: documentdb.DocumentClient.replaceAttachment(attachmentLink, attachment, options, callback)
  type: Function
  syntax:
    parameters:
    - id: attachmentLink
      type:
      - string
      description: Le lien réflexif de la pièce jointe.
    - id: attachment
      type:
      - object
      description: Représente le corps de la nouvelle pièce jointe.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Les options de requête.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Le rappel pour la demande.
    content: function replaceAttachment(attachmentLink, attachment, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#replaceUser
  id: documentdb.DocumentClient#replaceUser
  parent: documentdb.DocumentClient
  name: replaceUser(userLink, user, options, callback)
  summary: Remplacez l’objet utilisateur.
  fullName: documentdb.DocumentClient.replaceUser(userLink, user, options, callback)
  type: Function
  syntax:
    parameters:
    - id: userLink
      type:
      - string
      description: Le lien réflexif de l’utilisateur.
    - id: user
      type:
      - object
      description: Représente le nouveau corps de l’utilisateur.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Les options de requête.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Le rappel pour la demande.
    content: function replaceUser(userLink, user, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#replacePermission
  id: documentdb.DocumentClient#replacePermission
  parent: documentdb.DocumentClient
  name: replacePermission(permissionLink, permission, options, callback)
  summary: Remplacez l’objet d’autorisation.
  fullName: documentdb.DocumentClient.replacePermission(permissionLink, permission, options, callback)
  type: Function
  syntax:
    parameters:
    - id: permissionLink
      type:
      - string
      description: Le lien réflexif de l’autorisation.
    - id: permission
      type:
      - object
      description: Représente le corps de la nouvelle autorisation.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Les options de requête.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Le rappel pour la demande.
    content: function replacePermission(permissionLink, permission, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#replaceTrigger
  id: documentdb.DocumentClient#replaceTrigger
  parent: documentdb.DocumentClient
  name: replaceTrigger(triggerLink, trigger, options, callback)
  summary: Remplacez l’objet déclencheur.
  fullName: documentdb.DocumentClient.replaceTrigger(triggerLink, trigger, options, callback)
  type: Function
  syntax:
    parameters:
    - id: triggerLink
      type:
      - string
      description: Le lien réflexif du déclencheur.
    - id: trigger
      type:
      - object
      description: Représente le corps du déclencheur.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Les options de requête.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Le rappel pour la demande.
    content: function replaceTrigger(triggerLink, trigger, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#replaceUserDefinedFunction
  id: documentdb.DocumentClient#replaceUserDefinedFunction
  parent: documentdb.DocumentClient
  name: replaceUserDefinedFunction(udfLink, udf, options, callback)
  summary: Remplacez l’objet UserDefinedFunction.
  fullName: documentdb.DocumentClient.replaceUserDefinedFunction(udfLink, udf, options, callback)
  type: Function
  syntax:
    parameters:
    - id: udfLink
      type:
      - string
      description: Le lien réflexif de l’utilisateur, fonction définie par.
    - id: udf
      type:
      - object
      description: Représente le corps de la nouvelle fonction udf.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Les options de requête.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Le rappel pour la demande.
    content: function replaceUserDefinedFunction(udfLink, udf, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#replaceStoredProcedure
  id: documentdb.DocumentClient#replaceStoredProcedure
  parent: documentdb.DocumentClient
  name: replaceStoredProcedure(sprocLink, sproc, options, callback)
  summary: Remplacez l’objet StoredProcedure.
  fullName: documentdb.DocumentClient.replaceStoredProcedure(sprocLink, sproc, options, callback)
  type: Function
  syntax:
    parameters:
    - id: sprocLink
      type:
      - string
      description: Le lien réflexif de la procédure stockée.
    - id: sproc
      type:
      - object
      description: Représente le corps de la nouvelle procédure stockée.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Les options de requête.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Le rappel pour la demande.
    content: function replaceStoredProcedure(sprocLink, sproc, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#upsertDocument
  id: documentdb.DocumentClient#upsertDocument
  parent: documentdb.DocumentClient
  name: upsertDocument(documentsFeedOrDatabaseLink, body, options, callback)
  summary: >-
    Upsert un document.

    <p>

    Il n’existe aucun schéma de jeu pour les documents JSON. Ils peuvent contenir n’importe quel nombre de propriétés personnalisées ainsi qu’une liste facultative de pièces jointes. <br>

    Un Document est une ressource d’application et peut être autorisé à l’aide de la clé principale ou des clés de ressources

    </p>
  fullName: documentdb.DocumentClient.upsertDocument(documentsFeedOrDatabaseLink, body, options, callback)
  type: Function
  syntax:
    parameters:
    - id: documentsFeedOrDatabaseLink
      type:
      - string
      description: Le lien de la collection ou d’un lien de la base de données si vous utilisez un programme de résolution de partition
    - id: body
      type:
      - object
      description: Représente le corps du document. Peut contenir n’importe quel nombre de propriétés de défini par l’utilisateur.
    - id: body.id
      type:
      - string
      description: L’id du document, doit être unique pour chaque document.
      optional: true
    - id: body.ttl
      type:
      - number
      description: La durée de vie en secondes du document.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Les options de requête.
      optional: true
    - id: options.disableAutomaticIdGeneration
      type:
      - boolean
      description: Désactive la génération de code automatique. Si l’id est manquant dans le corps et cette option a la valeur true, une erreur sera retournée.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Le rappel pour la demande.
    content: function upsertDocument(documentsFeedOrDatabaseLink, body, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#upsertAttachment
  id: documentdb.DocumentClient#upsertAttachment
  parent: documentdb.DocumentClient
  name: upsertAttachment(documentLink, body, options, callback)
  summary: >-
    Upsert une pièce jointe pour l’objet document.

    <p>

    Chaque document peut contenir zéro ou plusieurs pièces jointes. Les pièces jointes peuvent être de n’importe quel type MIME - texte, image, des données binaires. <br>

    Celles-ci sont stockées en externe dans stockage Blob Azure. Les pièces jointes sont automatiquement supprimés lorsque le document parent est supprimé.

    </P>
  fullName: documentdb.DocumentClient.upsertAttachment(documentLink, body, options, callback)
  type: Function
  syntax:
    parameters:
    - id: documentLink
      type:
      - string
      description: Le lien réflexif du document.
    - id: body
      type:
      - Object
      description: Les métadonnées le définit le support de pièce jointe aimer le média, contentType. Il peut inclure toutes les autres propriétés dans les métadonnées.
    - id: body.contentType
      type:
      - string
      description: Le contentType MIME de la pièce jointe.
    - id: body.media
      type:
      - string
      description: Lien média associé au contenu de pièce jointe.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Les options de requête.
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Le rappel pour la demande.
    content: function upsertAttachment(documentLink, body, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#upsertUser
  id: documentdb.DocumentClient#upsertUser
  parent: documentdb.DocumentClient
  name: upsertUser(databaseLink, body, options, callback)
  summary: Upsert un utilisateur de base de données.
  fullName: documentdb.DocumentClient.upsertUser(databaseLink, body, options, callback)
  type: Function
  syntax:
    parameters:
    - id: databaseLink
      type:
      - string
      description: Le lien réflexif de la base de données.
    - id: body
      type:
      - object
      description: Représente le corps de l’utilisateur.
    - id: body.id
      type:
      - string
      description: L’id de l’utilisateur.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Les options de requête.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Le rappel pour la demande.
    content: function upsertUser(databaseLink, body, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#upsertPermission
  id: documentdb.DocumentClient#upsertPermission
  parent: documentdb.DocumentClient
  name: upsertPermission(userLink, body, options, callback)
  summary: >-
    Upsert une autorisation.

    <p> Une autorisation représente un autorisation d’accéder à une ressource spécifique, par exemple, documents ou collections par utilisateur.  </p>
  fullName: documentdb.DocumentClient.upsertPermission(userLink, body, options, callback)
  type: Function
  syntax:
    parameters:
    - id: userLink
      type:
      - string
      description: Le lien réflexif de l’utilisateur.
    - id: body
      type:
      - object
      description: Représente le corps de l’autorisation.
    - id: body.id
      type:
      - string
      description: L’id de l’autorisation
    - id: body.permissionMode
      type:
      - string
      description: Le mode de l’autorisation, doit être une valeur de <xref:documentdb.PermissionMode>
    - id: body.resource
      type:
      - string
      description: Le lien de la ressource qui s’appliquera à l’autorisation.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Les options de requête.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Le rappel pour la demande.
    content: function upsertPermission(userLink, body, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#upsertTrigger
  id: documentdb.DocumentClient#upsertTrigger
  parent: documentdb.DocumentClient
  name: upsertTrigger(collectionLink, trigger, options, callback)
  summary: >-
    Un déclencheur d’upsert.

    <p>

    Azure Cosmos DB prend en charge les versions antérieures et les déclencheurs de publication définis dans JavaScript à exécuter sur crée, met à jour et le supprime. <br>

    Pour plus d’informations, consultez la documentation d’API JavaScript côté serveur.

    </p>
  fullName: documentdb.DocumentClient.upsertTrigger(collectionLink, trigger, options, callback)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Le lien réflexif de la collection.
    - id: trigger
      type:
      - object
      description: Représente le corps du déclencheur.
    - id: trigger.id
      type:
      - string
      description: L’id du déclencheur.
    - id: trigger.triggerType
      type:
      - string
      description: Le type du déclencheur, doit être une des valeurs de <xref:documentdb.TriggerType>.
    - id: trigger.triggerOperation
      type:
      - string
      description: L’opération du déclencheur, doit être une des valeurs de <xref:documentdb.TriggerOperation>.
    - id: trigger.serverScript
      type:
      - function
      description: Le corps du déclencheur, elle peut être passée comme champ de chaîne trop.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Les options de requête.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Le rappel pour la demande.
    content: function upsertTrigger(collectionLink, trigger, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#upsertUserDefinedFunction
  id: documentdb.DocumentClient#upsertUserDefinedFunction
  parent: documentdb.DocumentClient
  name: upsertUserDefinedFunction(collectionLink, udf, options, callback)
  summary: >-
    Upsert une UserDefinedFunction.

    <p>

    Azure Cosmos DB prend en charge les fonctions UDF JavaScript qui peut être utilisé à l’intérieur des requêtes, des procédures stockées et des déclencheurs. <br>

    Pour plus d’informations, consultez la documentation d’API JavaScript côté serveur.

    </p>
  fullName: documentdb.DocumentClient.upsertUserDefinedFunction(collectionLink, udf, options, callback)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Le lien réflexif de la collection.
    - id: udf
      type:
      - object
      description: Représente le corps de l’userDefinedFunction.
    - id: udf.id
      type:
      - string
      description: Id de l’udf.
    - id: udf.userDefinedFunctionType
      type:
      - string
      description: Le type de l’udf, il doit être une des valeurs de <xref:documentdb.UserDefinedFunctionType>
    - id: udf.serverScript
      type:
      - function
      description: Représente le corps de la fonction udf, elle peut être passée comme champ de chaîne trop.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Les options de requête.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Le rappel pour la demande.
    content: function upsertUserDefinedFunction(collectionLink, udf, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#upsertStoredProcedure
  id: documentdb.DocumentClient#upsertStoredProcedure
  parent: documentdb.DocumentClient
  name: upsertStoredProcedure(collectionLink, sproc, options, callback)
  summary: >-
    Upsert un StoredProcedure.

    <p>

    Azure Cosmos DB permet des procédures stockées doit être exécuté dans le niveau de stockage, directement par rapport à une collection de documents. Le script <br>

    est exécutée sous les transactions ACID sur la partition de stockage principal de la collection spécifiée. Pour plus d’informations, <br>

    consultez la documentation d’API JavaScript côté serveur.

    </p>
  fullName: documentdb.DocumentClient.upsertStoredProcedure(collectionLink, sproc, options, callback)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      type:
      - string
      description: Le lien réflexif de la collection.
    - id: sproc
      type:
      - object
      description: Représente le corps de la procédure stockée.
    - id: sproc.id
      type:
      - string
      description: L’id de la procédure stockée.
    - id: sproc.serverScript
      type:
      - function
      description: Le corps de la procédure stockée, elle peut être passée comme champ de chaîne trop.
    - id: options
      type:
      - documentdb.RequestOptions
      description: Les options de requête.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Le rappel pour la demande.
    content: function upsertStoredProcedure(collectionLink, sproc, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#upsertAttachmentAndUploadMedia
  id: documentdb.DocumentClient#upsertAttachmentAndUploadMedia
  parent: documentdb.DocumentClient
  name: upsertAttachmentAndUploadMedia(documentLink, readableStream, options, callback)
  summary: Upsert une pièce jointe pour l’objet document.
  fullName: documentdb.DocumentClient.upsertAttachmentAndUploadMedia(documentLink, readableStream, options, callback)
  type: Function
  syntax:
    parameters:
    - id: documentLink
      type:
      - string
      description: Le lien réflexif du document.
    - id: readableStream
      type:
      - documentdb.stream.Readable
      description: flux de données qui représente le média lui-même qui doit être chargé.
    - id: options
      type:
      - documentdb.MediaOptions
      description: Les options de requête.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Le rappel pour la demande.
    content: function upsertAttachmentAndUploadMedia(documentLink, readableStream, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readMedia
  id: documentdb.DocumentClient#readMedia
  parent: documentdb.DocumentClient
  name: readMedia(mediaLink, callback)
  summary: Lire le support pour l’objet de pièce jointe.
  fullName: documentdb.DocumentClient.readMedia(mediaLink, callback)
  type: Function
  syntax:
    parameters:
    - id: mediaLink
      type:
      - string
      description: Le lien média du média dans la pièce jointe.
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Le rappel pour la demande, le paramètre de résultats peut être une mémoire tampon ou un flux selon la valeur de <xref:documentdb.MediaReadMode>.
    content: function readMedia(mediaLink, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#updateMedia
  id: documentdb.DocumentClient#updateMedia
  parent: documentdb.DocumentClient
  name: updateMedia(mediaLink, readableStream, options, callback)
  summary: Support de la mise à jour de la pièce jointe
  fullName: documentdb.DocumentClient.updateMedia(mediaLink, readableStream, options, callback)
  type: Function
  syntax:
    parameters:
    - id: mediaLink
      type:
      - string
      description: Le lien média du média dans la pièce jointe.
    - id: readableStream
      type:
      - documentdb.stream.Readable
      description: Flux de données qui représente le média lui-même qui doit être chargé.
    - id: options
      type:
      - documentdb.MediaOptions
      description: options pour le support
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Le rappel pour la demande.
    content: function updateMedia(mediaLink, readableStream, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#executeStoredProcedure
  id: documentdb.DocumentClient#executeStoredProcedure
  parent: documentdb.DocumentClient
  name: executeStoredProcedure(sprocLink, params, options, callback)
  summary: Exécutez la procédure stockée représentée par l’objet ayant la clé de partition.
  fullName: documentdb.DocumentClient.executeStoredProcedure(sprocLink, params, options, callback)
  type: Function
  syntax:
    parameters:
    - id: sprocLink
      type:
      - string
      description: Le lien réflexif de la procédure stockée.
    - id: params
      type:
      - Array
      description: représentent les paramètres de la procédure stockée.
      optional: true
    - id: options
      type:
      - Object
      description: clé de partition
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Le rappel pour la demande.
    content: function executeStoredProcedure(sprocLink, params, options, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#replaceOffer
  id: documentdb.DocumentClient#replaceOffer
  parent: documentdb.DocumentClient
  name: replaceOffer(offerLink, offer, callback)
  summary: Remplacez l’objet offre.
  fullName: documentdb.DocumentClient.replaceOffer(offerLink, offer, callback)
  type: Function
  syntax:
    parameters:
    - id: offerLink
      type:
      - string
      description: Le lien réflexif de l’offre.
    - id: offer
      type:
      - object
      description: Représente le corps de la nouvelle offre.
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Le rappel pour la demande.
    content: function replaceOffer(offerLink, offer, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readOffer
  id: documentdb.DocumentClient#readOffer
  parent: documentdb.DocumentClient
  name: readOffer(offerLink, callback)
  summary: Lit une offre.
  fullName: documentdb.DocumentClient.readOffer(offerLink, callback)
  type: Function
  syntax:
    parameters:
    - id: offerLink
      type:
      - string
      description: Le lien réflexif de l’offre.
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Le rappel pour la demande.
    content: function readOffer(offerLink, callback)
  langs:
  - js
- uid: documentdb.DocumentClient#readOffers
  id: documentdb.DocumentClient#readOffers
  parent: documentdb.DocumentClient
  name: readOffers(options)
  summary: Répertorie toutes les offres.
  fullName: documentdb.DocumentClient.readOffers(options)
  type: Function
  syntax:
    parameters:
    - id: options
      type:
      - documentdb.FeedOptions
      description: Les options de flux.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- Une instance de queryIterator pour gérer des flux de lecture.'
    content: function readOffers(options)
  langs:
  - js
- uid: documentdb.DocumentClient#queryOffers
  id: documentdb.DocumentClient#queryOffers
  parent: documentdb.DocumentClient
  name: queryOffers(query, options)
  summary: Répertorie toutes les offres qui satisfont une requête.
  fullName: documentdb.DocumentClient.queryOffers(query, options)
  type: Function
  syntax:
    parameters:
    - id: query
      type:
      - documentdb.SqlQuerySpec
      - string
      description: Une requête SQL.
    - id: options
      type:
      - documentdb.FeedOptions
      description: Les options de flux.
      optional: true
    return:
      type:
      - documentdb.QueryIterator
      description: '- Une instance de QueryIterator pour gérer des flux de lecture.'
    content: function queryOffers(query, options)
  langs:
  - js
- uid: documentdb.DocumentClient#getDatabaseAccount
  id: documentdb.DocumentClient#getDatabaseAccount
  parent: documentdb.DocumentClient
  name: getDatabaseAccount(callback)
  summary: Obtient les informations de compte de base de données.
  fullName: documentdb.DocumentClient.getDatabaseAccount(callback)
  type: Function
  syntax:
    parameters:
    - id: options.urlConnection
      type:
      - string
      description: L’url de point de terminaison dont le compte de base de données doit être extraite. Si ce n’est pas le cas présent, actuel url de client sera utilisé.
      optional: true
    - id: callback
      type:
      - documentdb.RequestCallback
      description: Le rappel pour la demande. Le deuxième paramètre du rappel sera de type <xref:documentdb.DatabaseAccount>.
    content: function getDatabaseAccount(callback)
  langs:
  - js
- uid: documentdb.DocumentClient#getSessionToken
  id: documentdb.DocumentClient#getSessionToken
  parent: documentdb.DocumentClient
  name: getSessionToken(collectionLink)
  summary: Obtient le SessionToken pour un collectionLink donné
  fullName: documentdb.DocumentClient.getSessionToken(collectionLink)
  type: Function
  syntax:
    parameters:
    - id: collectionLink
      description: Le lien de la collection pour laquelle le jeton de session est nécessaire
    content: function getSessionToken(collectionLink)
  langs:
  - js
references:
- uid: documentdb.QueryIterator
  name: QueryIterator
  fullName: documentdb.QueryIterator
  isExternal: false
