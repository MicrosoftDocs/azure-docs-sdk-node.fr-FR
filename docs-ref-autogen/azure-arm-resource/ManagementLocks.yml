### YamlMime:UniversalReference
ms.openlocfilehash: 9c4a0bfc5a3d2b27cda43ab760be46a19ab387be
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 12/13/2018
ms.locfileid: "52014493"
items:
- uid: azure-arm-resource.ManagementLocks
  name: ManagementLocks
  fullName: ManagementLocks
  children:
  - azure-arm-resource.ManagementLocks.createOrUpdateAtResourceGroupLevel
  - azure-arm-resource.ManagementLocks.createOrUpdateAtResourceGroupLevel_2
  - azure-arm-resource.ManagementLocks.createOrUpdateAtResourceGroupLevel_1
  - azure-arm-resource.ManagementLocks.createOrUpdateAtResourceGroupLevelWithHttpOperationResponse
  - azure-arm-resource.ManagementLocks.createOrUpdateAtResourceLevel
  - azure-arm-resource.ManagementLocks.createOrUpdateAtResourceLevel_2
  - azure-arm-resource.ManagementLocks.createOrUpdateAtResourceLevel_1
  - azure-arm-resource.ManagementLocks.createOrUpdateAtResourceLevelWithHttpOperationResponse
  - azure-arm-resource.ManagementLocks.createOrUpdateAtSubscriptionLevel
  - azure-arm-resource.ManagementLocks.createOrUpdateAtSubscriptionLevel_2
  - azure-arm-resource.ManagementLocks.createOrUpdateAtSubscriptionLevel_1
  - azure-arm-resource.ManagementLocks.createOrUpdateAtSubscriptionLevelWithHttpOperationResponse
  - azure-arm-resource.ManagementLocks.createOrUpdateByScope
  - azure-arm-resource.ManagementLocks.createOrUpdateByScope_2
  - azure-arm-resource.ManagementLocks.createOrUpdateByScope_1
  - azure-arm-resource.ManagementLocks.createOrUpdateByScopeWithHttpOperationResponse
  - azure-arm-resource.ManagementLocks.deleteAtResourceGroupLevel
  - azure-arm-resource.ManagementLocks.deleteAtResourceGroupLevel_2
  - azure-arm-resource.ManagementLocks.deleteAtResourceGroupLevel_1
  - azure-arm-resource.ManagementLocks.deleteAtResourceGroupLevelWithHttpOperationResponse
  - azure-arm-resource.ManagementLocks.deleteAtResourceLevel
  - azure-arm-resource.ManagementLocks.deleteAtResourceLevel_2
  - azure-arm-resource.ManagementLocks.deleteAtResourceLevel_1
  - azure-arm-resource.ManagementLocks.deleteAtResourceLevelWithHttpOperationResponse
  - azure-arm-resource.ManagementLocks.deleteAtSubscriptionLevel
  - azure-arm-resource.ManagementLocks.deleteAtSubscriptionLevel_2
  - azure-arm-resource.ManagementLocks.deleteAtSubscriptionLevel_1
  - azure-arm-resource.ManagementLocks.deleteAtSubscriptionLevelWithHttpOperationResponse
  - azure-arm-resource.ManagementLocks.deleteByScope
  - azure-arm-resource.ManagementLocks.deleteByScope_2
  - azure-arm-resource.ManagementLocks.deleteByScope_1
  - azure-arm-resource.ManagementLocks.deleteByScopeWithHttpOperationResponse
  - azure-arm-resource.ManagementLocks.getAtResourceGroupLevel
  - azure-arm-resource.ManagementLocks.getAtResourceGroupLevel_2
  - azure-arm-resource.ManagementLocks.getAtResourceGroupLevel_1
  - azure-arm-resource.ManagementLocks.getAtResourceGroupLevelWithHttpOperationResponse
  - azure-arm-resource.ManagementLocks.getAtResourceLevel
  - azure-arm-resource.ManagementLocks.getAtResourceLevel_2
  - azure-arm-resource.ManagementLocks.getAtResourceLevel_1
  - azure-arm-resource.ManagementLocks.getAtResourceLevelWithHttpOperationResponse
  - azure-arm-resource.ManagementLocks.getAtSubscriptionLevel
  - azure-arm-resource.ManagementLocks.getAtSubscriptionLevel_2
  - azure-arm-resource.ManagementLocks.getAtSubscriptionLevel_1
  - azure-arm-resource.ManagementLocks.getAtSubscriptionLevelWithHttpOperationResponse
  - azure-arm-resource.ManagementLocks.getByScope
  - azure-arm-resource.ManagementLocks.getByScope_2
  - azure-arm-resource.ManagementLocks.getByScope_1
  - azure-arm-resource.ManagementLocks.getByScopeWithHttpOperationResponse
  - azure-arm-resource.ManagementLocks.listAtResourceGroupLevel
  - azure-arm-resource.ManagementLocks.listAtResourceGroupLevel_2
  - azure-arm-resource.ManagementLocks.listAtResourceGroupLevel_1
  - azure-arm-resource.ManagementLocks.listAtResourceGroupLevelNext
  - azure-arm-resource.ManagementLocks.listAtResourceGroupLevelNext_2
  - azure-arm-resource.ManagementLocks.listAtResourceGroupLevelNext_1
  - azure-arm-resource.ManagementLocks.listAtResourceGroupLevelNextWithHttpOperationResponse
  - azure-arm-resource.ManagementLocks.listAtResourceGroupLevelWithHttpOperationResponse
  - azure-arm-resource.ManagementLocks.listAtResourceLevel
  - azure-arm-resource.ManagementLocks.listAtResourceLevel_2
  - azure-arm-resource.ManagementLocks.listAtResourceLevel_1
  - azure-arm-resource.ManagementLocks.listAtResourceLevelNext
  - azure-arm-resource.ManagementLocks.listAtResourceLevelNext_2
  - azure-arm-resource.ManagementLocks.listAtResourceLevelNext_1
  - azure-arm-resource.ManagementLocks.listAtResourceLevelNextWithHttpOperationResponse
  - azure-arm-resource.ManagementLocks.listAtResourceLevelWithHttpOperationResponse
  - azure-arm-resource.ManagementLocks.listAtSubscriptionLevel
  - azure-arm-resource.ManagementLocks.listAtSubscriptionLevel_2
  - azure-arm-resource.ManagementLocks.listAtSubscriptionLevel_1
  - azure-arm-resource.ManagementLocks.listAtSubscriptionLevelNext
  - azure-arm-resource.ManagementLocks.listAtSubscriptionLevelNext_2
  - azure-arm-resource.ManagementLocks.listAtSubscriptionLevelNext_1
  - azure-arm-resource.ManagementLocks.listAtSubscriptionLevelNextWithHttpOperationResponse
  - azure-arm-resource.ManagementLocks.listAtSubscriptionLevelWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-arm-resource
- uid: azure-arm-resource.ManagementLocks.createOrUpdateAtResourceGroupLevel
  name: createOrUpdateAtResourceGroupLevel(string, string, ManagementLockObject, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function createOrUpdateAtResourceGroupLevel(resourceGroupName: string, lockName: string, parameters: ManagementLockObject, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Le nom du groupe de ressources à verrouiller.
    - id: lockName
      type:
      - string
      description: >
        Le nom du verrou. Le nom du verrou peut être un maximum de 260 caractères. Il ne peut pas contenir <>, %, &, :, \, ?, /, ou aucun caractère de contrôle.
    - id: parameters
      type:
      - azure-arm-resource.ManagementLockObject
      description: >
        Les paramètres de verrouillage de gestion.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-resource.ManagementLockObject>
  package: azure-arm-resource
- uid: azure-arm-resource.ManagementLocks.createOrUpdateAtResourceGroupLevel_2
  name: createOrUpdateAtResourceGroupLevel(string, string, ManagementLockObject, Object, ServiceCallback<ManagementLockObject>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function createOrUpdateAtResourceGroupLevel(resourceGroupName: string, lockName: string, parameters: ManagementLockObject, options: Object, callback: ServiceCallback<ManagementLockObject>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: lockName
      type:
      - string
      description: ''
    - id: parameters
      type:
      - azure-arm-resource.ManagementLockObject
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-resource.ManagementLockObject>
      description: ''
    return:
      type:
      - Promise<azure-arm-resource.ManagementLockObject>
  package: azure-arm-resource
- uid: azure-arm-resource.ManagementLocks.createOrUpdateAtResourceGroupLevel_1
  name: createOrUpdateAtResourceGroupLevel(string, string, ManagementLockObject, ServiceCallback<ManagementLockObject>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function createOrUpdateAtResourceGroupLevel(resourceGroupName: string, lockName: string, parameters: ManagementLockObject, callback: ServiceCallback<ManagementLockObject>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: lockName
      type:
      - string
      description: ''
    - id: parameters
      type:
      - azure-arm-resource.ManagementLockObject
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-resource.ManagementLockObject>
      description: ''
    return:
      type:
      - Promise<azure-arm-resource.ManagementLockObject>
  package: azure-arm-resource
- uid: azure-arm-resource.ManagementLocks.createOrUpdateAtResourceGroupLevelWithHttpOperationResponse
  name: createOrUpdateAtResourceGroupLevelWithHttpOperationResponse(string, string, ManagementLockObject, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function createOrUpdateAtResourceGroupLevelWithHttpOperationResponse(resourceGroupName: string, lockName: string, parameters: ManagementLockObject, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Le nom du groupe de ressources à verrouiller.
    - id: lockName
      type:
      - string
      description: >
        Le nom du verrou. Le nom du verrou peut être un maximum de 260 caractères. Il ne peut pas contenir <>, %, &, :, \, ?, /, ou aucun caractère de contrôle.
    - id: parameters
      type:
      - azure-arm-resource.ManagementLockObject
      description: >
        Les paramètres de verrouillage de gestion.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-resource.ManagementLockObject>>
  package: azure-arm-resource
- uid: azure-arm-resource.ManagementLocks.createOrUpdateAtResourceLevel
  name: createOrUpdateAtResourceLevel(string, string, string, string, string, string, ManagementLockObject, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function createOrUpdateAtResourceLevel(resourceGroupName: string, resourceProviderNamespace: string, parentResourcePath: string, resourceType: string, resourceName: string, lockName: string, parameters: ManagementLockObject, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Le nom du groupe de ressources contenant la ressource à verrouiller.
    - id: resourceProviderNamespace
      type:
      - string
      description: >
        L’espace de fournisseur de ressources, noms de la ressource à verrouiller.
    - id: parentResourcePath
      type:
      - string
      description: >
        L’identité de ressource parent.
    - id: resourceType
      type:
      - string
      description: >
        Le type de ressource de la ressource à verrouiller.
    - id: resourceName
      type:
      - string
      description: >
        Le nom de la ressource à verrouiller.
    - id: lockName
      type:
      - string
      description: >
        Nom du verrou. Le nom du verrou peut être un maximum de 260 caractères. Il ne peut pas contenir <>, %, &, :, \, ?, /, ou aucun caractère de contrôle.
    - id: parameters
      type:
      - azure-arm-resource.ManagementLockObject
      description: >
        Paramètres pour la création ou la mise à jour d’un verrou de gestion.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-resource.ManagementLockObject>
  package: azure-arm-resource
- uid: azure-arm-resource.ManagementLocks.createOrUpdateAtResourceLevel_2
  name: createOrUpdateAtResourceLevel(string, string, string, string, string, string, ManagementLockObject, Object, ServiceCallback<ManagementLockObject>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function createOrUpdateAtResourceLevel(resourceGroupName: string, resourceProviderNamespace: string, parentResourcePath: string, resourceType: string, resourceName: string, lockName: string, parameters: ManagementLockObject, options: Object, callback: ServiceCallback<ManagementLockObject>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: resourceProviderNamespace
      type:
      - string
      description: ''
    - id: parentResourcePath
      type:
      - string
      description: ''
    - id: resourceType
      type:
      - string
      description: ''
    - id: resourceName
      type:
      - string
      description: ''
    - id: lockName
      type:
      - string
      description: ''
    - id: parameters
      type:
      - azure-arm-resource.ManagementLockObject
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-resource.ManagementLockObject>
      description: ''
    return:
      type:
      - Promise<azure-arm-resource.ManagementLockObject>
  package: azure-arm-resource
- uid: azure-arm-resource.ManagementLocks.createOrUpdateAtResourceLevel_1
  name: createOrUpdateAtResourceLevel(string, string, string, string, string, string, ManagementLockObject, ServiceCallback<ManagementLockObject>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function createOrUpdateAtResourceLevel(resourceGroupName: string, resourceProviderNamespace: string, parentResourcePath: string, resourceType: string, resourceName: string, lockName: string, parameters: ManagementLockObject, callback: ServiceCallback<ManagementLockObject>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: resourceProviderNamespace
      type:
      - string
      description: ''
    - id: parentResourcePath
      type:
      - string
      description: ''
    - id: resourceType
      type:
      - string
      description: ''
    - id: resourceName
      type:
      - string
      description: ''
    - id: lockName
      type:
      - string
      description: ''
    - id: parameters
      type:
      - azure-arm-resource.ManagementLockObject
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-resource.ManagementLockObject>
      description: ''
    return:
      type:
      - Promise<azure-arm-resource.ManagementLockObject>
  package: azure-arm-resource
- uid: azure-arm-resource.ManagementLocks.createOrUpdateAtResourceLevelWithHttpOperationResponse
  name: createOrUpdateAtResourceLevelWithHttpOperationResponse(string, string, string, string, string, string, ManagementLockObject, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function createOrUpdateAtResourceLevelWithHttpOperationResponse(resourceGroupName: string, resourceProviderNamespace: string, parentResourcePath: string, resourceType: string, resourceName: string, lockName: string, parameters: ManagementLockObject, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Le nom du groupe de ressources contenant la ressource à verrouiller.
    - id: resourceProviderNamespace
      type:
      - string
      description: >
        L’espace de fournisseur de ressources, noms de la ressource à verrouiller.
    - id: parentResourcePath
      type:
      - string
      description: >
        L’identité de ressource parent.
    - id: resourceType
      type:
      - string
      description: >
        Le type de ressource de la ressource à verrouiller.
    - id: resourceName
      type:
      - string
      description: >
        Le nom de la ressource à verrouiller.
    - id: lockName
      type:
      - string
      description: >
        Nom du verrou. Le nom du verrou peut être un maximum de 260 caractères. Il ne peut pas contenir <>, %, &, :, \, ?, /, ou aucun caractère de contrôle.
    - id: parameters
      type:
      - azure-arm-resource.ManagementLockObject
      description: >
        Paramètres pour la création ou la mise à jour d’un verrou de gestion.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-resource.ManagementLockObject>>
  package: azure-arm-resource
- uid: azure-arm-resource.ManagementLocks.createOrUpdateAtSubscriptionLevel
  name: createOrUpdateAtSubscriptionLevel(string, ManagementLockObject, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function createOrUpdateAtSubscriptionLevel(lockName: string, parameters: ManagementLockObject, options?: Object)'
    parameters:
    - id: lockName
      type:
      - string
      description: >
        Nom du verrou. Le nom du verrou peut être un maximum de 260 caractères. Il ne peut pas contenir <>, %, &, :, \, ?, /, ou aucun caractère de contrôle.
    - id: parameters
      type:
      - azure-arm-resource.ManagementLockObject
      description: >
        Les paramètres de verrouillage de gestion.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-resource.ManagementLockObject>
  package: azure-arm-resource
- uid: azure-arm-resource.ManagementLocks.createOrUpdateAtSubscriptionLevel_2
  name: createOrUpdateAtSubscriptionLevel(string, ManagementLockObject, Object, ServiceCallback<ManagementLockObject>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function createOrUpdateAtSubscriptionLevel(lockName: string, parameters: ManagementLockObject, options: Object, callback: ServiceCallback<ManagementLockObject>)'
    parameters:
    - id: lockName
      type:
      - string
      description: ''
    - id: parameters
      type:
      - azure-arm-resource.ManagementLockObject
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-resource.ManagementLockObject>
      description: ''
    return:
      type:
      - Promise<azure-arm-resource.ManagementLockObject>
  package: azure-arm-resource
- uid: azure-arm-resource.ManagementLocks.createOrUpdateAtSubscriptionLevel_1
  name: createOrUpdateAtSubscriptionLevel(string, ManagementLockObject, ServiceCallback<ManagementLockObject>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function createOrUpdateAtSubscriptionLevel(lockName: string, parameters: ManagementLockObject, callback: ServiceCallback<ManagementLockObject>)'
    parameters:
    - id: lockName
      type:
      - string
      description: ''
    - id: parameters
      type:
      - azure-arm-resource.ManagementLockObject
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-resource.ManagementLockObject>
      description: ''
    return:
      type:
      - Promise<azure-arm-resource.ManagementLockObject>
  package: azure-arm-resource
- uid: azure-arm-resource.ManagementLocks.createOrUpdateAtSubscriptionLevelWithHttpOperationResponse
  name: createOrUpdateAtSubscriptionLevelWithHttpOperationResponse(string, ManagementLockObject, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function createOrUpdateAtSubscriptionLevelWithHttpOperationResponse(lockName: string, parameters: ManagementLockObject, options?: Object)'
    parameters:
    - id: lockName
      type:
      - string
      description: >
        Nom du verrou. Le nom du verrou peut être un maximum de 260 caractères. Il ne peut pas contenir <>, %, &, :, \, ?, /, ou aucun caractère de contrôle.
    - id: parameters
      type:
      - azure-arm-resource.ManagementLockObject
      description: >
        Les paramètres de verrouillage de gestion.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-resource.ManagementLockObject>>
  package: azure-arm-resource
- uid: azure-arm-resource.ManagementLocks.createOrUpdateByScope
  name: createOrUpdateByScope(string, string, ManagementLockObject, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Créer ou mettre à jour un verrou de gestion par l’étendue.
  syntax:
    content: 'function createOrUpdateByScope(scope: string, lockName: string, parameters: ManagementLockObject, options?: Object)'
    parameters:
    - id: scope
      type:
      - string
      description: >
        La portée du verrou. Lorsque vous fournissez une étendue pour l’attribution, utilisez « / subscriptions / {subscriptionId} » pour les abonnements, « / subscriptions / {subscriptionId} /resourcegroups/ {resourceGroupName} » pour les groupes de ressources, et « / subscriptions / {subscriptionId} / resourcegroups / {resourceGroupName} /providers/ {resourceProviderNamespace} / {parentResourcePathIfPresent} / {resourceType} / {resourceName} » pour les ressources.
    - id: lockName
      type:
      - string
      description: >
        Nom du verrou.
    - id: parameters
      type:
      - azure-arm-resource.ManagementLockObject
      description: >
        Créer ou mettre à jour les paramètres de verrouillage de gestion.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-resource.ManagementLockObject>
  package: azure-arm-resource
- uid: azure-arm-resource.ManagementLocks.createOrUpdateByScope_2
  name: createOrUpdateByScope(string, string, ManagementLockObject, Object, ServiceCallback<ManagementLockObject>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Créer ou mettre à jour un verrou de gestion par l’étendue.
  syntax:
    content: 'function createOrUpdateByScope(scope: string, lockName: string, parameters: ManagementLockObject, options: Object, callback: ServiceCallback<ManagementLockObject>)'
    parameters:
    - id: scope
      type:
      - string
      description: ''
    - id: lockName
      type:
      - string
      description: ''
    - id: parameters
      type:
      - azure-arm-resource.ManagementLockObject
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-resource.ManagementLockObject>
      description: ''
    return:
      type:
      - Promise<azure-arm-resource.ManagementLockObject>
  package: azure-arm-resource
- uid: azure-arm-resource.ManagementLocks.createOrUpdateByScope_1
  name: createOrUpdateByScope(string, string, ManagementLockObject, ServiceCallback<ManagementLockObject>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Créer ou mettre à jour un verrou de gestion par l’étendue.
  syntax:
    content: 'function createOrUpdateByScope(scope: string, lockName: string, parameters: ManagementLockObject, callback: ServiceCallback<ManagementLockObject>)'
    parameters:
    - id: scope
      type:
      - string
      description: ''
    - id: lockName
      type:
      - string
      description: ''
    - id: parameters
      type:
      - azure-arm-resource.ManagementLockObject
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-resource.ManagementLockObject>
      description: ''
    return:
      type:
      - Promise<azure-arm-resource.ManagementLockObject>
  package: azure-arm-resource
- uid: azure-arm-resource.ManagementLocks.createOrUpdateByScopeWithHttpOperationResponse
  name: createOrUpdateByScopeWithHttpOperationResponse(string, string, ManagementLockObject, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Créer ou mettre à jour un verrou de gestion par l’étendue.
  syntax:
    content: 'function createOrUpdateByScopeWithHttpOperationResponse(scope: string, lockName: string, parameters: ManagementLockObject, options?: Object)'
    parameters:
    - id: scope
      type:
      - string
      description: >
        La portée du verrou. Lorsque vous fournissez une étendue pour l’attribution, utilisez « / subscriptions / {subscriptionId} » pour les abonnements, « / subscriptions / {subscriptionId} /resourcegroups/ {resourceGroupName} » pour les groupes de ressources, et « / subscriptions / {subscriptionId} / resourcegroups / {resourceGroupName} /providers/ {resourceProviderNamespace} / {parentResourcePathIfPresent} / {resourceType} / {resourceName} » pour les ressources.
    - id: lockName
      type:
      - string
      description: >
        Nom du verrou.
    - id: parameters
      type:
      - azure-arm-resource.ManagementLockObject
      description: >
        Créer ou mettre à jour les paramètres de verrouillage de gestion.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-resource.ManagementLockObject>>
  package: azure-arm-resource
- uid: azure-arm-resource.ManagementLocks.deleteAtResourceGroupLevel
  name: deleteAtResourceGroupLevel(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function deleteAtResourceGroupLevel(resourceGroupName: string, lockName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Le nom du groupe de ressources contenant le verrou.
    - id: lockName
      type:
      - string
      description: >
        Le nom de verrou à supprimer.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-resource
- uid: azure-arm-resource.ManagementLocks.deleteAtResourceGroupLevel_2
  name: deleteAtResourceGroupLevel(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function deleteAtResourceGroupLevel(resourceGroupName: string, lockName: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: lockName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-resource
- uid: azure-arm-resource.ManagementLocks.deleteAtResourceGroupLevel_1
  name: deleteAtResourceGroupLevel(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function deleteAtResourceGroupLevel(resourceGroupName: string, lockName: string, callback: ServiceCallback<void>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: lockName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-resource
- uid: azure-arm-resource.ManagementLocks.deleteAtResourceGroupLevelWithHttpOperationResponse
  name: deleteAtResourceGroupLevelWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function deleteAtResourceGroupLevelWithHttpOperationResponse(resourceGroupName: string, lockName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Le nom du groupe de ressources contenant le verrou.
    - id: lockName
      type:
      - string
      description: >
        Le nom de verrou à supprimer.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-resource
- uid: azure-arm-resource.ManagementLocks.deleteAtResourceLevel
  name: deleteAtResourceLevel(string, string, string, string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function deleteAtResourceLevel(resourceGroupName: string, resourceProviderNamespace: string, parentResourcePath: string, resourceType: string, resourceName: string, lockName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Le nom du groupe de ressources contenant la ressource avec le verrou à supprimer.
    - id: resourceProviderNamespace
      type:
      - string
      description: >
        Espace de noms fournisseur ressources de la ressource avec le verrou à supprimer.
    - id: parentResourcePath
      type:
      - string
      description: >
        L’identité de ressource parent.
    - id: resourceType
      type:
      - string
      description: >
        Le type de ressource de la ressource avec le verrou à supprimer.
    - id: resourceName
      type:
      - string
      description: >
        Le nom de la ressource avec le verrou à supprimer.
    - id: lockName
      type:
      - string
      description: >
        Le nom du verrou à supprimer.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-resource
- uid: azure-arm-resource.ManagementLocks.deleteAtResourceLevel_2
  name: deleteAtResourceLevel(string, string, string, string, string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function deleteAtResourceLevel(resourceGroupName: string, resourceProviderNamespace: string, parentResourcePath: string, resourceType: string, resourceName: string, lockName: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: resourceProviderNamespace
      type:
      - string
      description: ''
    - id: parentResourcePath
      type:
      - string
      description: ''
    - id: resourceType
      type:
      - string
      description: ''
    - id: resourceName
      type:
      - string
      description: ''
    - id: lockName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-resource
- uid: azure-arm-resource.ManagementLocks.deleteAtResourceLevel_1
  name: deleteAtResourceLevel(string, string, string, string, string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function deleteAtResourceLevel(resourceGroupName: string, resourceProviderNamespace: string, parentResourcePath: string, resourceType: string, resourceName: string, lockName: string, callback: ServiceCallback<void>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: resourceProviderNamespace
      type:
      - string
      description: ''
    - id: parentResourcePath
      type:
      - string
      description: ''
    - id: resourceType
      type:
      - string
      description: ''
    - id: resourceName
      type:
      - string
      description: ''
    - id: lockName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-resource
- uid: azure-arm-resource.ManagementLocks.deleteAtResourceLevelWithHttpOperationResponse
  name: deleteAtResourceLevelWithHttpOperationResponse(string, string, string, string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function deleteAtResourceLevelWithHttpOperationResponse(resourceGroupName: string, resourceProviderNamespace: string, parentResourcePath: string, resourceType: string, resourceName: string, lockName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Le nom du groupe de ressources contenant la ressource avec le verrou à supprimer.
    - id: resourceProviderNamespace
      type:
      - string
      description: >
        Espace de noms fournisseur ressources de la ressource avec le verrou à supprimer.
    - id: parentResourcePath
      type:
      - string
      description: >
        L’identité de ressource parent.
    - id: resourceType
      type:
      - string
      description: >
        Le type de ressource de la ressource avec le verrou à supprimer.
    - id: resourceName
      type:
      - string
      description: >
        Le nom de la ressource avec le verrou à supprimer.
    - id: lockName
      type:
      - string
      description: >
        Le nom du verrou à supprimer.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-resource
- uid: azure-arm-resource.ManagementLocks.deleteAtSubscriptionLevel
  name: deleteAtSubscriptionLevel(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function deleteAtSubscriptionLevel(lockName: string, options?: Object)'
    parameters:
    - id: lockName
      type:
      - string
      description: >
        Le nom de verrou à supprimer.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-resource
- uid: azure-arm-resource.ManagementLocks.deleteAtSubscriptionLevel_2
  name: deleteAtSubscriptionLevel(string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function deleteAtSubscriptionLevel(lockName: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: lockName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-resource
- uid: azure-arm-resource.ManagementLocks.deleteAtSubscriptionLevel_1
  name: deleteAtSubscriptionLevel(string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function deleteAtSubscriptionLevel(lockName: string, callback: ServiceCallback<void>)'
    parameters:
    - id: lockName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-resource
- uid: azure-arm-resource.ManagementLocks.deleteAtSubscriptionLevelWithHttpOperationResponse
  name: deleteAtSubscriptionLevelWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function deleteAtSubscriptionLevelWithHttpOperationResponse(lockName: string, options?: Object)'
    parameters:
    - id: lockName
      type:
      - string
      description: >
        Le nom de verrou à supprimer.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-resource
- uid: azure-arm-resource.ManagementLocks.deleteByScope
  name: deleteByScope(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Supprimer un verrou de gestion par l’étendue.
  syntax:
    content: 'function deleteByScope(scope: string, lockName: string, options?: Object)'
    parameters:
    - id: scope
      type:
      - string
      description: >
        La portée du verrou.
    - id: lockName
      type:
      - string
      description: >
        Nom du verrou.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-resource
- uid: azure-arm-resource.ManagementLocks.deleteByScope_2
  name: deleteByScope(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Supprimer un verrou de gestion par l’étendue.
  syntax:
    content: 'function deleteByScope(scope: string, lockName: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: scope
      type:
      - string
      description: ''
    - id: lockName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-resource
- uid: azure-arm-resource.ManagementLocks.deleteByScope_1
  name: deleteByScope(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Supprimer un verrou de gestion par l’étendue.
  syntax:
    content: 'function deleteByScope(scope: string, lockName: string, callback: ServiceCallback<void>)'
    parameters:
    - id: scope
      type:
      - string
      description: ''
    - id: lockName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-resource
- uid: azure-arm-resource.ManagementLocks.deleteByScopeWithHttpOperationResponse
  name: deleteByScopeWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Supprimer un verrou de gestion par l’étendue.
  syntax:
    content: 'function deleteByScopeWithHttpOperationResponse(scope: string, lockName: string, options?: Object)'
    parameters:
    - id: scope
      type:
      - string
      description: >
        La portée du verrou.
    - id: lockName
      type:
      - string
      description: >
        Nom du verrou.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-resource
- uid: azure-arm-resource.ManagementLocks.getAtResourceGroupLevel
  name: getAtResourceGroupLevel(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient un verrou de gestion au niveau du groupe de ressources.
  syntax:
    content: 'function getAtResourceGroupLevel(resourceGroupName: string, lockName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Le nom du groupe de ressources verrouillées.
    - id: lockName
      type:
      - string
      description: >
        Le nom du verrou à obtenir.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-resource.ManagementLockObject>
  package: azure-arm-resource
- uid: azure-arm-resource.ManagementLocks.getAtResourceGroupLevel_2
  name: getAtResourceGroupLevel(string, string, Object, ServiceCallback<ManagementLockObject>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient un verrou de gestion au niveau du groupe de ressources.
  syntax:
    content: 'function getAtResourceGroupLevel(resourceGroupName: string, lockName: string, options: Object, callback: ServiceCallback<ManagementLockObject>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: lockName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-resource.ManagementLockObject>
      description: ''
    return:
      type:
      - Promise<azure-arm-resource.ManagementLockObject>
  package: azure-arm-resource
- uid: azure-arm-resource.ManagementLocks.getAtResourceGroupLevel_1
  name: getAtResourceGroupLevel(string, string, ServiceCallback<ManagementLockObject>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient un verrou de gestion au niveau du groupe de ressources.
  syntax:
    content: 'function getAtResourceGroupLevel(resourceGroupName: string, lockName: string, callback: ServiceCallback<ManagementLockObject>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: lockName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-resource.ManagementLockObject>
      description: ''
    return:
      type:
      - Promise<azure-arm-resource.ManagementLockObject>
  package: azure-arm-resource
- uid: azure-arm-resource.ManagementLocks.getAtResourceGroupLevelWithHttpOperationResponse
  name: getAtResourceGroupLevelWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient un verrou de gestion au niveau du groupe de ressources.
  syntax:
    content: 'function getAtResourceGroupLevelWithHttpOperationResponse(resourceGroupName: string, lockName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Le nom du groupe de ressources verrouillées.
    - id: lockName
      type:
      - string
      description: >
        Le nom du verrou à obtenir.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-resource.ManagementLockObject>>
  package: azure-arm-resource
- uid: azure-arm-resource.ManagementLocks.getAtResourceLevel
  name: getAtResourceLevel(string, string, string, string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtenir le verrou de gestion d’une ressource ou de n’importe quel niveau ci-dessous la ressource.
  syntax:
    content: 'function getAtResourceLevel(resourceGroupName: string, resourceProviderNamespace: string, parentResourcePath: string, resourceType: string, resourceName: string, lockName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Nom du groupe de ressources.
    - id: resourceProviderNamespace
      type:
      - string
      description: >
        L’espace de noms du fournisseur de ressources.
    - id: parentResourcePath
      type:
      - string
      description: >
        Un paramètre de chemin d’accès supplémentaire nécessaire dans certains services, comme les bases de données SQL.
    - id: resourceType
      type:
      - string
      description: >
        Type de la ressource.
    - id: resourceName
      type:
      - string
      description: >
        Nom de la ressource.
    - id: lockName
      type:
      - string
      description: >
        Nom du verrou.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-resource.ManagementLockObject>
  package: azure-arm-resource
- uid: azure-arm-resource.ManagementLocks.getAtResourceLevel_2
  name: getAtResourceLevel(string, string, string, string, string, string, Object, ServiceCallback<ManagementLockObject>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtenir le verrou de gestion d’une ressource ou de n’importe quel niveau ci-dessous la ressource.
  syntax:
    content: 'function getAtResourceLevel(resourceGroupName: string, resourceProviderNamespace: string, parentResourcePath: string, resourceType: string, resourceName: string, lockName: string, options: Object, callback: ServiceCallback<ManagementLockObject>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: resourceProviderNamespace
      type:
      - string
      description: ''
    - id: parentResourcePath
      type:
      - string
      description: ''
    - id: resourceType
      type:
      - string
      description: ''
    - id: resourceName
      type:
      - string
      description: ''
    - id: lockName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-resource.ManagementLockObject>
      description: ''
    return:
      type:
      - Promise<azure-arm-resource.ManagementLockObject>
  package: azure-arm-resource
- uid: azure-arm-resource.ManagementLocks.getAtResourceLevel_1
  name: getAtResourceLevel(string, string, string, string, string, string, ServiceCallback<ManagementLockObject>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtenir le verrou de gestion d’une ressource ou de n’importe quel niveau ci-dessous la ressource.
  syntax:
    content: 'function getAtResourceLevel(resourceGroupName: string, resourceProviderNamespace: string, parentResourcePath: string, resourceType: string, resourceName: string, lockName: string, callback: ServiceCallback<ManagementLockObject>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: resourceProviderNamespace
      type:
      - string
      description: ''
    - id: parentResourcePath
      type:
      - string
      description: ''
    - id: resourceType
      type:
      - string
      description: ''
    - id: resourceName
      type:
      - string
      description: ''
    - id: lockName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-resource.ManagementLockObject>
      description: ''
    return:
      type:
      - Promise<azure-arm-resource.ManagementLockObject>
  package: azure-arm-resource
- uid: azure-arm-resource.ManagementLocks.getAtResourceLevelWithHttpOperationResponse
  name: getAtResourceLevelWithHttpOperationResponse(string, string, string, string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtenir le verrou de gestion d’une ressource ou de n’importe quel niveau ci-dessous la ressource.
  syntax:
    content: 'function getAtResourceLevelWithHttpOperationResponse(resourceGroupName: string, resourceProviderNamespace: string, parentResourcePath: string, resourceType: string, resourceName: string, lockName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Nom du groupe de ressources.
    - id: resourceProviderNamespace
      type:
      - string
      description: >
        L’espace de noms du fournisseur de ressources.
    - id: parentResourcePath
      type:
      - string
      description: >
        Un paramètre de chemin d’accès supplémentaire nécessaire dans certains services, comme les bases de données SQL.
    - id: resourceType
      type:
      - string
      description: >
        Type de la ressource.
    - id: resourceName
      type:
      - string
      description: >
        Nom de la ressource.
    - id: lockName
      type:
      - string
      description: >
        Nom du verrou.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-resource.ManagementLockObject>>
  package: azure-arm-resource
- uid: azure-arm-resource.ManagementLocks.getAtSubscriptionLevel
  name: getAtSubscriptionLevel(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient un verrou de gestion au niveau de l’abonnement.
  syntax:
    content: 'function getAtSubscriptionLevel(lockName: string, options?: Object)'
    parameters:
    - id: lockName
      type:
      - string
      description: >
        Le nom du verrou à obtenir.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-resource.ManagementLockObject>
  package: azure-arm-resource
- uid: azure-arm-resource.ManagementLocks.getAtSubscriptionLevel_2
  name: getAtSubscriptionLevel(string, Object, ServiceCallback<ManagementLockObject>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient un verrou de gestion au niveau de l’abonnement.
  syntax:
    content: 'function getAtSubscriptionLevel(lockName: string, options: Object, callback: ServiceCallback<ManagementLockObject>)'
    parameters:
    - id: lockName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-resource.ManagementLockObject>
      description: ''
    return:
      type:
      - Promise<azure-arm-resource.ManagementLockObject>
  package: azure-arm-resource
- uid: azure-arm-resource.ManagementLocks.getAtSubscriptionLevel_1
  name: getAtSubscriptionLevel(string, ServiceCallback<ManagementLockObject>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient un verrou de gestion au niveau de l’abonnement.
  syntax:
    content: 'function getAtSubscriptionLevel(lockName: string, callback: ServiceCallback<ManagementLockObject>)'
    parameters:
    - id: lockName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-resource.ManagementLockObject>
      description: ''
    return:
      type:
      - Promise<azure-arm-resource.ManagementLockObject>
  package: azure-arm-resource
- uid: azure-arm-resource.ManagementLocks.getAtSubscriptionLevelWithHttpOperationResponse
  name: getAtSubscriptionLevelWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient un verrou de gestion au niveau de l’abonnement.
  syntax:
    content: 'function getAtSubscriptionLevelWithHttpOperationResponse(lockName: string, options?: Object)'
    parameters:
    - id: lockName
      type:
      - string
      description: >
        Le nom du verrou à obtenir.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-resource.ManagementLockObject>>
  package: azure-arm-resource
- uid: azure-arm-resource.ManagementLocks.getByScope
  name: getByScope(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtenir un verrou de gestion par l’étendue.
  syntax:
    content: 'function getByScope(scope: string, lockName: string, options?: Object)'
    parameters:
    - id: scope
      type:
      - string
      description: >
        La portée du verrou.
    - id: lockName
      type:
      - string
      description: >
        Nom du verrou.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-resource.ManagementLockObject>
  package: azure-arm-resource
- uid: azure-arm-resource.ManagementLocks.getByScope_2
  name: getByScope(string, string, Object, ServiceCallback<ManagementLockObject>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtenir un verrou de gestion par l’étendue.
  syntax:
    content: 'function getByScope(scope: string, lockName: string, options: Object, callback: ServiceCallback<ManagementLockObject>)'
    parameters:
    - id: scope
      type:
      - string
      description: ''
    - id: lockName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-resource.ManagementLockObject>
      description: ''
    return:
      type:
      - Promise<azure-arm-resource.ManagementLockObject>
  package: azure-arm-resource
- uid: azure-arm-resource.ManagementLocks.getByScope_1
  name: getByScope(string, string, ServiceCallback<ManagementLockObject>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtenir un verrou de gestion par l’étendue.
  syntax:
    content: 'function getByScope(scope: string, lockName: string, callback: ServiceCallback<ManagementLockObject>)'
    parameters:
    - id: scope
      type:
      - string
      description: ''
    - id: lockName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-resource.ManagementLockObject>
      description: ''
    return:
      type:
      - Promise<azure-arm-resource.ManagementLockObject>
  package: azure-arm-resource
- uid: azure-arm-resource.ManagementLocks.getByScopeWithHttpOperationResponse
  name: getByScopeWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtenir un verrou de gestion par l’étendue.
  syntax:
    content: 'function getByScopeWithHttpOperationResponse(scope: string, lockName: string, options?: Object)'
    parameters:
    - id: scope
      type:
      - string
      description: >
        La portée du verrou.
    - id: lockName
      type:
      - string
      description: >
        Nom du verrou.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-resource.ManagementLockObject>>
  package: azure-arm-resource
- uid: azure-arm-resource.ManagementLocks.listAtResourceGroupLevel
  name: listAtResourceGroupLevel(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient tous les verrous de gestion pour un groupe de ressources.
  syntax:
    content: 'function listAtResourceGroupLevel(resourceGroupName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Le nom du groupe de ressources contenant les verrous à obtenir.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-resource.ManagementLockListResult>
  package: azure-arm-resource
- uid: azure-arm-resource.ManagementLocks.listAtResourceGroupLevel_2
  name: listAtResourceGroupLevel(string, Object, ServiceCallback<ManagementLockListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient tous les verrous de gestion pour un groupe de ressources.
  syntax:
    content: 'function listAtResourceGroupLevel(resourceGroupName: string, options: Object, callback: ServiceCallback<ManagementLockListResult>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-resource.ManagementLockListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-resource.ManagementLockListResult>
  package: azure-arm-resource
- uid: azure-arm-resource.ManagementLocks.listAtResourceGroupLevel_1
  name: listAtResourceGroupLevel(string, ServiceCallback<ManagementLockListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient tous les verrous de gestion pour un groupe de ressources.
  syntax:
    content: 'function listAtResourceGroupLevel(resourceGroupName: string, callback: ServiceCallback<ManagementLockListResult>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-resource.ManagementLockListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-resource.ManagementLockListResult>
  package: azure-arm-resource
- uid: azure-arm-resource.ManagementLocks.listAtResourceGroupLevelNext
  name: listAtResourceGroupLevelNext(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient tous les verrous de gestion pour un groupe de ressources.
  syntax:
    content: 'function listAtResourceGroupLevelNext(nextPageLink: string, options?: Object)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: >
        NextLink de l’appel réussi précédent à l’opération de liste.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-resource.ManagementLockListResult>
  package: azure-arm-resource
- uid: azure-arm-resource.ManagementLocks.listAtResourceGroupLevelNext_2
  name: listAtResourceGroupLevelNext(string, Object, ServiceCallback<ManagementLockListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient tous les verrous de gestion pour un groupe de ressources.
  syntax:
    content: 'function listAtResourceGroupLevelNext(nextPageLink: string, options: Object, callback: ServiceCallback<ManagementLockListResult>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-resource.ManagementLockListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-resource.ManagementLockListResult>
  package: azure-arm-resource
- uid: azure-arm-resource.ManagementLocks.listAtResourceGroupLevelNext_1
  name: listAtResourceGroupLevelNext(string, ServiceCallback<ManagementLockListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient tous les verrous de gestion pour un groupe de ressources.
  syntax:
    content: 'function listAtResourceGroupLevelNext(nextPageLink: string, callback: ServiceCallback<ManagementLockListResult>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-resource.ManagementLockListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-resource.ManagementLockListResult>
  package: azure-arm-resource
- uid: azure-arm-resource.ManagementLocks.listAtResourceGroupLevelNextWithHttpOperationResponse
  name: listAtResourceGroupLevelNextWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient tous les verrous de gestion pour un groupe de ressources.
  syntax:
    content: 'function listAtResourceGroupLevelNextWithHttpOperationResponse(nextPageLink: string, options?: Object)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: >
        NextLink de l’appel réussi précédent à l’opération de liste.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-resource.ManagementLockListResult>>
  package: azure-arm-resource
- uid: azure-arm-resource.ManagementLocks.listAtResourceGroupLevelWithHttpOperationResponse
  name: listAtResourceGroupLevelWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient tous les verrous de gestion pour un groupe de ressources.
  syntax:
    content: 'function listAtResourceGroupLevelWithHttpOperationResponse(resourceGroupName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Le nom du groupe de ressources contenant les verrous à obtenir.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-resource.ManagementLockListResult>>
  package: azure-arm-resource
- uid: azure-arm-resource.ManagementLocks.listAtResourceLevel
  name: listAtResourceLevel(string, string, string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient tous les verrous de gestion pour une ressource ou de n’importe quel niveau ci-dessous la ressource.
  syntax:
    content: 'function listAtResourceLevel(resourceGroupName: string, resourceProviderNamespace: string, parentResourcePath: string, resourceType: string, resourceName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Le nom du groupe de ressources contenant la ressource verrouillée. Le nom respecte la casse.
    - id: resourceProviderNamespace
      type:
      - string
      description: >
        L’espace de noms du fournisseur de ressources.
    - id: parentResourcePath
      type:
      - string
      description: >
        L’identité de ressource parent.
    - id: resourceType
      type:
      - string
      description: >
        Le type de ressource de la ressource verrouillée.
    - id: resourceName
      type:
      - string
      description: >
        Le nom de la ressource verrouillée.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-resource.ManagementLockListResult>
  package: azure-arm-resource
- uid: azure-arm-resource.ManagementLocks.listAtResourceLevel_2
  name: listAtResourceLevel(string, string, string, string, string, Object, ServiceCallback<ManagementLockListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient tous les verrous de gestion pour une ressource ou de n’importe quel niveau ci-dessous la ressource.
  syntax:
    content: 'function listAtResourceLevel(resourceGroupName: string, resourceProviderNamespace: string, parentResourcePath: string, resourceType: string, resourceName: string, options: Object, callback: ServiceCallback<ManagementLockListResult>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: resourceProviderNamespace
      type:
      - string
      description: ''
    - id: parentResourcePath
      type:
      - string
      description: ''
    - id: resourceType
      type:
      - string
      description: ''
    - id: resourceName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-resource.ManagementLockListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-resource.ManagementLockListResult>
  package: azure-arm-resource
- uid: azure-arm-resource.ManagementLocks.listAtResourceLevel_1
  name: listAtResourceLevel(string, string, string, string, string, ServiceCallback<ManagementLockListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient tous les verrous de gestion pour une ressource ou de n’importe quel niveau ci-dessous la ressource.
  syntax:
    content: 'function listAtResourceLevel(resourceGroupName: string, resourceProviderNamespace: string, parentResourcePath: string, resourceType: string, resourceName: string, callback: ServiceCallback<ManagementLockListResult>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: resourceProviderNamespace
      type:
      - string
      description: ''
    - id: parentResourcePath
      type:
      - string
      description: ''
    - id: resourceType
      type:
      - string
      description: ''
    - id: resourceName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-resource.ManagementLockListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-resource.ManagementLockListResult>
  package: azure-arm-resource
- uid: azure-arm-resource.ManagementLocks.listAtResourceLevelNext
  name: listAtResourceLevelNext(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient tous les verrous de gestion pour une ressource ou de n’importe quel niveau ci-dessous la ressource.
  syntax:
    content: 'function listAtResourceLevelNext(nextPageLink: string, options?: Object)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: >
        NextLink de l’appel réussi précédent à l’opération de liste.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-resource.ManagementLockListResult>
  package: azure-arm-resource
- uid: azure-arm-resource.ManagementLocks.listAtResourceLevelNext_2
  name: listAtResourceLevelNext(string, Object, ServiceCallback<ManagementLockListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient tous les verrous de gestion pour une ressource ou de n’importe quel niveau ci-dessous la ressource.
  syntax:
    content: 'function listAtResourceLevelNext(nextPageLink: string, options: Object, callback: ServiceCallback<ManagementLockListResult>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-resource.ManagementLockListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-resource.ManagementLockListResult>
  package: azure-arm-resource
- uid: azure-arm-resource.ManagementLocks.listAtResourceLevelNext_1
  name: listAtResourceLevelNext(string, ServiceCallback<ManagementLockListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient tous les verrous de gestion pour une ressource ou de n’importe quel niveau ci-dessous la ressource.
  syntax:
    content: 'function listAtResourceLevelNext(nextPageLink: string, callback: ServiceCallback<ManagementLockListResult>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-resource.ManagementLockListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-resource.ManagementLockListResult>
  package: azure-arm-resource
- uid: azure-arm-resource.ManagementLocks.listAtResourceLevelNextWithHttpOperationResponse
  name: listAtResourceLevelNextWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient tous les verrous de gestion pour une ressource ou de n’importe quel niveau ci-dessous la ressource.
  syntax:
    content: 'function listAtResourceLevelNextWithHttpOperationResponse(nextPageLink: string, options?: Object)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: >
        NextLink de l’appel réussi précédent à l’opération de liste.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-resource.ManagementLockListResult>>
  package: azure-arm-resource
- uid: azure-arm-resource.ManagementLocks.listAtResourceLevelWithHttpOperationResponse
  name: listAtResourceLevelWithHttpOperationResponse(string, string, string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient tous les verrous de gestion pour une ressource ou de n’importe quel niveau ci-dessous la ressource.
  syntax:
    content: 'function listAtResourceLevelWithHttpOperationResponse(resourceGroupName: string, resourceProviderNamespace: string, parentResourcePath: string, resourceType: string, resourceName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        Le nom du groupe de ressources contenant la ressource verrouillée. Le nom respecte la casse.
    - id: resourceProviderNamespace
      type:
      - string
      description: >
        L’espace de noms du fournisseur de ressources.
    - id: parentResourcePath
      type:
      - string
      description: >
        L’identité de ressource parent.
    - id: resourceType
      type:
      - string
      description: >
        Le type de ressource de la ressource verrouillée.
    - id: resourceName
      type:
      - string
      description: >
        Le nom de la ressource verrouillée.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-resource.ManagementLockListResult>>
  package: azure-arm-resource
- uid: azure-arm-resource.ManagementLocks.listAtSubscriptionLevel
  name: listAtSubscriptionLevel(Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient tous les verrous de gestion pour un abonnement.
  syntax:
    content: 'function listAtSubscriptionLevel(options?: Object)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-resource.ManagementLockListResult>
  package: azure-arm-resource
- uid: azure-arm-resource.ManagementLocks.listAtSubscriptionLevel_2
  name: listAtSubscriptionLevel(Object, ServiceCallback<ManagementLockListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient tous les verrous de gestion pour un abonnement.
  syntax:
    content: 'function listAtSubscriptionLevel(options: Object, callback: ServiceCallback<ManagementLockListResult>)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-resource.ManagementLockListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-resource.ManagementLockListResult>
  package: azure-arm-resource
- uid: azure-arm-resource.ManagementLocks.listAtSubscriptionLevel_1
  name: listAtSubscriptionLevel(ServiceCallback<ManagementLockListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient tous les verrous de gestion pour un abonnement.
  syntax:
    content: 'function listAtSubscriptionLevel(callback: ServiceCallback<ManagementLockListResult>)'
    parameters:
    - id: callback
      type:
      - ServiceCallback<azure-arm-resource.ManagementLockListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-resource.ManagementLockListResult>
  package: azure-arm-resource
- uid: azure-arm-resource.ManagementLocks.listAtSubscriptionLevelNext
  name: listAtSubscriptionLevelNext(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient tous les verrous de gestion pour un abonnement.
  syntax:
    content: 'function listAtSubscriptionLevelNext(nextPageLink: string, options?: Object)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: >
        NextLink de l’appel réussi précédent à l’opération de liste.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-resource.ManagementLockListResult>
  package: azure-arm-resource
- uid: azure-arm-resource.ManagementLocks.listAtSubscriptionLevelNext_2
  name: listAtSubscriptionLevelNext(string, Object, ServiceCallback<ManagementLockListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient tous les verrous de gestion pour un abonnement.
  syntax:
    content: 'function listAtSubscriptionLevelNext(nextPageLink: string, options: Object, callback: ServiceCallback<ManagementLockListResult>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-resource.ManagementLockListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-resource.ManagementLockListResult>
  package: azure-arm-resource
- uid: azure-arm-resource.ManagementLocks.listAtSubscriptionLevelNext_1
  name: listAtSubscriptionLevelNext(string, ServiceCallback<ManagementLockListResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient tous les verrous de gestion pour un abonnement.
  syntax:
    content: 'function listAtSubscriptionLevelNext(nextPageLink: string, callback: ServiceCallback<ManagementLockListResult>)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-resource.ManagementLockListResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-resource.ManagementLockListResult>
  package: azure-arm-resource
- uid: azure-arm-resource.ManagementLocks.listAtSubscriptionLevelNextWithHttpOperationResponse
  name: listAtSubscriptionLevelNextWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient tous les verrous de gestion pour un abonnement.
  syntax:
    content: 'function listAtSubscriptionLevelNextWithHttpOperationResponse(nextPageLink: string, options?: Object)'
    parameters:
    - id: nextPageLink
      type:
      - string
      description: >
        NextLink de l’appel réussi précédent à l’opération de liste.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-resource.ManagementLockListResult>>
  package: azure-arm-resource
- uid: azure-arm-resource.ManagementLocks.listAtSubscriptionLevelWithHttpOperationResponse
  name: listAtSubscriptionLevelWithHttpOperationResponse(Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtient tous les verrous de gestion pour un abonnement.
  syntax:
    content: 'function listAtSubscriptionLevelWithHttpOperationResponse(options?: Object)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-resource.ManagementLockListResult>>
  package: azure-arm-resource
references:
- uid: azure-arm-resource.ManagementLockObject
  name: ManagementLockObject
  spec.typeScript:
  - name: ManagementLockObject
    fullName: ManagementLockObject
    uid: azure-arm-resource.ManagementLockObject
- uid: Promise<azure-arm-resource.ManagementLockObject>
  name: ManagementLockObject>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ManagementLockObject
    fullName: ManagementLockObject
    uid: azure-arm-resource.ManagementLockObject
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-resource.ManagementLockObject>
  name: ManagementLockObject>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ManagementLockObject
    fullName: ManagementLockObject
    uid: azure-arm-resource.ManagementLockObject
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-resource.ManagementLockObject>>
  name: ManagementLockObject>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ManagementLockObject
    fullName: ManagementLockObject
    uid: azure-arm-resource.ManagementLockObject
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-resource.ManagementLockListResult>
  name: ManagementLockListResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ManagementLockListResult
    fullName: ManagementLockListResult
    uid: azure-arm-resource.ManagementLockListResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-resource.ManagementLockListResult>
  name: ManagementLockListResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ManagementLockListResult
    fullName: ManagementLockListResult
    uid: azure-arm-resource.ManagementLockListResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-resource.ManagementLockListResult>>
  name: ManagementLockListResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ManagementLockListResult
    fullName: ManagementLockListResult
    uid: azure-arm-resource.ManagementLockListResult
  - name: '>>'
    fullName: '>>'
