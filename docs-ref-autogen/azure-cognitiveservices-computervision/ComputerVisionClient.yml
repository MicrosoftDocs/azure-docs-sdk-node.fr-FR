### YamlMime:UniversalReference
ms.openlocfilehash: f7bb0a77329788feb31835819b61ccba9c59535e
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 12/13/2018
ms.locfileid: "52026125"
items:
- uid: azure-cognitiveservices-computervision.ComputerVisionClient
  name: ComputerVisionClient
  fullName: ComputerVisionClient
  children:
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImage
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImage_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImage_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.constructor
  - azure-cognitiveservices-computervision.ComputerVisionClient.credentials
  - azure-cognitiveservices-computervision.ComputerVisionClient.describeImage
  - azure-cognitiveservices-computervision.ComputerVisionClient.describeImage_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.describeImage_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStream
  - azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.describeImageWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.endpoint
  - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnail
  - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnail_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnail_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream
  - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult
  - azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResultWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.listModels
  - azure-cognitiveservices-computervision.ComputerVisionClient.listModels_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.listModels_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.listModelsWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeText
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeText_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeText_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.tagImage
  - azure-cognitiveservices-computervision.ComputerVisionClient.tagImage_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.tagImage_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStream
  - azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionClient.tagImageWithHttpOperationResponse
  langs:
  - typeScript
  type: class
  summary: ''
  extends:
    name: ServiceClient
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImage
  name: analyzeImage(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="e5e96-101">Cette opération extrait un ensemble complet de fonctionnalités visuelles en fonction du contenu de l’image.</span><span class="sxs-lookup"><span data-stu-id="e5e96-101">This operation extracts a rich set of visual features based on the image content.</span></span> <span data-ttu-id="e5e96-102">Deux méthodes d’entrée sont pris en charge : chargement d’une image (1) ou (2) en spécifiant une URL d’image.</span><span class="sxs-lookup"><span data-stu-id="e5e96-102">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>  <span data-ttu-id="e5e96-103">Au sein de votre demande, il existe un paramètre facultatif pour vous permettre de choisir les fonctionnalités à retourner.</span><span class="sxs-lookup"><span data-stu-id="e5e96-103">Within your request, there is an optional parameter to allow you to choose which features to return.</span></span>  <span data-ttu-id="e5e96-104">Par défaut, les catégories de l’image sont retournés dans la réponse.</span><span class="sxs-lookup"><span data-stu-id="e5e96-104">By default, image categories are returned in the response.</span></span>'
  syntax:
    content: 'function analyzeImage(url: string, options?: Object)'
    parameters:
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="e5e96-105">URL accessible publiquement d’une image</span><span class="sxs-lookup"><span data-stu-id="e5e96-105">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImage_2
  name: analyzeImage(string, Object, ServiceCallback<ImageAnalysis>)
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="e5e96-106">Cette opération extrait un ensemble complet de fonctionnalités visuelles en fonction du contenu de l’image.</span><span class="sxs-lookup"><span data-stu-id="e5e96-106">This operation extracts a rich set of visual features based on the image content.</span></span> <span data-ttu-id="e5e96-107">Deux méthodes d’entrée sont pris en charge : chargement d’une image (1) ou (2) en spécifiant une URL d’image.</span><span class="sxs-lookup"><span data-stu-id="e5e96-107">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>  <span data-ttu-id="e5e96-108">Au sein de votre demande, il existe un paramètre facultatif pour vous permettre de choisir les fonctionnalités à retourner.</span><span class="sxs-lookup"><span data-stu-id="e5e96-108">Within your request, there is an optional parameter to allow you to choose which features to return.</span></span>  <span data-ttu-id="e5e96-109">Par défaut, les catégories de l’image sont retournés dans la réponse.</span><span class="sxs-lookup"><span data-stu-id="e5e96-109">By default, image categories are returned in the response.</span></span>'
  syntax:
    content: 'function analyzeImage(url: string, options: Object, callback: ServiceCallback<ImageAnalysis>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageAnalysis>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImage_1
  name: analyzeImage(string, ServiceCallback<ImageAnalysis>)
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="e5e96-110">Cette opération extrait un ensemble complet de fonctionnalités visuelles en fonction du contenu de l’image.</span><span class="sxs-lookup"><span data-stu-id="e5e96-110">This operation extracts a rich set of visual features based on the image content.</span></span> <span data-ttu-id="e5e96-111">Deux méthodes d’entrée sont pris en charge : chargement d’une image (1) ou (2) en spécifiant une URL d’image.</span><span class="sxs-lookup"><span data-stu-id="e5e96-111">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>  <span data-ttu-id="e5e96-112">Au sein de votre demande, il existe un paramètre facultatif pour vous permettre de choisir les fonctionnalités à retourner.</span><span class="sxs-lookup"><span data-stu-id="e5e96-112">Within your request, there is an optional parameter to allow you to choose which features to return.</span></span>  <span data-ttu-id="e5e96-113">Par défaut, les catégories de l’image sont retournés dans la réponse.</span><span class="sxs-lookup"><span data-stu-id="e5e96-113">By default, image categories are returned in the response.</span></span>'
  syntax:
    content: 'function analyzeImage(url: string, callback: ServiceCallback<ImageAnalysis>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageAnalysis>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain
  name: analyzeImageByDomain(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="e5e96-114">Cette opération reconnaît le contenu au sein d’une image en appliquant un modèle spécifique à un domaine.</span><span class="sxs-lookup"><span data-stu-id="e5e96-114">This operation recognizes content within an image by applying a domain-specific model.</span></span>  <span data-ttu-id="e5e96-115">La liste des modèles spécifiques à un domaine qui sont pris en charge par l’API vision par ordinateur peut être récupérée à l’aide de la demande d’obtention de /models.</span><span class="sxs-lookup"><span data-stu-id="e5e96-115">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span>  <span data-ttu-id="e5e96-116">Actuellement, l’API fournit uniquement un modèle spécifique à un domaine unique : célébrités.</span><span class="sxs-lookup"><span data-stu-id="e5e96-116">Currently, the API only provides a single domain-specific model: celebrities.</span></span> <span data-ttu-id="e5e96-117">Deux méthodes d’entrée sont pris en charge : chargement d’une image (1) ou (2) en spécifiant une URL d’image.</span><span class="sxs-lookup"><span data-stu-id="e5e96-117">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="e5e96-118">Une réponse correcte s’affichera dans JSON.</span><span class="sxs-lookup"><span data-stu-id="e5e96-118">A successful response will be returned in JSON.</span></span>

    <span data-ttu-id="e5e96-119">Si la demande a échoué, la réponse contient un code d’erreur et un message pour aider à comprendre la cause du problème.</span><span class="sxs-lookup"><span data-stu-id="e5e96-119">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function analyzeImageByDomain(model: string, url: string, options?: Object)'
    parameters:
    - id: model
      type:
      - string
      description: >
        <span data-ttu-id="e5e96-120">Contenu spécifique à un domaine à reconnaître.</span><span class="sxs-lookup"><span data-stu-id="e5e96-120">The domain-specific content to recognize.</span></span>
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="e5e96-121">URL accessible publiquement d’une image</span><span class="sxs-lookup"><span data-stu-id="e5e96-121">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.DomainModelResults>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain_2
  name: analyzeImageByDomain(string, string, Object, ServiceCallback<DomainModelResults>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="e5e96-122">Cette opération reconnaît le contenu au sein d’une image en appliquant un modèle spécifique à un domaine.</span><span class="sxs-lookup"><span data-stu-id="e5e96-122">This operation recognizes content within an image by applying a domain-specific model.</span></span>  <span data-ttu-id="e5e96-123">La liste des modèles spécifiques à un domaine qui sont pris en charge par l’API vision par ordinateur peut être récupérée à l’aide de la demande d’obtention de /models.</span><span class="sxs-lookup"><span data-stu-id="e5e96-123">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span>  <span data-ttu-id="e5e96-124">Actuellement, l’API fournit uniquement un modèle spécifique à un domaine unique : célébrités.</span><span class="sxs-lookup"><span data-stu-id="e5e96-124">Currently, the API only provides a single domain-specific model: celebrities.</span></span> <span data-ttu-id="e5e96-125">Deux méthodes d’entrée sont pris en charge : chargement d’une image (1) ou (2) en spécifiant une URL d’image.</span><span class="sxs-lookup"><span data-stu-id="e5e96-125">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="e5e96-126">Une réponse correcte s’affichera dans JSON.</span><span class="sxs-lookup"><span data-stu-id="e5e96-126">A successful response will be returned in JSON.</span></span>

    <span data-ttu-id="e5e96-127">Si la demande a échoué, la réponse contient un code d’erreur et un message pour aider à comprendre la cause du problème.</span><span class="sxs-lookup"><span data-stu-id="e5e96-127">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function analyzeImageByDomain(model: string, url: string, options: Object, callback: ServiceCallback<DomainModelResults>)'
    parameters:
    - id: model
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.DomainModelResults>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.DomainModelResults>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomain_1
  name: analyzeImageByDomain(string, string, ServiceCallback<DomainModelResults>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="e5e96-128">Cette opération reconnaît le contenu au sein d’une image en appliquant un modèle spécifique à un domaine.</span><span class="sxs-lookup"><span data-stu-id="e5e96-128">This operation recognizes content within an image by applying a domain-specific model.</span></span>  <span data-ttu-id="e5e96-129">La liste des modèles spécifiques à un domaine qui sont pris en charge par l’API vision par ordinateur peut être récupérée à l’aide de la demande d’obtention de /models.</span><span class="sxs-lookup"><span data-stu-id="e5e96-129">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span>  <span data-ttu-id="e5e96-130">Actuellement, l’API fournit uniquement un modèle spécifique à un domaine unique : célébrités.</span><span class="sxs-lookup"><span data-stu-id="e5e96-130">Currently, the API only provides a single domain-specific model: celebrities.</span></span> <span data-ttu-id="e5e96-131">Deux méthodes d’entrée sont pris en charge : chargement d’une image (1) ou (2) en spécifiant une URL d’image.</span><span class="sxs-lookup"><span data-stu-id="e5e96-131">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="e5e96-132">Une réponse correcte s’affichera dans JSON.</span><span class="sxs-lookup"><span data-stu-id="e5e96-132">A successful response will be returned in JSON.</span></span>

    <span data-ttu-id="e5e96-133">Si la demande a échoué, la réponse contient un code d’erreur et un message pour aider à comprendre la cause du problème.</span><span class="sxs-lookup"><span data-stu-id="e5e96-133">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function analyzeImageByDomain(model: string, url: string, callback: ServiceCallback<DomainModelResults>)'
    parameters:
    - id: model
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.DomainModelResults>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.DomainModelResults>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream
  name: analyzeImageByDomainInStream(string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="e5e96-134">Cette opération reconnaît le contenu au sein d’une image en appliquant un modèle spécifique à un domaine.</span><span class="sxs-lookup"><span data-stu-id="e5e96-134">This operation recognizes content within an image by applying a domain-specific model.</span></span>  <span data-ttu-id="e5e96-135">La liste des modèles spécifiques à un domaine qui sont pris en charge par l’API vision par ordinateur peut être récupérée à l’aide de la demande d’obtention de /models.</span><span class="sxs-lookup"><span data-stu-id="e5e96-135">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span>  <span data-ttu-id="e5e96-136">Actuellement, l’API fournit uniquement un modèle spécifique à un domaine unique : célébrités.</span><span class="sxs-lookup"><span data-stu-id="e5e96-136">Currently, the API only provides a single domain-specific model: celebrities.</span></span> <span data-ttu-id="e5e96-137">Deux méthodes d’entrée sont pris en charge : chargement d’une image (1) ou (2) en spécifiant une URL d’image.</span><span class="sxs-lookup"><span data-stu-id="e5e96-137">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="e5e96-138">Une réponse correcte s’affichera dans JSON.</span><span class="sxs-lookup"><span data-stu-id="e5e96-138">A successful response will be returned in JSON.</span></span>

    <span data-ttu-id="e5e96-139">Si la demande a échoué, la réponse contient un code d’erreur et un message pour aider à comprendre la cause du problème.</span><span class="sxs-lookup"><span data-stu-id="e5e96-139">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function analyzeImageByDomainInStream(model: string, image: stream.Readable, options?: Object)'
    parameters:
    - id: model
      type:
      - string
      description: >
        <span data-ttu-id="e5e96-140">Contenu spécifique à un domaine à reconnaître.</span><span class="sxs-lookup"><span data-stu-id="e5e96-140">The domain-specific content to recognize.</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="e5e96-141">Un flux d’image.</span><span class="sxs-lookup"><span data-stu-id="e5e96-141">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.DomainModelResults>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream_2
  name: analyzeImageByDomainInStream(string, stream.Readable, Object, ServiceCallback<DomainModelResults>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="e5e96-142">Cette opération reconnaît le contenu au sein d’une image en appliquant un modèle spécifique à un domaine.</span><span class="sxs-lookup"><span data-stu-id="e5e96-142">This operation recognizes content within an image by applying a domain-specific model.</span></span>  <span data-ttu-id="e5e96-143">La liste des modèles spécifiques à un domaine qui sont pris en charge par l’API vision par ordinateur peut être récupérée à l’aide de la demande d’obtention de /models.</span><span class="sxs-lookup"><span data-stu-id="e5e96-143">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span>  <span data-ttu-id="e5e96-144">Actuellement, l’API fournit uniquement un modèle spécifique à un domaine unique : célébrités.</span><span class="sxs-lookup"><span data-stu-id="e5e96-144">Currently, the API only provides a single domain-specific model: celebrities.</span></span> <span data-ttu-id="e5e96-145">Deux méthodes d’entrée sont pris en charge : chargement d’une image (1) ou (2) en spécifiant une URL d’image.</span><span class="sxs-lookup"><span data-stu-id="e5e96-145">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="e5e96-146">Une réponse correcte s’affichera dans JSON.</span><span class="sxs-lookup"><span data-stu-id="e5e96-146">A successful response will be returned in JSON.</span></span>

    <span data-ttu-id="e5e96-147">Si la demande a échoué, la réponse contient un code d’erreur et un message pour aider à comprendre la cause du problème.</span><span class="sxs-lookup"><span data-stu-id="e5e96-147">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function analyzeImageByDomainInStream(model: string, image: stream.Readable, options: Object, callback: ServiceCallback<DomainModelResults>)'
    parameters:
    - id: model
      type:
      - string
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.DomainModelResults>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.DomainModelResults>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStream_1
  name: analyzeImageByDomainInStream(string, stream.Readable, ServiceCallback<DomainModelResults>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="e5e96-148">Cette opération reconnaît le contenu au sein d’une image en appliquant un modèle spécifique à un domaine.</span><span class="sxs-lookup"><span data-stu-id="e5e96-148">This operation recognizes content within an image by applying a domain-specific model.</span></span>  <span data-ttu-id="e5e96-149">La liste des modèles spécifiques à un domaine qui sont pris en charge par l’API vision par ordinateur peut être récupérée à l’aide de la demande d’obtention de /models.</span><span class="sxs-lookup"><span data-stu-id="e5e96-149">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span>  <span data-ttu-id="e5e96-150">Actuellement, l’API fournit uniquement un modèle spécifique à un domaine unique : célébrités.</span><span class="sxs-lookup"><span data-stu-id="e5e96-150">Currently, the API only provides a single domain-specific model: celebrities.</span></span> <span data-ttu-id="e5e96-151">Deux méthodes d’entrée sont pris en charge : chargement d’une image (1) ou (2) en spécifiant une URL d’image.</span><span class="sxs-lookup"><span data-stu-id="e5e96-151">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="e5e96-152">Une réponse correcte s’affichera dans JSON.</span><span class="sxs-lookup"><span data-stu-id="e5e96-152">A successful response will be returned in JSON.</span></span>

    <span data-ttu-id="e5e96-153">Si la demande a échoué, la réponse contient un code d’erreur et un message pour aider à comprendre la cause du problème.</span><span class="sxs-lookup"><span data-stu-id="e5e96-153">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function analyzeImageByDomainInStream(model: string, image: stream.Readable, callback: ServiceCallback<DomainModelResults>)'
    parameters:
    - id: model
      type:
      - string
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.DomainModelResults>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.DomainModelResults>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainInStreamWithHttpOperationResponse
  name: analyzeImageByDomainInStreamWithHttpOperationResponse(string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="e5e96-154">Cette opération reconnaît le contenu au sein d’une image en appliquant un modèle spécifique à un domaine.</span><span class="sxs-lookup"><span data-stu-id="e5e96-154">This operation recognizes content within an image by applying a domain-specific model.</span></span>  <span data-ttu-id="e5e96-155">La liste des modèles spécifiques à un domaine qui sont pris en charge par l’API vision par ordinateur peut être récupérée à l’aide de la demande d’obtention de /models.</span><span class="sxs-lookup"><span data-stu-id="e5e96-155">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span>  <span data-ttu-id="e5e96-156">Actuellement, l’API fournit uniquement un modèle spécifique à un domaine unique : célébrités.</span><span class="sxs-lookup"><span data-stu-id="e5e96-156">Currently, the API only provides a single domain-specific model: celebrities.</span></span> <span data-ttu-id="e5e96-157">Deux méthodes d’entrée sont pris en charge : chargement d’une image (1) ou (2) en spécifiant une URL d’image.</span><span class="sxs-lookup"><span data-stu-id="e5e96-157">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="e5e96-158">Une réponse correcte s’affichera dans JSON.</span><span class="sxs-lookup"><span data-stu-id="e5e96-158">A successful response will be returned in JSON.</span></span>

    <span data-ttu-id="e5e96-159">Si la demande a échoué, la réponse contient un code d’erreur et un message pour aider à comprendre la cause du problème.</span><span class="sxs-lookup"><span data-stu-id="e5e96-159">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function analyzeImageByDomainInStreamWithHttpOperationResponse(model: string, image: stream.Readable, options?: Object)'
    parameters:
    - id: model
      type:
      - string
      description: >
        <span data-ttu-id="e5e96-160">Contenu spécifique à un domaine à reconnaître.</span><span class="sxs-lookup"><span data-stu-id="e5e96-160">The domain-specific content to recognize.</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="e5e96-161">Un flux d’image.</span><span class="sxs-lookup"><span data-stu-id="e5e96-161">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.DomainModelResults>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageByDomainWithHttpOperationResponse
  name: analyzeImageByDomainWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="e5e96-162">Cette opération reconnaît le contenu au sein d’une image en appliquant un modèle spécifique à un domaine.</span><span class="sxs-lookup"><span data-stu-id="e5e96-162">This operation recognizes content within an image by applying a domain-specific model.</span></span>  <span data-ttu-id="e5e96-163">La liste des modèles spécifiques à un domaine qui sont pris en charge par l’API vision par ordinateur peut être récupérée à l’aide de la demande d’obtention de /models.</span><span class="sxs-lookup"><span data-stu-id="e5e96-163">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span>  <span data-ttu-id="e5e96-164">Actuellement, l’API fournit uniquement un modèle spécifique à un domaine unique : célébrités.</span><span class="sxs-lookup"><span data-stu-id="e5e96-164">Currently, the API only provides a single domain-specific model: celebrities.</span></span> <span data-ttu-id="e5e96-165">Deux méthodes d’entrée sont pris en charge : chargement d’une image (1) ou (2) en spécifiant une URL d’image.</span><span class="sxs-lookup"><span data-stu-id="e5e96-165">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="e5e96-166">Une réponse correcte s’affichera dans JSON.</span><span class="sxs-lookup"><span data-stu-id="e5e96-166">A successful response will be returned in JSON.</span></span>

    <span data-ttu-id="e5e96-167">Si la demande a échoué, la réponse contient un code d’erreur et un message pour aider à comprendre la cause du problème.</span><span class="sxs-lookup"><span data-stu-id="e5e96-167">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function analyzeImageByDomainWithHttpOperationResponse(model: string, url: string, options?: Object)'
    parameters:
    - id: model
      type:
      - string
      description: >
        <span data-ttu-id="e5e96-168">Contenu spécifique à un domaine à reconnaître.</span><span class="sxs-lookup"><span data-stu-id="e5e96-168">The domain-specific content to recognize.</span></span>
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="e5e96-169">URL accessible publiquement d’une image</span><span class="sxs-lookup"><span data-stu-id="e5e96-169">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.DomainModelResults>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream
  name: analyzeImageInStream(stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e5e96-170">Cette opération extrait un ensemble complet de fonctionnalités visuelles en fonction du contenu de l’image.</span><span class="sxs-lookup"><span data-stu-id="e5e96-170">This operation extracts a rich set of visual features based on the image content.</span></span>
  syntax:
    content: 'function analyzeImageInStream(image: stream.Readable, options?: Object)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="e5e96-171">Un flux d’image.</span><span class="sxs-lookup"><span data-stu-id="e5e96-171">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream_2
  name: analyzeImageInStream(stream.Readable, Object, ServiceCallback<ImageAnalysis>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e5e96-172">Cette opération extrait un ensemble complet de fonctionnalités visuelles en fonction du contenu de l’image.</span><span class="sxs-lookup"><span data-stu-id="e5e96-172">This operation extracts a rich set of visual features based on the image content.</span></span>
  syntax:
    content: 'function analyzeImageInStream(image: stream.Readable, options: Object, callback: ServiceCallback<ImageAnalysis>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageAnalysis>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStream_1
  name: analyzeImageInStream(stream.Readable, ServiceCallback<ImageAnalysis>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e5e96-173">Cette opération extrait un ensemble complet de fonctionnalités visuelles en fonction du contenu de l’image.</span><span class="sxs-lookup"><span data-stu-id="e5e96-173">This operation extracts a rich set of visual features based on the image content.</span></span>
  syntax:
    content: 'function analyzeImageInStream(image: stream.Readable, callback: ServiceCallback<ImageAnalysis>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageAnalysis>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageInStreamWithHttpOperationResponse
  name: analyzeImageInStreamWithHttpOperationResponse(stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e5e96-174">Cette opération extrait un ensemble complet de fonctionnalités visuelles en fonction du contenu de l’image.</span><span class="sxs-lookup"><span data-stu-id="e5e96-174">This operation extracts a rich set of visual features based on the image content.</span></span>
  syntax:
    content: 'function analyzeImageInStreamWithHttpOperationResponse(image: stream.Readable, options?: Object)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="e5e96-175">Un flux d’image.</span><span class="sxs-lookup"><span data-stu-id="e5e96-175">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageAnalysis>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.analyzeImageWithHttpOperationResponse
  name: analyzeImageWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="e5e96-176">Cette opération extrait un ensemble complet de fonctionnalités visuelles en fonction du contenu de l’image.</span><span class="sxs-lookup"><span data-stu-id="e5e96-176">This operation extracts a rich set of visual features based on the image content.</span></span> <span data-ttu-id="e5e96-177">Deux méthodes d’entrée sont pris en charge : chargement d’une image (1) ou (2) en spécifiant une URL d’image.</span><span class="sxs-lookup"><span data-stu-id="e5e96-177">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>  <span data-ttu-id="e5e96-178">Au sein de votre demande, il existe un paramètre facultatif pour vous permettre de choisir les fonctionnalités à retourner.</span><span class="sxs-lookup"><span data-stu-id="e5e96-178">Within your request, there is an optional parameter to allow you to choose which features to return.</span></span>  <span data-ttu-id="e5e96-179">Par défaut, les catégories de l’image sont retournés dans la réponse.</span><span class="sxs-lookup"><span data-stu-id="e5e96-179">By default, image categories are returned in the response.</span></span>'
  syntax:
    content: 'function analyzeImageWithHttpOperationResponse(url: string, options?: Object)'
    parameters:
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="e5e96-180">URL accessible publiquement d’une image</span><span class="sxs-lookup"><span data-stu-id="e5e96-180">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageAnalysis>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.constructor
  name: ComputerVisionClient(ServiceClientCredentials, string, ServiceClientOptions)
  children: []
  type: constructor
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'new ComputerVisionClient(credentials: ServiceClientCredentials, endpoint: string, options?: ServiceClientOptions)'
    parameters:
    - id: credentials
      type:
      - ServiceClientCredentials
      description: >
        <span data-ttu-id="e5e96-181">Informations d’identification d’abonnement qui identifient l’abonnement du client.</span><span class="sxs-lookup"><span data-stu-id="e5e96-181">Subscription credentials which uniquely identify client subscription.</span></span>
    - id: endpoint
      type:
      - string
      description: >
        <span data-ttu-id="e5e96-182">Points de terminaison pris en charge Cognitive Services</span><span class="sxs-lookup"><span data-stu-id="e5e96-182">Supported Cognitive Services endpoints</span></span>
    - id: options
      type:
      - ServiceClientOptions
      description: ''
      optional: true
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.credentials
  name: credentials
  fullName: credentials
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'credentials: ServiceClientCredentials'
    return:
      type:
      - ServiceClientCredentials
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImage
  name: describeImage(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="e5e96-183">Cette opération génère une description d’une image dans un langage lisible humain avec des phrases complètes.</span><span class="sxs-lookup"><span data-stu-id="e5e96-183">This operation generates a description of an image in human readable language with complete sentences.</span></span>  <span data-ttu-id="e5e96-184">La description est basée sur une collection de balises de contenu, qui sont également retournées par l’opération.</span><span class="sxs-lookup"><span data-stu-id="e5e96-184">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="e5e96-185">Plus d’une description peut être générée pour chaque image.</span><span class="sxs-lookup"><span data-stu-id="e5e96-185">More than one description can be generated for each image.</span></span>  <span data-ttu-id="e5e96-186">Descriptions sont triées par leur score de confiance.</span><span class="sxs-lookup"><span data-stu-id="e5e96-186">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="e5e96-187">Toutes les descriptions sont en anglais.</span><span class="sxs-lookup"><span data-stu-id="e5e96-187">All descriptions are in English.</span></span> <span data-ttu-id="e5e96-188">Deux méthodes d’entrée sont pris en charge : chargement d’une image (1) ou (2) en spécifiant une URL d’image. Une réponse correcte s’affichera dans JSON.</span><span class="sxs-lookup"><span data-stu-id="e5e96-188">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON.</span></span>  <span data-ttu-id="e5e96-189">Si la demande a échoué, la réponse contient un code d’erreur et un message pour aider à comprendre la cause du problème.</span><span class="sxs-lookup"><span data-stu-id="e5e96-189">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>'
  syntax:
    content: 'function describeImage(url: string, options?: Object)'
    parameters:
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="e5e96-190">URL accessible publiquement d’une image</span><span class="sxs-lookup"><span data-stu-id="e5e96-190">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageDescription>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImage_2
  name: describeImage(string, Object, ServiceCallback<ImageDescription>)
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="e5e96-191">Cette opération génère une description d’une image dans un langage lisible humain avec des phrases complètes.</span><span class="sxs-lookup"><span data-stu-id="e5e96-191">This operation generates a description of an image in human readable language with complete sentences.</span></span>  <span data-ttu-id="e5e96-192">La description est basée sur une collection de balises de contenu, qui sont également retournées par l’opération.</span><span class="sxs-lookup"><span data-stu-id="e5e96-192">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="e5e96-193">Plus d’une description peut être générée pour chaque image.</span><span class="sxs-lookup"><span data-stu-id="e5e96-193">More than one description can be generated for each image.</span></span>  <span data-ttu-id="e5e96-194">Descriptions sont triées par leur score de confiance.</span><span class="sxs-lookup"><span data-stu-id="e5e96-194">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="e5e96-195">Toutes les descriptions sont en anglais.</span><span class="sxs-lookup"><span data-stu-id="e5e96-195">All descriptions are in English.</span></span> <span data-ttu-id="e5e96-196">Deux méthodes d’entrée sont pris en charge : chargement d’une image (1) ou (2) en spécifiant une URL d’image. Une réponse correcte s’affichera dans JSON.</span><span class="sxs-lookup"><span data-stu-id="e5e96-196">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON.</span></span>  <span data-ttu-id="e5e96-197">Si la demande a échoué, la réponse contient un code d’erreur et un message pour aider à comprendre la cause du problème.</span><span class="sxs-lookup"><span data-stu-id="e5e96-197">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>'
  syntax:
    content: 'function describeImage(url: string, options: Object, callback: ServiceCallback<ImageDescription>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageDescription>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageDescription>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImage_1
  name: describeImage(string, ServiceCallback<ImageDescription>)
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="e5e96-198">Cette opération génère une description d’une image dans un langage lisible humain avec des phrases complètes.</span><span class="sxs-lookup"><span data-stu-id="e5e96-198">This operation generates a description of an image in human readable language with complete sentences.</span></span>  <span data-ttu-id="e5e96-199">La description est basée sur une collection de balises de contenu, qui sont également retournées par l’opération.</span><span class="sxs-lookup"><span data-stu-id="e5e96-199">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="e5e96-200">Plus d’une description peut être générée pour chaque image.</span><span class="sxs-lookup"><span data-stu-id="e5e96-200">More than one description can be generated for each image.</span></span>  <span data-ttu-id="e5e96-201">Descriptions sont triées par leur score de confiance.</span><span class="sxs-lookup"><span data-stu-id="e5e96-201">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="e5e96-202">Toutes les descriptions sont en anglais.</span><span class="sxs-lookup"><span data-stu-id="e5e96-202">All descriptions are in English.</span></span> <span data-ttu-id="e5e96-203">Deux méthodes d’entrée sont pris en charge : chargement d’une image (1) ou (2) en spécifiant une URL d’image. Une réponse correcte s’affichera dans JSON.</span><span class="sxs-lookup"><span data-stu-id="e5e96-203">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON.</span></span>  <span data-ttu-id="e5e96-204">Si la demande a échoué, la réponse contient un code d’erreur et un message pour aider à comprendre la cause du problème.</span><span class="sxs-lookup"><span data-stu-id="e5e96-204">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>'
  syntax:
    content: 'function describeImage(url: string, callback: ServiceCallback<ImageDescription>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageDescription>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageDescription>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStream
  name: describeImageInStream(stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="e5e96-205">Cette opération génère une description d’une image dans un langage lisible humain avec des phrases complètes.</span><span class="sxs-lookup"><span data-stu-id="e5e96-205">This operation generates a description of an image in human readable language with complete sentences.</span></span>  <span data-ttu-id="e5e96-206">La description est basée sur une collection de balises de contenu, qui sont également retournées par l’opération.</span><span class="sxs-lookup"><span data-stu-id="e5e96-206">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="e5e96-207">Plus d’une description peut être générée pour chaque image.</span><span class="sxs-lookup"><span data-stu-id="e5e96-207">More than one description can be generated for each image.</span></span>  <span data-ttu-id="e5e96-208">Descriptions sont triées par leur score de confiance.</span><span class="sxs-lookup"><span data-stu-id="e5e96-208">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="e5e96-209">Toutes les descriptions sont en anglais.</span><span class="sxs-lookup"><span data-stu-id="e5e96-209">All descriptions are in English.</span></span> <span data-ttu-id="e5e96-210">Deux méthodes d’entrée sont pris en charge : chargement d’une image (1) ou (2) en spécifiant une URL d’image. Une réponse correcte s’affichera dans JSON.</span><span class="sxs-lookup"><span data-stu-id="e5e96-210">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON.</span></span>  <span data-ttu-id="e5e96-211">Si la demande a échoué, la réponse contient un code d’erreur et un message pour aider à comprendre la cause du problème.</span><span class="sxs-lookup"><span data-stu-id="e5e96-211">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>'
  syntax:
    content: 'function describeImageInStream(image: stream.Readable, options?: Object)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="e5e96-212">Un flux d’image.</span><span class="sxs-lookup"><span data-stu-id="e5e96-212">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageDescription>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStream_2
  name: describeImageInStream(stream.Readable, Object, ServiceCallback<ImageDescription>)
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="e5e96-213">Cette opération génère une description d’une image dans un langage lisible humain avec des phrases complètes.</span><span class="sxs-lookup"><span data-stu-id="e5e96-213">This operation generates a description of an image in human readable language with complete sentences.</span></span>  <span data-ttu-id="e5e96-214">La description est basée sur une collection de balises de contenu, qui sont également retournées par l’opération.</span><span class="sxs-lookup"><span data-stu-id="e5e96-214">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="e5e96-215">Plus d’une description peut être générée pour chaque image.</span><span class="sxs-lookup"><span data-stu-id="e5e96-215">More than one description can be generated for each image.</span></span>  <span data-ttu-id="e5e96-216">Descriptions sont triées par leur score de confiance.</span><span class="sxs-lookup"><span data-stu-id="e5e96-216">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="e5e96-217">Toutes les descriptions sont en anglais.</span><span class="sxs-lookup"><span data-stu-id="e5e96-217">All descriptions are in English.</span></span> <span data-ttu-id="e5e96-218">Deux méthodes d’entrée sont pris en charge : chargement d’une image (1) ou (2) en spécifiant une URL d’image. Une réponse correcte s’affichera dans JSON.</span><span class="sxs-lookup"><span data-stu-id="e5e96-218">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON.</span></span>  <span data-ttu-id="e5e96-219">Si la demande a échoué, la réponse contient un code d’erreur et un message pour aider à comprendre la cause du problème.</span><span class="sxs-lookup"><span data-stu-id="e5e96-219">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>'
  syntax:
    content: 'function describeImageInStream(image: stream.Readable, options: Object, callback: ServiceCallback<ImageDescription>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageDescription>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageDescription>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStream_1
  name: describeImageInStream(stream.Readable, ServiceCallback<ImageDescription>)
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="e5e96-220">Cette opération génère une description d’une image dans un langage lisible humain avec des phrases complètes.</span><span class="sxs-lookup"><span data-stu-id="e5e96-220">This operation generates a description of an image in human readable language with complete sentences.</span></span>  <span data-ttu-id="e5e96-221">La description est basée sur une collection de balises de contenu, qui sont également retournées par l’opération.</span><span class="sxs-lookup"><span data-stu-id="e5e96-221">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="e5e96-222">Plus d’une description peut être générée pour chaque image.</span><span class="sxs-lookup"><span data-stu-id="e5e96-222">More than one description can be generated for each image.</span></span>  <span data-ttu-id="e5e96-223">Descriptions sont triées par leur score de confiance.</span><span class="sxs-lookup"><span data-stu-id="e5e96-223">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="e5e96-224">Toutes les descriptions sont en anglais.</span><span class="sxs-lookup"><span data-stu-id="e5e96-224">All descriptions are in English.</span></span> <span data-ttu-id="e5e96-225">Deux méthodes d’entrée sont pris en charge : chargement d’une image (1) ou (2) en spécifiant une URL d’image. Une réponse correcte s’affichera dans JSON.</span><span class="sxs-lookup"><span data-stu-id="e5e96-225">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON.</span></span>  <span data-ttu-id="e5e96-226">Si la demande a échoué, la réponse contient un code d’erreur et un message pour aider à comprendre la cause du problème.</span><span class="sxs-lookup"><span data-stu-id="e5e96-226">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>'
  syntax:
    content: 'function describeImageInStream(image: stream.Readable, callback: ServiceCallback<ImageDescription>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageDescription>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageDescription>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImageInStreamWithHttpOperationResponse
  name: describeImageInStreamWithHttpOperationResponse(stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="e5e96-227">Cette opération génère une description d’une image dans un langage lisible humain avec des phrases complètes.</span><span class="sxs-lookup"><span data-stu-id="e5e96-227">This operation generates a description of an image in human readable language with complete sentences.</span></span>  <span data-ttu-id="e5e96-228">La description est basée sur une collection de balises de contenu, qui sont également retournées par l’opération.</span><span class="sxs-lookup"><span data-stu-id="e5e96-228">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="e5e96-229">Plus d’une description peut être générée pour chaque image.</span><span class="sxs-lookup"><span data-stu-id="e5e96-229">More than one description can be generated for each image.</span></span>  <span data-ttu-id="e5e96-230">Descriptions sont triées par leur score de confiance.</span><span class="sxs-lookup"><span data-stu-id="e5e96-230">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="e5e96-231">Toutes les descriptions sont en anglais.</span><span class="sxs-lookup"><span data-stu-id="e5e96-231">All descriptions are in English.</span></span> <span data-ttu-id="e5e96-232">Deux méthodes d’entrée sont pris en charge : chargement d’une image (1) ou (2) en spécifiant une URL d’image. Une réponse correcte s’affichera dans JSON.</span><span class="sxs-lookup"><span data-stu-id="e5e96-232">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON.</span></span>  <span data-ttu-id="e5e96-233">Si la demande a échoué, la réponse contient un code d’erreur et un message pour aider à comprendre la cause du problème.</span><span class="sxs-lookup"><span data-stu-id="e5e96-233">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>'
  syntax:
    content: 'function describeImageInStreamWithHttpOperationResponse(image: stream.Readable, options?: Object)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="e5e96-234">Un flux d’image.</span><span class="sxs-lookup"><span data-stu-id="e5e96-234">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageDescription>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.describeImageWithHttpOperationResponse
  name: describeImageWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="e5e96-235">Cette opération génère une description d’une image dans un langage lisible humain avec des phrases complètes.</span><span class="sxs-lookup"><span data-stu-id="e5e96-235">This operation generates a description of an image in human readable language with complete sentences.</span></span>  <span data-ttu-id="e5e96-236">La description est basée sur une collection de balises de contenu, qui sont également retournées par l’opération.</span><span class="sxs-lookup"><span data-stu-id="e5e96-236">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="e5e96-237">Plus d’une description peut être générée pour chaque image.</span><span class="sxs-lookup"><span data-stu-id="e5e96-237">More than one description can be generated for each image.</span></span>  <span data-ttu-id="e5e96-238">Descriptions sont triées par leur score de confiance.</span><span class="sxs-lookup"><span data-stu-id="e5e96-238">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="e5e96-239">Toutes les descriptions sont en anglais.</span><span class="sxs-lookup"><span data-stu-id="e5e96-239">All descriptions are in English.</span></span> <span data-ttu-id="e5e96-240">Deux méthodes d’entrée sont pris en charge : chargement d’une image (1) ou (2) en spécifiant une URL d’image. Une réponse correcte s’affichera dans JSON.</span><span class="sxs-lookup"><span data-stu-id="e5e96-240">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON.</span></span>  <span data-ttu-id="e5e96-241">Si la demande a échoué, la réponse contient un code d’erreur et un message pour aider à comprendre la cause du problème.</span><span class="sxs-lookup"><span data-stu-id="e5e96-241">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>'
  syntax:
    content: 'function describeImageWithHttpOperationResponse(url: string, options?: Object)'
    parameters:
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="e5e96-242">URL accessible publiquement d’une image</span><span class="sxs-lookup"><span data-stu-id="e5e96-242">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageDescription>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.endpoint
  name: endpoint
  fullName: endpoint
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'endpoint: string'
    return:
      type:
      - string
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnail
  name: generateThumbnail(number, number, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="e5e96-243">Cette opération génère une image miniature avec la hauteur et la largeur spécifiée par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="e5e96-243">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="e5e96-244">Par défaut, le service analyse l’image, identifie la région d’intérêt (ROI) et génère des coordonnées de rognage intelligentes basées sur le retour sur investissement.</span><span class="sxs-lookup"><span data-stu-id="e5e96-244">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span>

    <span data-ttu-id="e5e96-245">Rognage intelligent aide lorsque vous spécifiez un rapport hauteur / largeur différent de celui de l’image d’entrée.</span><span class="sxs-lookup"><span data-stu-id="e5e96-245">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span> <span data-ttu-id="e5e96-246">Une réponse correcte contient l’image miniature au format binaire.</span><span class="sxs-lookup"><span data-stu-id="e5e96-246">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="e5e96-247">Si la demande a échoué, la réponse contient un code d’erreur et un message pour aider à déterminer la cause du problème.</span><span class="sxs-lookup"><span data-stu-id="e5e96-247">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
  syntax:
    content: 'function generateThumbnail(width: number, height: number, url: string, options?: Object)'
    parameters:
    - id: width
      type:
      - number
      description: >
        <span data-ttu-id="e5e96-248">Largeur de la miniature.</span><span class="sxs-lookup"><span data-stu-id="e5e96-248">Width of the thumbnail.</span></span> <span data-ttu-id="e5e96-249">Il doit comprendre entre 1 et 1 024.</span><span class="sxs-lookup"><span data-stu-id="e5e96-249">It must be between 1 and 1024.</span></span>

        <span data-ttu-id="e5e96-250">Minimum recommandé de 50.</span><span class="sxs-lookup"><span data-stu-id="e5e96-250">Recommended minimum of 50.</span></span>
    - id: height
      type:
      - number
      description: >
        <span data-ttu-id="e5e96-251">Hauteur de la miniature.</span><span class="sxs-lookup"><span data-stu-id="e5e96-251">Height of the thumbnail.</span></span> <span data-ttu-id="e5e96-252">Il doit être comprise entre 1 et</span><span class="sxs-lookup"><span data-stu-id="e5e96-252">It must be between 1 and</span></span>

        1024. <span data-ttu-id="e5e96-253">Minimum recommandé de 50.</span><span class="sxs-lookup"><span data-stu-id="e5e96-253">Recommended minimum of 50.</span></span>
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="e5e96-254">URL accessible publiquement d’une image</span><span class="sxs-lookup"><span data-stu-id="e5e96-254">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<stream.Readable>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnail_2
  name: generateThumbnail(number, number, string, Object, ServiceCallback<stream.Readable>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="e5e96-255">Cette opération génère une image miniature avec la hauteur et la largeur spécifiée par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="e5e96-255">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="e5e96-256">Par défaut, le service analyse l’image, identifie la région d’intérêt (ROI) et génère des coordonnées de rognage intelligentes basées sur le retour sur investissement.</span><span class="sxs-lookup"><span data-stu-id="e5e96-256">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span>

    <span data-ttu-id="e5e96-257">Rognage intelligent aide lorsque vous spécifiez un rapport hauteur / largeur différent de celui de l’image d’entrée.</span><span class="sxs-lookup"><span data-stu-id="e5e96-257">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span> <span data-ttu-id="e5e96-258">Une réponse correcte contient l’image miniature au format binaire.</span><span class="sxs-lookup"><span data-stu-id="e5e96-258">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="e5e96-259">Si la demande a échoué, la réponse contient un code d’erreur et un message pour aider à déterminer la cause du problème.</span><span class="sxs-lookup"><span data-stu-id="e5e96-259">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
  syntax:
    content: 'function generateThumbnail(width: number, height: number, url: string, options: Object, callback: ServiceCallback<stream.Readable>)'
    parameters:
    - id: width
      type:
      - number
      description: ''
    - id: height
      type:
      - number
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<stream.Readable>
      description: ''
    return:
      type:
      - Promise<stream.Readable>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnail_1
  name: generateThumbnail(number, number, string, ServiceCallback<stream.Readable>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="e5e96-260">Cette opération génère une image miniature avec la hauteur et la largeur spécifiée par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="e5e96-260">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="e5e96-261">Par défaut, le service analyse l’image, identifie la région d’intérêt (ROI) et génère des coordonnées de rognage intelligentes basées sur le retour sur investissement.</span><span class="sxs-lookup"><span data-stu-id="e5e96-261">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span>

    <span data-ttu-id="e5e96-262">Rognage intelligent aide lorsque vous spécifiez un rapport hauteur / largeur différent de celui de l’image d’entrée.</span><span class="sxs-lookup"><span data-stu-id="e5e96-262">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span> <span data-ttu-id="e5e96-263">Une réponse correcte contient l’image miniature au format binaire.</span><span class="sxs-lookup"><span data-stu-id="e5e96-263">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="e5e96-264">Si la demande a échoué, la réponse contient un code d’erreur et un message pour aider à déterminer la cause du problème.</span><span class="sxs-lookup"><span data-stu-id="e5e96-264">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
  syntax:
    content: 'function generateThumbnail(width: number, height: number, url: string, callback: ServiceCallback<stream.Readable>)'
    parameters:
    - id: width
      type:
      - number
      description: ''
    - id: height
      type:
      - number
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<stream.Readable>
      description: ''
    return:
      type:
      - Promise<stream.Readable>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream
  name: generateThumbnailInStream(number, number, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="e5e96-265">Cette opération génère une image miniature avec la hauteur et la largeur spécifiée par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="e5e96-265">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="e5e96-266">Par défaut, le service analyse l’image, identifie la région d’intérêt (ROI) et génère des coordonnées de rognage intelligentes basées sur le retour sur investissement.</span><span class="sxs-lookup"><span data-stu-id="e5e96-266">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span>

    <span data-ttu-id="e5e96-267">Rognage intelligent aide lorsque vous spécifiez un rapport hauteur / largeur différent de celui de l’image d’entrée.</span><span class="sxs-lookup"><span data-stu-id="e5e96-267">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span> <span data-ttu-id="e5e96-268">Une réponse correcte contient l’image miniature au format binaire.</span><span class="sxs-lookup"><span data-stu-id="e5e96-268">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="e5e96-269">Si la demande a échoué, la réponse contient un code d’erreur et un message pour aider à déterminer la cause du problème.</span><span class="sxs-lookup"><span data-stu-id="e5e96-269">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
  syntax:
    content: 'function generateThumbnailInStream(width: number, height: number, image: stream.Readable, options?: Object)'
    parameters:
    - id: width
      type:
      - number
      description: >
        <span data-ttu-id="e5e96-270">Largeur de la miniature.</span><span class="sxs-lookup"><span data-stu-id="e5e96-270">Width of the thumbnail.</span></span> <span data-ttu-id="e5e96-271">Il doit comprendre entre 1 et 1 024.</span><span class="sxs-lookup"><span data-stu-id="e5e96-271">It must be between 1 and 1024.</span></span>

        <span data-ttu-id="e5e96-272">Minimum recommandé de 50.</span><span class="sxs-lookup"><span data-stu-id="e5e96-272">Recommended minimum of 50.</span></span>
    - id: height
      type:
      - number
      description: >
        <span data-ttu-id="e5e96-273">Hauteur de la miniature.</span><span class="sxs-lookup"><span data-stu-id="e5e96-273">Height of the thumbnail.</span></span> <span data-ttu-id="e5e96-274">Il doit être comprise entre 1 et</span><span class="sxs-lookup"><span data-stu-id="e5e96-274">It must be between 1 and</span></span>

        1024. <span data-ttu-id="e5e96-275">Minimum recommandé de 50.</span><span class="sxs-lookup"><span data-stu-id="e5e96-275">Recommended minimum of 50.</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="e5e96-276">Un flux d’image.</span><span class="sxs-lookup"><span data-stu-id="e5e96-276">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<stream.Readable>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream_2
  name: generateThumbnailInStream(number, number, stream.Readable, Object, ServiceCallback<stream.Readable>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="e5e96-277">Cette opération génère une image miniature avec la hauteur et la largeur spécifiée par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="e5e96-277">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="e5e96-278">Par défaut, le service analyse l’image, identifie la région d’intérêt (ROI) et génère des coordonnées de rognage intelligentes basées sur le retour sur investissement.</span><span class="sxs-lookup"><span data-stu-id="e5e96-278">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span>

    <span data-ttu-id="e5e96-279">Rognage intelligent aide lorsque vous spécifiez un rapport hauteur / largeur différent de celui de l’image d’entrée.</span><span class="sxs-lookup"><span data-stu-id="e5e96-279">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span> <span data-ttu-id="e5e96-280">Une réponse correcte contient l’image miniature au format binaire.</span><span class="sxs-lookup"><span data-stu-id="e5e96-280">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="e5e96-281">Si la demande a échoué, la réponse contient un code d’erreur et un message pour aider à déterminer la cause du problème.</span><span class="sxs-lookup"><span data-stu-id="e5e96-281">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
  syntax:
    content: 'function generateThumbnailInStream(width: number, height: number, image: stream.Readable, options: Object, callback: ServiceCallback<stream.Readable>)'
    parameters:
    - id: width
      type:
      - number
      description: ''
    - id: height
      type:
      - number
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<stream.Readable>
      description: ''
    return:
      type:
      - Promise<stream.Readable>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStream_1
  name: generateThumbnailInStream(number, number, stream.Readable, ServiceCallback<stream.Readable>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="e5e96-282">Cette opération génère une image miniature avec la hauteur et la largeur spécifiée par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="e5e96-282">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="e5e96-283">Par défaut, le service analyse l’image, identifie la région d’intérêt (ROI) et génère des coordonnées de rognage intelligentes basées sur le retour sur investissement.</span><span class="sxs-lookup"><span data-stu-id="e5e96-283">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span>

    <span data-ttu-id="e5e96-284">Rognage intelligent aide lorsque vous spécifiez un rapport hauteur / largeur différent de celui de l’image d’entrée.</span><span class="sxs-lookup"><span data-stu-id="e5e96-284">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span> <span data-ttu-id="e5e96-285">Une réponse correcte contient l’image miniature au format binaire.</span><span class="sxs-lookup"><span data-stu-id="e5e96-285">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="e5e96-286">Si la demande a échoué, la réponse contient un code d’erreur et un message pour aider à déterminer la cause du problème.</span><span class="sxs-lookup"><span data-stu-id="e5e96-286">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
  syntax:
    content: 'function generateThumbnailInStream(width: number, height: number, image: stream.Readable, callback: ServiceCallback<stream.Readable>)'
    parameters:
    - id: width
      type:
      - number
      description: ''
    - id: height
      type:
      - number
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<stream.Readable>
      description: ''
    return:
      type:
      - Promise<stream.Readable>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailInStreamWithHttpOperationResponse
  name: generateThumbnailInStreamWithHttpOperationResponse(number, number, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="e5e96-287">Cette opération génère une image miniature avec la hauteur et la largeur spécifiée par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="e5e96-287">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="e5e96-288">Par défaut, le service analyse l’image, identifie la région d’intérêt (ROI) et génère des coordonnées de rognage intelligentes basées sur le retour sur investissement.</span><span class="sxs-lookup"><span data-stu-id="e5e96-288">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span>

    <span data-ttu-id="e5e96-289">Rognage intelligent aide lorsque vous spécifiez un rapport hauteur / largeur différent de celui de l’image d’entrée.</span><span class="sxs-lookup"><span data-stu-id="e5e96-289">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span> <span data-ttu-id="e5e96-290">Une réponse correcte contient l’image miniature au format binaire.</span><span class="sxs-lookup"><span data-stu-id="e5e96-290">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="e5e96-291">Si la demande a échoué, la réponse contient un code d’erreur et un message pour aider à déterminer la cause du problème.</span><span class="sxs-lookup"><span data-stu-id="e5e96-291">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
  syntax:
    content: 'function generateThumbnailInStreamWithHttpOperationResponse(width: number, height: number, image: stream.Readable, options?: Object)'
    parameters:
    - id: width
      type:
      - number
      description: >
        <span data-ttu-id="e5e96-292">Largeur de la miniature.</span><span class="sxs-lookup"><span data-stu-id="e5e96-292">Width of the thumbnail.</span></span> <span data-ttu-id="e5e96-293">Il doit comprendre entre 1 et 1 024.</span><span class="sxs-lookup"><span data-stu-id="e5e96-293">It must be between 1 and 1024.</span></span>

        <span data-ttu-id="e5e96-294">Minimum recommandé de 50.</span><span class="sxs-lookup"><span data-stu-id="e5e96-294">Recommended minimum of 50.</span></span>
    - id: height
      type:
      - number
      description: >
        <span data-ttu-id="e5e96-295">Hauteur de la miniature.</span><span class="sxs-lookup"><span data-stu-id="e5e96-295">Height of the thumbnail.</span></span> <span data-ttu-id="e5e96-296">Il doit être comprise entre 1 et</span><span class="sxs-lookup"><span data-stu-id="e5e96-296">It must be between 1 and</span></span>

        1024. <span data-ttu-id="e5e96-297">Minimum recommandé de 50.</span><span class="sxs-lookup"><span data-stu-id="e5e96-297">Recommended minimum of 50.</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="e5e96-298">Un flux d’image.</span><span class="sxs-lookup"><span data-stu-id="e5e96-298">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<stream.Readable>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.generateThumbnailWithHttpOperationResponse
  name: generateThumbnailWithHttpOperationResponse(number, number, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="e5e96-299">Cette opération génère une image miniature avec la hauteur et la largeur spécifiée par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="e5e96-299">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="e5e96-300">Par défaut, le service analyse l’image, identifie la région d’intérêt (ROI) et génère des coordonnées de rognage intelligentes basées sur le retour sur investissement.</span><span class="sxs-lookup"><span data-stu-id="e5e96-300">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span>

    <span data-ttu-id="e5e96-301">Rognage intelligent aide lorsque vous spécifiez un rapport hauteur / largeur différent de celui de l’image d’entrée.</span><span class="sxs-lookup"><span data-stu-id="e5e96-301">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span> <span data-ttu-id="e5e96-302">Une réponse correcte contient l’image miniature au format binaire.</span><span class="sxs-lookup"><span data-stu-id="e5e96-302">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="e5e96-303">Si la demande a échoué, la réponse contient un code d’erreur et un message pour aider à déterminer la cause du problème.</span><span class="sxs-lookup"><span data-stu-id="e5e96-303">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
  syntax:
    content: 'function generateThumbnailWithHttpOperationResponse(width: number, height: number, url: string, options?: Object)'
    parameters:
    - id: width
      type:
      - number
      description: >
        <span data-ttu-id="e5e96-304">Largeur de la miniature.</span><span class="sxs-lookup"><span data-stu-id="e5e96-304">Width of the thumbnail.</span></span> <span data-ttu-id="e5e96-305">Il doit comprendre entre 1 et 1 024.</span><span class="sxs-lookup"><span data-stu-id="e5e96-305">It must be between 1 and 1024.</span></span>

        <span data-ttu-id="e5e96-306">Minimum recommandé de 50.</span><span class="sxs-lookup"><span data-stu-id="e5e96-306">Recommended minimum of 50.</span></span>
    - id: height
      type:
      - number
      description: >
        <span data-ttu-id="e5e96-307">Hauteur de la miniature.</span><span class="sxs-lookup"><span data-stu-id="e5e96-307">Height of the thumbnail.</span></span> <span data-ttu-id="e5e96-308">Il doit être comprise entre 1 et</span><span class="sxs-lookup"><span data-stu-id="e5e96-308">It must be between 1 and</span></span>

        1024. <span data-ttu-id="e5e96-309">Minimum recommandé de 50.</span><span class="sxs-lookup"><span data-stu-id="e5e96-309">Recommended minimum of 50.</span></span>
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="e5e96-310">URL accessible publiquement d’une image</span><span class="sxs-lookup"><span data-stu-id="e5e96-310">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<stream.Readable>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult
  name: getTextOperationResult(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e5e96-311">Cette interface est utilisée pour obtenir le résultat d’opération de texte.</span><span class="sxs-lookup"><span data-stu-id="e5e96-311">This interface is used for getting text operation result.</span></span> <span data-ttu-id="e5e96-312">L’URL à cette interface doit être extrait du champ « Operation-Location » retourné à partir de l’interface de reconnaître le texte.</span><span class="sxs-lookup"><span data-stu-id="e5e96-312">The URL to this interface should be retrieved from 'Operation-Location' field returned from Recognize Text interface.</span></span>
  syntax:
    content: 'function getTextOperationResult(operationId: string, options?: Object)'
    parameters:
    - id: operationId
      type:
      - string
      description: >
        <span data-ttu-id="e5e96-313">ID de l’opération de texte renvoyée dans la réponse de la « reconnaître le texte'</span><span class="sxs-lookup"><span data-stu-id="e5e96-313">Id of the text operation returned in the response of the 'Recognize Text'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TextOperationResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult_2
  name: getTextOperationResult(string, Object, ServiceCallback<TextOperationResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e5e96-314">Cette interface est utilisée pour obtenir le résultat d’opération de texte.</span><span class="sxs-lookup"><span data-stu-id="e5e96-314">This interface is used for getting text operation result.</span></span> <span data-ttu-id="e5e96-315">L’URL à cette interface doit être extrait du champ « Operation-Location » retourné à partir de l’interface de reconnaître le texte.</span><span class="sxs-lookup"><span data-stu-id="e5e96-315">The URL to this interface should be retrieved from 'Operation-Location' field returned from Recognize Text interface.</span></span>
  syntax:
    content: 'function getTextOperationResult(operationId: string, options: Object, callback: ServiceCallback<TextOperationResult>)'
    parameters:
    - id: operationId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.TextOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TextOperationResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResult_1
  name: getTextOperationResult(string, ServiceCallback<TextOperationResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e5e96-316">Cette interface est utilisée pour obtenir le résultat d’opération de texte.</span><span class="sxs-lookup"><span data-stu-id="e5e96-316">This interface is used for getting text operation result.</span></span> <span data-ttu-id="e5e96-317">L’URL à cette interface doit être extrait du champ « Operation-Location » retourné à partir de l’interface de reconnaître le texte.</span><span class="sxs-lookup"><span data-stu-id="e5e96-317">The URL to this interface should be retrieved from 'Operation-Location' field returned from Recognize Text interface.</span></span>
  syntax:
    content: 'function getTextOperationResult(operationId: string, callback: ServiceCallback<TextOperationResult>)'
    parameters:
    - id: operationId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.TextOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TextOperationResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.getTextOperationResultWithHttpOperationResponse
  name: getTextOperationResultWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e5e96-318">Cette interface est utilisée pour obtenir le résultat d’opération de texte.</span><span class="sxs-lookup"><span data-stu-id="e5e96-318">This interface is used for getting text operation result.</span></span> <span data-ttu-id="e5e96-319">L’URL à cette interface doit être extrait du champ « Operation-Location » retourné à partir de l’interface de reconnaître le texte.</span><span class="sxs-lookup"><span data-stu-id="e5e96-319">The URL to this interface should be retrieved from 'Operation-Location' field returned from Recognize Text interface.</span></span>
  syntax:
    content: 'function getTextOperationResultWithHttpOperationResponse(operationId: string, options?: Object)'
    parameters:
    - id: operationId
      type:
      - string
      description: >
        <span data-ttu-id="e5e96-320">ID de l’opération de texte renvoyée dans la réponse de la « reconnaître le texte'</span><span class="sxs-lookup"><span data-stu-id="e5e96-320">Id of the text operation returned in the response of the 'Recognize Text'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.TextOperationResult>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.listModels
  name: listModels(Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="e5e96-321">Cette opération renvoie la liste des modèles spécifiques à un domaine qui sont pris en charge par l’API vision par ordinateur.</span><span class="sxs-lookup"><span data-stu-id="e5e96-321">This operation returns the list of domain-specific models that are supported by the Computer Vision API.</span></span>  <span data-ttu-id="e5e96-322">Actuellement, l’API prend uniquement en charge un modèle spécifique à un domaine : un module de reconnaissance de célébrités.</span><span class="sxs-lookup"><span data-stu-id="e5e96-322">Currently, the API only supports one domain-specific model: a celebrity recognizer.</span></span> <span data-ttu-id="e5e96-323">Une réponse correcte s’affichera dans JSON.</span><span class="sxs-lookup"><span data-stu-id="e5e96-323">A successful response will be returned in JSON.</span></span>  <span data-ttu-id="e5e96-324">Si la demande a échoué, la réponse contient un code d’erreur et un message pour aider à comprendre la cause du problème.</span><span class="sxs-lookup"><span data-stu-id="e5e96-324">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>'
  syntax:
    content: 'function listModels(options?: Object)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ListModelsResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.listModels_2
  name: listModels(Object, ServiceCallback<ListModelsResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="e5e96-325">Cette opération renvoie la liste des modèles spécifiques à un domaine qui sont pris en charge par l’API vision par ordinateur.</span><span class="sxs-lookup"><span data-stu-id="e5e96-325">This operation returns the list of domain-specific models that are supported by the Computer Vision API.</span></span>  <span data-ttu-id="e5e96-326">Actuellement, l’API prend uniquement en charge un modèle spécifique à un domaine : un module de reconnaissance de célébrités.</span><span class="sxs-lookup"><span data-stu-id="e5e96-326">Currently, the API only supports one domain-specific model: a celebrity recognizer.</span></span> <span data-ttu-id="e5e96-327">Une réponse correcte s’affichera dans JSON.</span><span class="sxs-lookup"><span data-stu-id="e5e96-327">A successful response will be returned in JSON.</span></span>  <span data-ttu-id="e5e96-328">Si la demande a échoué, la réponse contient un code d’erreur et un message pour aider à comprendre la cause du problème.</span><span class="sxs-lookup"><span data-stu-id="e5e96-328">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>'
  syntax:
    content: 'function listModels(options: Object, callback: ServiceCallback<ListModelsResult>)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ListModelsResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ListModelsResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.listModels_1
  name: listModels(ServiceCallback<ListModelsResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="e5e96-329">Cette opération renvoie la liste des modèles spécifiques à un domaine qui sont pris en charge par l’API vision par ordinateur.</span><span class="sxs-lookup"><span data-stu-id="e5e96-329">This operation returns the list of domain-specific models that are supported by the Computer Vision API.</span></span>  <span data-ttu-id="e5e96-330">Actuellement, l’API prend uniquement en charge un modèle spécifique à un domaine : un module de reconnaissance de célébrités.</span><span class="sxs-lookup"><span data-stu-id="e5e96-330">Currently, the API only supports one domain-specific model: a celebrity recognizer.</span></span> <span data-ttu-id="e5e96-331">Une réponse correcte s’affichera dans JSON.</span><span class="sxs-lookup"><span data-stu-id="e5e96-331">A successful response will be returned in JSON.</span></span>  <span data-ttu-id="e5e96-332">Si la demande a échoué, la réponse contient un code d’erreur et un message pour aider à comprendre la cause du problème.</span><span class="sxs-lookup"><span data-stu-id="e5e96-332">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>'
  syntax:
    content: 'function listModels(callback: ServiceCallback<ListModelsResult>)'
    parameters:
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ListModelsResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ListModelsResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.listModelsWithHttpOperationResponse
  name: listModelsWithHttpOperationResponse(Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="e5e96-333">Cette opération renvoie la liste des modèles spécifiques à un domaine qui sont pris en charge par l’API vision par ordinateur.</span><span class="sxs-lookup"><span data-stu-id="e5e96-333">This operation returns the list of domain-specific models that are supported by the Computer Vision API.</span></span>  <span data-ttu-id="e5e96-334">Actuellement, l’API prend uniquement en charge un modèle spécifique à un domaine : un module de reconnaissance de célébrités.</span><span class="sxs-lookup"><span data-stu-id="e5e96-334">Currently, the API only supports one domain-specific model: a celebrity recognizer.</span></span> <span data-ttu-id="e5e96-335">Une réponse correcte s’affichera dans JSON.</span><span class="sxs-lookup"><span data-stu-id="e5e96-335">A successful response will be returned in JSON.</span></span>  <span data-ttu-id="e5e96-336">Si la demande a échoué, la réponse contient un code d’erreur et un message pour aider à comprendre la cause du problème.</span><span class="sxs-lookup"><span data-stu-id="e5e96-336">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>'
  syntax:
    content: 'function listModelsWithHttpOperationResponse(options?: Object)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ListModelsResult>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText
  name: recognizePrintedText(boolean, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="e5e96-337">Reconnaissance optique de caractères (OCR) détecte le texte imprimé dans une image et extrait les caractères reconnus dans un flux de caractères exploitable.</span><span class="sxs-lookup"><span data-stu-id="e5e96-337">Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>

    <span data-ttu-id="e5e96-338">En cas de réussite, les résultats de la reconnaissance optique de caractères seront affichera.</span><span class="sxs-lookup"><span data-stu-id="e5e96-338">Upon success, the OCR results will be returned.</span></span> <span data-ttu-id="e5e96-339">En cas d’échec, le code d’erreur avec un message d’erreur s’affichera.</span><span class="sxs-lookup"><span data-stu-id="e5e96-339">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="e5e96-340">Le code d’erreur peut être une des InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage ou InternalServerError.</span><span class="sxs-lookup"><span data-stu-id="e5e96-340">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
  syntax:
    content: 'function recognizePrintedText(detectOrientation: boolean, url: string, options?: Object)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: >
        <span data-ttu-id="e5e96-341">Détecter si l’orientation du texte dans l’image.</span><span class="sxs-lookup"><span data-stu-id="e5e96-341">Whether detect the text orientation in the image.</span></span> <span data-ttu-id="e5e96-342">Avec detectOrientation = true, la reconnaissance optique de caractères service tente de détecter l’orientation de l’image et corrigez-le avant tout traitement supplémentaire (par exemple, s’il s’agit envers).</span><span class="sxs-lookup"><span data-stu-id="e5e96-342">With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down).</span></span>
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="e5e96-343">URL accessible publiquement d’une image</span><span class="sxs-lookup"><span data-stu-id="e5e96-343">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.OcrResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText_2
  name: recognizePrintedText(boolean, string, Object, ServiceCallback<OcrResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="e5e96-344">Reconnaissance optique de caractères (OCR) détecte le texte imprimé dans une image et extrait les caractères reconnus dans un flux de caractères exploitable.</span><span class="sxs-lookup"><span data-stu-id="e5e96-344">Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>

    <span data-ttu-id="e5e96-345">En cas de réussite, les résultats de la reconnaissance optique de caractères seront affichera.</span><span class="sxs-lookup"><span data-stu-id="e5e96-345">Upon success, the OCR results will be returned.</span></span> <span data-ttu-id="e5e96-346">En cas d’échec, le code d’erreur avec un message d’erreur s’affichera.</span><span class="sxs-lookup"><span data-stu-id="e5e96-346">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="e5e96-347">Le code d’erreur peut être une des InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage ou InternalServerError.</span><span class="sxs-lookup"><span data-stu-id="e5e96-347">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
  syntax:
    content: 'function recognizePrintedText(detectOrientation: boolean, url: string, options: Object, callback: ServiceCallback<OcrResult>)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.OcrResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.OcrResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedText_1
  name: recognizePrintedText(boolean, string, ServiceCallback<OcrResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="e5e96-348">Reconnaissance optique de caractères (OCR) détecte le texte imprimé dans une image et extrait les caractères reconnus dans un flux de caractères exploitable.</span><span class="sxs-lookup"><span data-stu-id="e5e96-348">Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>

    <span data-ttu-id="e5e96-349">En cas de réussite, les résultats de la reconnaissance optique de caractères seront affichera.</span><span class="sxs-lookup"><span data-stu-id="e5e96-349">Upon success, the OCR results will be returned.</span></span> <span data-ttu-id="e5e96-350">En cas d’échec, le code d’erreur avec un message d’erreur s’affichera.</span><span class="sxs-lookup"><span data-stu-id="e5e96-350">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="e5e96-351">Le code d’erreur peut être une des InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage ou InternalServerError.</span><span class="sxs-lookup"><span data-stu-id="e5e96-351">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
  syntax:
    content: 'function recognizePrintedText(detectOrientation: boolean, url: string, callback: ServiceCallback<OcrResult>)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.OcrResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.OcrResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream
  name: recognizePrintedTextInStream(boolean, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="e5e96-352">Reconnaissance optique de caractères (OCR) détecte le texte imprimé dans une image et extrait les caractères reconnus dans un flux de caractères exploitable.</span><span class="sxs-lookup"><span data-stu-id="e5e96-352">Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>

    <span data-ttu-id="e5e96-353">En cas de réussite, les résultats de la reconnaissance optique de caractères seront affichera.</span><span class="sxs-lookup"><span data-stu-id="e5e96-353">Upon success, the OCR results will be returned.</span></span> <span data-ttu-id="e5e96-354">En cas d’échec, le code d’erreur avec un message d’erreur s’affichera.</span><span class="sxs-lookup"><span data-stu-id="e5e96-354">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="e5e96-355">Le code d’erreur peut être une des InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage ou InternalServerError.</span><span class="sxs-lookup"><span data-stu-id="e5e96-355">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
  syntax:
    content: 'function recognizePrintedTextInStream(detectOrientation: boolean, image: stream.Readable, options?: Object)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: >
        <span data-ttu-id="e5e96-356">Détecter si l’orientation du texte dans l’image.</span><span class="sxs-lookup"><span data-stu-id="e5e96-356">Whether detect the text orientation in the image.</span></span> <span data-ttu-id="e5e96-357">Avec detectOrientation = true, la reconnaissance optique de caractères service tente de détecter l’orientation de l’image et corrigez-le avant tout traitement supplémentaire (par exemple, s’il s’agit envers).</span><span class="sxs-lookup"><span data-stu-id="e5e96-357">With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down).</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="e5e96-358">Un flux d’image.</span><span class="sxs-lookup"><span data-stu-id="e5e96-358">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.OcrResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream_2
  name: recognizePrintedTextInStream(boolean, stream.Readable, Object, ServiceCallback<OcrResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="e5e96-359">Reconnaissance optique de caractères (OCR) détecte le texte imprimé dans une image et extrait les caractères reconnus dans un flux de caractères exploitable.</span><span class="sxs-lookup"><span data-stu-id="e5e96-359">Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>

    <span data-ttu-id="e5e96-360">En cas de réussite, les résultats de la reconnaissance optique de caractères seront affichera.</span><span class="sxs-lookup"><span data-stu-id="e5e96-360">Upon success, the OCR results will be returned.</span></span> <span data-ttu-id="e5e96-361">En cas d’échec, le code d’erreur avec un message d’erreur s’affichera.</span><span class="sxs-lookup"><span data-stu-id="e5e96-361">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="e5e96-362">Le code d’erreur peut être une des InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage ou InternalServerError.</span><span class="sxs-lookup"><span data-stu-id="e5e96-362">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
  syntax:
    content: 'function recognizePrintedTextInStream(detectOrientation: boolean, image: stream.Readable, options: Object, callback: ServiceCallback<OcrResult>)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.OcrResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.OcrResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStream_1
  name: recognizePrintedTextInStream(boolean, stream.Readable, ServiceCallback<OcrResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="e5e96-363">Reconnaissance optique de caractères (OCR) détecte le texte imprimé dans une image et extrait les caractères reconnus dans un flux de caractères exploitable.</span><span class="sxs-lookup"><span data-stu-id="e5e96-363">Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>

    <span data-ttu-id="e5e96-364">En cas de réussite, les résultats de la reconnaissance optique de caractères seront affichera.</span><span class="sxs-lookup"><span data-stu-id="e5e96-364">Upon success, the OCR results will be returned.</span></span> <span data-ttu-id="e5e96-365">En cas d’échec, le code d’erreur avec un message d’erreur s’affichera.</span><span class="sxs-lookup"><span data-stu-id="e5e96-365">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="e5e96-366">Le code d’erreur peut être une des InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage ou InternalServerError.</span><span class="sxs-lookup"><span data-stu-id="e5e96-366">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
  syntax:
    content: 'function recognizePrintedTextInStream(detectOrientation: boolean, image: stream.Readable, callback: ServiceCallback<OcrResult>)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.OcrResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.OcrResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextInStreamWithHttpOperationResponse
  name: recognizePrintedTextInStreamWithHttpOperationResponse(boolean, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="e5e96-367">Reconnaissance optique de caractères (OCR) détecte le texte imprimé dans une image et extrait les caractères reconnus dans un flux de caractères exploitable.</span><span class="sxs-lookup"><span data-stu-id="e5e96-367">Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>

    <span data-ttu-id="e5e96-368">En cas de réussite, les résultats de la reconnaissance optique de caractères seront affichera.</span><span class="sxs-lookup"><span data-stu-id="e5e96-368">Upon success, the OCR results will be returned.</span></span> <span data-ttu-id="e5e96-369">En cas d’échec, le code d’erreur avec un message d’erreur s’affichera.</span><span class="sxs-lookup"><span data-stu-id="e5e96-369">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="e5e96-370">Le code d’erreur peut être une des InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage ou InternalServerError.</span><span class="sxs-lookup"><span data-stu-id="e5e96-370">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
  syntax:
    content: 'function recognizePrintedTextInStreamWithHttpOperationResponse(detectOrientation: boolean, image: stream.Readable, options?: Object)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: >
        <span data-ttu-id="e5e96-371">Détecter si l’orientation du texte dans l’image.</span><span class="sxs-lookup"><span data-stu-id="e5e96-371">Whether detect the text orientation in the image.</span></span> <span data-ttu-id="e5e96-372">Avec detectOrientation = true, la reconnaissance optique de caractères service tente de détecter l’orientation de l’image et corrigez-le avant tout traitement supplémentaire (par exemple, s’il s’agit envers).</span><span class="sxs-lookup"><span data-stu-id="e5e96-372">With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down).</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="e5e96-373">Un flux d’image.</span><span class="sxs-lookup"><span data-stu-id="e5e96-373">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.OcrResult>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizePrintedTextWithHttpOperationResponse
  name: recognizePrintedTextWithHttpOperationResponse(boolean, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="e5e96-374">Reconnaissance optique de caractères (OCR) détecte le texte imprimé dans une image et extrait les caractères reconnus dans un flux de caractères exploitable.</span><span class="sxs-lookup"><span data-stu-id="e5e96-374">Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>

    <span data-ttu-id="e5e96-375">En cas de réussite, les résultats de la reconnaissance optique de caractères seront affichera.</span><span class="sxs-lookup"><span data-stu-id="e5e96-375">Upon success, the OCR results will be returned.</span></span> <span data-ttu-id="e5e96-376">En cas d’échec, le code d’erreur avec un message d’erreur s’affichera.</span><span class="sxs-lookup"><span data-stu-id="e5e96-376">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="e5e96-377">Le code d’erreur peut être une des InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage ou InternalServerError.</span><span class="sxs-lookup"><span data-stu-id="e5e96-377">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
  syntax:
    content: 'function recognizePrintedTextWithHttpOperationResponse(detectOrientation: boolean, url: string, options?: Object)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: >
        <span data-ttu-id="e5e96-378">Détecter si l’orientation du texte dans l’image.</span><span class="sxs-lookup"><span data-stu-id="e5e96-378">Whether detect the text orientation in the image.</span></span> <span data-ttu-id="e5e96-379">Avec detectOrientation = true, la reconnaissance optique de caractères service tente de détecter l’orientation de l’image et corrigez-le avant tout traitement supplémentaire (par exemple, s’il s’agit envers).</span><span class="sxs-lookup"><span data-stu-id="e5e96-379">With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down).</span></span>
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="e5e96-380">URL accessible publiquement d’une image</span><span class="sxs-lookup"><span data-stu-id="e5e96-380">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.OcrResult>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeText
  name: recognizeText(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e5e96-381">Reconnaître l’opération de texte.</span><span class="sxs-lookup"><span data-stu-id="e5e96-381">Recognize Text operation.</span></span> <span data-ttu-id="e5e96-382">Lorsque vous utilisez l’interface de reconnaître le texte, la réponse contient un champ appelé « Operation-Location ».</span><span class="sxs-lookup"><span data-stu-id="e5e96-382">When you use the Recognize Text interface, the response contains a field called 'Operation-Location'.</span></span> <span data-ttu-id="e5e96-383">Le champ « Operation-Location » contient l’URL que vous devez utiliser pour votre opération obtenir le résultat d’opération texte reconnaître.</span><span class="sxs-lookup"><span data-stu-id="e5e96-383">The 'Operation-Location' field contains the URL that you must use for your Get Recognize Text Operation Result operation.</span></span>
  syntax:
    content: 'function recognizeText(url: string, mode: string, options?: Object)'
    parameters:
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="e5e96-384">URL accessible publiquement d’une image</span><span class="sxs-lookup"><span data-stu-id="e5e96-384">Publicly reachable URL of an image</span></span>
    - id: mode
      type:
      - string
      description: >
        <span data-ttu-id="e5e96-385">Type de texte à reconnaître.</span><span class="sxs-lookup"><span data-stu-id="e5e96-385">Type of text to recognize.</span></span> <span data-ttu-id="e5e96-386">Les valeurs possibles incluent : 'Main', 'imprimé'</span><span class="sxs-lookup"><span data-stu-id="e5e96-386">Possible values include: 'Handwritten', 'Printed'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeText_2
  name: recognizeText(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e5e96-387">Reconnaître l’opération de texte.</span><span class="sxs-lookup"><span data-stu-id="e5e96-387">Recognize Text operation.</span></span> <span data-ttu-id="e5e96-388">Lorsque vous utilisez l’interface de reconnaître le texte, la réponse contient un champ appelé « Operation-Location ».</span><span class="sxs-lookup"><span data-stu-id="e5e96-388">When you use the Recognize Text interface, the response contains a field called 'Operation-Location'.</span></span> <span data-ttu-id="e5e96-389">Le champ « Operation-Location » contient l’URL que vous devez utiliser pour votre opération obtenir le résultat d’opération texte reconnaître.</span><span class="sxs-lookup"><span data-stu-id="e5e96-389">The 'Operation-Location' field contains the URL that you must use for your Get Recognize Text Operation Result operation.</span></span>
  syntax:
    content: 'function recognizeText(url: string, mode: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: mode
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeText_1
  name: recognizeText(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e5e96-390">Reconnaître l’opération de texte.</span><span class="sxs-lookup"><span data-stu-id="e5e96-390">Recognize Text operation.</span></span> <span data-ttu-id="e5e96-391">Lorsque vous utilisez l’interface de reconnaître le texte, la réponse contient un champ appelé « Operation-Location ».</span><span class="sxs-lookup"><span data-stu-id="e5e96-391">When you use the Recognize Text interface, the response contains a field called 'Operation-Location'.</span></span> <span data-ttu-id="e5e96-392">Le champ « Operation-Location » contient l’URL que vous devez utiliser pour votre opération obtenir le résultat d’opération texte reconnaître.</span><span class="sxs-lookup"><span data-stu-id="e5e96-392">The 'Operation-Location' field contains the URL that you must use for your Get Recognize Text Operation Result operation.</span></span>
  syntax:
    content: 'function recognizeText(url: string, mode: string, callback: ServiceCallback<void>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: mode
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream
  name: recognizeTextInStream(stream.Readable, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e5e96-393">Reconnaître l’opération de texte.</span><span class="sxs-lookup"><span data-stu-id="e5e96-393">Recognize Text operation.</span></span> <span data-ttu-id="e5e96-394">Lorsque vous utilisez l’interface de reconnaître le texte, la réponse contient un champ appelé « Operation-Location ».</span><span class="sxs-lookup"><span data-stu-id="e5e96-394">When you use the Recognize Text interface, the response contains a field called 'Operation-Location'.</span></span> <span data-ttu-id="e5e96-395">Le champ « Operation-Location » contient l’URL que vous devez utiliser pour votre opération obtenir le résultat d’opération texte reconnaître.</span><span class="sxs-lookup"><span data-stu-id="e5e96-395">The 'Operation-Location' field contains the URL that you must use for your Get Recognize Text Operation Result operation.</span></span>
  syntax:
    content: 'function recognizeTextInStream(image: stream.Readable, mode: string, options?: Object)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="e5e96-396">Un flux d’image.</span><span class="sxs-lookup"><span data-stu-id="e5e96-396">An image stream.</span></span>
    - id: mode
      type:
      - string
      description: >
        <span data-ttu-id="e5e96-397">Type de texte à reconnaître.</span><span class="sxs-lookup"><span data-stu-id="e5e96-397">Type of text to recognize.</span></span> <span data-ttu-id="e5e96-398">Les valeurs possibles incluent : 'Main', 'imprimé'</span><span class="sxs-lookup"><span data-stu-id="e5e96-398">Possible values include: 'Handwritten', 'Printed'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream_2
  name: recognizeTextInStream(stream.Readable, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e5e96-399">Reconnaître l’opération de texte.</span><span class="sxs-lookup"><span data-stu-id="e5e96-399">Recognize Text operation.</span></span> <span data-ttu-id="e5e96-400">Lorsque vous utilisez l’interface de reconnaître le texte, la réponse contient un champ appelé « Operation-Location ».</span><span class="sxs-lookup"><span data-stu-id="e5e96-400">When you use the Recognize Text interface, the response contains a field called 'Operation-Location'.</span></span> <span data-ttu-id="e5e96-401">Le champ « Operation-Location » contient l’URL que vous devez utiliser pour votre opération obtenir le résultat d’opération texte reconnaître.</span><span class="sxs-lookup"><span data-stu-id="e5e96-401">The 'Operation-Location' field contains the URL that you must use for your Get Recognize Text Operation Result operation.</span></span>
  syntax:
    content: 'function recognizeTextInStream(image: stream.Readable, mode: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: mode
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStream_1
  name: recognizeTextInStream(stream.Readable, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e5e96-402">Reconnaître l’opération de texte.</span><span class="sxs-lookup"><span data-stu-id="e5e96-402">Recognize Text operation.</span></span> <span data-ttu-id="e5e96-403">Lorsque vous utilisez l’interface de reconnaître le texte, la réponse contient un champ appelé « Operation-Location ».</span><span class="sxs-lookup"><span data-stu-id="e5e96-403">When you use the Recognize Text interface, the response contains a field called 'Operation-Location'.</span></span> <span data-ttu-id="e5e96-404">Le champ « Operation-Location » contient l’URL que vous devez utiliser pour votre opération obtenir le résultat d’opération texte reconnaître.</span><span class="sxs-lookup"><span data-stu-id="e5e96-404">The 'Operation-Location' field contains the URL that you must use for your Get Recognize Text Operation Result operation.</span></span>
  syntax:
    content: 'function recognizeTextInStream(image: stream.Readable, mode: string, callback: ServiceCallback<void>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: mode
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextInStreamWithHttpOperationResponse
  name: recognizeTextInStreamWithHttpOperationResponse(stream.Readable, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e5e96-405">Reconnaître l’opération de texte.</span><span class="sxs-lookup"><span data-stu-id="e5e96-405">Recognize Text operation.</span></span> <span data-ttu-id="e5e96-406">Lorsque vous utilisez l’interface de reconnaître le texte, la réponse contient un champ appelé « Operation-Location ».</span><span class="sxs-lookup"><span data-stu-id="e5e96-406">When you use the Recognize Text interface, the response contains a field called 'Operation-Location'.</span></span> <span data-ttu-id="e5e96-407">Le champ « Operation-Location » contient l’URL que vous devez utiliser pour votre opération obtenir le résultat d’opération texte reconnaître.</span><span class="sxs-lookup"><span data-stu-id="e5e96-407">The 'Operation-Location' field contains the URL that you must use for your Get Recognize Text Operation Result operation.</span></span>
  syntax:
    content: 'function recognizeTextInStreamWithHttpOperationResponse(image: stream.Readable, mode: string, options?: Object)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="e5e96-408">Un flux d’image.</span><span class="sxs-lookup"><span data-stu-id="e5e96-408">An image stream.</span></span>
    - id: mode
      type:
      - string
      description: >
        <span data-ttu-id="e5e96-409">Type de texte à reconnaître.</span><span class="sxs-lookup"><span data-stu-id="e5e96-409">Type of text to recognize.</span></span> <span data-ttu-id="e5e96-410">Les valeurs possibles incluent : 'Main', 'imprimé'</span><span class="sxs-lookup"><span data-stu-id="e5e96-410">Possible values include: 'Handwritten', 'Printed'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.recognizeTextWithHttpOperationResponse
  name: recognizeTextWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e5e96-411">Reconnaître l’opération de texte.</span><span class="sxs-lookup"><span data-stu-id="e5e96-411">Recognize Text operation.</span></span> <span data-ttu-id="e5e96-412">Lorsque vous utilisez l’interface de reconnaître le texte, la réponse contient un champ appelé « Operation-Location ».</span><span class="sxs-lookup"><span data-stu-id="e5e96-412">When you use the Recognize Text interface, the response contains a field called 'Operation-Location'.</span></span> <span data-ttu-id="e5e96-413">Le champ « Operation-Location » contient l’URL que vous devez utiliser pour votre opération obtenir le résultat d’opération texte reconnaître.</span><span class="sxs-lookup"><span data-stu-id="e5e96-413">The 'Operation-Location' field contains the URL that you must use for your Get Recognize Text Operation Result operation.</span></span>
  syntax:
    content: 'function recognizeTextWithHttpOperationResponse(url: string, mode: string, options?: Object)'
    parameters:
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="e5e96-414">URL accessible publiquement d’une image</span><span class="sxs-lookup"><span data-stu-id="e5e96-414">Publicly reachable URL of an image</span></span>
    - id: mode
      type:
      - string
      description: >
        <span data-ttu-id="e5e96-415">Type de texte à reconnaître.</span><span class="sxs-lookup"><span data-stu-id="e5e96-415">Type of text to recognize.</span></span> <span data-ttu-id="e5e96-416">Les valeurs possibles incluent : 'Main', 'imprimé'</span><span class="sxs-lookup"><span data-stu-id="e5e96-416">Possible values include: 'Handwritten', 'Printed'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImage
  name: tagImage(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e5e96-417">Cette opération génère une liste de mots ou de balises, qui sont pertinents pour le contenu de l’image fournie.</span><span class="sxs-lookup"><span data-stu-id="e5e96-417">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="e5e96-418">L’API vision par ordinateur peut retourner balises basées sur les objets, vivant êtres humains, vivants ou actions trouvées dans les images.</span><span class="sxs-lookup"><span data-stu-id="e5e96-418">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="e5e96-419">Contrairement aux catégories, les balises ne sont pas organisées selon un système de classification hiérarchique, mais correspondent au contenu de l’image.</span><span class="sxs-lookup"><span data-stu-id="e5e96-419">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="e5e96-420">Les balises peuvent contenir des conseils pour éviter toute ambiguïté ou fournir un contexte, par exemple le cello « tag » peut être accompagné par l’indicateur instrument de musique.</span><span class="sxs-lookup"><span data-stu-id="e5e96-420">Tags may contain hints to avoid ambiguity or provide context, for example the tag 'cello' may be accompanied by the hint 'musical instrument'.</span></span> <span data-ttu-id="e5e96-421">Toutes les balises sont en anglais.</span><span class="sxs-lookup"><span data-stu-id="e5e96-421">All tags are in English.</span></span>
  syntax:
    content: 'function tagImage(url: string, options?: Object)'
    parameters:
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="e5e96-422">URL accessible publiquement d’une image</span><span class="sxs-lookup"><span data-stu-id="e5e96-422">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TagResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImage_2
  name: tagImage(string, Object, ServiceCallback<TagResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e5e96-423">Cette opération génère une liste de mots ou de balises, qui sont pertinents pour le contenu de l’image fournie.</span><span class="sxs-lookup"><span data-stu-id="e5e96-423">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="e5e96-424">L’API vision par ordinateur peut retourner balises basées sur les objets, vivant êtres humains, vivants ou actions trouvées dans les images.</span><span class="sxs-lookup"><span data-stu-id="e5e96-424">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="e5e96-425">Contrairement aux catégories, les balises ne sont pas organisées selon un système de classification hiérarchique, mais correspondent au contenu de l’image.</span><span class="sxs-lookup"><span data-stu-id="e5e96-425">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="e5e96-426">Les balises peuvent contenir des conseils pour éviter toute ambiguïté ou fournir un contexte, par exemple le cello « tag » peut être accompagné par l’indicateur instrument de musique.</span><span class="sxs-lookup"><span data-stu-id="e5e96-426">Tags may contain hints to avoid ambiguity or provide context, for example the tag 'cello' may be accompanied by the hint 'musical instrument'.</span></span> <span data-ttu-id="e5e96-427">Toutes les balises sont en anglais.</span><span class="sxs-lookup"><span data-stu-id="e5e96-427">All tags are in English.</span></span>
  syntax:
    content: 'function tagImage(url: string, options: Object, callback: ServiceCallback<TagResult>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.TagResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TagResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImage_1
  name: tagImage(string, ServiceCallback<TagResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e5e96-428">Cette opération génère une liste de mots ou de balises, qui sont pertinents pour le contenu de l’image fournie.</span><span class="sxs-lookup"><span data-stu-id="e5e96-428">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="e5e96-429">L’API vision par ordinateur peut retourner balises basées sur les objets, vivant êtres humains, vivants ou actions trouvées dans les images.</span><span class="sxs-lookup"><span data-stu-id="e5e96-429">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="e5e96-430">Contrairement aux catégories, les balises ne sont pas organisées selon un système de classification hiérarchique, mais correspondent au contenu de l’image.</span><span class="sxs-lookup"><span data-stu-id="e5e96-430">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="e5e96-431">Les balises peuvent contenir des conseils pour éviter toute ambiguïté ou fournir un contexte, par exemple le cello « tag » peut être accompagné par l’indicateur instrument de musique.</span><span class="sxs-lookup"><span data-stu-id="e5e96-431">Tags may contain hints to avoid ambiguity or provide context, for example the tag 'cello' may be accompanied by the hint 'musical instrument'.</span></span> <span data-ttu-id="e5e96-432">Toutes les balises sont en anglais.</span><span class="sxs-lookup"><span data-stu-id="e5e96-432">All tags are in English.</span></span>
  syntax:
    content: 'function tagImage(url: string, callback: ServiceCallback<TagResult>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.TagResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TagResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStream
  name: tagImageInStream(stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e5e96-433">Cette opération génère une liste de mots ou de balises, qui sont pertinents pour le contenu de l’image fournie.</span><span class="sxs-lookup"><span data-stu-id="e5e96-433">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="e5e96-434">L’API vision par ordinateur peut retourner balises basées sur les objets, vivant êtres humains, vivants ou actions trouvées dans les images.</span><span class="sxs-lookup"><span data-stu-id="e5e96-434">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="e5e96-435">Contrairement aux catégories, les balises ne sont pas organisées selon un système de classification hiérarchique, mais correspondent au contenu de l’image.</span><span class="sxs-lookup"><span data-stu-id="e5e96-435">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="e5e96-436">Les balises peuvent contenir des conseils pour éviter toute ambiguïté ou fournir un contexte, par exemple le cello « tag » peut être accompagné par l’indicateur instrument de musique.</span><span class="sxs-lookup"><span data-stu-id="e5e96-436">Tags may contain hints to avoid ambiguity or provide context, for example the tag 'cello' may be accompanied by the hint 'musical instrument'.</span></span> <span data-ttu-id="e5e96-437">Toutes les balises sont en anglais.</span><span class="sxs-lookup"><span data-stu-id="e5e96-437">All tags are in English.</span></span>
  syntax:
    content: 'function tagImageInStream(image: stream.Readable, options?: Object)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="e5e96-438">Un flux d’image.</span><span class="sxs-lookup"><span data-stu-id="e5e96-438">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TagResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStream_2
  name: tagImageInStream(stream.Readable, Object, ServiceCallback<TagResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e5e96-439">Cette opération génère une liste de mots ou de balises, qui sont pertinents pour le contenu de l’image fournie.</span><span class="sxs-lookup"><span data-stu-id="e5e96-439">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="e5e96-440">L’API vision par ordinateur peut retourner balises basées sur les objets, vivant êtres humains, vivants ou actions trouvées dans les images.</span><span class="sxs-lookup"><span data-stu-id="e5e96-440">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="e5e96-441">Contrairement aux catégories, les balises ne sont pas organisées selon un système de classification hiérarchique, mais correspondent au contenu de l’image.</span><span class="sxs-lookup"><span data-stu-id="e5e96-441">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="e5e96-442">Les balises peuvent contenir des conseils pour éviter toute ambiguïté ou fournir un contexte, par exemple le cello « tag » peut être accompagné par l’indicateur instrument de musique.</span><span class="sxs-lookup"><span data-stu-id="e5e96-442">Tags may contain hints to avoid ambiguity or provide context, for example the tag 'cello' may be accompanied by the hint 'musical instrument'.</span></span> <span data-ttu-id="e5e96-443">Toutes les balises sont en anglais.</span><span class="sxs-lookup"><span data-stu-id="e5e96-443">All tags are in English.</span></span>
  syntax:
    content: 'function tagImageInStream(image: stream.Readable, options: Object, callback: ServiceCallback<TagResult>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.TagResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TagResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStream_1
  name: tagImageInStream(stream.Readable, ServiceCallback<TagResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e5e96-444">Cette opération génère une liste de mots ou de balises, qui sont pertinents pour le contenu de l’image fournie.</span><span class="sxs-lookup"><span data-stu-id="e5e96-444">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="e5e96-445">L’API vision par ordinateur peut retourner balises basées sur les objets, vivant êtres humains, vivants ou actions trouvées dans les images.</span><span class="sxs-lookup"><span data-stu-id="e5e96-445">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="e5e96-446">Contrairement aux catégories, les balises ne sont pas organisées selon un système de classification hiérarchique, mais correspondent au contenu de l’image.</span><span class="sxs-lookup"><span data-stu-id="e5e96-446">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="e5e96-447">Les balises peuvent contenir des conseils pour éviter toute ambiguïté ou fournir un contexte, par exemple le cello « tag » peut être accompagné par l’indicateur instrument de musique.</span><span class="sxs-lookup"><span data-stu-id="e5e96-447">Tags may contain hints to avoid ambiguity or provide context, for example the tag 'cello' may be accompanied by the hint 'musical instrument'.</span></span> <span data-ttu-id="e5e96-448">Toutes les balises sont en anglais.</span><span class="sxs-lookup"><span data-stu-id="e5e96-448">All tags are in English.</span></span>
  syntax:
    content: 'function tagImageInStream(image: stream.Readable, callback: ServiceCallback<TagResult>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.TagResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TagResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImageInStreamWithHttpOperationResponse
  name: tagImageInStreamWithHttpOperationResponse(stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e5e96-449">Cette opération génère une liste de mots ou de balises, qui sont pertinents pour le contenu de l’image fournie.</span><span class="sxs-lookup"><span data-stu-id="e5e96-449">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="e5e96-450">L’API vision par ordinateur peut retourner balises basées sur les objets, vivant êtres humains, vivants ou actions trouvées dans les images.</span><span class="sxs-lookup"><span data-stu-id="e5e96-450">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="e5e96-451">Contrairement aux catégories, les balises ne sont pas organisées selon un système de classification hiérarchique, mais correspondent au contenu de l’image.</span><span class="sxs-lookup"><span data-stu-id="e5e96-451">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="e5e96-452">Les balises peuvent contenir des conseils pour éviter toute ambiguïté ou fournir un contexte, par exemple le cello « tag » peut être accompagné par l’indicateur instrument de musique.</span><span class="sxs-lookup"><span data-stu-id="e5e96-452">Tags may contain hints to avoid ambiguity or provide context, for example the tag 'cello' may be accompanied by the hint 'musical instrument'.</span></span> <span data-ttu-id="e5e96-453">Toutes les balises sont en anglais.</span><span class="sxs-lookup"><span data-stu-id="e5e96-453">All tags are in English.</span></span>
  syntax:
    content: 'function tagImageInStreamWithHttpOperationResponse(image: stream.Readable, options?: Object)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="e5e96-454">Un flux d’image.</span><span class="sxs-lookup"><span data-stu-id="e5e96-454">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.TagResult>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionClient.tagImageWithHttpOperationResponse
  name: tagImageWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e5e96-455">Cette opération génère une liste de mots ou de balises, qui sont pertinents pour le contenu de l’image fournie.</span><span class="sxs-lookup"><span data-stu-id="e5e96-455">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="e5e96-456">L’API vision par ordinateur peut retourner balises basées sur les objets, vivant êtres humains, vivants ou actions trouvées dans les images.</span><span class="sxs-lookup"><span data-stu-id="e5e96-456">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="e5e96-457">Contrairement aux catégories, les balises ne sont pas organisées selon un système de classification hiérarchique, mais correspondent au contenu de l’image.</span><span class="sxs-lookup"><span data-stu-id="e5e96-457">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="e5e96-458">Les balises peuvent contenir des conseils pour éviter toute ambiguïté ou fournir un contexte, par exemple le cello « tag » peut être accompagné par l’indicateur instrument de musique.</span><span class="sxs-lookup"><span data-stu-id="e5e96-458">Tags may contain hints to avoid ambiguity or provide context, for example the tag 'cello' may be accompanied by the hint 'musical instrument'.</span></span> <span data-ttu-id="e5e96-459">Toutes les balises sont en anglais.</span><span class="sxs-lookup"><span data-stu-id="e5e96-459">All tags are in English.</span></span>
  syntax:
    content: 'function tagImageWithHttpOperationResponse(url: string, options?: Object)'
    parameters:
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="e5e96-460">URL accessible publiquement d’une image</span><span class="sxs-lookup"><span data-stu-id="e5e96-460">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.TagResult>>
  package: azure-cognitiveservices-computervision
references:
- uid: Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  name: ImageAnalysis>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ImageAnalysis
    fullName: ImageAnalysis
    uid: azure-cognitiveservices-computervision.ImageAnalysis
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.ImageAnalysis>
  name: ImageAnalysis>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ImageAnalysis
    fullName: ImageAnalysis
    uid: azure-cognitiveservices-computervision.ImageAnalysis
  - name: '>'
    fullName: '>'
- uid: Promise<azure-cognitiveservices-computervision.DomainModelResults>
  name: DomainModelResults>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: DomainModelResults
    fullName: DomainModelResults
    uid: azure-cognitiveservices-computervision.DomainModelResults
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.DomainModelResults>
  name: DomainModelResults>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: DomainModelResults
    fullName: DomainModelResults
    uid: azure-cognitiveservices-computervision.DomainModelResults
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.DomainModelResults>>
  name: DomainModelResults>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: DomainModelResults
    fullName: DomainModelResults
    uid: azure-cognitiveservices-computervision.DomainModelResults
  - name: '>>'
    fullName: '>>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageAnalysis>>
  name: ImageAnalysis>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ImageAnalysis
    fullName: ImageAnalysis
    uid: azure-cognitiveservices-computervision.ImageAnalysis
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-computervision.ImageDescription>
  name: ImageDescription>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ImageDescription
    fullName: ImageDescription
    uid: azure-cognitiveservices-computervision.ImageDescription
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.ImageDescription>
  name: ImageDescription>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ImageDescription
    fullName: ImageDescription
    uid: azure-cognitiveservices-computervision.ImageDescription
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageDescription>>
  name: ImageDescription>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ImageDescription
    fullName: ImageDescription
    uid: azure-cognitiveservices-computervision.ImageDescription
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-computervision.TextOperationResult>
  name: TextOperationResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: TextOperationResult
    fullName: TextOperationResult
    uid: azure-cognitiveservices-computervision.TextOperationResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.TextOperationResult>
  name: TextOperationResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: TextOperationResult
    fullName: TextOperationResult
    uid: azure-cognitiveservices-computervision.TextOperationResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.TextOperationResult>>
  name: TextOperationResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: TextOperationResult
    fullName: TextOperationResult
    uid: azure-cognitiveservices-computervision.TextOperationResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-computervision.ListModelsResult>
  name: ListModelsResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ListModelsResult
    fullName: ListModelsResult
    uid: azure-cognitiveservices-computervision.ListModelsResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.ListModelsResult>
  name: ListModelsResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ListModelsResult
    fullName: ListModelsResult
    uid: azure-cognitiveservices-computervision.ListModelsResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ListModelsResult>>
  name: ListModelsResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ListModelsResult
    fullName: ListModelsResult
    uid: azure-cognitiveservices-computervision.ListModelsResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-computervision.OcrResult>
  name: OcrResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: OcrResult
    fullName: OcrResult
    uid: azure-cognitiveservices-computervision.OcrResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.OcrResult>
  name: OcrResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: OcrResult
    fullName: OcrResult
    uid: azure-cognitiveservices-computervision.OcrResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.OcrResult>>
  name: OcrResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: OcrResult
    fullName: OcrResult
    uid: azure-cognitiveservices-computervision.OcrResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-computervision.TagResult>
  name: TagResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: TagResult
    fullName: TagResult
    uid: azure-cognitiveservices-computervision.TagResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.TagResult>
  name: TagResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: TagResult
    fullName: TagResult
    uid: azure-cognitiveservices-computervision.TagResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.TagResult>>
  name: TagResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: TagResult
    fullName: TagResult
    uid: azure-cognitiveservices-computervision.TagResult
  - name: '>>'
    fullName: '>>'
