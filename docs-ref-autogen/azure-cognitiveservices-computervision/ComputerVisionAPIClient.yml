### YamlMime:UniversalReference
ms.openlocfilehash: 496552af79989c144ce96db561de8b0882be0c21
ms.sourcegitcommit: 506ba44827323385ad0fd81cd14f70c52fd0371e
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 08/22/2018
ms.locfileid: "40465612"
items:
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient
  name: ComputerVisionAPIClient
  fullName: ComputerVisionAPIClient
  children:
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImage
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImage_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImage_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomain
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomain_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomain_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomainInStream
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomainInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomainInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomainInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomainWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageInStream
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.azureRegion
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.constructor
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.credentials
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImage_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImage
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImage_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImageInStream
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImageInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImageInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImageInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImageWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnail_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnail_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnail
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnailInStream
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnailInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnailInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnailInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnailWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.getTextOperationResult
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.getTextOperationResult_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.getTextOperationResult_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.getTextOperationResultWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.listModels
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.listModels_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.listModels_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.listModelsWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedText_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedText
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedText_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedTextInStream
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedTextInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedTextInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedTextInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedTextWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeText
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeText_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeText_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeTextInStream
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeTextInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeTextInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeTextInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeTextWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImage
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImage_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImage_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImageInStream
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImageInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImageInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImageInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImageWithHttpOperationResponse
  langs:
  - typeScript
  type: class
  summary: ''
  extends:
    name: ServiceClient
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImage
  name: analyzeImage
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="28968-101">Cette opération extrait un ensemble complet de fonctionnalités visuelles en fonction du contenu de l’image.</span><span class="sxs-lookup"><span data-stu-id="28968-101">This operation extracts a rich set of visual features based on the image content.</span></span> <span data-ttu-id="28968-102">Deux méthodes d’entrée sont pris en charge : chargement d’une image (1) ou (2) en spécifiant une URL d’image.</span><span class="sxs-lookup"><span data-stu-id="28968-102">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>  <span data-ttu-id="28968-103">Au sein de votre demande, il existe un paramètre facultatif pour vous permettre de choisir les fonctionnalités à retourner.</span><span class="sxs-lookup"><span data-stu-id="28968-103">Within your request, there is an optional parameter to allow you to choose which features to return.</span></span>  <span data-ttu-id="28968-104">Par défaut, les catégories de l’image sont retournés dans la réponse.</span><span class="sxs-lookup"><span data-stu-id="28968-104">By default, image categories are returned in the response.</span></span>'
  syntax:
    content: 'function analyzeImage(url: string, options?: function)'
    parameters:
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImage_2
  name: analyzeImage
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="28968-105">Cette opération extrait un ensemble complet de fonctionnalités visuelles en fonction du contenu de l’image.</span><span class="sxs-lookup"><span data-stu-id="28968-105">This operation extracts a rich set of visual features based on the image content.</span></span> <span data-ttu-id="28968-106">Deux méthodes d’entrée sont pris en charge : chargement d’une image (1) ou (2) en spécifiant une URL d’image.</span><span class="sxs-lookup"><span data-stu-id="28968-106">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>  <span data-ttu-id="28968-107">Au sein de votre demande, il existe un paramètre facultatif pour vous permettre de choisir les fonctionnalités à retourner.</span><span class="sxs-lookup"><span data-stu-id="28968-107">Within your request, there is an optional parameter to allow you to choose which features to return.</span></span>  <span data-ttu-id="28968-108">Par défaut, les catégories de l’image sont retournés dans la réponse.</span><span class="sxs-lookup"><span data-stu-id="28968-108">By default, image categories are returned in the response.</span></span>'
  syntax:
    content: 'function analyzeImage(url: string, options: function, callback: ServiceCallback<ImageAnalysis>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageAnalysis>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImage_1
  name: analyzeImage
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="28968-109">Cette opération extrait un ensemble complet de fonctionnalités visuelles en fonction du contenu de l’image.</span><span class="sxs-lookup"><span data-stu-id="28968-109">This operation extracts a rich set of visual features based on the image content.</span></span> <span data-ttu-id="28968-110">Deux méthodes d’entrée sont pris en charge : chargement d’une image (1) ou (2) en spécifiant une URL d’image.</span><span class="sxs-lookup"><span data-stu-id="28968-110">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>  <span data-ttu-id="28968-111">Au sein de votre demande, il existe un paramètre facultatif pour vous permettre de choisir les fonctionnalités à retourner.</span><span class="sxs-lookup"><span data-stu-id="28968-111">Within your request, there is an optional parameter to allow you to choose which features to return.</span></span>  <span data-ttu-id="28968-112">Par défaut, les catégories de l’image sont retournés dans la réponse.</span><span class="sxs-lookup"><span data-stu-id="28968-112">By default, image categories are returned in the response.</span></span>'
  syntax:
    content: 'function analyzeImage(url: string, callback: ServiceCallback<ImageAnalysis>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageAnalysis>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomain
  name: analyzeImageByDomain
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="28968-113">Cette opération reconnaît le contenu au sein d’une image en appliquant un modèle spécifique à un domaine.</span><span class="sxs-lookup"><span data-stu-id="28968-113">This operation recognizes content within an image by applying a domain-specific model.</span></span>  <span data-ttu-id="28968-114">La liste des modèles spécifiques à un domaine qui sont pris en charge par l’API vision par ordinateur peut être récupérée à l’aide de la demande d’obtention de /models.</span><span class="sxs-lookup"><span data-stu-id="28968-114">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span>  <span data-ttu-id="28968-115">Actuellement, l’API fournit uniquement un modèle spécifique à un domaine unique : célébrités.</span><span class="sxs-lookup"><span data-stu-id="28968-115">Currently, the API only provides a single domain-specific model: celebrities.</span></span> <span data-ttu-id="28968-116">Deux méthodes d’entrée sont pris en charge : chargement d’une image (1) ou (2) en spécifiant une URL d’image.</span><span class="sxs-lookup"><span data-stu-id="28968-116">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="28968-117">Une réponse correcte s’affichera dans JSON.</span><span class="sxs-lookup"><span data-stu-id="28968-117">A successful response will be returned in JSON.</span></span>

    <span data-ttu-id="28968-118">Si la demande a échoué, la réponse contient un code d’erreur et un message pour aider à comprendre la cause du problème.</span><span class="sxs-lookup"><span data-stu-id="28968-118">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function analyzeImageByDomain(model: string, url: string, options?: function)'
    parameters:
    - id: model
      type:
      - string
      description: >
        <span data-ttu-id="28968-119">Contenu spécifique à un domaine à reconnaître.</span><span class="sxs-lookup"><span data-stu-id="28968-119">The domain-specific content to recognize.</span></span> <span data-ttu-id="28968-120">Les valeurs possibles sont : « Célébrités », « Points de repère »</span><span class="sxs-lookup"><span data-stu-id="28968-120">Possible values include: 'Celebrities', 'Landmarks'</span></span>
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.DomainModelResults>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomain_1
  name: analyzeImageByDomain
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="28968-121">Cette opération reconnaît le contenu au sein d’une image en appliquant un modèle spécifique à un domaine.</span><span class="sxs-lookup"><span data-stu-id="28968-121">This operation recognizes content within an image by applying a domain-specific model.</span></span>  <span data-ttu-id="28968-122">La liste des modèles spécifiques à un domaine qui sont pris en charge par l’API vision par ordinateur peut être récupérée à l’aide de la demande d’obtention de /models.</span><span class="sxs-lookup"><span data-stu-id="28968-122">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span>  <span data-ttu-id="28968-123">Actuellement, l’API fournit uniquement un modèle spécifique à un domaine unique : célébrités.</span><span class="sxs-lookup"><span data-stu-id="28968-123">Currently, the API only provides a single domain-specific model: celebrities.</span></span> <span data-ttu-id="28968-124">Deux méthodes d’entrée sont pris en charge : chargement d’une image (1) ou (2) en spécifiant une URL d’image.</span><span class="sxs-lookup"><span data-stu-id="28968-124">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="28968-125">Une réponse correcte s’affichera dans JSON.</span><span class="sxs-lookup"><span data-stu-id="28968-125">A successful response will be returned in JSON.</span></span>

    <span data-ttu-id="28968-126">Si la demande a échoué, la réponse contient un code d’erreur et un message pour aider à comprendre la cause du problème.</span><span class="sxs-lookup"><span data-stu-id="28968-126">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function analyzeImageByDomain(model: string, url: string, callback: ServiceCallback<DomainModelResults>)'
    parameters:
    - id: model
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.DomainModelResults>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.DomainModelResults>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomain_2
  name: analyzeImageByDomain
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="28968-127">Cette opération reconnaît le contenu au sein d’une image en appliquant un modèle spécifique à un domaine.</span><span class="sxs-lookup"><span data-stu-id="28968-127">This operation recognizes content within an image by applying a domain-specific model.</span></span>  <span data-ttu-id="28968-128">La liste des modèles spécifiques à un domaine qui sont pris en charge par l’API vision par ordinateur peut être récupérée à l’aide de la demande d’obtention de /models.</span><span class="sxs-lookup"><span data-stu-id="28968-128">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span>  <span data-ttu-id="28968-129">Actuellement, l’API fournit uniquement un modèle spécifique à un domaine unique : célébrités.</span><span class="sxs-lookup"><span data-stu-id="28968-129">Currently, the API only provides a single domain-specific model: celebrities.</span></span> <span data-ttu-id="28968-130">Deux méthodes d’entrée sont pris en charge : chargement d’une image (1) ou (2) en spécifiant une URL d’image.</span><span class="sxs-lookup"><span data-stu-id="28968-130">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="28968-131">Une réponse correcte s’affichera dans JSON.</span><span class="sxs-lookup"><span data-stu-id="28968-131">A successful response will be returned in JSON.</span></span>

    <span data-ttu-id="28968-132">Si la demande a échoué, la réponse contient un code d’erreur et un message pour aider à comprendre la cause du problème.</span><span class="sxs-lookup"><span data-stu-id="28968-132">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function analyzeImageByDomain(model: string, url: string, options: function, callback: ServiceCallback<DomainModelResults>)'
    parameters:
    - id: model
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.DomainModelResults>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.DomainModelResults>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomainInStream
  name: analyzeImageByDomainInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="28968-133">Cette opération reconnaît le contenu au sein d’une image en appliquant un modèle spécifique à un domaine.</span><span class="sxs-lookup"><span data-stu-id="28968-133">This operation recognizes content within an image by applying a domain-specific model.</span></span>  <span data-ttu-id="28968-134">La liste des modèles spécifiques à un domaine qui sont pris en charge par l’API vision par ordinateur peut être récupérée à l’aide de la demande d’obtention de /models.</span><span class="sxs-lookup"><span data-stu-id="28968-134">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span>  <span data-ttu-id="28968-135">Actuellement, l’API fournit uniquement un modèle spécifique à un domaine unique : célébrités.</span><span class="sxs-lookup"><span data-stu-id="28968-135">Currently, the API only provides a single domain-specific model: celebrities.</span></span> <span data-ttu-id="28968-136">Deux méthodes d’entrée sont pris en charge : chargement d’une image (1) ou (2) en spécifiant une URL d’image.</span><span class="sxs-lookup"><span data-stu-id="28968-136">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="28968-137">Une réponse correcte s’affichera dans JSON.</span><span class="sxs-lookup"><span data-stu-id="28968-137">A successful response will be returned in JSON.</span></span>

    <span data-ttu-id="28968-138">Si la demande a échoué, la réponse contient un code d’erreur et un message pour aider à comprendre la cause du problème.</span><span class="sxs-lookup"><span data-stu-id="28968-138">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function analyzeImageByDomainInStream(model: string, image: stream.Readable, options?: function)'
    parameters:
    - id: model
      type:
      - string
      description: >
        <span data-ttu-id="28968-139">Contenu spécifique à un domaine à reconnaître.</span><span class="sxs-lookup"><span data-stu-id="28968-139">The domain-specific content to recognize.</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="28968-140">Un flux d’image.</span><span class="sxs-lookup"><span data-stu-id="28968-140">An image stream.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.DomainModelResults>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomainInStream_1
  name: analyzeImageByDomainInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="28968-141">Cette opération reconnaît le contenu au sein d’une image en appliquant un modèle spécifique à un domaine.</span><span class="sxs-lookup"><span data-stu-id="28968-141">This operation recognizes content within an image by applying a domain-specific model.</span></span>  <span data-ttu-id="28968-142">La liste des modèles spécifiques à un domaine qui sont pris en charge par l’API vision par ordinateur peut être récupérée à l’aide de la demande d’obtention de /models.</span><span class="sxs-lookup"><span data-stu-id="28968-142">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span>  <span data-ttu-id="28968-143">Actuellement, l’API fournit uniquement un modèle spécifique à un domaine unique : célébrités.</span><span class="sxs-lookup"><span data-stu-id="28968-143">Currently, the API only provides a single domain-specific model: celebrities.</span></span> <span data-ttu-id="28968-144">Deux méthodes d’entrée sont pris en charge : chargement d’une image (1) ou (2) en spécifiant une URL d’image.</span><span class="sxs-lookup"><span data-stu-id="28968-144">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="28968-145">Une réponse correcte s’affichera dans JSON.</span><span class="sxs-lookup"><span data-stu-id="28968-145">A successful response will be returned in JSON.</span></span>

    <span data-ttu-id="28968-146">Si la demande a échoué, la réponse contient un code d’erreur et un message pour aider à comprendre la cause du problème.</span><span class="sxs-lookup"><span data-stu-id="28968-146">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function analyzeImageByDomainInStream(model: string, image: stream.Readable, callback: ServiceCallback<DomainModelResults>)'
    parameters:
    - id: model
      type:
      - string
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.DomainModelResults>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.DomainModelResults>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomainInStream_2
  name: analyzeImageByDomainInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="28968-147">Cette opération reconnaît le contenu au sein d’une image en appliquant un modèle spécifique à un domaine.</span><span class="sxs-lookup"><span data-stu-id="28968-147">This operation recognizes content within an image by applying a domain-specific model.</span></span>  <span data-ttu-id="28968-148">La liste des modèles spécifiques à un domaine qui sont pris en charge par l’API vision par ordinateur peut être récupérée à l’aide de la demande d’obtention de /models.</span><span class="sxs-lookup"><span data-stu-id="28968-148">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span>  <span data-ttu-id="28968-149">Actuellement, l’API fournit uniquement un modèle spécifique à un domaine unique : célébrités.</span><span class="sxs-lookup"><span data-stu-id="28968-149">Currently, the API only provides a single domain-specific model: celebrities.</span></span> <span data-ttu-id="28968-150">Deux méthodes d’entrée sont pris en charge : chargement d’une image (1) ou (2) en spécifiant une URL d’image.</span><span class="sxs-lookup"><span data-stu-id="28968-150">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="28968-151">Une réponse correcte s’affichera dans JSON.</span><span class="sxs-lookup"><span data-stu-id="28968-151">A successful response will be returned in JSON.</span></span>

    <span data-ttu-id="28968-152">Si la demande a échoué, la réponse contient un code d’erreur et un message pour aider à comprendre la cause du problème.</span><span class="sxs-lookup"><span data-stu-id="28968-152">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function analyzeImageByDomainInStream(model: string, image: stream.Readable, options: function, callback: ServiceCallback<DomainModelResults>)'
    parameters:
    - id: model
      type:
      - string
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.DomainModelResults>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.DomainModelResults>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomainInStreamWithHttpOperationResponse
  name: analyzeImageByDomainInStreamWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="28968-153">Cette opération reconnaît le contenu au sein d’une image en appliquant un modèle spécifique à un domaine.</span><span class="sxs-lookup"><span data-stu-id="28968-153">This operation recognizes content within an image by applying a domain-specific model.</span></span>  <span data-ttu-id="28968-154">La liste des modèles spécifiques à un domaine qui sont pris en charge par l’API vision par ordinateur peut être récupérée à l’aide de la demande d’obtention de /models.</span><span class="sxs-lookup"><span data-stu-id="28968-154">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span>  <span data-ttu-id="28968-155">Actuellement, l’API fournit uniquement un modèle spécifique à un domaine unique : célébrités.</span><span class="sxs-lookup"><span data-stu-id="28968-155">Currently, the API only provides a single domain-specific model: celebrities.</span></span> <span data-ttu-id="28968-156">Deux méthodes d’entrée sont pris en charge : chargement d’une image (1) ou (2) en spécifiant une URL d’image.</span><span class="sxs-lookup"><span data-stu-id="28968-156">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="28968-157">Une réponse correcte s’affichera dans JSON.</span><span class="sxs-lookup"><span data-stu-id="28968-157">A successful response will be returned in JSON.</span></span>

    <span data-ttu-id="28968-158">Si la demande a échoué, la réponse contient un code d’erreur et un message pour aider à comprendre la cause du problème.</span><span class="sxs-lookup"><span data-stu-id="28968-158">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function analyzeImageByDomainInStreamWithHttpOperationResponse(model: string, image: stream.Readable, options?: function)'
    parameters:
    - id: model
      type:
      - string
      description: >
        <span data-ttu-id="28968-159">Contenu spécifique à un domaine à reconnaître.</span><span class="sxs-lookup"><span data-stu-id="28968-159">The domain-specific content to recognize.</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="28968-160">Un flux d’image.</span><span class="sxs-lookup"><span data-stu-id="28968-160">An image stream.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.DomainModelResults>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomainWithHttpOperationResponse
  name: analyzeImageByDomainWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="28968-161">Cette opération reconnaît le contenu au sein d’une image en appliquant un modèle spécifique à un domaine.</span><span class="sxs-lookup"><span data-stu-id="28968-161">This operation recognizes content within an image by applying a domain-specific model.</span></span>  <span data-ttu-id="28968-162">La liste des modèles spécifiques à un domaine qui sont pris en charge par l’API vision par ordinateur peut être récupérée à l’aide de la demande d’obtention de /models.</span><span class="sxs-lookup"><span data-stu-id="28968-162">The list of domain-specific models that are supported by the Computer Vision API can be retrieved using the /models GET request.</span></span>  <span data-ttu-id="28968-163">Actuellement, l’API fournit uniquement un modèle spécifique à un domaine unique : célébrités.</span><span class="sxs-lookup"><span data-stu-id="28968-163">Currently, the API only provides a single domain-specific model: celebrities.</span></span> <span data-ttu-id="28968-164">Deux méthodes d’entrée sont pris en charge : chargement d’une image (1) ou (2) en spécifiant une URL d’image.</span><span class="sxs-lookup"><span data-stu-id="28968-164">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span> <span data-ttu-id="28968-165">Une réponse correcte s’affichera dans JSON.</span><span class="sxs-lookup"><span data-stu-id="28968-165">A successful response will be returned in JSON.</span></span>

    <span data-ttu-id="28968-166">Si la demande a échoué, la réponse contient un code d’erreur et un message pour aider à comprendre la cause du problème.</span><span class="sxs-lookup"><span data-stu-id="28968-166">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>
  syntax:
    content: 'function analyzeImageByDomainWithHttpOperationResponse(model: string, url: string, options?: function)'
    parameters:
    - id: model
      type:
      - string
      description: >
        <span data-ttu-id="28968-167">Contenu spécifique à un domaine à reconnaître.</span><span class="sxs-lookup"><span data-stu-id="28968-167">The domain-specific content to recognize.</span></span> <span data-ttu-id="28968-168">Les valeurs possibles sont : « Célébrités », « Points de repère »</span><span class="sxs-lookup"><span data-stu-id="28968-168">Possible values include: 'Celebrities', 'Landmarks'</span></span>
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.DomainModelResults>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageInStream
  name: analyzeImageInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="28968-169">Cette opération extrait un ensemble complet de fonctionnalités visuelles en fonction du contenu de l’image.</span><span class="sxs-lookup"><span data-stu-id="28968-169">This operation extracts a rich set of visual features based on the image content.</span></span>
  syntax:
    content: 'function analyzeImageInStream(image: stream.Readable, options?: function)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="28968-170">Un flux d’image.</span><span class="sxs-lookup"><span data-stu-id="28968-170">An image stream.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageInStream_1
  name: analyzeImageInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="28968-171">Cette opération extrait un ensemble complet de fonctionnalités visuelles en fonction du contenu de l’image.</span><span class="sxs-lookup"><span data-stu-id="28968-171">This operation extracts a rich set of visual features based on the image content.</span></span>
  syntax:
    content: 'function analyzeImageInStream(image: stream.Readable, callback: ServiceCallback<ImageAnalysis>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageAnalysis>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageInStream_2
  name: analyzeImageInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="28968-172">Cette opération extrait un ensemble complet de fonctionnalités visuelles en fonction du contenu de l’image.</span><span class="sxs-lookup"><span data-stu-id="28968-172">This operation extracts a rich set of visual features based on the image content.</span></span>
  syntax:
    content: 'function analyzeImageInStream(image: stream.Readable, options: function, callback: ServiceCallback<ImageAnalysis>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageAnalysis>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageInStreamWithHttpOperationResponse
  name: analyzeImageInStreamWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="28968-173">Cette opération extrait un ensemble complet de fonctionnalités visuelles en fonction du contenu de l’image.</span><span class="sxs-lookup"><span data-stu-id="28968-173">This operation extracts a rich set of visual features based on the image content.</span></span>
  syntax:
    content: 'function analyzeImageInStreamWithHttpOperationResponse(image: stream.Readable, options?: function)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="28968-174">Un flux d’image.</span><span class="sxs-lookup"><span data-stu-id="28968-174">An image stream.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageAnalysis>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageWithHttpOperationResponse
  name: analyzeImageWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="28968-175">Cette opération extrait un ensemble complet de fonctionnalités visuelles en fonction du contenu de l’image.</span><span class="sxs-lookup"><span data-stu-id="28968-175">This operation extracts a rich set of visual features based on the image content.</span></span> <span data-ttu-id="28968-176">Deux méthodes d’entrée sont pris en charge : chargement d’une image (1) ou (2) en spécifiant une URL d’image.</span><span class="sxs-lookup"><span data-stu-id="28968-176">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.</span></span>  <span data-ttu-id="28968-177">Au sein de votre demande, il existe un paramètre facultatif pour vous permettre de choisir les fonctionnalités à retourner.</span><span class="sxs-lookup"><span data-stu-id="28968-177">Within your request, there is an optional parameter to allow you to choose which features to return.</span></span>  <span data-ttu-id="28968-178">Par défaut, les catégories de l’image sont retournés dans la réponse.</span><span class="sxs-lookup"><span data-stu-id="28968-178">By default, image categories are returned in the response.</span></span>'
  syntax:
    content: 'function analyzeImageWithHttpOperationResponse(url: string, options?: function)'
    parameters:
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageAnalysis>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.azureRegion
  name: azureRegion
  fullName: azureRegion
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'azureRegion: string'
    return:
      type:
      - string
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.constructor
  name: ComputerVisionAPIClient
  children: []
  type: constructor
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'new ComputerVisionAPIClient(credentials: ServiceClientCredentials, azureRegion: string, options?: ServiceClientOptions)'
    parameters:
    - id: credentials
      type:
      - ServiceClientCredentials
      description: >
        <span data-ttu-id="28968-179">Informations d’identification d’abonnement qui identifient l’abonnement du client.</span><span class="sxs-lookup"><span data-stu-id="28968-179">Subscription credentials which uniquely identify client subscription.</span></span>
    - id: azureRegion
      type:
      - string
      description: >
        <span data-ttu-id="28968-180">Régions Azure prises en charge pour les points de terminaison Cognitive Services.</span><span class="sxs-lookup"><span data-stu-id="28968-180">Supported Azure regions for Cognitive Services endpoints.</span></span> <span data-ttu-id="28968-181">Les valeurs possibles sont : 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus', 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'</span><span class="sxs-lookup"><span data-stu-id="28968-181">Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus', 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'</span></span>
    - id: options
      type:
      - ServiceClientOptions
      description: ''
      optional: true
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.credentials
  name: credentials
  fullName: credentials
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'credentials: ServiceClientCredentials'
    return:
      type:
      - ServiceClientCredentials
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImage_1
  name: describeImage
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="28968-182">Cette opération génère une description d’une image dans un langage lisible humain avec des phrases complètes.</span><span class="sxs-lookup"><span data-stu-id="28968-182">This operation generates a description of an image in human readable language with complete sentences.</span></span>  <span data-ttu-id="28968-183">La description est basée sur une collection de balises de contenu, qui sont également retournées par l’opération.</span><span class="sxs-lookup"><span data-stu-id="28968-183">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="28968-184">Plus d’une description peut être générée pour chaque image.</span><span class="sxs-lookup"><span data-stu-id="28968-184">More than one description can be generated for each image.</span></span>  <span data-ttu-id="28968-185">Descriptions sont triées par leur score de confiance.</span><span class="sxs-lookup"><span data-stu-id="28968-185">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="28968-186">Toutes les descriptions sont en anglais.</span><span class="sxs-lookup"><span data-stu-id="28968-186">All descriptions are in English.</span></span> <span data-ttu-id="28968-187">Deux méthodes d’entrée sont pris en charge : chargement d’une image (1) ou (2) en spécifiant une URL d’image. Une réponse correcte s’affichera dans JSON.</span><span class="sxs-lookup"><span data-stu-id="28968-187">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON.</span></span>  <span data-ttu-id="28968-188">Si la demande a échoué, la réponse contient un code d’erreur et un message pour aider à comprendre la cause du problème.</span><span class="sxs-lookup"><span data-stu-id="28968-188">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>'
  syntax:
    content: 'function describeImage(url: string, callback: ServiceCallback<ImageDescription>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageDescription>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageDescription>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImage
  name: describeImage
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="28968-189">Cette opération génère une description d’une image dans un langage lisible humain avec des phrases complètes.</span><span class="sxs-lookup"><span data-stu-id="28968-189">This operation generates a description of an image in human readable language with complete sentences.</span></span>  <span data-ttu-id="28968-190">La description est basée sur une collection de balises de contenu, qui sont également retournées par l’opération.</span><span class="sxs-lookup"><span data-stu-id="28968-190">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="28968-191">Plus d’une description peut être générée pour chaque image.</span><span class="sxs-lookup"><span data-stu-id="28968-191">More than one description can be generated for each image.</span></span>  <span data-ttu-id="28968-192">Descriptions sont triées par leur score de confiance.</span><span class="sxs-lookup"><span data-stu-id="28968-192">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="28968-193">Toutes les descriptions sont en anglais.</span><span class="sxs-lookup"><span data-stu-id="28968-193">All descriptions are in English.</span></span> <span data-ttu-id="28968-194">Deux méthodes d’entrée sont pris en charge : chargement d’une image (1) ou (2) en spécifiant une URL d’image. Une réponse correcte s’affichera dans JSON.</span><span class="sxs-lookup"><span data-stu-id="28968-194">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON.</span></span>  <span data-ttu-id="28968-195">Si la demande a échoué, la réponse contient un code d’erreur et un message pour aider à comprendre la cause du problème.</span><span class="sxs-lookup"><span data-stu-id="28968-195">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>'
  syntax:
    content: 'function describeImage(url: string, options?: function)'
    parameters:
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageDescription>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImage_2
  name: describeImage
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="28968-196">Cette opération génère une description d’une image dans un langage lisible humain avec des phrases complètes.</span><span class="sxs-lookup"><span data-stu-id="28968-196">This operation generates a description of an image in human readable language with complete sentences.</span></span>  <span data-ttu-id="28968-197">La description est basée sur une collection de balises de contenu, qui sont également retournées par l’opération.</span><span class="sxs-lookup"><span data-stu-id="28968-197">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="28968-198">Plus d’une description peut être générée pour chaque image.</span><span class="sxs-lookup"><span data-stu-id="28968-198">More than one description can be generated for each image.</span></span>  <span data-ttu-id="28968-199">Descriptions sont triées par leur score de confiance.</span><span class="sxs-lookup"><span data-stu-id="28968-199">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="28968-200">Toutes les descriptions sont en anglais.</span><span class="sxs-lookup"><span data-stu-id="28968-200">All descriptions are in English.</span></span> <span data-ttu-id="28968-201">Deux méthodes d’entrée sont pris en charge : chargement d’une image (1) ou (2) en spécifiant une URL d’image. Une réponse correcte s’affichera dans JSON.</span><span class="sxs-lookup"><span data-stu-id="28968-201">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON.</span></span>  <span data-ttu-id="28968-202">Si la demande a échoué, la réponse contient un code d’erreur et un message pour aider à comprendre la cause du problème.</span><span class="sxs-lookup"><span data-stu-id="28968-202">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>'
  syntax:
    content: 'function describeImage(url: string, options: function, callback: ServiceCallback<ImageDescription>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageDescription>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageDescription>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImageInStream
  name: describeImageInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="28968-203">Cette opération génère une description d’une image dans un langage lisible humain avec des phrases complètes.</span><span class="sxs-lookup"><span data-stu-id="28968-203">This operation generates a description of an image in human readable language with complete sentences.</span></span>  <span data-ttu-id="28968-204">La description est basée sur une collection de balises de contenu, qui sont également retournées par l’opération.</span><span class="sxs-lookup"><span data-stu-id="28968-204">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="28968-205">Plus d’une description peut être générée pour chaque image.</span><span class="sxs-lookup"><span data-stu-id="28968-205">More than one description can be generated for each image.</span></span>  <span data-ttu-id="28968-206">Descriptions sont triées par leur score de confiance.</span><span class="sxs-lookup"><span data-stu-id="28968-206">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="28968-207">Toutes les descriptions sont en anglais.</span><span class="sxs-lookup"><span data-stu-id="28968-207">All descriptions are in English.</span></span> <span data-ttu-id="28968-208">Deux méthodes d’entrée sont pris en charge : chargement d’une image (1) ou (2) en spécifiant une URL d’image. Une réponse correcte s’affichera dans JSON.</span><span class="sxs-lookup"><span data-stu-id="28968-208">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON.</span></span>  <span data-ttu-id="28968-209">Si la demande a échoué, la réponse contient un code d’erreur et un message pour aider à comprendre la cause du problème.</span><span class="sxs-lookup"><span data-stu-id="28968-209">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>'
  syntax:
    content: 'function describeImageInStream(image: stream.Readable, options?: function)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="28968-210">Un flux d’image.</span><span class="sxs-lookup"><span data-stu-id="28968-210">An image stream.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageDescription>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImageInStream_1
  name: describeImageInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="28968-211">Cette opération génère une description d’une image dans un langage lisible humain avec des phrases complètes.</span><span class="sxs-lookup"><span data-stu-id="28968-211">This operation generates a description of an image in human readable language with complete sentences.</span></span>  <span data-ttu-id="28968-212">La description est basée sur une collection de balises de contenu, qui sont également retournées par l’opération.</span><span class="sxs-lookup"><span data-stu-id="28968-212">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="28968-213">Plus d’une description peut être générée pour chaque image.</span><span class="sxs-lookup"><span data-stu-id="28968-213">More than one description can be generated for each image.</span></span>  <span data-ttu-id="28968-214">Descriptions sont triées par leur score de confiance.</span><span class="sxs-lookup"><span data-stu-id="28968-214">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="28968-215">Toutes les descriptions sont en anglais.</span><span class="sxs-lookup"><span data-stu-id="28968-215">All descriptions are in English.</span></span> <span data-ttu-id="28968-216">Deux méthodes d’entrée sont pris en charge : chargement d’une image (1) ou (2) en spécifiant une URL d’image. Une réponse correcte s’affichera dans JSON.</span><span class="sxs-lookup"><span data-stu-id="28968-216">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON.</span></span>  <span data-ttu-id="28968-217">Si la demande a échoué, la réponse contient un code d’erreur et un message pour aider à comprendre la cause du problème.</span><span class="sxs-lookup"><span data-stu-id="28968-217">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>'
  syntax:
    content: 'function describeImageInStream(image: stream.Readable, callback: ServiceCallback<ImageDescription>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageDescription>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageDescription>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImageInStream_2
  name: describeImageInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="28968-218">Cette opération génère une description d’une image dans un langage lisible humain avec des phrases complètes.</span><span class="sxs-lookup"><span data-stu-id="28968-218">This operation generates a description of an image in human readable language with complete sentences.</span></span>  <span data-ttu-id="28968-219">La description est basée sur une collection de balises de contenu, qui sont également retournées par l’opération.</span><span class="sxs-lookup"><span data-stu-id="28968-219">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="28968-220">Plus d’une description peut être générée pour chaque image.</span><span class="sxs-lookup"><span data-stu-id="28968-220">More than one description can be generated for each image.</span></span>  <span data-ttu-id="28968-221">Descriptions sont triées par leur score de confiance.</span><span class="sxs-lookup"><span data-stu-id="28968-221">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="28968-222">Toutes les descriptions sont en anglais.</span><span class="sxs-lookup"><span data-stu-id="28968-222">All descriptions are in English.</span></span> <span data-ttu-id="28968-223">Deux méthodes d’entrée sont pris en charge : chargement d’une image (1) ou (2) en spécifiant une URL d’image. Une réponse correcte s’affichera dans JSON.</span><span class="sxs-lookup"><span data-stu-id="28968-223">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON.</span></span>  <span data-ttu-id="28968-224">Si la demande a échoué, la réponse contient un code d’erreur et un message pour aider à comprendre la cause du problème.</span><span class="sxs-lookup"><span data-stu-id="28968-224">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>'
  syntax:
    content: 'function describeImageInStream(image: stream.Readable, options: function, callback: ServiceCallback<ImageDescription>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageDescription>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageDescription>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImageInStreamWithHttpOperationResponse
  name: describeImageInStreamWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="28968-225">Cette opération génère une description d’une image dans un langage lisible humain avec des phrases complètes.</span><span class="sxs-lookup"><span data-stu-id="28968-225">This operation generates a description of an image in human readable language with complete sentences.</span></span>  <span data-ttu-id="28968-226">La description est basée sur une collection de balises de contenu, qui sont également retournées par l’opération.</span><span class="sxs-lookup"><span data-stu-id="28968-226">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="28968-227">Plus d’une description peut être générée pour chaque image.</span><span class="sxs-lookup"><span data-stu-id="28968-227">More than one description can be generated for each image.</span></span>  <span data-ttu-id="28968-228">Descriptions sont triées par leur score de confiance.</span><span class="sxs-lookup"><span data-stu-id="28968-228">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="28968-229">Toutes les descriptions sont en anglais.</span><span class="sxs-lookup"><span data-stu-id="28968-229">All descriptions are in English.</span></span> <span data-ttu-id="28968-230">Deux méthodes d’entrée sont pris en charge : chargement d’une image (1) ou (2) en spécifiant une URL d’image. Une réponse correcte s’affichera dans JSON.</span><span class="sxs-lookup"><span data-stu-id="28968-230">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON.</span></span>  <span data-ttu-id="28968-231">Si la demande a échoué, la réponse contient un code d’erreur et un message pour aider à comprendre la cause du problème.</span><span class="sxs-lookup"><span data-stu-id="28968-231">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>'
  syntax:
    content: 'function describeImageInStreamWithHttpOperationResponse(image: stream.Readable, options?: function)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="28968-232">Un flux d’image.</span><span class="sxs-lookup"><span data-stu-id="28968-232">An image stream.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageDescription>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImageWithHttpOperationResponse
  name: describeImageWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="28968-233">Cette opération génère une description d’une image dans un langage lisible humain avec des phrases complètes.</span><span class="sxs-lookup"><span data-stu-id="28968-233">This operation generates a description of an image in human readable language with complete sentences.</span></span>  <span data-ttu-id="28968-234">La description est basée sur une collection de balises de contenu, qui sont également retournées par l’opération.</span><span class="sxs-lookup"><span data-stu-id="28968-234">The description is based on a collection of content tags, which are also returned by the operation.</span></span> <span data-ttu-id="28968-235">Plus d’une description peut être générée pour chaque image.</span><span class="sxs-lookup"><span data-stu-id="28968-235">More than one description can be generated for each image.</span></span>  <span data-ttu-id="28968-236">Descriptions sont triées par leur score de confiance.</span><span class="sxs-lookup"><span data-stu-id="28968-236">Descriptions are ordered by their confidence score.</span></span> <span data-ttu-id="28968-237">Toutes les descriptions sont en anglais.</span><span class="sxs-lookup"><span data-stu-id="28968-237">All descriptions are in English.</span></span> <span data-ttu-id="28968-238">Deux méthodes d’entrée sont pris en charge : chargement d’une image (1) ou (2) en spécifiant une URL d’image. Une réponse correcte s’affichera dans JSON.</span><span class="sxs-lookup"><span data-stu-id="28968-238">Two input methods are supported -- (1) Uploading an image or (2) specifying an image URL.A successful response will be returned in JSON.</span></span>  <span data-ttu-id="28968-239">Si la demande a échoué, la réponse contient un code d’erreur et un message pour aider à comprendre la cause du problème.</span><span class="sxs-lookup"><span data-stu-id="28968-239">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>'
  syntax:
    content: 'function describeImageWithHttpOperationResponse(url: string, options?: function)'
    parameters:
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageDescription>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnail_1
  name: generateThumbnail
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="28968-240">Cette opération génère une image miniature avec la hauteur et la largeur spécifiée par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="28968-240">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="28968-241">Par défaut, le service analyse l’image, identifie la région d’intérêt (ROI) et génère des coordonnées de rognage intelligentes basées sur le retour sur investissement.</span><span class="sxs-lookup"><span data-stu-id="28968-241">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span>

    <span data-ttu-id="28968-242">Rognage intelligent aide lorsque vous spécifiez un rapport hauteur / largeur différent de celui de l’image d’entrée.</span><span class="sxs-lookup"><span data-stu-id="28968-242">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span> <span data-ttu-id="28968-243">Une réponse correcte contient l’image miniature binaire.</span><span class="sxs-lookup"><span data-stu-id="28968-243">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="28968-244">Si la demande a échoué, la réponse contient un code d’erreur et un message pour aider à déterminer la cause du problème.</span><span class="sxs-lookup"><span data-stu-id="28968-244">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
  syntax:
    content: 'function generateThumbnail(width: number, height: number, url: string, callback: ServiceCallback<stream.Readable>)'
    parameters:
    - id: width
      type:
      - number
      description: ''
    - id: height
      type:
      - number
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<stream.Readable>
      description: ''
    return:
      type:
      - Promise<stream.Readable>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnail_2
  name: generateThumbnail
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="28968-245">Cette opération génère une image miniature avec la hauteur et la largeur spécifiée par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="28968-245">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="28968-246">Par défaut, le service analyse l’image, identifie la région d’intérêt (ROI) et génère des coordonnées de rognage intelligentes basées sur le retour sur investissement.</span><span class="sxs-lookup"><span data-stu-id="28968-246">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span>

    <span data-ttu-id="28968-247">Rognage intelligent aide lorsque vous spécifiez un rapport hauteur / largeur différent de celui de l’image d’entrée.</span><span class="sxs-lookup"><span data-stu-id="28968-247">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span> <span data-ttu-id="28968-248">Une réponse correcte contient l’image miniature binaire.</span><span class="sxs-lookup"><span data-stu-id="28968-248">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="28968-249">Si la demande a échoué, la réponse contient un code d’erreur et un message pour aider à déterminer la cause du problème.</span><span class="sxs-lookup"><span data-stu-id="28968-249">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
  syntax:
    content: 'function generateThumbnail(width: number, height: number, url: string, options: function, callback: ServiceCallback<stream.Readable>)'
    parameters:
    - id: width
      type:
      - number
      description: ''
    - id: height
      type:
      - number
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<stream.Readable>
      description: ''
    return:
      type:
      - Promise<stream.Readable>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnail
  name: generateThumbnail
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="28968-250">Cette opération génère une image miniature avec la hauteur et la largeur spécifiée par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="28968-250">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="28968-251">Par défaut, le service analyse l’image, identifie la région d’intérêt (ROI) et génère des coordonnées de rognage intelligentes basées sur le retour sur investissement.</span><span class="sxs-lookup"><span data-stu-id="28968-251">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span>

    <span data-ttu-id="28968-252">Rognage intelligent aide lorsque vous spécifiez un rapport hauteur / largeur différent de celui de l’image d’entrée.</span><span class="sxs-lookup"><span data-stu-id="28968-252">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span> <span data-ttu-id="28968-253">Une réponse correcte contient l’image miniature binaire.</span><span class="sxs-lookup"><span data-stu-id="28968-253">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="28968-254">Si la demande a échoué, la réponse contient un code d’erreur et un message pour aider à déterminer la cause du problème.</span><span class="sxs-lookup"><span data-stu-id="28968-254">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
  syntax:
    content: 'function generateThumbnail(width: number, height: number, url: string, options?: function)'
    parameters:
    - id: width
      type:
      - number
      description: >
        <span data-ttu-id="28968-255">Largeur de la miniature.</span><span class="sxs-lookup"><span data-stu-id="28968-255">Width of the thumbnail.</span></span> <span data-ttu-id="28968-256">Il doit comprendre entre 1 et 1 024.</span><span class="sxs-lookup"><span data-stu-id="28968-256">It must be between 1 and 1024.</span></span>

        <span data-ttu-id="28968-257">Minimum recommandé de 50.</span><span class="sxs-lookup"><span data-stu-id="28968-257">Recommended minimum of 50.</span></span>
    - id: height
      type:
      - number
      description: >
        <span data-ttu-id="28968-258">Hauteur de la miniature.</span><span class="sxs-lookup"><span data-stu-id="28968-258">Height of the thumbnail.</span></span> <span data-ttu-id="28968-259">Il doit être comprise entre 1 et</span><span class="sxs-lookup"><span data-stu-id="28968-259">It must be between 1 and</span></span>

        1024. <span data-ttu-id="28968-260">Minimum recommandé de 50.</span><span class="sxs-lookup"><span data-stu-id="28968-260">Recommended minimum of 50.</span></span>
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<stream.Readable>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnailInStream
  name: generateThumbnailInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="28968-261">Cette opération génère une image miniature avec la hauteur et la largeur spécifiée par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="28968-261">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="28968-262">Par défaut, le service analyse l’image, identifie la région d’intérêt (ROI) et génère des coordonnées de rognage intelligentes basées sur le retour sur investissement.</span><span class="sxs-lookup"><span data-stu-id="28968-262">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span>

    <span data-ttu-id="28968-263">Rognage intelligent aide lorsque vous spécifiez un rapport hauteur / largeur différent de celui de l’image d’entrée.</span><span class="sxs-lookup"><span data-stu-id="28968-263">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span> <span data-ttu-id="28968-264">Une réponse correcte contient l’image miniature binaire.</span><span class="sxs-lookup"><span data-stu-id="28968-264">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="28968-265">Si la demande a échoué, la réponse contient un code d’erreur et un message pour aider à déterminer la cause du problème.</span><span class="sxs-lookup"><span data-stu-id="28968-265">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
  syntax:
    content: 'function generateThumbnailInStream(width: number, height: number, image: stream.Readable, options?: function)'
    parameters:
    - id: width
      type:
      - number
      description: >
        <span data-ttu-id="28968-266">Largeur de la miniature.</span><span class="sxs-lookup"><span data-stu-id="28968-266">Width of the thumbnail.</span></span> <span data-ttu-id="28968-267">Il doit comprendre entre 1 et 1 024.</span><span class="sxs-lookup"><span data-stu-id="28968-267">It must be between 1 and 1024.</span></span>

        <span data-ttu-id="28968-268">Minimum recommandé de 50.</span><span class="sxs-lookup"><span data-stu-id="28968-268">Recommended minimum of 50.</span></span>
    - id: height
      type:
      - number
      description: >
        <span data-ttu-id="28968-269">Hauteur de la miniature.</span><span class="sxs-lookup"><span data-stu-id="28968-269">Height of the thumbnail.</span></span> <span data-ttu-id="28968-270">Il doit être comprise entre 1 et</span><span class="sxs-lookup"><span data-stu-id="28968-270">It must be between 1 and</span></span>

        1024. <span data-ttu-id="28968-271">Minimum recommandé de 50.</span><span class="sxs-lookup"><span data-stu-id="28968-271">Recommended minimum of 50.</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="28968-272">Un flux d’image.</span><span class="sxs-lookup"><span data-stu-id="28968-272">An image stream.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<stream.Readable>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnailInStream_1
  name: generateThumbnailInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="28968-273">Cette opération génère une image miniature avec la hauteur et la largeur spécifiée par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="28968-273">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="28968-274">Par défaut, le service analyse l’image, identifie la région d’intérêt (ROI) et génère des coordonnées de rognage intelligentes basées sur le retour sur investissement.</span><span class="sxs-lookup"><span data-stu-id="28968-274">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span>

    <span data-ttu-id="28968-275">Rognage intelligent aide lorsque vous spécifiez un rapport hauteur / largeur différent de celui de l’image d’entrée.</span><span class="sxs-lookup"><span data-stu-id="28968-275">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span> <span data-ttu-id="28968-276">Une réponse correcte contient l’image miniature binaire.</span><span class="sxs-lookup"><span data-stu-id="28968-276">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="28968-277">Si la demande a échoué, la réponse contient un code d’erreur et un message pour aider à déterminer la cause du problème.</span><span class="sxs-lookup"><span data-stu-id="28968-277">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
  syntax:
    content: 'function generateThumbnailInStream(width: number, height: number, image: stream.Readable, callback: ServiceCallback<stream.Readable>)'
    parameters:
    - id: width
      type:
      - number
      description: ''
    - id: height
      type:
      - number
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<stream.Readable>
      description: ''
    return:
      type:
      - Promise<stream.Readable>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnailInStream_2
  name: generateThumbnailInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="28968-278">Cette opération génère une image miniature avec la hauteur et la largeur spécifiée par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="28968-278">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="28968-279">Par défaut, le service analyse l’image, identifie la région d’intérêt (ROI) et génère des coordonnées de rognage intelligentes basées sur le retour sur investissement.</span><span class="sxs-lookup"><span data-stu-id="28968-279">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span>

    <span data-ttu-id="28968-280">Rognage intelligent aide lorsque vous spécifiez un rapport hauteur / largeur différent de celui de l’image d’entrée.</span><span class="sxs-lookup"><span data-stu-id="28968-280">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span> <span data-ttu-id="28968-281">Une réponse correcte contient l’image miniature binaire.</span><span class="sxs-lookup"><span data-stu-id="28968-281">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="28968-282">Si la demande a échoué, la réponse contient un code d’erreur et un message pour aider à déterminer la cause du problème.</span><span class="sxs-lookup"><span data-stu-id="28968-282">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
  syntax:
    content: 'function generateThumbnailInStream(width: number, height: number, image: stream.Readable, options: function, callback: ServiceCallback<stream.Readable>)'
    parameters:
    - id: width
      type:
      - number
      description: ''
    - id: height
      type:
      - number
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<stream.Readable>
      description: ''
    return:
      type:
      - Promise<stream.Readable>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnailInStreamWithHttpOperationResponse
  name: generateThumbnailInStreamWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="28968-283">Cette opération génère une image miniature avec la hauteur et la largeur spécifiée par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="28968-283">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="28968-284">Par défaut, le service analyse l’image, identifie la région d’intérêt (ROI) et génère des coordonnées de rognage intelligentes basées sur le retour sur investissement.</span><span class="sxs-lookup"><span data-stu-id="28968-284">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span>

    <span data-ttu-id="28968-285">Rognage intelligent aide lorsque vous spécifiez un rapport hauteur / largeur différent de celui de l’image d’entrée.</span><span class="sxs-lookup"><span data-stu-id="28968-285">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span> <span data-ttu-id="28968-286">Une réponse correcte contient l’image miniature binaire.</span><span class="sxs-lookup"><span data-stu-id="28968-286">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="28968-287">Si la demande a échoué, la réponse contient un code d’erreur et un message pour aider à déterminer la cause du problème.</span><span class="sxs-lookup"><span data-stu-id="28968-287">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
  syntax:
    content: 'function generateThumbnailInStreamWithHttpOperationResponse(width: number, height: number, image: stream.Readable, options?: function)'
    parameters:
    - id: width
      type:
      - number
      description: >
        <span data-ttu-id="28968-288">Largeur de la miniature.</span><span class="sxs-lookup"><span data-stu-id="28968-288">Width of the thumbnail.</span></span> <span data-ttu-id="28968-289">Il doit comprendre entre 1 et 1 024.</span><span class="sxs-lookup"><span data-stu-id="28968-289">It must be between 1 and 1024.</span></span>

        <span data-ttu-id="28968-290">Minimum recommandé de 50.</span><span class="sxs-lookup"><span data-stu-id="28968-290">Recommended minimum of 50.</span></span>
    - id: height
      type:
      - number
      description: >
        <span data-ttu-id="28968-291">Hauteur de la miniature.</span><span class="sxs-lookup"><span data-stu-id="28968-291">Height of the thumbnail.</span></span> <span data-ttu-id="28968-292">Il doit être comprise entre 1 et</span><span class="sxs-lookup"><span data-stu-id="28968-292">It must be between 1 and</span></span>

        1024. <span data-ttu-id="28968-293">Minimum recommandé de 50.</span><span class="sxs-lookup"><span data-stu-id="28968-293">Recommended minimum of 50.</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="28968-294">Un flux d’image.</span><span class="sxs-lookup"><span data-stu-id="28968-294">An image stream.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<stream.Readable>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnailWithHttpOperationResponse
  name: generateThumbnailWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="28968-295">Cette opération génère une image miniature avec la hauteur et la largeur spécifiée par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="28968-295">This operation generates a thumbnail image with the user-specified width and height.</span></span> <span data-ttu-id="28968-296">Par défaut, le service analyse l’image, identifie la région d’intérêt (ROI) et génère des coordonnées de rognage intelligentes basées sur le retour sur investissement.</span><span class="sxs-lookup"><span data-stu-id="28968-296">By default, the service analyzes the image, identifies the region of interest (ROI), and generates smart cropping coordinates based on the ROI.</span></span>

    <span data-ttu-id="28968-297">Rognage intelligent aide lorsque vous spécifiez un rapport hauteur / largeur différent de celui de l’image d’entrée.</span><span class="sxs-lookup"><span data-stu-id="28968-297">Smart cropping helps when you specify an aspect ratio that differs from that of the input image.</span></span> <span data-ttu-id="28968-298">Une réponse correcte contient l’image miniature binaire.</span><span class="sxs-lookup"><span data-stu-id="28968-298">A successful response contains the thumbnail image binary.</span></span> <span data-ttu-id="28968-299">Si la demande a échoué, la réponse contient un code d’erreur et un message pour aider à déterminer la cause du problème.</span><span class="sxs-lookup"><span data-stu-id="28968-299">If the request failed, the response contains an error code and a message to help determine what went wrong.</span></span>
  syntax:
    content: 'function generateThumbnailWithHttpOperationResponse(width: number, height: number, url: string, options?: function)'
    parameters:
    - id: width
      type:
      - number
      description: >
        <span data-ttu-id="28968-300">Largeur de la miniature.</span><span class="sxs-lookup"><span data-stu-id="28968-300">Width of the thumbnail.</span></span> <span data-ttu-id="28968-301">Il doit comprendre entre 1 et 1 024.</span><span class="sxs-lookup"><span data-stu-id="28968-301">It must be between 1 and 1024.</span></span>

        <span data-ttu-id="28968-302">Minimum recommandé de 50.</span><span class="sxs-lookup"><span data-stu-id="28968-302">Recommended minimum of 50.</span></span>
    - id: height
      type:
      - number
      description: >
        <span data-ttu-id="28968-303">Hauteur de la miniature.</span><span class="sxs-lookup"><span data-stu-id="28968-303">Height of the thumbnail.</span></span> <span data-ttu-id="28968-304">Il doit être comprise entre 1 et</span><span class="sxs-lookup"><span data-stu-id="28968-304">It must be between 1 and</span></span>

        1024. <span data-ttu-id="28968-305">Minimum recommandé de 50.</span><span class="sxs-lookup"><span data-stu-id="28968-305">Recommended minimum of 50.</span></span>
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<stream.Readable>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.getTextOperationResult
  name: getTextOperationResult
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="28968-306">Cette interface est utilisée pour obtenir le résultat d’opération de texte.</span><span class="sxs-lookup"><span data-stu-id="28968-306">This interface is used for getting text operation result.</span></span> <span data-ttu-id="28968-307">L’URL à cette interface doit être extrait du champ « Operation-Location » retourné à partir de l’interface de reconnaître le texte.</span><span class="sxs-lookup"><span data-stu-id="28968-307">The URL to this interface should be retrieved from 'Operation-Location' field returned from Recognize Text interface.</span></span>
  syntax:
    content: 'function getTextOperationResult(operationId: string, options?: function)'
    parameters:
    - id: operationId
      type:
      - string
      description: >
        <span data-ttu-id="28968-308">ID de l’opération de texte renvoyée dans la réponse du « Reconnaître manuscrites texte »</span><span class="sxs-lookup"><span data-stu-id="28968-308">Id of the text operation returned in the response of the 'Recognize Handwritten Text'</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TextOperationResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.getTextOperationResult_2
  name: getTextOperationResult
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="28968-309">Cette interface est utilisée pour obtenir le résultat d’opération de texte.</span><span class="sxs-lookup"><span data-stu-id="28968-309">This interface is used for getting text operation result.</span></span> <span data-ttu-id="28968-310">L’URL à cette interface doit être extrait du champ « Operation-Location » retourné à partir de l’interface de reconnaître le texte.</span><span class="sxs-lookup"><span data-stu-id="28968-310">The URL to this interface should be retrieved from 'Operation-Location' field returned from Recognize Text interface.</span></span>
  syntax:
    content: 'function getTextOperationResult(operationId: string, options: function, callback: ServiceCallback<TextOperationResult>)'
    parameters:
    - id: operationId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.TextOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TextOperationResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.getTextOperationResult_1
  name: getTextOperationResult
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="28968-311">Cette interface est utilisée pour obtenir le résultat d’opération de texte.</span><span class="sxs-lookup"><span data-stu-id="28968-311">This interface is used for getting text operation result.</span></span> <span data-ttu-id="28968-312">L’URL à cette interface doit être extrait du champ « Operation-Location » retourné à partir de l’interface de reconnaître le texte.</span><span class="sxs-lookup"><span data-stu-id="28968-312">The URL to this interface should be retrieved from 'Operation-Location' field returned from Recognize Text interface.</span></span>
  syntax:
    content: 'function getTextOperationResult(operationId: string, callback: ServiceCallback<TextOperationResult>)'
    parameters:
    - id: operationId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.TextOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TextOperationResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.getTextOperationResultWithHttpOperationResponse
  name: getTextOperationResultWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="28968-313">Cette interface est utilisée pour obtenir le résultat d’opération de texte.</span><span class="sxs-lookup"><span data-stu-id="28968-313">This interface is used for getting text operation result.</span></span> <span data-ttu-id="28968-314">L’URL à cette interface doit être extrait du champ « Operation-Location » retourné à partir de l’interface de reconnaître le texte.</span><span class="sxs-lookup"><span data-stu-id="28968-314">The URL to this interface should be retrieved from 'Operation-Location' field returned from Recognize Text interface.</span></span>
  syntax:
    content: 'function getTextOperationResultWithHttpOperationResponse(operationId: string, options?: function)'
    parameters:
    - id: operationId
      type:
      - string
      description: >
        <span data-ttu-id="28968-315">ID de l’opération de texte renvoyée dans la réponse du « Reconnaître manuscrites texte »</span><span class="sxs-lookup"><span data-stu-id="28968-315">Id of the text operation returned in the response of the 'Recognize Handwritten Text'</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.TextOperationResult>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.listModels
  name: listModels
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="28968-316">Cette opération renvoie la liste des modèles spécifiques à un domaine qui sont pris en charge par l’API vision par ordinateur.</span><span class="sxs-lookup"><span data-stu-id="28968-316">This operation returns the list of domain-specific models that are supported by the Computer Vision API.</span></span>  <span data-ttu-id="28968-317">Actuellement, l’API prend uniquement en charge un modèle spécifique à un domaine : un module de reconnaissance de célébrités.</span><span class="sxs-lookup"><span data-stu-id="28968-317">Currently, the API only supports one domain-specific model: a celebrity recognizer.</span></span> <span data-ttu-id="28968-318">Une réponse correcte s’affichera dans JSON.</span><span class="sxs-lookup"><span data-stu-id="28968-318">A successful response will be returned in JSON.</span></span>  <span data-ttu-id="28968-319">Si la demande a échoué, la réponse contient un code d’erreur et un message pour aider à comprendre la cause du problème.</span><span class="sxs-lookup"><span data-stu-id="28968-319">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>'
  syntax:
    content: 'function listModels(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ListModelsResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.listModels_2
  name: listModels
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="28968-320">Cette opération renvoie la liste des modèles spécifiques à un domaine qui sont pris en charge par l’API vision par ordinateur.</span><span class="sxs-lookup"><span data-stu-id="28968-320">This operation returns the list of domain-specific models that are supported by the Computer Vision API.</span></span>  <span data-ttu-id="28968-321">Actuellement, l’API prend uniquement en charge un modèle spécifique à un domaine : un module de reconnaissance de célébrités.</span><span class="sxs-lookup"><span data-stu-id="28968-321">Currently, the API only supports one domain-specific model: a celebrity recognizer.</span></span> <span data-ttu-id="28968-322">Une réponse correcte s’affichera dans JSON.</span><span class="sxs-lookup"><span data-stu-id="28968-322">A successful response will be returned in JSON.</span></span>  <span data-ttu-id="28968-323">Si la demande a échoué, la réponse contient un code d’erreur et un message pour aider à comprendre la cause du problème.</span><span class="sxs-lookup"><span data-stu-id="28968-323">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>'
  syntax:
    content: 'function listModels(options: function, callback: ServiceCallback<ListModelsResult>)'
    parameters:
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ListModelsResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ListModelsResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.listModels_1
  name: listModels
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="28968-324">Cette opération renvoie la liste des modèles spécifiques à un domaine qui sont pris en charge par l’API vision par ordinateur.</span><span class="sxs-lookup"><span data-stu-id="28968-324">This operation returns the list of domain-specific models that are supported by the Computer Vision API.</span></span>  <span data-ttu-id="28968-325">Actuellement, l’API prend uniquement en charge un modèle spécifique à un domaine : un module de reconnaissance de célébrités.</span><span class="sxs-lookup"><span data-stu-id="28968-325">Currently, the API only supports one domain-specific model: a celebrity recognizer.</span></span> <span data-ttu-id="28968-326">Une réponse correcte s’affichera dans JSON.</span><span class="sxs-lookup"><span data-stu-id="28968-326">A successful response will be returned in JSON.</span></span>  <span data-ttu-id="28968-327">Si la demande a échoué, la réponse contient un code d’erreur et un message pour aider à comprendre la cause du problème.</span><span class="sxs-lookup"><span data-stu-id="28968-327">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>'
  syntax:
    content: 'function listModels(callback: ServiceCallback<ListModelsResult>)'
    parameters:
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ListModelsResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ListModelsResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.listModelsWithHttpOperationResponse
  name: listModelsWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="28968-328">Cette opération renvoie la liste des modèles spécifiques à un domaine qui sont pris en charge par l’API vision par ordinateur.</span><span class="sxs-lookup"><span data-stu-id="28968-328">This operation returns the list of domain-specific models that are supported by the Computer Vision API.</span></span>  <span data-ttu-id="28968-329">Actuellement, l’API prend uniquement en charge un modèle spécifique à un domaine : un module de reconnaissance de célébrités.</span><span class="sxs-lookup"><span data-stu-id="28968-329">Currently, the API only supports one domain-specific model: a celebrity recognizer.</span></span> <span data-ttu-id="28968-330">Une réponse correcte s’affichera dans JSON.</span><span class="sxs-lookup"><span data-stu-id="28968-330">A successful response will be returned in JSON.</span></span>  <span data-ttu-id="28968-331">Si la demande a échoué, la réponse contient un code d’erreur et un message pour aider à comprendre la cause du problème.</span><span class="sxs-lookup"><span data-stu-id="28968-331">If the request failed, the response will contain an error code and a message to help understand what went wrong.</span></span>'
  syntax:
    content: 'function listModelsWithHttpOperationResponse(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ListModelsResult>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedText_1
  name: recognizePrintedText
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="28968-332">Reconnaissance optique de caractères (OCR) détecte le texte imprimé dans une image et extrait les caractères reconnus dans un flux de caractères exploitable.</span><span class="sxs-lookup"><span data-stu-id="28968-332">Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>

    <span data-ttu-id="28968-333">En cas de réussite, les résultats de la reconnaissance optique de caractères seront affichera.</span><span class="sxs-lookup"><span data-stu-id="28968-333">Upon success, the OCR results will be returned.</span></span> <span data-ttu-id="28968-334">En cas d’échec, le code d’erreur avec un message d’erreur s’affichera.</span><span class="sxs-lookup"><span data-stu-id="28968-334">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="28968-335">Le code d’erreur peut être une des InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage ou InternalServerError.</span><span class="sxs-lookup"><span data-stu-id="28968-335">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
  syntax:
    content: 'function recognizePrintedText(detectOrientation: boolean, url: string, callback: ServiceCallback<OcrResult>)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.OcrResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.OcrResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedText
  name: recognizePrintedText
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="28968-336">Reconnaissance optique de caractères (OCR) détecte le texte imprimé dans une image et extrait les caractères reconnus dans un flux de caractères exploitable.</span><span class="sxs-lookup"><span data-stu-id="28968-336">Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>

    <span data-ttu-id="28968-337">En cas de réussite, les résultats de la reconnaissance optique de caractères seront affichera.</span><span class="sxs-lookup"><span data-stu-id="28968-337">Upon success, the OCR results will be returned.</span></span> <span data-ttu-id="28968-338">En cas d’échec, le code d’erreur avec un message d’erreur s’affichera.</span><span class="sxs-lookup"><span data-stu-id="28968-338">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="28968-339">Le code d’erreur peut être une des InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage ou InternalServerError.</span><span class="sxs-lookup"><span data-stu-id="28968-339">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
  syntax:
    content: 'function recognizePrintedText(detectOrientation: boolean, url: string, options?: function)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: >
        <span data-ttu-id="28968-340">Détecter si l’orientation du texte dans l’image.</span><span class="sxs-lookup"><span data-stu-id="28968-340">Whether detect the text orientation in the image.</span></span> <span data-ttu-id="28968-341">Avec detectOrientation = true, la reconnaissance optique de caractères service tente de détecter l’orientation de l’image et corrigez-le avant tout traitement supplémentaire (par exemple, s’il s’agit envers).</span><span class="sxs-lookup"><span data-stu-id="28968-341">With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down).</span></span>
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.OcrResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedText_2
  name: recognizePrintedText
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="28968-342">Reconnaissance optique de caractères (OCR) détecte le texte imprimé dans une image et extrait les caractères reconnus dans un flux de caractères exploitable.</span><span class="sxs-lookup"><span data-stu-id="28968-342">Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>

    <span data-ttu-id="28968-343">En cas de réussite, les résultats de la reconnaissance optique de caractères seront affichera.</span><span class="sxs-lookup"><span data-stu-id="28968-343">Upon success, the OCR results will be returned.</span></span> <span data-ttu-id="28968-344">En cas d’échec, le code d’erreur avec un message d’erreur s’affichera.</span><span class="sxs-lookup"><span data-stu-id="28968-344">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="28968-345">Le code d’erreur peut être une des InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage ou InternalServerError.</span><span class="sxs-lookup"><span data-stu-id="28968-345">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
  syntax:
    content: 'function recognizePrintedText(detectOrientation: boolean, url: string, options: function, callback: ServiceCallback<OcrResult>)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.OcrResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.OcrResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedTextInStream
  name: recognizePrintedTextInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="28968-346">Reconnaissance optique de caractères (OCR) détecte le texte imprimé dans une image et extrait les caractères reconnus dans un flux de caractères exploitable.</span><span class="sxs-lookup"><span data-stu-id="28968-346">Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>

    <span data-ttu-id="28968-347">En cas de réussite, les résultats de la reconnaissance optique de caractères seront affichera.</span><span class="sxs-lookup"><span data-stu-id="28968-347">Upon success, the OCR results will be returned.</span></span> <span data-ttu-id="28968-348">En cas d’échec, le code d’erreur avec un message d’erreur s’affichera.</span><span class="sxs-lookup"><span data-stu-id="28968-348">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="28968-349">Le code d’erreur peut être une des InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage ou InternalServerError.</span><span class="sxs-lookup"><span data-stu-id="28968-349">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
  syntax:
    content: 'function recognizePrintedTextInStream(detectOrientation: boolean, image: stream.Readable, options?: function)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: >
        <span data-ttu-id="28968-350">Détecter si l’orientation du texte dans l’image.</span><span class="sxs-lookup"><span data-stu-id="28968-350">Whether detect the text orientation in the image.</span></span> <span data-ttu-id="28968-351">Avec detectOrientation = true, la reconnaissance optique de caractères service tente de détecter l’orientation de l’image et corrigez-le avant tout traitement supplémentaire (par exemple, s’il s’agit envers).</span><span class="sxs-lookup"><span data-stu-id="28968-351">With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down).</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="28968-352">Un flux d’image.</span><span class="sxs-lookup"><span data-stu-id="28968-352">An image stream.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.OcrResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedTextInStream_1
  name: recognizePrintedTextInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="28968-353">Reconnaissance optique de caractères (OCR) détecte le texte imprimé dans une image et extrait les caractères reconnus dans un flux de caractères exploitable.</span><span class="sxs-lookup"><span data-stu-id="28968-353">Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>

    <span data-ttu-id="28968-354">En cas de réussite, les résultats de la reconnaissance optique de caractères seront affichera.</span><span class="sxs-lookup"><span data-stu-id="28968-354">Upon success, the OCR results will be returned.</span></span> <span data-ttu-id="28968-355">En cas d’échec, le code d’erreur avec un message d’erreur s’affichera.</span><span class="sxs-lookup"><span data-stu-id="28968-355">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="28968-356">Le code d’erreur peut être une des InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage ou InternalServerError.</span><span class="sxs-lookup"><span data-stu-id="28968-356">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
  syntax:
    content: 'function recognizePrintedTextInStream(detectOrientation: boolean, image: stream.Readable, callback: ServiceCallback<OcrResult>)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.OcrResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.OcrResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedTextInStream_2
  name: recognizePrintedTextInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="28968-357">Reconnaissance optique de caractères (OCR) détecte le texte imprimé dans une image et extrait les caractères reconnus dans un flux de caractères exploitable.</span><span class="sxs-lookup"><span data-stu-id="28968-357">Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>

    <span data-ttu-id="28968-358">En cas de réussite, les résultats de la reconnaissance optique de caractères seront affichera.</span><span class="sxs-lookup"><span data-stu-id="28968-358">Upon success, the OCR results will be returned.</span></span> <span data-ttu-id="28968-359">En cas d’échec, le code d’erreur avec un message d’erreur s’affichera.</span><span class="sxs-lookup"><span data-stu-id="28968-359">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="28968-360">Le code d’erreur peut être une des InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage ou InternalServerError.</span><span class="sxs-lookup"><span data-stu-id="28968-360">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
  syntax:
    content: 'function recognizePrintedTextInStream(detectOrientation: boolean, image: stream.Readable, options: function, callback: ServiceCallback<OcrResult>)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.OcrResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.OcrResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedTextInStreamWithHttpOperationResponse
  name: recognizePrintedTextInStreamWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="28968-361">Reconnaissance optique de caractères (OCR) détecte le texte imprimé dans une image et extrait les caractères reconnus dans un flux de caractères exploitable.</span><span class="sxs-lookup"><span data-stu-id="28968-361">Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>

    <span data-ttu-id="28968-362">En cas de réussite, les résultats de la reconnaissance optique de caractères seront affichera.</span><span class="sxs-lookup"><span data-stu-id="28968-362">Upon success, the OCR results will be returned.</span></span> <span data-ttu-id="28968-363">En cas d’échec, le code d’erreur avec un message d’erreur s’affichera.</span><span class="sxs-lookup"><span data-stu-id="28968-363">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="28968-364">Le code d’erreur peut être une des InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage ou InternalServerError.</span><span class="sxs-lookup"><span data-stu-id="28968-364">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
  syntax:
    content: 'function recognizePrintedTextInStreamWithHttpOperationResponse(detectOrientation: boolean, image: stream.Readable, options?: function)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: >
        <span data-ttu-id="28968-365">Détecter si l’orientation du texte dans l’image.</span><span class="sxs-lookup"><span data-stu-id="28968-365">Whether detect the text orientation in the image.</span></span> <span data-ttu-id="28968-366">Avec detectOrientation = true, la reconnaissance optique de caractères service tente de détecter l’orientation de l’image et corrigez-le avant tout traitement supplémentaire (par exemple, s’il s’agit envers).</span><span class="sxs-lookup"><span data-stu-id="28968-366">With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down).</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="28968-367">Un flux d’image.</span><span class="sxs-lookup"><span data-stu-id="28968-367">An image stream.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.OcrResult>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedTextWithHttpOperationResponse
  name: recognizePrintedTextWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="28968-368">Reconnaissance optique de caractères (OCR) détecte le texte imprimé dans une image et extrait les caractères reconnus dans un flux de caractères exploitable.</span><span class="sxs-lookup"><span data-stu-id="28968-368">Optical Character Recognition (OCR) detects printed text in an image and extracts the recognized characters into a machine-usable character stream.</span></span>

    <span data-ttu-id="28968-369">En cas de réussite, les résultats de la reconnaissance optique de caractères seront affichera.</span><span class="sxs-lookup"><span data-stu-id="28968-369">Upon success, the OCR results will be returned.</span></span> <span data-ttu-id="28968-370">En cas d’échec, le code d’erreur avec un message d’erreur s’affichera.</span><span class="sxs-lookup"><span data-stu-id="28968-370">Upon failure, the error code together with an error message will be returned.</span></span> <span data-ttu-id="28968-371">Le code d’erreur peut être une des InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage ou InternalServerError.</span><span class="sxs-lookup"><span data-stu-id="28968-371">The error code can be one of InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage, or InternalServerError.</span></span>
  syntax:
    content: 'function recognizePrintedTextWithHttpOperationResponse(detectOrientation: boolean, url: string, options?: function)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: >
        <span data-ttu-id="28968-372">Détecter si l’orientation du texte dans l’image.</span><span class="sxs-lookup"><span data-stu-id="28968-372">Whether detect the text orientation in the image.</span></span> <span data-ttu-id="28968-373">Avec detectOrientation = true, la reconnaissance optique de caractères service tente de détecter l’orientation de l’image et corrigez-le avant tout traitement supplémentaire (par exemple, s’il s’agit envers).</span><span class="sxs-lookup"><span data-stu-id="28968-373">With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down).</span></span>
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.OcrResult>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeText
  name: recognizeText
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="28968-374">Reconnaître l’opération de texte.</span><span class="sxs-lookup"><span data-stu-id="28968-374">Recognize Text operation.</span></span> <span data-ttu-id="28968-375">Lorsque vous utilisez l’interface de reconnaître le texte, la réponse contient un champ appelé « Operation-Location ».</span><span class="sxs-lookup"><span data-stu-id="28968-375">When you use the Recognize Text interface, the response contains a field called “Operation-Location”.</span></span> <span data-ttu-id="28968-376">Le champ « Opération-Location » contient l’URL que vous devez utiliser pour votre opération obtenir le résultat d’opération texte écrit à la main.</span><span class="sxs-lookup"><span data-stu-id="28968-376">The “Operation-Location” field contains the URL that you must use for your Get Handwritten Text Operation Result operation.</span></span>
  syntax:
    content: 'function recognizeText(url: string, options?: function)'
    parameters:
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeText_2
  name: recognizeText
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="28968-377">Reconnaître l’opération de texte.</span><span class="sxs-lookup"><span data-stu-id="28968-377">Recognize Text operation.</span></span> <span data-ttu-id="28968-378">Lorsque vous utilisez l’interface de reconnaître le texte, la réponse contient un champ appelé « Operation-Location ».</span><span class="sxs-lookup"><span data-stu-id="28968-378">When you use the Recognize Text interface, the response contains a field called “Operation-Location”.</span></span> <span data-ttu-id="28968-379">Le champ « Opération-Location » contient l’URL que vous devez utiliser pour votre opération obtenir le résultat d’opération texte écrit à la main.</span><span class="sxs-lookup"><span data-stu-id="28968-379">The “Operation-Location” field contains the URL that you must use for your Get Handwritten Text Operation Result operation.</span></span>
  syntax:
    content: 'function recognizeText(url: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeText_1
  name: recognizeText
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="28968-380">Reconnaître l’opération de texte.</span><span class="sxs-lookup"><span data-stu-id="28968-380">Recognize Text operation.</span></span> <span data-ttu-id="28968-381">Lorsque vous utilisez l’interface de reconnaître le texte, la réponse contient un champ appelé « Operation-Location ».</span><span class="sxs-lookup"><span data-stu-id="28968-381">When you use the Recognize Text interface, the response contains a field called “Operation-Location”.</span></span> <span data-ttu-id="28968-382">Le champ « Opération-Location » contient l’URL que vous devez utiliser pour votre opération obtenir le résultat d’opération texte écrit à la main.</span><span class="sxs-lookup"><span data-stu-id="28968-382">The “Operation-Location” field contains the URL that you must use for your Get Handwritten Text Operation Result operation.</span></span>
  syntax:
    content: 'function recognizeText(url: string, callback: ServiceCallback<void>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeTextInStream
  name: recognizeTextInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="28968-383">Reconnaître l’opération de texte.</span><span class="sxs-lookup"><span data-stu-id="28968-383">Recognize Text operation.</span></span> <span data-ttu-id="28968-384">Lorsque vous utilisez l’interface de reconnaître le texte, la réponse contient un champ appelé « Operation-Location ».</span><span class="sxs-lookup"><span data-stu-id="28968-384">When you use the Recognize Text interface, the response contains a field called “Operation-Location”.</span></span> <span data-ttu-id="28968-385">Le champ « Opération-Location » contient l’URL que vous devez utiliser pour votre opération obtenir le résultat d’opération texte écrit à la main.</span><span class="sxs-lookup"><span data-stu-id="28968-385">The “Operation-Location” field contains the URL that you must use for your Get Handwritten Text Operation Result operation.</span></span>
  syntax:
    content: 'function recognizeTextInStream(image: stream.Readable, options?: function)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="28968-386">Un flux d’image.</span><span class="sxs-lookup"><span data-stu-id="28968-386">An image stream.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeTextInStream_1
  name: recognizeTextInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="28968-387">Reconnaître l’opération de texte.</span><span class="sxs-lookup"><span data-stu-id="28968-387">Recognize Text operation.</span></span> <span data-ttu-id="28968-388">Lorsque vous utilisez l’interface de reconnaître le texte, la réponse contient un champ appelé « Operation-Location ».</span><span class="sxs-lookup"><span data-stu-id="28968-388">When you use the Recognize Text interface, the response contains a field called “Operation-Location”.</span></span> <span data-ttu-id="28968-389">Le champ « Opération-Location » contient l’URL que vous devez utiliser pour votre opération obtenir le résultat d’opération texte écrit à la main.</span><span class="sxs-lookup"><span data-stu-id="28968-389">The “Operation-Location” field contains the URL that you must use for your Get Handwritten Text Operation Result operation.</span></span>
  syntax:
    content: 'function recognizeTextInStream(image: stream.Readable, callback: ServiceCallback<void>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeTextInStream_2
  name: recognizeTextInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="28968-390">Reconnaître l’opération de texte.</span><span class="sxs-lookup"><span data-stu-id="28968-390">Recognize Text operation.</span></span> <span data-ttu-id="28968-391">Lorsque vous utilisez l’interface de reconnaître le texte, la réponse contient un champ appelé « Operation-Location ».</span><span class="sxs-lookup"><span data-stu-id="28968-391">When you use the Recognize Text interface, the response contains a field called “Operation-Location”.</span></span> <span data-ttu-id="28968-392">Le champ « Opération-Location » contient l’URL que vous devez utiliser pour votre opération obtenir le résultat d’opération texte écrit à la main.</span><span class="sxs-lookup"><span data-stu-id="28968-392">The “Operation-Location” field contains the URL that you must use for your Get Handwritten Text Operation Result operation.</span></span>
  syntax:
    content: 'function recognizeTextInStream(image: stream.Readable, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeTextInStreamWithHttpOperationResponse
  name: recognizeTextInStreamWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="28968-393">Reconnaître l’opération de texte.</span><span class="sxs-lookup"><span data-stu-id="28968-393">Recognize Text operation.</span></span> <span data-ttu-id="28968-394">Lorsque vous utilisez l’interface de reconnaître le texte, la réponse contient un champ appelé « Operation-Location ».</span><span class="sxs-lookup"><span data-stu-id="28968-394">When you use the Recognize Text interface, the response contains a field called “Operation-Location”.</span></span> <span data-ttu-id="28968-395">Le champ « Opération-Location » contient l’URL que vous devez utiliser pour votre opération obtenir le résultat d’opération texte écrit à la main.</span><span class="sxs-lookup"><span data-stu-id="28968-395">The “Operation-Location” field contains the URL that you must use for your Get Handwritten Text Operation Result operation.</span></span>
  syntax:
    content: 'function recognizeTextInStreamWithHttpOperationResponse(image: stream.Readable, options?: function)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="28968-396">Un flux d’image.</span><span class="sxs-lookup"><span data-stu-id="28968-396">An image stream.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeTextWithHttpOperationResponse
  name: recognizeTextWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="28968-397">Reconnaître l’opération de texte.</span><span class="sxs-lookup"><span data-stu-id="28968-397">Recognize Text operation.</span></span> <span data-ttu-id="28968-398">Lorsque vous utilisez l’interface de reconnaître le texte, la réponse contient un champ appelé « Operation-Location ».</span><span class="sxs-lookup"><span data-stu-id="28968-398">When you use the Recognize Text interface, the response contains a field called “Operation-Location”.</span></span> <span data-ttu-id="28968-399">Le champ « Opération-Location » contient l’URL que vous devez utiliser pour votre opération obtenir le résultat d’opération texte écrit à la main.</span><span class="sxs-lookup"><span data-stu-id="28968-399">The “Operation-Location” field contains the URL that you must use for your Get Handwritten Text Operation Result operation.</span></span>
  syntax:
    content: 'function recognizeTextWithHttpOperationResponse(url: string, options?: function)'
    parameters:
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImage
  name: tagImage
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="28968-400">Cette opération génère une liste de mots ou de balises, qui sont pertinents pour le contenu de l’image fournie.</span><span class="sxs-lookup"><span data-stu-id="28968-400">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="28968-401">L’API vision par ordinateur peut retourner balises basées sur les objets, vivant êtres humains, vivants ou actions trouvées dans les images.</span><span class="sxs-lookup"><span data-stu-id="28968-401">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="28968-402">Contrairement aux catégories, les balises ne sont pas organisées selon un système de classification hiérarchique, mais correspondent au contenu de l’image.</span><span class="sxs-lookup"><span data-stu-id="28968-402">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="28968-403">Les balises peuvent contenir des conseils pour éviter toute ambiguïté ou fournir un contexte, par exemple le cello « tag » peut être accompagné par l’indicateur « instrument de musique ».</span><span class="sxs-lookup"><span data-stu-id="28968-403">Tags may contain hints to avoid ambiguity or provide context, for example the tag “cello” may be accompanied by the hint “musical instrument”.</span></span> <span data-ttu-id="28968-404">Toutes les balises sont en anglais.</span><span class="sxs-lookup"><span data-stu-id="28968-404">All tags are in English.</span></span>
  syntax:
    content: 'function tagImage(url: string, options?: function)'
    parameters:
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TagResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImage_1
  name: tagImage
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="28968-405">Cette opération génère une liste de mots ou de balises, qui sont pertinents pour le contenu de l’image fournie.</span><span class="sxs-lookup"><span data-stu-id="28968-405">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="28968-406">L’API vision par ordinateur peut retourner balises basées sur les objets, vivant êtres humains, vivants ou actions trouvées dans les images.</span><span class="sxs-lookup"><span data-stu-id="28968-406">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="28968-407">Contrairement aux catégories, les balises ne sont pas organisées selon un système de classification hiérarchique, mais correspondent au contenu de l’image.</span><span class="sxs-lookup"><span data-stu-id="28968-407">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="28968-408">Les balises peuvent contenir des conseils pour éviter toute ambiguïté ou fournir un contexte, par exemple le cello « tag » peut être accompagné par l’indicateur « instrument de musique ».</span><span class="sxs-lookup"><span data-stu-id="28968-408">Tags may contain hints to avoid ambiguity or provide context, for example the tag “cello” may be accompanied by the hint “musical instrument”.</span></span> <span data-ttu-id="28968-409">Toutes les balises sont en anglais.</span><span class="sxs-lookup"><span data-stu-id="28968-409">All tags are in English.</span></span>
  syntax:
    content: 'function tagImage(url: string, callback: ServiceCallback<TagResult>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.TagResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TagResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImage_2
  name: tagImage
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="28968-410">Cette opération génère une liste de mots ou de balises, qui sont pertinents pour le contenu de l’image fournie.</span><span class="sxs-lookup"><span data-stu-id="28968-410">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="28968-411">L’API vision par ordinateur peut retourner balises basées sur les objets, vivant êtres humains, vivants ou actions trouvées dans les images.</span><span class="sxs-lookup"><span data-stu-id="28968-411">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="28968-412">Contrairement aux catégories, les balises ne sont pas organisées selon un système de classification hiérarchique, mais correspondent au contenu de l’image.</span><span class="sxs-lookup"><span data-stu-id="28968-412">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="28968-413">Les balises peuvent contenir des conseils pour éviter toute ambiguïté ou fournir un contexte, par exemple le cello « tag » peut être accompagné par l’indicateur « instrument de musique ».</span><span class="sxs-lookup"><span data-stu-id="28968-413">Tags may contain hints to avoid ambiguity or provide context, for example the tag “cello” may be accompanied by the hint “musical instrument”.</span></span> <span data-ttu-id="28968-414">Toutes les balises sont en anglais.</span><span class="sxs-lookup"><span data-stu-id="28968-414">All tags are in English.</span></span>
  syntax:
    content: 'function tagImage(url: string, options: function, callback: ServiceCallback<TagResult>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.TagResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TagResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImageInStream
  name: tagImageInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="28968-415">Cette opération génère une liste de mots ou de balises, qui sont pertinents pour le contenu de l’image fournie.</span><span class="sxs-lookup"><span data-stu-id="28968-415">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="28968-416">L’API vision par ordinateur peut retourner balises basées sur les objets, vivant êtres humains, vivants ou actions trouvées dans les images.</span><span class="sxs-lookup"><span data-stu-id="28968-416">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="28968-417">Contrairement aux catégories, les balises ne sont pas organisées selon un système de classification hiérarchique, mais correspondent au contenu de l’image.</span><span class="sxs-lookup"><span data-stu-id="28968-417">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="28968-418">Les balises peuvent contenir des conseils pour éviter toute ambiguïté ou fournir un contexte, par exemple le cello « tag » peut être accompagné par l’indicateur « instrument de musique ».</span><span class="sxs-lookup"><span data-stu-id="28968-418">Tags may contain hints to avoid ambiguity or provide context, for example the tag “cello” may be accompanied by the hint “musical instrument”.</span></span> <span data-ttu-id="28968-419">Toutes les balises sont en anglais.</span><span class="sxs-lookup"><span data-stu-id="28968-419">All tags are in English.</span></span>
  syntax:
    content: 'function tagImageInStream(image: stream.Readable, options?: function)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="28968-420">Un flux d’image.</span><span class="sxs-lookup"><span data-stu-id="28968-420">An image stream.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TagResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImageInStream_1
  name: tagImageInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="28968-421">Cette opération génère une liste de mots ou de balises, qui sont pertinents pour le contenu de l’image fournie.</span><span class="sxs-lookup"><span data-stu-id="28968-421">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="28968-422">L’API vision par ordinateur peut retourner balises basées sur les objets, vivant êtres humains, vivants ou actions trouvées dans les images.</span><span class="sxs-lookup"><span data-stu-id="28968-422">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="28968-423">Contrairement aux catégories, les balises ne sont pas organisées selon un système de classification hiérarchique, mais correspondent au contenu de l’image.</span><span class="sxs-lookup"><span data-stu-id="28968-423">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="28968-424">Les balises peuvent contenir des conseils pour éviter toute ambiguïté ou fournir un contexte, par exemple le cello « tag » peut être accompagné par l’indicateur « instrument de musique ».</span><span class="sxs-lookup"><span data-stu-id="28968-424">Tags may contain hints to avoid ambiguity or provide context, for example the tag “cello” may be accompanied by the hint “musical instrument”.</span></span> <span data-ttu-id="28968-425">Toutes les balises sont en anglais.</span><span class="sxs-lookup"><span data-stu-id="28968-425">All tags are in English.</span></span>
  syntax:
    content: 'function tagImageInStream(image: stream.Readable, callback: ServiceCallback<TagResult>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.TagResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TagResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImageInStream_2
  name: tagImageInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="28968-426">Cette opération génère une liste de mots ou de balises, qui sont pertinents pour le contenu de l’image fournie.</span><span class="sxs-lookup"><span data-stu-id="28968-426">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="28968-427">L’API vision par ordinateur peut retourner balises basées sur les objets, vivant êtres humains, vivants ou actions trouvées dans les images.</span><span class="sxs-lookup"><span data-stu-id="28968-427">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="28968-428">Contrairement aux catégories, les balises ne sont pas organisées selon un système de classification hiérarchique, mais correspondent au contenu de l’image.</span><span class="sxs-lookup"><span data-stu-id="28968-428">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="28968-429">Les balises peuvent contenir des conseils pour éviter toute ambiguïté ou fournir un contexte, par exemple le cello « tag » peut être accompagné par l’indicateur « instrument de musique ».</span><span class="sxs-lookup"><span data-stu-id="28968-429">Tags may contain hints to avoid ambiguity or provide context, for example the tag “cello” may be accompanied by the hint “musical instrument”.</span></span> <span data-ttu-id="28968-430">Toutes les balises sont en anglais.</span><span class="sxs-lookup"><span data-stu-id="28968-430">All tags are in English.</span></span>
  syntax:
    content: 'function tagImageInStream(image: stream.Readable, options: function, callback: ServiceCallback<TagResult>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.TagResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TagResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImageInStreamWithHttpOperationResponse
  name: tagImageInStreamWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="28968-431">Cette opération génère une liste de mots ou de balises, qui sont pertinents pour le contenu de l’image fournie.</span><span class="sxs-lookup"><span data-stu-id="28968-431">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="28968-432">L’API vision par ordinateur peut retourner balises basées sur les objets, vivant êtres humains, vivants ou actions trouvées dans les images.</span><span class="sxs-lookup"><span data-stu-id="28968-432">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="28968-433">Contrairement aux catégories, les balises ne sont pas organisées selon un système de classification hiérarchique, mais correspondent au contenu de l’image.</span><span class="sxs-lookup"><span data-stu-id="28968-433">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="28968-434">Les balises peuvent contenir des conseils pour éviter toute ambiguïté ou fournir un contexte, par exemple le cello « tag » peut être accompagné par l’indicateur « instrument de musique ».</span><span class="sxs-lookup"><span data-stu-id="28968-434">Tags may contain hints to avoid ambiguity or provide context, for example the tag “cello” may be accompanied by the hint “musical instrument”.</span></span> <span data-ttu-id="28968-435">Toutes les balises sont en anglais.</span><span class="sxs-lookup"><span data-stu-id="28968-435">All tags are in English.</span></span>
  syntax:
    content: 'function tagImageInStreamWithHttpOperationResponse(image: stream.Readable, options?: function)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="28968-436">Un flux d’image.</span><span class="sxs-lookup"><span data-stu-id="28968-436">An image stream.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.TagResult>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImageWithHttpOperationResponse
  name: tagImageWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="28968-437">Cette opération génère une liste de mots ou de balises, qui sont pertinents pour le contenu de l’image fournie.</span><span class="sxs-lookup"><span data-stu-id="28968-437">This operation generates a list of words, or tags, that are relevant to the content of the supplied image.</span></span> <span data-ttu-id="28968-438">L’API vision par ordinateur peut retourner balises basées sur les objets, vivant êtres humains, vivants ou actions trouvées dans les images.</span><span class="sxs-lookup"><span data-stu-id="28968-438">The Computer Vision API can return tags based on objects, living beings, scenery or actions found in images.</span></span> <span data-ttu-id="28968-439">Contrairement aux catégories, les balises ne sont pas organisées selon un système de classification hiérarchique, mais correspondent au contenu de l’image.</span><span class="sxs-lookup"><span data-stu-id="28968-439">Unlike categories, tags are not organized according to a hierarchical classification system, but correspond to image content.</span></span> <span data-ttu-id="28968-440">Les balises peuvent contenir des conseils pour éviter toute ambiguïté ou fournir un contexte, par exemple le cello « tag » peut être accompagné par l’indicateur « instrument de musique ».</span><span class="sxs-lookup"><span data-stu-id="28968-440">Tags may contain hints to avoid ambiguity or provide context, for example the tag “cello” may be accompanied by the hint “musical instrument”.</span></span> <span data-ttu-id="28968-441">Toutes les balises sont en anglais.</span><span class="sxs-lookup"><span data-stu-id="28968-441">All tags are in English.</span></span>
  syntax:
    content: 'function tagImageWithHttpOperationResponse(url: string, options?: function)'
    parameters:
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.TagResult>>
  package: azure-cognitiveservices-computervision
references:
- uid: Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ImageAnalysis
    fullName: ImageAnalysis
    uid: azure-cognitiveservices-computervision.ImageAnalysis
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.ImageAnalysis>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ImageAnalysis
    fullName: ImageAnalysis
    uid: azure-cognitiveservices-computervision.ImageAnalysis
  - name: '>'
    fullName: '>'
- uid: Promise<azure-cognitiveservices-computervision.DomainModelResults>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: DomainModelResults
    fullName: DomainModelResults
    uid: azure-cognitiveservices-computervision.DomainModelResults
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.DomainModelResults>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: DomainModelResults
    fullName: DomainModelResults
    uid: azure-cognitiveservices-computervision.DomainModelResults
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.DomainModelResults>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: DomainModelResults
    fullName: DomainModelResults
    uid: azure-cognitiveservices-computervision.DomainModelResults
  - name: '>>'
    fullName: '>>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageAnalysis>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ImageAnalysis
    fullName: ImageAnalysis
    uid: azure-cognitiveservices-computervision.ImageAnalysis
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-computervision.ImageDescription>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ImageDescription
    fullName: ImageDescription
    uid: azure-cognitiveservices-computervision.ImageDescription
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.ImageDescription>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ImageDescription
    fullName: ImageDescription
    uid: azure-cognitiveservices-computervision.ImageDescription
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageDescription>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ImageDescription
    fullName: ImageDescription
    uid: azure-cognitiveservices-computervision.ImageDescription
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-computervision.TextOperationResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: TextOperationResult
    fullName: TextOperationResult
    uid: azure-cognitiveservices-computervision.TextOperationResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.TextOperationResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: TextOperationResult
    fullName: TextOperationResult
    uid: azure-cognitiveservices-computervision.TextOperationResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.TextOperationResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: TextOperationResult
    fullName: TextOperationResult
    uid: azure-cognitiveservices-computervision.TextOperationResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-computervision.ListModelsResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ListModelsResult
    fullName: ListModelsResult
    uid: azure-cognitiveservices-computervision.ListModelsResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.ListModelsResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ListModelsResult
    fullName: ListModelsResult
    uid: azure-cognitiveservices-computervision.ListModelsResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ListModelsResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ListModelsResult
    fullName: ListModelsResult
    uid: azure-cognitiveservices-computervision.ListModelsResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-computervision.OcrResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: OcrResult
    fullName: OcrResult
    uid: azure-cognitiveservices-computervision.OcrResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.OcrResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: OcrResult
    fullName: OcrResult
    uid: azure-cognitiveservices-computervision.OcrResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.OcrResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: OcrResult
    fullName: OcrResult
    uid: azure-cognitiveservices-computervision.OcrResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-computervision.TagResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: TagResult
    fullName: TagResult
    uid: azure-cognitiveservices-computervision.TagResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.TagResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: TagResult
    fullName: TagResult
    uid: azure-cognitiveservices-computervision.TagResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.TagResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: TagResult
    fullName: TagResult
    uid: azure-cognitiveservices-computervision.TagResult
  - name: '>>'
    fullName: '>>'
