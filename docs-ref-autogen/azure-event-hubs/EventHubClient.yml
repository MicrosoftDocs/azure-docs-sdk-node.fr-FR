### YamlMime:UniversalReference
ms.openlocfilehash: 7b391204b3338bd7ab834710fdf32cc8f2752b1e
ms.sourcegitcommit: 286f52ea38c9eff2ec9d4f8cabeb86f62fd9c406
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 08/22/2018
ms.locfileid: "41690461"
items:
- uid: azure-event-hubs.EventHubClient
  name: EventHubClient
  fullName: EventHubClient
  children:
  - azure-event-hubs.EventHubClient.close
  - azure-event-hubs.EventHubClient.connectionId
  - azure-event-hubs.EventHubClient.createFromAadTokenCredentials
  - azure-event-hubs.EventHubClient.createFromConnectionString
  - azure-event-hubs.EventHubClient.createFromIotHubConnectionString
  - azure-event-hubs.EventHubClient.createFromTokenProvider
  - azure-event-hubs.EventHubClient.constructor
  - azure-event-hubs.EventHubClient.getHubRuntimeInformation
  - azure-event-hubs.EventHubClient.getPartitionIds
  - azure-event-hubs.EventHubClient.getPartitionInformation
  - azure-event-hubs.EventHubClient.receive
  - azure-event-hubs.EventHubClient.receiveBatch
  - azure-event-hubs.EventHubClient.send
  - azure-event-hubs.EventHubClient.sendBatch
  langs:
  - typeScript
  type: class
  summary: ''
  package: azure-event-hubs
- uid: azure-event-hubs.EventHubClient.close
  name: close
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9123f-101">Ferme la connexion AMQP au Hub d’événements pour ce client, retourner une promesse qui sera résolue lors de la déconnexion est terminée.</span><span class="sxs-lookup"><span data-stu-id="9123f-101">Closes the AMQP connection to the Event Hub for this client, returning a promise that will be resolved when disconnection is completed.</span></span>
  syntax:
    content: function close()
    parameters: []
    return:
      type:
      - Promise<void>
  package: azure-event-hubs
- uid: azure-event-hubs.EventHubClient.connectionId
  name: connectionId
  fullName: connectionId
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="9123f-102">{chaîne} [connectionId] L’id de connexion amqp qui identifie de façon unique la connexion au sein d’un processus.</span><span class="sxs-lookup"><span data-stu-id="9123f-102">{string} [connectionId] The amqp connection id that uniquely identifies the connection within a process.</span></span>
  optional: true
  syntax:
    content: 'connectionId?: string'
    return:
      type:
      - string
  package: azure-event-hubs
- uid: azure-event-hubs.EventHubClient.createFromAadTokenCredentials
  name: createFromAadTokenCredentials
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9123f-103">Crée un Client EventHub à partir de AADTokenCredentials.</span><span class="sxs-lookup"><span data-stu-id="9123f-103">Creates an EventHub Client from AADTokenCredentials.</span></span>
  syntax:
    content: 'static function createFromAadTokenCredentials(host: string, entityPath: string, credentials: ApplicationTokenCredentials | UserTokenCredentials | DeviceTokenCredentials | MSITokenCredentials, options?: ClientOptionsBase)'
    parameters:
    - id: host
      type:
      - string
      description: <span data-ttu-id="9123f-104">Nom de domaine complet pour Event Hubs.</span><span class="sxs-lookup"><span data-stu-id="9123f-104">Fully qualified domain name for Event Hubs.</span></span> <span data-ttu-id="9123f-105">Vraisemblablement, <yournamespace>. servicebus.windows.net</span><span class="sxs-lookup"><span data-stu-id="9123f-105">Most likely, <yournamespace>.servicebus.windows.net</span></span>
    - id: entityPath
      type:
      - string
      description: <span data-ttu-id="9123f-106">Chemin d’accès de l’EventHub sous la forme « mon-événements-hub-nom »</span><span class="sxs-lookup"><span data-stu-id="9123f-106">EventHub path of the form 'my-event-hub-name'</span></span>
    - id: credentials
      type:
      - ApplicationTokenCredentials | UserTokenCredentials | DeviceTokenCredentials | MSITokenCredentials
      description: '<span data-ttu-id="9123f-107">Les informations d’identification du jeton AAD.</span><span class="sxs-lookup"><span data-stu-id="9123f-107">The AAD Token credentials.</span></span> <span data-ttu-id="9123f-108">Il peut prendre l’une des opérations suivantes : ApplicationTokenCredentials | UserTokenCredentials | DeviceTokenCredentials | MSITokenCredentials.</span><span class="sxs-lookup"><span data-stu-id="9123f-108">It can be one of the following: ApplicationTokenCredentials | UserTokenCredentials | DeviceTokenCredentials | MSITokenCredentials.</span></span>'
    - id: options
      type:
      - azure-event-hubs.ClientOptionsBase
      description: <span data-ttu-id="9123f-109">Les options qui peuvent être fournies lors de la création du client.</span><span class="sxs-lookup"><span data-stu-id="9123f-109">The options that can be provided during client creation.</span></span>
      optional: true
    return:
      type:
      - azure-event-hubs.EventHubClient
  package: azure-event-hubs
- uid: azure-event-hubs.EventHubClient.createFromConnectionString
  name: createFromConnectionString
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9123f-110">Crée un EventHub Client à partir de la chaîne de connexion.</span><span class="sxs-lookup"><span data-stu-id="9123f-110">Creates an EventHub Client from connection string.</span></span>
  syntax:
    content: 'static function createFromConnectionString(connectionString: string, path?: string, options?: ClientOptions)'
    parameters:
    - id: connectionString
      type:
      - string
      description: <span data-ttu-id="9123f-111">Chaîne de connexion sous la forme « Endpoint=sb://my-servicebus-namespace.servicebus.windows.net/ ; SharedAccessKeyName = my-SA-name ; SharedAccessKey = my-SA-key'</span><span class="sxs-lookup"><span data-stu-id="9123f-111">Connection string of the form 'Endpoint=sb://my-servicebus-namespace.servicebus.windows.net/;SharedAccessKeyName=my-SA-name;SharedAccessKey=my-SA-key'</span></span>
    - id: path
      type:
      - string
      description: ''
      optional: true
    - id: options
      type:
      - azure-event-hubs.ClientOptions
      description: ''
      optional: true
    return:
      type:
      - azure-event-hubs.EventHubClient
  package: azure-event-hubs
- uid: azure-event-hubs.EventHubClient.createFromIotHubConnectionString
  name: createFromIotHubConnectionString
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9123f-112">Crée un EventHub Client à partir de la chaîne de connexion.</span><span class="sxs-lookup"><span data-stu-id="9123f-112">Creates an EventHub Client from connection string.</span></span>
  syntax:
    content: 'static function createFromIotHubConnectionString(iothubConnectionString: string, options?: ClientOptions)'
    parameters:
    - id: iothubConnectionString
      type:
      - string
      description: <span data-ttu-id="9123f-113">Chaîne de connexion sous la forme « nom d’hôte = iot-nom d’hôte ; SharedAccessKeyName = my-SA-name ; SharedAccessKey = my-SA-key'</span><span class="sxs-lookup"><span data-stu-id="9123f-113">Connection string of the form 'HostName=iot-host-name;SharedAccessKeyName=my-SA-name;SharedAccessKey=my-SA-key'</span></span>
    - id: options
      type:
      - azure-event-hubs.ClientOptions
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-event-hubs.EventHubClient>
  package: azure-event-hubs
- uid: azure-event-hubs.EventHubClient.createFromTokenProvider
  name: createFromTokenProvider
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9123f-114">Crée un EventHub Client à partir d’un fournisseur de jetons générique.</span><span class="sxs-lookup"><span data-stu-id="9123f-114">Creates an EventHub Client from a generic token provider.</span></span>
  syntax:
    content: 'static function createFromTokenProvider(host: string, entityPath: string, tokenProvider: TokenProvider, options?: ClientOptionsBase)'
    parameters:
    - id: host
      type:
      - string
      description: <span data-ttu-id="9123f-115">Nom de domaine complet pour Event Hubs.</span><span class="sxs-lookup"><span data-stu-id="9123f-115">Fully qualified domain name for Event Hubs.</span></span> <span data-ttu-id="9123f-116">Vraisemblablement, <yournamespace>. servicebus.windows.net</span><span class="sxs-lookup"><span data-stu-id="9123f-116">Most likely, <yournamespace>.servicebus.windows.net</span></span>
    - id: entityPath
      type:
      - string
      description: <span data-ttu-id="9123f-117">Chemin d’accès de l’EventHub sous la forme « mon-événements-hub-nom »</span><span class="sxs-lookup"><span data-stu-id="9123f-117">EventHub path of the form 'my-event-hub-name'</span></span>
    - id: tokenProvider
      type:
      - azure-event-hubs.TokenProvider
      description: <span data-ttu-id="9123f-118">Votre fournisseur de jetons qui implémente l’interface TokenProvider.</span><span class="sxs-lookup"><span data-stu-id="9123f-118">Your token provider that implements the TokenProvider interface.</span></span>
    - id: options
      type:
      - azure-event-hubs.ClientOptionsBase
      description: <span data-ttu-id="9123f-119">Les options qui peuvent être fournies lors de la création du client.</span><span class="sxs-lookup"><span data-stu-id="9123f-119">The options that can be provided during client creation.</span></span>
      optional: true
    return:
      type:
      - azure-event-hubs.EventHubClient
  package: azure-event-hubs
- uid: azure-event-hubs.EventHubClient.constructor
  name: EventHubClient
  children: []
  type: constructor
  langs:
  - typeScript
  summary: <span data-ttu-id="9123f-120">Instancie un client qui pointe vers le concentrateur d’événements donné par cette configuration.</span><span class="sxs-lookup"><span data-stu-id="9123f-120">Instantiates a client pointing to the Event Hub given by this configuration.</span></span>
  syntax:
    content: 'new EventHubClient(config: ConnectionConfig, options?: ClientOptions)'
    parameters:
    - id: config
      type:
      - azure-event-hubs.ConnectionConfig
      description: <span data-ttu-id="9123f-121">La configuration de la connexion pour créer le EventHub Client.</span><span class="sxs-lookup"><span data-stu-id="9123f-121">The connection configuration to create the EventHub Client.</span></span>
    - id: options
      type:
      - azure-event-hubs.ClientOptions
      description: >
        <span data-ttu-id="9123f-122">Les paramètres facultatifs qui peuvent être fournies au constructeur Client de EventHub.</span><span class="sxs-lookup"><span data-stu-id="9123f-122">The optional parameters that can be provided to the EventHub Client constructor.</span></span>
      optional: true
  package: azure-event-hubs
- uid: azure-event-hubs.EventHubClient.getHubRuntimeInformation
  name: getHubRuntimeInformation
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9123f-123">Fournit les informations de runtime eventhub.</span><span class="sxs-lookup"><span data-stu-id="9123f-123">Provides the eventhub runtime information.</span></span>
  syntax:
    content: function getHubRuntimeInformation()
    parameters: []
    return:
      type:
      - Promise<azure-event-hubs.EventHubRuntimeInformation>
  package: azure-event-hubs
- uid: azure-event-hubs.EventHubClient.getPartitionIds
  name: getPartitionIds
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9123f-124">Fournit un tableau de partitionIds.</span><span class="sxs-lookup"><span data-stu-id="9123f-124">Provides an array of partitionIds.</span></span>
  syntax:
    content: function getPartitionIds()
    parameters: []
    return:
      type:
      - Promise<Array<string>>
  package: azure-event-hubs
- uid: azure-event-hubs.EventHubClient.getPartitionInformation
  name: getPartitionInformation
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9123f-125">Fournit des informations sur la partition spécifiée.</span><span class="sxs-lookup"><span data-stu-id="9123f-125">Provides information about the specified partition.</span></span>
  syntax:
    content: 'function getPartitionInformation(partitionId: string | number)'
    parameters:
    - id: partitionId
      type:
      - string | number
      description: <span data-ttu-id="9123f-126">ID de partition pour la partition dans laquelle les informations sont requises.</span><span class="sxs-lookup"><span data-stu-id="9123f-126">Partition ID for which partition information is required.</span></span>
    return:
      type:
      - Promise<azure-event-hubs.EventHubPartitionRuntimeInformation>
  package: azure-event-hubs
- uid: azure-event-hubs.EventHubClient.receive
  name: receive
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9123f-127">Démarre le récepteur en établissant une session AMQP et un lien du récepteur AMQP sur la session.</span><span class="sxs-lookup"><span data-stu-id="9123f-127">Starts the receiver by establishing an AMQP session and an AMQP receiver link on the session.</span></span> <span data-ttu-id="9123f-128">Messages seront passés au gestionnaire onMessage fourni et erreur est passée au gestionnaire onError fourni.</span><span class="sxs-lookup"><span data-stu-id="9123f-128">Messages will be passed to the provided onMessage handler and error will be passed to the provided onError handler.</span></span>
  syntax:
    content: 'function receive(partitionId: string | number, onMessage: OnMessage, onError: OnError, options?: ReceiveOptions)'
    parameters:
    - id: partitionId
      type:
      - string | number
      description: <span data-ttu-id="9123f-129">ID de partition de réception.</span><span class="sxs-lookup"><span data-stu-id="9123f-129">Partition ID from which to receive.</span></span>
    - id: onMessage
      type:
      - azure-event-hubs.OnMessage
      description: <span data-ttu-id="9123f-130">Le Gestionnaire de messages pour recevoir des objets de données d’événement.</span><span class="sxs-lookup"><span data-stu-id="9123f-130">The message handler to receive event data objects.</span></span>
    - id: onError
      type:
      - azure-event-hubs.OnError
      description: <span data-ttu-id="9123f-131">Le Gestionnaire d’erreurs pour recevoir une erreur se produit lors de la réception des messages.</span><span class="sxs-lookup"><span data-stu-id="9123f-131">The error handler to receive an error that occurs while receiving messages.</span></span>
    - id: options
      type:
      - azure-event-hubs.ReceiveOptions
      description: ''
      optional: true
    return:
      type:
      - azure-event-hubs.ReceiveHandler
  package: azure-event-hubs
- uid: azure-event-hubs.EventHubClient.receiveBatch
  name: receiveBatch
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9123f-132">Reçoit un lot d’objets EventData à partir d’une partition EventHub pour un nombre donné et un maximum de donnée temps d’attente en secondes, selon ce qui se produit en premier.</span><span class="sxs-lookup"><span data-stu-id="9123f-132">Receives a batch of EventData objects from an EventHub partition for a given count and a given max wait time in seconds, whichever happens first.</span></span> <span data-ttu-id="9123f-133">Cette méthode peut être utilisée directement après la création de l’objet de récepteur et **ne doit pas** être utilisé avec le `start()` (méthode).</span><span class="sxs-lookup"><span data-stu-id="9123f-133">This method can be used directly after creating the receiver object and **MUST NOT** be used along with the `start()` method.</span></span>
  syntax:
    content: 'function receiveBatch(partitionId: string | number, maxMessageCount: number, maxWaitTimeInSeconds?: number, options?: ReceiveOptions)'
    parameters:
    - id: partitionId
      type:
      - string | number
      description: <span data-ttu-id="9123f-134">ID de partition de réception.</span><span class="sxs-lookup"><span data-stu-id="9123f-134">Partition ID from which to receive.</span></span>
    - id: maxMessageCount
      type:
      - number
      description: <span data-ttu-id="9123f-135">Le nombre maximal de messages.</span><span class="sxs-lookup"><span data-stu-id="9123f-135">The maximum message count.</span></span> <span data-ttu-id="9123f-136">Doit être une valeur supérieure à 0.</span><span class="sxs-lookup"><span data-stu-id="9123f-136">Must be a value greater than 0.</span></span>
    - id: maxWaitTimeInSeconds
      type:
      - number
      description: ''
      optional: true
    - id: options
      type:
      - azure-event-hubs.ReceiveOptions
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-event-hubs.EventData[]>
  package: azure-event-hubs
- uid: azure-event-hubs.EventHubClient.send
  name: send
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9123f-137">Envoie le message donné à l’EventHub.</span><span class="sxs-lookup"><span data-stu-id="9123f-137">Sends the given message to the EventHub.</span></span>
  syntax:
    content: 'function send(data: EventData, partitionId?: string | number)'
    parameters:
    - id: data
      type:
      - azure-event-hubs.EventData
      description: <span data-ttu-id="9123f-138">Message à envoyer.</span><span class="sxs-lookup"><span data-stu-id="9123f-138">Message to send.</span></span>  <span data-ttu-id="9123f-139">Sera envoyé en tant que chaîne JSON encodée en UTF-8.</span><span class="sxs-lookup"><span data-stu-id="9123f-139">Will be sent as UTF8-encoded JSON string.</span></span>
    - id: partitionId
      type:
      - string | number
      description: ''
      optional: true
    return:
      type:
      - Promise<Delivery>
  package: azure-event-hubs
- uid: azure-event-hubs.EventHubClient.sendBatch
  name: sendBatch
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="9123f-140">Envoyer un lot de EventData à l’EventHub.</span><span class="sxs-lookup"><span data-stu-id="9123f-140">Send a batch of EventData to the EventHub.</span></span> <span data-ttu-id="9123f-141">Le « message_annotations », « application_properties » et « propriétés » du premier message définira que celle de l’enveloppe (message de traitement par lot).</span><span class="sxs-lookup"><span data-stu-id="9123f-141">The "message_annotations", "application_properties" and "properties" of the first message will be set as that of the envelope (batch message).</span></span>
  syntax:
    content: 'function sendBatch(datas: EventData[], partitionId?: string | number)'
    parameters:
    - id: datas
      type:
      - azure-event-hubs.EventData[]
      description: <span data-ttu-id="9123f-142">Tableau d’objets EventData à envoyer dans un lot de messages.</span><span class="sxs-lookup"><span data-stu-id="9123f-142">An array of EventData objects to be sent in a Batch message.</span></span>
    - id: partitionId
      type:
      - string | number
      description: ''
      optional: true
    return:
      type:
      - Promise<Delivery>
  package: azure-event-hubs
references:
- uid: azure-event-hubs.ConnectionConfig
  spec.typeScript:
  - name: ConnectionConfig
    fullName: ConnectionConfig
    uid: azure-event-hubs.ConnectionConfig
- uid: azure-event-hubs.ClientOptions
  spec.typeScript:
  - name: ClientOptions
    fullName: ClientOptions
    uid: azure-event-hubs.ClientOptions
- uid: Promise<azure-event-hubs.EventHubRuntimeInformation>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: EventHubRuntimeInformation
    fullName: EventHubRuntimeInformation
    uid: azure-event-hubs.EventHubRuntimeInformation
  - name: '>'
    fullName: '>'
- uid: Promise<azure-event-hubs.EventHubPartitionRuntimeInformation>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: EventHubPartitionRuntimeInformation
    fullName: EventHubPartitionRuntimeInformation
    uid: azure-event-hubs.EventHubPartitionRuntimeInformation
  - name: '>'
    fullName: '>'
- uid: azure-event-hubs.OnMessage
  spec.typeScript:
  - name: OnMessage
    fullName: OnMessage
    uid: azure-event-hubs.OnMessage
- uid: azure-event-hubs.OnError
  spec.typeScript:
  - name: OnError
    fullName: OnError
    uid: azure-event-hubs.OnError
- uid: azure-event-hubs.ReceiveOptions
  spec.typeScript:
  - name: ReceiveOptions
    fullName: ReceiveOptions
    uid: azure-event-hubs.ReceiveOptions
- uid: azure-event-hubs.ReceiveHandler
  spec.typeScript:
  - name: ReceiveHandler
    fullName: ReceiveHandler
    uid: azure-event-hubs.ReceiveHandler
- uid: Promise<azure-event-hubs.EventData[]>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: EventData
    fullName: EventData
    uid: azure-event-hubs.EventData
  - name: '[]>'
    fullName: '[]>'
- uid: azure-event-hubs.EventData
  spec.typeScript:
  - name: EventData
    fullName: EventData
    uid: azure-event-hubs.EventData
- uid: azure-event-hubs.EventData[]
  spec.typeScript:
  - name: EventData
    fullName: EventData
    uid: azure-event-hubs.EventData
  - name: '[]'
    fullName: '[]'
- uid: azure-event-hubs.ClientOptionsBase
  spec.typeScript:
  - name: ClientOptionsBase
    fullName: ClientOptionsBase
    uid: azure-event-hubs.ClientOptionsBase
- uid: azure-event-hubs.EventHubClient
  spec.typeScript:
  - name: EventHubClient
    fullName: EventHubClient
    uid: azure-event-hubs.EventHubClient
- uid: Promise<azure-event-hubs.EventHubClient>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: EventHubClient
    fullName: EventHubClient
    uid: azure-event-hubs.EventHubClient
  - name: '>'
    fullName: '>'
- uid: azure-event-hubs.TokenProvider
  spec.typeScript:
  - name: TokenProvider
    fullName: TokenProvider
    uid: azure-event-hubs.TokenProvider
