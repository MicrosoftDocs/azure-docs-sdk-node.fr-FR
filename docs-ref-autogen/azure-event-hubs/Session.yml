### YamlMime:UniversalReference
ms.openlocfilehash: d750bcd35d9c6c3b4ad9e4bdb890392830dbaded
ms.sourcegitcommit: 286f52ea38c9eff2ec9d4f8cabeb86f62fd9c406
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 08/22/2018
ms.locfileid: "41697215"
items:
- uid: azure-event-hubs.Session
  name: Session
  fullName: Session
  children:
  - azure-event-hubs.Session.begin
  - azure-event-hubs.Session.close
  - azure-event-hubs.Session.connection
  - azure-event-hubs.Session.createReceiver
  - azure-event-hubs.Session.createSender
  - azure-event-hubs.Session.isClosed
  - azure-event-hubs.Session.isItselfClosed
  - azure-event-hubs.Session.isOpen
  - azure-event-hubs.Session.outgoing
  - azure-event-hubs.Session.registerConnectionHandler
  - azure-event-hubs.Session.registerHandler
  - azure-event-hubs.Session.remove
  - azure-event-hubs.Session.removeConnectionHandler
  - azure-event-hubs.Session.removeHandler
  - azure-event-hubs.Session.constructor
  langs:
  - typeScript
  type: class
  summary: ''
  package: azure-event-hubs
- uid: azure-event-hubs.Session.begin
  name: begin
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: function begin()
    parameters: []
  package: azure-event-hubs
- uid: azure-event-hubs.Session.close
  name: close
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="17e17-101">Ferme la session amqp.</span><span class="sxs-lookup"><span data-stu-id="17e17-101">Closes the amqp session.</span></span>
  syntax:
    content: function close()
    parameters: []
    return:
      type:
      - Promise<void>
  package: azure-event-hubs
- uid: azure-event-hubs.Session.connection
  name: connection
  fullName: connection
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'connection: Connection'
    return:
      type:
      - azure-event-hubs.Connection
  package: azure-event-hubs
- uid: azure-event-hubs.Session.createReceiver
  name: createReceiver
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="17e17-102">Crée un récepteur d’amqp sur cette session.</span><span class="sxs-lookup"><span data-stu-id="17e17-102">Creates an amqp receiver on this session.</span></span>
  syntax:
    content: 'function createReceiver(options?: ReceiverOptions)'
    parameters:
    - id: options
      type:
      - azure-event-hubs.ReceiverOptions
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-event-hubs.Receiver>
  package: azure-event-hubs
- uid: azure-event-hubs.Session.createSender
  name: createSender
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="17e17-103">Crée un expéditeur amqp sur cette session.</span><span class="sxs-lookup"><span data-stu-id="17e17-103">Creates an amqp sender on this session.</span></span>
  syntax:
    content: 'function createSender(options?: SenderOptions)'
    parameters:
    - id: options
      type:
      - azure-event-hubs.SenderOptions
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-event-hubs.Sender>
  package: azure-event-hubs
- uid: azure-event-hubs.Session.isClosed
  name: isClosed
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="17e17-104">Détermine si la fermeture de l’homologue est une réponse à une demande de fermeture lancée localement.</span><span class="sxs-lookup"><span data-stu-id="17e17-104">Determines whether the close from the peer is a response to a locally initiated close request.</span></span>
  syntax:
    content: function isClosed()
    parameters: []
    return:
      type:
      - boolean
  package: azure-event-hubs
- uid: azure-event-hubs.Session.isItselfClosed
  name: isItselfClosed
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="17e17-105">Détermine si le point de terminaison locaux et distant pour la session elle-même sont fermées.</span><span class="sxs-lookup"><span data-stu-id="17e17-105">Determines whether both local and remote endpoint for just the session itself are closed.</span></span>

    <span data-ttu-id="17e17-106">Dans le Gestionnaire d’événements « session_close », si cette méthode retourne `false` cela signifie que l’extrémité locale est toujours ouverte.</span><span class="sxs-lookup"><span data-stu-id="17e17-106">Within the "session_close" event handler, if this method returns `false` it means that the local end is still open.</span></span> <span data-ttu-id="17e17-107">Il peut être utile pour déterminer si la fermeture a été initialisée localement dans de telles circonstances.</span><span class="sxs-lookup"><span data-stu-id="17e17-107">It can be useful to determine whether the close was initiated locally under such circumstances.</span></span>
  syntax:
    content: function isItselfClosed()
    parameters: []
    return:
      type:
      - boolean
  package: azure-event-hubs
- uid: azure-event-hubs.Session.isOpen
  name: isOpen
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: function isOpen()
    parameters: []
    return:
      type:
      - boolean
  package: azure-event-hubs
- uid: azure-event-hubs.Session.outgoing
  name: outgoing
  fullName: outgoing
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'outgoing: any'
    return:
      type:
      - any
  package: azure-event-hubs
- uid: azure-event-hubs.Session.registerConnectionHandler
  name: registerConnectionHandler
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function registerConnectionHandler(event: ConnectionEvents, handler: rhea.OnAmqpEvent)'
    parameters:
    - id: event
      type:
      - ConnectionEvents
      description: ''
    - id: handler
      type:
      - rhea.OnAmqpEvent
      description: ''
  package: azure-event-hubs
- uid: azure-event-hubs.Session.registerHandler
  name: registerHandler
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function registerHandler(event: SessionEvents, handler: rhea.OnAmqpEvent)'
    parameters:
    - id: event
      type:
      - SessionEvents
      description: ''
    - id: handler
      type:
      - rhea.OnAmqpEvent
      description: ''
  package: azure-event-hubs
- uid: azure-event-hubs.Session.remove
  name: remove
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: function remove()
    parameters: []
  package: azure-event-hubs
- uid: azure-event-hubs.Session.removeConnectionHandler
  name: removeConnectionHandler
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function removeConnectionHandler(event: ConnectionEvents, handler: rhea.OnAmqpEvent)'
    parameters:
    - id: event
      type:
      - ConnectionEvents
      description: ''
    - id: handler
      type:
      - rhea.OnAmqpEvent
      description: ''
  package: azure-event-hubs
- uid: azure-event-hubs.Session.removeHandler
  name: removeHandler
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'function removeHandler(event: SessionEvents, handler: rhea.OnAmqpEvent)'
    parameters:
    - id: event
      type:
      - SessionEvents
      description: ''
    - id: handler
      type:
      - rhea.OnAmqpEvent
      description: ''
  package: azure-event-hubs
- uid: azure-event-hubs.Session.constructor
  name: Session
  children: []
  type: constructor
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'new Session(connection: Connection, session: Session)'
    parameters:
    - id: connection
      type:
      - azure-event-hubs.Connection
      description: ''
    - id: session
      type:
      - Session
      description: ''
  package: azure-event-hubs
references:
- uid: azure-event-hubs.Connection
  spec.typeScript:
  - name: Connection
    fullName: Connection
    uid: azure-event-hubs.Connection
- uid: azure-event-hubs.ReceiverOptions
  spec.typeScript:
  - name: ReceiverOptions
    fullName: ReceiverOptions
    uid: azure-event-hubs.ReceiverOptions
- uid: Promise<azure-event-hubs.Receiver>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: Receiver
    fullName: Receiver
    uid: azure-event-hubs.Receiver
  - name: '>'
    fullName: '>'
- uid: azure-event-hubs.SenderOptions
  spec.typeScript:
  - name: SenderOptions
    fullName: SenderOptions
    uid: azure-event-hubs.SenderOptions
- uid: Promise<azure-event-hubs.Sender>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: Sender
    fullName: Sender
    uid: azure-event-hubs.Sender
  - name: '>'
    fullName: '>'
