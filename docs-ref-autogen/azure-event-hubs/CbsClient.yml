### YamlMime:UniversalReference
ms.openlocfilehash: 2d5c534dc8c7d5caef24aad39c9a2b7559bfa6ab
ms.sourcegitcommit: 286f52ea38c9eff2ec9d4f8cabeb86f62fd9c406
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 08/22/2018
ms.locfileid: "41686016"
items:
- uid: azure-event-hubs.CbsClient
  name: CbsClient
  fullName: CbsClient
  children:
  - azure-event-hubs.CbsClient.constructor
  - azure-event-hubs.CbsClient.cbsLock
  - azure-event-hubs.CbsClient.close
  - azure-event-hubs.CbsClient.connection
  - azure-event-hubs.CbsClient.connectionLock
  - azure-event-hubs.CbsClient.endpoint
  - azure-event-hubs.CbsClient.init
  - azure-event-hubs.CbsClient.negotiateClaim
  - azure-event-hubs.CbsClient.replyTo
  langs:
  - typeScript
  type: class
  summary: ''
  package: azure-event-hubs
- uid: azure-event-hubs.CbsClient.constructor
  name: CbsClient
  children: []
  type: constructor
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'new CbsClient(connection: Connection, connectionLock: string)'
    parameters:
    - id: connection
      type:
      - azure-event-hubs.Connection
      description: <span data-ttu-id="d51bd-101">La connexion AMQP.</span><span class="sxs-lookup"><span data-stu-id="d51bd-101">The AMQP conection.</span></span>
    - id: connectionLock
      type:
      - string
      description: >
        <span data-ttu-id="d51bd-102">Une chaîne unique (généralement un guid) par connexion.</span><span class="sxs-lookup"><span data-stu-id="d51bd-102">A unique string (usually a guid) per connection.</span></span>
  package: azure-event-hubs
- uid: azure-event-hubs.CbsClient.cbsLock
  name: cbsLock
  fullName: cbsLock
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="d51bd-103">{string} cbsLock le nom du verrou unique par session $cbs par connexion qui est utilisée pour acquérir le verrou pour établir une session de cbs s’il n’existe pas pour une connexion aqmp.</span><span class="sxs-lookup"><span data-stu-id="d51bd-103">{string} cbsLock The unqiue lock name per $cbs session per connection that is used to acquire the lock for establishing a cbs session if one does not exist for an aqmp connection.</span></span>
  syntax:
    content: 'cbsLock: string'
    return:
      type:
      - string
  package: azure-event-hubs
- uid: azure-event-hubs.CbsClient.close
  name: close
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d51bd-104">Ferme la session de cbs AMQP à l’EventHub/ServiceBus pour ce client, retourner une promesse qui sera résolue lors de la déconnexion est terminée.</span><span class="sxs-lookup"><span data-stu-id="d51bd-104">Closes the AMQP cbs session to the EventHub/ServiceBus for this client, returning a promise that will be resolved when disconnection is completed.</span></span>
  syntax:
    content: function close()
    parameters: []
    return:
      type:
      - Promise<void>
  package: azure-event-hubs
- uid: azure-event-hubs.CbsClient.connection
  name: connection
  fullName: connection
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="d51bd-105">{Connexion} connexion établie par l’AMQP.</span><span class="sxs-lookup"><span data-stu-id="d51bd-105">{Connection} connection The AMQP connection.</span></span>
  syntax:
    content: 'connection: Connection'
    return:
      type:
      - azure-event-hubs.Connection
  package: azure-event-hubs
- uid: azure-event-hubs.CbsClient.connectionLock
  name: connectionLock
  fullName: connectionLock
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="d51bd-106">{string} connectionLock le nom unique du verrou par connexion qui est utilisé pour acquérir le verrou de l’établissement d’une connexion amqp s’il n’existe pas.</span><span class="sxs-lookup"><span data-stu-id="d51bd-106">{string} connectionLock The unqiue lock name per connection that is used to acquire the lock for establishing an amqp connection if one does not exist.</span></span>
  syntax:
    content: 'connectionLock: string'
    return:
      type:
      - string
  package: azure-event-hubs
- uid: azure-event-hubs.CbsClient.endpoint
  name: endpoint
  fullName: endpoint
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="d51bd-107">{string} point de terminaison CBS point de terminaison - « $cbs »</span><span class="sxs-lookup"><span data-stu-id="d51bd-107">{string} endpoint CBS endpoint - "$cbs"</span></span>
  syntax:
    content: 'endpoint: string'
    return:
      type:
      - string
  package: azure-event-hubs
- uid: azure-event-hubs.CbsClient.init
  name: init
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d51bd-108">Crée une instance de singleton de la session CBS si elle n’a pas été précédemment sur la connexion donnée.</span><span class="sxs-lookup"><span data-stu-id="d51bd-108">Creates a singleton instance of the CBS session if it hasn't been initialized previously on the given connection.</span></span>
  syntax:
    content: function init()
    parameters: []
    return:
      type:
      - Promise<void>
  package: azure-event-hubs
- uid: azure-event-hubs.CbsClient.negotiateClaim
  name: negotiateClaim
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="d51bd-109">Négocie la revendication CBS avec le Service EventHub/ServiceBus.</span><span class="sxs-lookup"><span data-stu-id="d51bd-109">Negotiates the CBS claim with the EventHub/ServiceBus Service.</span></span>
  syntax:
    content: 'function negotiateClaim(audience: string, tokenObject: TokenInfo)'
    parameters:
    - id: audience
      type:
      - string
      description: <span data-ttu-id="d51bd-110">L’audience pour lequel le jeton est demandé.</span><span class="sxs-lookup"><span data-stu-id="d51bd-110">The audience for which the token is requested.</span></span>
    - id: tokenObject
      type:
      - azure-event-hubs.TokenInfo
      description: <span data-ttu-id="d51bd-111">L’objet de jeton qui doit être envoyé dans la demande put-token.</span><span class="sxs-lookup"><span data-stu-id="d51bd-111">The token object that needs to be sent in the put-token request.</span></span>
    return:
      type:
      - Promise<any>
  package: azure-event-hubs
- uid: azure-event-hubs.CbsClient.replyTo
  name: replyTo
  fullName: replyTo
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="d51bd-112">{string} replyTo CBS replyTo - le nom de lien de récepteur que le service doit répondre à.</span><span class="sxs-lookup"><span data-stu-id="d51bd-112">{string} replyTo CBS replyTo - The reciever link name that the service should reply to.</span></span>
  syntax:
    content: 'replyTo: string'
    return:
      type:
      - string
  package: azure-event-hubs
references:
- uid: azure-event-hubs.Connection
  spec.typeScript:
  - name: Connection
    fullName: Connection
    uid: azure-event-hubs.Connection
- uid: azure-event-hubs.TokenInfo
  spec.typeScript:
  - name: TokenInfo
    fullName: TokenInfo
    uid: azure-event-hubs.TokenInfo
