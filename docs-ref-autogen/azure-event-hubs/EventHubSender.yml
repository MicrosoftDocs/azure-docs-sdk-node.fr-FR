### YamlMime:UniversalReference
ms.openlocfilehash: 79b5459a632a8e81929c58850cf576b0f722ed7c
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 08/12/2018
ms.locfileid: "40059772"
items:
- uid: azure-event-hubs.EventHubSender
  name: EventHubSender
  fullName: EventHubSender
  children:
  - azure-event-hubs.EventHubSender.close
  - azure-event-hubs.EventHubSender.create
  - azure-event-hubs.EventHubSender.detached
  - azure-event-hubs.EventHubSender.constructor
  - azure-event-hubs.EventHubSender.isOpen
  - azure-event-hubs.EventHubSender.send
  - azure-event-hubs.EventHubSender.sendBatch
  - azure-event-hubs.EventHubSender.senderLock
  langs:
  - typeScript
  type: class
  summary: Décrit le EventHubSender qui enverra les données d’événement à EventHub.
  extends:
    name: azure-event-hubs.LinkEntity
  package: azure-event-hubs
- uid: azure-event-hubs.EventHubSender.close
  name: close
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    « Dissocier » cet expéditeur, la fermeture de la liaison et la résolution lorsque cette opération est terminée.

    Laisse la connexion sous-jacente ouvert.
  syntax:
    content: function close()
    parameters: []
    return:
      type:
      - Promise<void>
  package: azure-event-hubs
- uid: azure-event-hubs.EventHubSender.create
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: Crée un nouvel expéditeur au hub d’événements donné et éventuellement à une partition donnée, s’il n’est pas présent dans le contexte ou retourne celui présent dans le contexte.
  syntax:
    content: 'static function create(context: ConnectionContext, partitionId?: string | number)'
    parameters:
    - id: context
      type:
      - azure-event-hubs.ConnectionContext
      description: ''
    - id: partitionId
      type:
      - string | number
      description: ''
      optional: true
    return:
      type:
      - azure-event-hubs.EventHubSender
  package: azure-event-hubs
- uid: azure-event-hubs.EventHubSender.detached
  name: detached
  children: []
  type: method
  langs:
  - typeScript
  summary: Allez de reconnecter le lien de l’expéditeur si nécessaire.
  syntax:
    content: 'function detached(senderError?: AmqpError | Error)'
    parameters:
    - id: senderError
      type:
      - AmqpError | Error
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-event-hubs
- uid: azure-event-hubs.EventHubSender.constructor
  name: EventHubSender
  children: []
  type: constructor
  langs:
  - typeScript
  summary: Crée une nouvelle instance de EventHubSender.
  syntax:
    content: 'new EventHubSender(context: ConnectionContext, partitionId?: string | number, name?: string)'
    parameters:
    - id: context
      type:
      - azure-event-hubs.ConnectionContext
      description: Le contexte de connexion.
    - id: partitionId
      type:
      - string | number
      description: ''
      optional: true
    - id: name
      type:
      - string
      description: ''
      optional: true
  package: azure-event-hubs
- uid: azure-event-hubs.EventHubSender.isOpen
  name: isOpen
  children: []
  type: method
  langs:
  - typeScript
  summary: Détermine si le lien de l’expéditeur AMQP est ouvert. Si elle est ouverte, puis retourne true retourne sinon false.
  syntax:
    content: function isOpen()
    parameters: []
    return:
      type:
      - boolean
  package: azure-event-hubs
- uid: azure-event-hubs.EventHubSender.send
  name: send
  children: []
  type: method
  langs:
  - typeScript
  summary: Envoie le message donné, avec les options spécifiées sur ce lien
  syntax:
    content: 'function send(data: EventData)'
    parameters:
    - id: data
      type:
      - azure-event-hubs.EventData
      description: Message à envoyer.  Sera envoyé en tant que chaîne JSON encodée en UTF-8.
    return:
      type:
      - Promise<Delivery>
  package: azure-event-hubs
- uid: azure-event-hubs.EventHubSender.sendBatch
  name: sendBatch
  children: []
  type: method
  langs:
  - typeScript
  summary: Envoyer un lot de EventData à l’EventHub. Le « message_annotations », « application_properties » et « propriétés » du premier message définira que celle de l’enveloppe (message de traitement par lot).
  syntax:
    content: 'function sendBatch(datas: EventData[])'
    parameters:
    - id: datas
      type:
      - azure-event-hubs.EventData[]
      description: Tableau d’objets EventData à envoyer dans un lot de messages.
    return:
      type:
      - Promise<Delivery>
  package: azure-event-hubs
- uid: azure-event-hubs.EventHubSender.senderLock
  name: senderLock
  fullName: senderLock
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'senderLock: string'
    return:
      type:
      - string
  package: azure-event-hubs
references:
- uid: azure-event-hubs.LinkEntity
  spec.typeScript:
  - name: LinkEntity
    fullName: LinkEntity
    uid: azure-event-hubs.LinkEntity
- uid: azure-event-hubs.ConnectionContext
  spec.typeScript:
  - name: ConnectionContext
    fullName: ConnectionContext
    uid: azure-event-hubs.ConnectionContext
- uid: azure-event-hubs.EventData
  spec.typeScript:
  - name: EventData
    fullName: EventData
    uid: azure-event-hubs.EventData
- uid: azure-event-hubs.EventData[]
  spec.typeScript:
  - name: EventData
    fullName: EventData
    uid: azure-event-hubs.EventData
  - name: '[]'
    fullName: '[]'
- uid: azure-event-hubs.EventHubSender
  spec.typeScript:
  - name: EventHubSender
    fullName: EventHubSender
    uid: azure-event-hubs.EventHubSender
