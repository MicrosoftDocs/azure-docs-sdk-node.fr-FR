### YamlMime:UniversalReference
ms.openlocfilehash: 051668180977efad82270f671a6fb69557e2d712
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 12/13/2018
ms.locfileid: "52044984"
items:
- uid: azure-arm-datalake-store.FileSystem
  name: FileSystem
  fullName: FileSystem
  children:
  - azure-arm-datalake-store.FileSystem.append
  - azure-arm-datalake-store.FileSystem.append_2
  - azure-arm-datalake-store.FileSystem.append_1
  - azure-arm-datalake-store.FileSystem.appendWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.checkAccess
  - azure-arm-datalake-store.FileSystem.checkAccess_2
  - azure-arm-datalake-store.FileSystem.checkAccess_1
  - azure-arm-datalake-store.FileSystem.checkAccessWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.concat
  - azure-arm-datalake-store.FileSystem.concat_2
  - azure-arm-datalake-store.FileSystem.concat_1
  - azure-arm-datalake-store.FileSystem.concatWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.concurrentAppend
  - azure-arm-datalake-store.FileSystem.concurrentAppend_2
  - azure-arm-datalake-store.FileSystem.concurrentAppend_1
  - azure-arm-datalake-store.FileSystem.concurrentAppendWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.create
  - azure-arm-datalake-store.FileSystem.create_2
  - azure-arm-datalake-store.FileSystem.create_1
  - azure-arm-datalake-store.FileSystem.createWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.deleteMethod
  - azure-arm-datalake-store.FileSystem.deleteMethod_2
  - azure-arm-datalake-store.FileSystem.deleteMethod_1
  - azure-arm-datalake-store.FileSystem.deleteMethodWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.getAclStatus
  - azure-arm-datalake-store.FileSystem.getAclStatus_2
  - azure-arm-datalake-store.FileSystem.getAclStatus_1
  - azure-arm-datalake-store.FileSystem.getAclStatusWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.getContentSummary
  - azure-arm-datalake-store.FileSystem.getContentSummary_2
  - azure-arm-datalake-store.FileSystem.getContentSummary_1
  - azure-arm-datalake-store.FileSystem.getContentSummaryWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.getFileStatus
  - azure-arm-datalake-store.FileSystem.getFileStatus_2
  - azure-arm-datalake-store.FileSystem.getFileStatus_1
  - azure-arm-datalake-store.FileSystem.getFileStatusWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.listFileStatus
  - azure-arm-datalake-store.FileSystem.listFileStatus_2
  - azure-arm-datalake-store.FileSystem.listFileStatus_1
  - azure-arm-datalake-store.FileSystem.listFileStatusWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.mkdirs
  - azure-arm-datalake-store.FileSystem.mkdirs_2
  - azure-arm-datalake-store.FileSystem.mkdirs_1
  - azure-arm-datalake-store.FileSystem.mkdirsWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.modifyAclEntries
  - azure-arm-datalake-store.FileSystem.modifyAclEntries_2
  - azure-arm-datalake-store.FileSystem.modifyAclEntries_1
  - azure-arm-datalake-store.FileSystem.modifyAclEntriesWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.msConcat
  - azure-arm-datalake-store.FileSystem.msConcat_2
  - azure-arm-datalake-store.FileSystem.msConcat_1
  - azure-arm-datalake-store.FileSystem.msConcatWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.open
  - azure-arm-datalake-store.FileSystem.open_2
  - azure-arm-datalake-store.FileSystem.open_1
  - azure-arm-datalake-store.FileSystem.openWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.removeAcl
  - azure-arm-datalake-store.FileSystem.removeAcl_2
  - azure-arm-datalake-store.FileSystem.removeAcl_1
  - azure-arm-datalake-store.FileSystem.removeAclEntries
  - azure-arm-datalake-store.FileSystem.removeAclEntries_2
  - azure-arm-datalake-store.FileSystem.removeAclEntries_1
  - azure-arm-datalake-store.FileSystem.removeAclEntriesWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.removeAclWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.removeDefaultAcl
  - azure-arm-datalake-store.FileSystem.removeDefaultAcl_2
  - azure-arm-datalake-store.FileSystem.removeDefaultAcl_1
  - azure-arm-datalake-store.FileSystem.removeDefaultAclWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.rename
  - azure-arm-datalake-store.FileSystem.rename_2
  - azure-arm-datalake-store.FileSystem.rename_1
  - azure-arm-datalake-store.FileSystem.renameWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.setAcl
  - azure-arm-datalake-store.FileSystem.setAcl_2
  - azure-arm-datalake-store.FileSystem.setAcl_1
  - azure-arm-datalake-store.FileSystem.setAclWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.setFileExpiry
  - azure-arm-datalake-store.FileSystem.setFileExpiry_2
  - azure-arm-datalake-store.FileSystem.setFileExpiry_1
  - azure-arm-datalake-store.FileSystem.setFileExpiryWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.setOwner
  - azure-arm-datalake-store.FileSystem.setOwner_2
  - azure-arm-datalake-store.FileSystem.setOwner_1
  - azure-arm-datalake-store.FileSystem.setOwnerWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.setPermission
  - azure-arm-datalake-store.FileSystem.setPermission_2
  - azure-arm-datalake-store.FileSystem.setPermission_1
  - azure-arm-datalake-store.FileSystem.setPermissionWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.append
  name: append(string, string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="1b44b-101">Utilisé pour la série ajoute au fichier spécifié.</span><span class="sxs-lookup"><span data-stu-id="1b44b-101">Used for serial appends to the specified file.</span></span><span data-ttu-id="1b44b-102"> REMARQUE :  La cible ne doit pas contenir de données ajoutées par ConcurrentAppend.</span><span class="sxs-lookup"><span data-stu-id="1b44b-102"> NOTE: The target must not contain data added by ConcurrentAppend.</span></span> <span data-ttu-id="1b44b-103">ConcurrentAppend et Append ne peut pas être utilisés indifféremment ; une fois qu’un fichier cible a été modifié à l’aide d’une de ces options d’ajout, l’autre option d’ajout ne peut pas être utilisée sur le fichier cible.</span><span class="sxs-lookup"><span data-stu-id="1b44b-103">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span>'
  syntax:
    content: 'function append(accountName: string, path: string, streamContents: stream.Readable, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-104">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="1b44b-104">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-105">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier à laquelle ajouter.</span><span class="sxs-lookup"><span data-stu-id="1b44b-105">The Data Lake Store path (starting with '/') of the file to which to append.</span></span>
    - id: streamContents
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="1b44b-106">Le contenu du fichier à inclure lors de l’ajout au fichier.</span><span class="sxs-lookup"><span data-stu-id="1b44b-106">The file contents to include when appending to the file.</span></span>  <span data-ttu-id="1b44b-107">La taille maximale du contenu est de 4 Mo.</span><span class="sxs-lookup"><span data-stu-id="1b44b-107">The maximum content size is 4MB.</span></span>  <span data-ttu-id="1b44b-108">Pour le contenu supérieur à 4 Mo, vous devez ajouter le contenu dans des blocs de 4 Mo.</span><span class="sxs-lookup"><span data-stu-id="1b44b-108">For content larger than 4MB you must append the content in 4MB chunks.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.append_2
  name: append(string, string, stream.Readable, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="1b44b-109">Utilisé pour la série ajoute au fichier spécifié.</span><span class="sxs-lookup"><span data-stu-id="1b44b-109">Used for serial appends to the specified file.</span></span><span data-ttu-id="1b44b-110"> REMARQUE :  La cible ne doit pas contenir de données ajoutées par ConcurrentAppend.</span><span class="sxs-lookup"><span data-stu-id="1b44b-110"> NOTE: The target must not contain data added by ConcurrentAppend.</span></span> <span data-ttu-id="1b44b-111">ConcurrentAppend et Append ne peut pas être utilisés indifféremment ; une fois qu’un fichier cible a été modifié à l’aide d’une de ces options d’ajout, l’autre option d’ajout ne peut pas être utilisée sur le fichier cible.</span><span class="sxs-lookup"><span data-stu-id="1b44b-111">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span>'
  syntax:
    content: 'function append(accountName: string, path: string, streamContents: stream.Readable, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.append_1
  name: append(string, string, stream.Readable, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="1b44b-112">Utilisé pour la série ajoute au fichier spécifié.</span><span class="sxs-lookup"><span data-stu-id="1b44b-112">Used for serial appends to the specified file.</span></span><span data-ttu-id="1b44b-113"> REMARQUE :  La cible ne doit pas contenir de données ajoutées par ConcurrentAppend.</span><span class="sxs-lookup"><span data-stu-id="1b44b-113"> NOTE: The target must not contain data added by ConcurrentAppend.</span></span> <span data-ttu-id="1b44b-114">ConcurrentAppend et Append ne peut pas être utilisés indifféremment ; une fois qu’un fichier cible a été modifié à l’aide d’une de ces options d’ajout, l’autre option d’ajout ne peut pas être utilisée sur le fichier cible.</span><span class="sxs-lookup"><span data-stu-id="1b44b-114">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span>'
  syntax:
    content: 'function append(accountName: string, path: string, streamContents: stream.Readable, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.appendWithHttpOperationResponse
  name: appendWithHttpOperationResponse(string, string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="1b44b-115">Utilisé pour la série ajoute au fichier spécifié.</span><span class="sxs-lookup"><span data-stu-id="1b44b-115">Used for serial appends to the specified file.</span></span><span data-ttu-id="1b44b-116"> REMARQUE :  La cible ne doit pas contenir de données ajoutées par ConcurrentAppend.</span><span class="sxs-lookup"><span data-stu-id="1b44b-116"> NOTE: The target must not contain data added by ConcurrentAppend.</span></span> <span data-ttu-id="1b44b-117">ConcurrentAppend et Append ne peut pas être utilisés indifféremment ; une fois qu’un fichier cible a été modifié à l’aide d’une de ces options d’ajout, l’autre option d’ajout ne peut pas être utilisée sur le fichier cible.</span><span class="sxs-lookup"><span data-stu-id="1b44b-117">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span>'
  syntax:
    content: 'function appendWithHttpOperationResponse(accountName: string, path: string, streamContents: stream.Readable, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-118">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="1b44b-118">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-119">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier à laquelle ajouter.</span><span class="sxs-lookup"><span data-stu-id="1b44b-119">The Data Lake Store path (starting with '/') of the file to which to append.</span></span>
    - id: streamContents
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="1b44b-120">Le contenu du fichier à inclure lors de l’ajout au fichier.</span><span class="sxs-lookup"><span data-stu-id="1b44b-120">The file contents to include when appending to the file.</span></span>  <span data-ttu-id="1b44b-121">La taille maximale du contenu est de 4 Mo.</span><span class="sxs-lookup"><span data-stu-id="1b44b-121">The maximum content size is 4MB.</span></span>  <span data-ttu-id="1b44b-122">Pour le contenu supérieur à 4 Mo, vous devez ajouter le contenu dans des blocs de 4 Mo.</span><span class="sxs-lookup"><span data-stu-id="1b44b-122">For content larger than 4MB you must append the content in 4MB chunks.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.checkAccess
  name: checkAccess(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-123">Vérifie si l’accès spécifié est disponible sous le chemin d’accès donné.</span><span class="sxs-lookup"><span data-stu-id="1b44b-123">Checks if the specified access is available at the given path.</span></span>
  syntax:
    content: 'function checkAccess(accountName: string, path: string, fsaction: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-124">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="1b44b-124">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-125">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier ou répertoire pour lequel vérifier l’accès.</span><span class="sxs-lookup"><span data-stu-id="1b44b-125">The Data Lake Store path (starting with '/') of the file or directory for which to check access.</span></span>
    - id: fsaction
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-126">Fichier système opération en lecture/écriture/exécution sous forme de chaîne, correspondance de modèle d’expression régulière « [rwx-]{3}»</span><span class="sxs-lookup"><span data-stu-id="1b44b-126">File system operation read/write/execute in string form, matching regex pattern '[rwx-]{3}'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.checkAccess_2
  name: checkAccess(string, string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-127">Vérifie si l’accès spécifié est disponible sous le chemin d’accès donné.</span><span class="sxs-lookup"><span data-stu-id="1b44b-127">Checks if the specified access is available at the given path.</span></span>
  syntax:
    content: 'function checkAccess(accountName: string, path: string, fsaction: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: fsaction
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.checkAccess_1
  name: checkAccess(string, string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-128">Vérifie si l’accès spécifié est disponible sous le chemin d’accès donné.</span><span class="sxs-lookup"><span data-stu-id="1b44b-128">Checks if the specified access is available at the given path.</span></span>
  syntax:
    content: 'function checkAccess(accountName: string, path: string, fsaction: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: fsaction
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.checkAccessWithHttpOperationResponse
  name: checkAccessWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-129">Vérifie si l’accès spécifié est disponible sous le chemin d’accès donné.</span><span class="sxs-lookup"><span data-stu-id="1b44b-129">Checks if the specified access is available at the given path.</span></span>
  syntax:
    content: 'function checkAccessWithHttpOperationResponse(accountName: string, path: string, fsaction: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-130">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="1b44b-130">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-131">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier ou répertoire pour lequel vérifier l’accès.</span><span class="sxs-lookup"><span data-stu-id="1b44b-131">The Data Lake Store path (starting with '/') of the file or directory for which to check access.</span></span>
    - id: fsaction
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-132">Fichier système opération en lecture/écriture/exécution sous forme de chaîne, correspondance de modèle d’expression régulière « [rwx-]{3}»</span><span class="sxs-lookup"><span data-stu-id="1b44b-132">File system operation read/write/execute in string form, matching regex pattern '[rwx-]{3}'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concat
  name: concat(string, string, string[], Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-133">Concatène la liste des fichiers sources dans le fichier de destination, en supprimant tous les fichiers sources en cas de réussite.</span><span class="sxs-lookup"><span data-stu-id="1b44b-133">Concatenates the list of source files into the destination file, removing all source files upon success.</span></span>
  syntax:
    content: 'function concat(accountName: string, path: string, sources: string[], options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-134">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="1b44b-134">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-135">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier de destination résultant de la concaténation.</span><span class="sxs-lookup"><span data-stu-id="1b44b-135">The Data Lake Store path (starting with '/') of the destination file resulting from the concatenation.</span></span>
    - id: sources
      type:
      - string[]
      description: >
        <span data-ttu-id="1b44b-136">Une liste de virgules séparées par des chemins d’accès Data Lake Store (en commençant par « / ») des fichiers à concaténer, dans l’ordre dans lequel ils doivent être concaténées.</span><span class="sxs-lookup"><span data-stu-id="1b44b-136">A list of comma separated Data Lake Store paths (starting with '/') of the files to concatenate, in the order in which they should be concatenated.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concat_2
  name: concat(string, string, string[], Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-137">Concatène la liste des fichiers sources dans le fichier de destination, en supprimant tous les fichiers sources en cas de réussite.</span><span class="sxs-lookup"><span data-stu-id="1b44b-137">Concatenates the list of source files into the destination file, removing all source files upon success.</span></span>
  syntax:
    content: 'function concat(accountName: string, path: string, sources: string[], options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: sources
      type:
      - string[]
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concat_1
  name: concat(string, string, string[], ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-138">Concatène la liste des fichiers sources dans le fichier de destination, en supprimant tous les fichiers sources en cas de réussite.</span><span class="sxs-lookup"><span data-stu-id="1b44b-138">Concatenates the list of source files into the destination file, removing all source files upon success.</span></span>
  syntax:
    content: 'function concat(accountName: string, path: string, sources: string[], callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: sources
      type:
      - string[]
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concatWithHttpOperationResponse
  name: concatWithHttpOperationResponse(string, string, string[], Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-139">Concatène la liste des fichiers sources dans le fichier de destination, en supprimant tous les fichiers sources en cas de réussite.</span><span class="sxs-lookup"><span data-stu-id="1b44b-139">Concatenates the list of source files into the destination file, removing all source files upon success.</span></span>
  syntax:
    content: 'function concatWithHttpOperationResponse(accountName: string, path: string, sources: string[], options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-140">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="1b44b-140">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-141">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier de destination résultant de la concaténation.</span><span class="sxs-lookup"><span data-stu-id="1b44b-141">The Data Lake Store path (starting with '/') of the destination file resulting from the concatenation.</span></span>
    - id: sources
      type:
      - string[]
      description: >
        <span data-ttu-id="1b44b-142">Une liste de virgules séparées par des chemins d’accès Data Lake Store (en commençant par « / ») des fichiers à concaténer, dans l’ordre dans lequel ils doivent être concaténées.</span><span class="sxs-lookup"><span data-stu-id="1b44b-142">A list of comma separated Data Lake Store paths (starting with '/') of the files to concatenate, in the order in which they should be concatenated.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concurrentAppend
  name: concurrentAppend(string, string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="1b44b-143">Ajoute au fichier spécifié, si vous le souhaitez tout d’abord créer le fichier s’il n’existe pas encore.</span><span class="sxs-lookup"><span data-stu-id="1b44b-143">Appends to the specified file, optionally first creating the file if it does not yet exist.</span></span> <span data-ttu-id="1b44b-144">Prend en charge cette méthode simultanées de plusieurs ajoute au fichier.</span><span class="sxs-lookup"><span data-stu-id="1b44b-144">This method supports multiple concurrent appends to the file.</span></span>

    <span data-ttu-id="1b44b-145">REMARQUE :  La cible ne doit pas contenir de données ajoutées par Create ou normal Append (série).</span><span class="sxs-lookup"><span data-stu-id="1b44b-145">NOTE: The target must not contain data added by Create or normal (serial) Append.</span></span> <span data-ttu-id="1b44b-146">ConcurrentAppend et Append ne peut pas être utilisés indifféremment ; une fois qu’un fichier cible a été modifié à l’aide d’une de ces options d’ajout, l’autre option d’ajout ne peut pas être utilisée sur le fichier cible.</span><span class="sxs-lookup"><span data-stu-id="1b44b-146">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span> <span data-ttu-id="1b44b-147">ConcurrentAppend ne garantit pas l’ordre et peut produire des données en double dans le fichier cible de lancement.</span><span class="sxs-lookup"><span data-stu-id="1b44b-147">ConcurrentAppend does not guarantee order and can result in duplicated data landing in the target file.</span></span>
  syntax:
    content: 'function concurrentAppend(accountName: string, path: string, streamContents: stream.Readable, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-148">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="1b44b-148">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-149">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier à laquelle ajouter à l’aide de simultanées ajouter.</span><span class="sxs-lookup"><span data-stu-id="1b44b-149">The Data Lake Store path (starting with '/') of the file to which to append using concurrent append.</span></span>
    - id: streamContents
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="1b44b-150">Le contenu du fichier à inclure lors de l’ajout au fichier.</span><span class="sxs-lookup"><span data-stu-id="1b44b-150">The file contents to include when appending to the file.</span></span>  <span data-ttu-id="1b44b-151">La taille maximale du contenu est de 4 Mo.</span><span class="sxs-lookup"><span data-stu-id="1b44b-151">The maximum content size is 4MB.</span></span>  <span data-ttu-id="1b44b-152">Pour le contenu supérieur à 4 Mo, vous devez ajouter le contenu dans des blocs de 4 Mo.</span><span class="sxs-lookup"><span data-stu-id="1b44b-152">For content larger than 4MB you must append the content in 4MB chunks.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concurrentAppend_2
  name: concurrentAppend(string, string, stream.Readable, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="1b44b-153">Ajoute au fichier spécifié, si vous le souhaitez tout d’abord créer le fichier s’il n’existe pas encore.</span><span class="sxs-lookup"><span data-stu-id="1b44b-153">Appends to the specified file, optionally first creating the file if it does not yet exist.</span></span> <span data-ttu-id="1b44b-154">Prend en charge cette méthode simultanées de plusieurs ajoute au fichier.</span><span class="sxs-lookup"><span data-stu-id="1b44b-154">This method supports multiple concurrent appends to the file.</span></span>

    <span data-ttu-id="1b44b-155">REMARQUE :  La cible ne doit pas contenir de données ajoutées par Create ou normal Append (série).</span><span class="sxs-lookup"><span data-stu-id="1b44b-155">NOTE: The target must not contain data added by Create or normal (serial) Append.</span></span> <span data-ttu-id="1b44b-156">ConcurrentAppend et Append ne peut pas être utilisés indifféremment ; une fois qu’un fichier cible a été modifié à l’aide d’une de ces options d’ajout, l’autre option d’ajout ne peut pas être utilisée sur le fichier cible.</span><span class="sxs-lookup"><span data-stu-id="1b44b-156">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span> <span data-ttu-id="1b44b-157">ConcurrentAppend ne garantit pas l’ordre et peut produire des données en double dans le fichier cible de lancement.</span><span class="sxs-lookup"><span data-stu-id="1b44b-157">ConcurrentAppend does not guarantee order and can result in duplicated data landing in the target file.</span></span>
  syntax:
    content: 'function concurrentAppend(accountName: string, path: string, streamContents: stream.Readable, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concurrentAppend_1
  name: concurrentAppend(string, string, stream.Readable, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="1b44b-158">Ajoute au fichier spécifié, si vous le souhaitez tout d’abord créer le fichier s’il n’existe pas encore.</span><span class="sxs-lookup"><span data-stu-id="1b44b-158">Appends to the specified file, optionally first creating the file if it does not yet exist.</span></span> <span data-ttu-id="1b44b-159">Prend en charge cette méthode simultanées de plusieurs ajoute au fichier.</span><span class="sxs-lookup"><span data-stu-id="1b44b-159">This method supports multiple concurrent appends to the file.</span></span>

    <span data-ttu-id="1b44b-160">REMARQUE :  La cible ne doit pas contenir de données ajoutées par Create ou normal Append (série).</span><span class="sxs-lookup"><span data-stu-id="1b44b-160">NOTE: The target must not contain data added by Create or normal (serial) Append.</span></span> <span data-ttu-id="1b44b-161">ConcurrentAppend et Append ne peut pas être utilisés indifféremment ; une fois qu’un fichier cible a été modifié à l’aide d’une de ces options d’ajout, l’autre option d’ajout ne peut pas être utilisée sur le fichier cible.</span><span class="sxs-lookup"><span data-stu-id="1b44b-161">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span> <span data-ttu-id="1b44b-162">ConcurrentAppend ne garantit pas l’ordre et peut produire des données en double dans le fichier cible de lancement.</span><span class="sxs-lookup"><span data-stu-id="1b44b-162">ConcurrentAppend does not guarantee order and can result in duplicated data landing in the target file.</span></span>
  syntax:
    content: 'function concurrentAppend(accountName: string, path: string, streamContents: stream.Readable, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concurrentAppendWithHttpOperationResponse
  name: concurrentAppendWithHttpOperationResponse(string, string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="1b44b-163">Ajoute au fichier spécifié, si vous le souhaitez tout d’abord créer le fichier s’il n’existe pas encore.</span><span class="sxs-lookup"><span data-stu-id="1b44b-163">Appends to the specified file, optionally first creating the file if it does not yet exist.</span></span> <span data-ttu-id="1b44b-164">Prend en charge cette méthode simultanées de plusieurs ajoute au fichier.</span><span class="sxs-lookup"><span data-stu-id="1b44b-164">This method supports multiple concurrent appends to the file.</span></span>

    <span data-ttu-id="1b44b-165">REMARQUE :  La cible ne doit pas contenir de données ajoutées par Create ou normal Append (série).</span><span class="sxs-lookup"><span data-stu-id="1b44b-165">NOTE: The target must not contain data added by Create or normal (serial) Append.</span></span> <span data-ttu-id="1b44b-166">ConcurrentAppend et Append ne peut pas être utilisés indifféremment ; une fois qu’un fichier cible a été modifié à l’aide d’une de ces options d’ajout, l’autre option d’ajout ne peut pas être utilisée sur le fichier cible.</span><span class="sxs-lookup"><span data-stu-id="1b44b-166">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span> <span data-ttu-id="1b44b-167">ConcurrentAppend ne garantit pas l’ordre et peut produire des données en double dans le fichier cible de lancement.</span><span class="sxs-lookup"><span data-stu-id="1b44b-167">ConcurrentAppend does not guarantee order and can result in duplicated data landing in the target file.</span></span>
  syntax:
    content: 'function concurrentAppendWithHttpOperationResponse(accountName: string, path: string, streamContents: stream.Readable, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-168">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="1b44b-168">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-169">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier à laquelle ajouter à l’aide de simultanées ajouter.</span><span class="sxs-lookup"><span data-stu-id="1b44b-169">The Data Lake Store path (starting with '/') of the file to which to append using concurrent append.</span></span>
    - id: streamContents
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="1b44b-170">Le contenu du fichier à inclure lors de l’ajout au fichier.</span><span class="sxs-lookup"><span data-stu-id="1b44b-170">The file contents to include when appending to the file.</span></span>  <span data-ttu-id="1b44b-171">La taille maximale du contenu est de 4 Mo.</span><span class="sxs-lookup"><span data-stu-id="1b44b-171">The maximum content size is 4MB.</span></span>  <span data-ttu-id="1b44b-172">Pour le contenu supérieur à 4 Mo, vous devez ajouter le contenu dans des blocs de 4 Mo.</span><span class="sxs-lookup"><span data-stu-id="1b44b-172">For content larger than 4MB you must append the content in 4MB chunks.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.create
  name: create(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="1b44b-173">Crée un fichier avec le contenu spécifié si vous le souhaitez.</span><span class="sxs-lookup"><span data-stu-id="1b44b-173">Creates a file with optionally specified content.</span></span> <span data-ttu-id="1b44b-174">REMARQUE :  Si le contenu est fourni, le fichier résultant ne peut pas être modifié à l’aide de ConcurrentAppend.</span><span class="sxs-lookup"><span data-stu-id="1b44b-174">NOTE: If content is provided, the resulting file cannot be modified using ConcurrentAppend.</span></span>'
  syntax:
    content: 'function create(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-175">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="1b44b-175">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-176">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier à créer.</span><span class="sxs-lookup"><span data-stu-id="1b44b-176">The Data Lake Store path (starting with '/') of the file to create.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.create_2
  name: create(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="1b44b-177">Crée un fichier avec le contenu spécifié si vous le souhaitez.</span><span class="sxs-lookup"><span data-stu-id="1b44b-177">Creates a file with optionally specified content.</span></span> <span data-ttu-id="1b44b-178">REMARQUE :  Si le contenu est fourni, le fichier résultant ne peut pas être modifié à l’aide de ConcurrentAppend.</span><span class="sxs-lookup"><span data-stu-id="1b44b-178">NOTE: If content is provided, the resulting file cannot be modified using ConcurrentAppend.</span></span>'
  syntax:
    content: 'function create(accountName: string, path: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.create_1
  name: create(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="1b44b-179">Crée un fichier avec le contenu spécifié si vous le souhaitez.</span><span class="sxs-lookup"><span data-stu-id="1b44b-179">Creates a file with optionally specified content.</span></span> <span data-ttu-id="1b44b-180">REMARQUE :  Si le contenu est fourni, le fichier résultant ne peut pas être modifié à l’aide de ConcurrentAppend.</span><span class="sxs-lookup"><span data-stu-id="1b44b-180">NOTE: If content is provided, the resulting file cannot be modified using ConcurrentAppend.</span></span>'
  syntax:
    content: 'function create(accountName: string, path: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.createWithHttpOperationResponse
  name: createWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="1b44b-181">Crée un fichier avec le contenu spécifié si vous le souhaitez.</span><span class="sxs-lookup"><span data-stu-id="1b44b-181">Creates a file with optionally specified content.</span></span> <span data-ttu-id="1b44b-182">REMARQUE :  Si le contenu est fourni, le fichier résultant ne peut pas être modifié à l’aide de ConcurrentAppend.</span><span class="sxs-lookup"><span data-stu-id="1b44b-182">NOTE: If content is provided, the resulting file cannot be modified using ConcurrentAppend.</span></span>'
  syntax:
    content: 'function createWithHttpOperationResponse(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-183">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="1b44b-183">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-184">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier à créer.</span><span class="sxs-lookup"><span data-stu-id="1b44b-184">The Data Lake Store path (starting with '/') of the file to create.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.deleteMethod
  name: deleteMethod(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-185">Supprime le fichier demandé ou répertoire, si vous le souhaitez récursive.</span><span class="sxs-lookup"><span data-stu-id="1b44b-185">Deletes the requested file or directory, optionally recursively.</span></span>
  syntax:
    content: 'function deleteMethod(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-186">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="1b44b-186">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-187">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier ou du répertoire à supprimer.</span><span class="sxs-lookup"><span data-stu-id="1b44b-187">The Data Lake Store path (starting with '/') of the file or directory to delete.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.deleteMethod_2
  name: deleteMethod(string, string, Object, ServiceCallback<FileOperationResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-188">Supprime le fichier demandé ou répertoire, si vous le souhaitez récursive.</span><span class="sxs-lookup"><span data-stu-id="1b44b-188">Deletes the requested file or directory, optionally recursively.</span></span>
  syntax:
    content: 'function deleteMethod(accountName: string, path: string, options: Object, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.deleteMethod_1
  name: deleteMethod(string, string, ServiceCallback<FileOperationResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-189">Supprime le fichier demandé ou répertoire, si vous le souhaitez récursive.</span><span class="sxs-lookup"><span data-stu-id="1b44b-189">Deletes the requested file or directory, optionally recursively.</span></span>
  syntax:
    content: 'function deleteMethod(accountName: string, path: string, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.deleteMethodWithHttpOperationResponse
  name: deleteMethodWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-190">Supprime le fichier demandé ou répertoire, si vous le souhaitez récursive.</span><span class="sxs-lookup"><span data-stu-id="1b44b-190">Deletes the requested file or directory, optionally recursively.</span></span>
  syntax:
    content: 'function deleteMethodWithHttpOperationResponse(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-191">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="1b44b-191">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-192">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier ou du répertoire à supprimer.</span><span class="sxs-lookup"><span data-stu-id="1b44b-192">The Data Lake Store path (starting with '/') of the file or directory to delete.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.FileOperationResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getAclStatus
  name: getAclStatus(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-193">Obtient les entrées de liste de contrôle d’accès (ACL) pour le fichier ou répertoire spécifié.</span><span class="sxs-lookup"><span data-stu-id="1b44b-193">Gets Access Control List (ACL) entries for the specified file or directory.</span></span>
  syntax:
    content: 'function getAclStatus(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-194">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="1b44b-194">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-195">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier ou du répertoire pour lequel obtenir la liste ACL.</span><span class="sxs-lookup"><span data-stu-id="1b44b-195">The Data Lake Store path (starting with '/') of the file or directory for which to get the ACL.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.AclStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getAclStatus_2
  name: getAclStatus(string, string, Object, ServiceCallback<AclStatusResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-196">Obtient les entrées de liste de contrôle d’accès (ACL) pour le fichier ou répertoire spécifié.</span><span class="sxs-lookup"><span data-stu-id="1b44b-196">Gets Access Control List (ACL) entries for the specified file or directory.</span></span>
  syntax:
    content: 'function getAclStatus(accountName: string, path: string, options: Object, callback: ServiceCallback<AclStatusResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.AclStatusResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.AclStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getAclStatus_1
  name: getAclStatus(string, string, ServiceCallback<AclStatusResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-197">Obtient les entrées de liste de contrôle d’accès (ACL) pour le fichier ou répertoire spécifié.</span><span class="sxs-lookup"><span data-stu-id="1b44b-197">Gets Access Control List (ACL) entries for the specified file or directory.</span></span>
  syntax:
    content: 'function getAclStatus(accountName: string, path: string, callback: ServiceCallback<AclStatusResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.AclStatusResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.AclStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getAclStatusWithHttpOperationResponse
  name: getAclStatusWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-198">Obtient les entrées de liste de contrôle d’accès (ACL) pour le fichier ou répertoire spécifié.</span><span class="sxs-lookup"><span data-stu-id="1b44b-198">Gets Access Control List (ACL) entries for the specified file or directory.</span></span>
  syntax:
    content: 'function getAclStatusWithHttpOperationResponse(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-199">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="1b44b-199">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-200">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier ou du répertoire pour lequel obtenir la liste ACL.</span><span class="sxs-lookup"><span data-stu-id="1b44b-200">The Data Lake Store path (starting with '/') of the file or directory for which to get the ACL.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.AclStatusResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getContentSummary
  name: getContentSummary(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-201">Obtient l’objet de synthèse contenu fichier est spécifié par le chemin d’accès de fichier.</span><span class="sxs-lookup"><span data-stu-id="1b44b-201">Gets the file content summary object specified by the file path.</span></span>
  syntax:
    content: 'function getContentSummary(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-202">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="1b44b-202">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-203">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier pour lequel récupérer le résumé.</span><span class="sxs-lookup"><span data-stu-id="1b44b-203">The Data Lake Store path (starting with '/') of the file for which to retrieve the summary.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.ContentSummaryResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getContentSummary_2
  name: getContentSummary(string, string, Object, ServiceCallback<ContentSummaryResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-204">Obtient l’objet de synthèse contenu fichier est spécifié par le chemin d’accès de fichier.</span><span class="sxs-lookup"><span data-stu-id="1b44b-204">Gets the file content summary object specified by the file path.</span></span>
  syntax:
    content: 'function getContentSummary(accountName: string, path: string, options: Object, callback: ServiceCallback<ContentSummaryResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.ContentSummaryResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.ContentSummaryResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getContentSummary_1
  name: getContentSummary(string, string, ServiceCallback<ContentSummaryResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-205">Obtient l’objet de synthèse contenu fichier est spécifié par le chemin d’accès de fichier.</span><span class="sxs-lookup"><span data-stu-id="1b44b-205">Gets the file content summary object specified by the file path.</span></span>
  syntax:
    content: 'function getContentSummary(accountName: string, path: string, callback: ServiceCallback<ContentSummaryResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.ContentSummaryResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.ContentSummaryResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getContentSummaryWithHttpOperationResponse
  name: getContentSummaryWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-206">Obtient l’objet de synthèse contenu fichier est spécifié par le chemin d’accès de fichier.</span><span class="sxs-lookup"><span data-stu-id="1b44b-206">Gets the file content summary object specified by the file path.</span></span>
  syntax:
    content: 'function getContentSummaryWithHttpOperationResponse(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-207">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="1b44b-207">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-208">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier pour lequel récupérer le résumé.</span><span class="sxs-lookup"><span data-stu-id="1b44b-208">The Data Lake Store path (starting with '/') of the file for which to retrieve the summary.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.ContentSummaryResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getFileStatus
  name: getFileStatus(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-209">Obtenez l’objet d’état de fichier spécifié par le chemin d’accès de fichier.</span><span class="sxs-lookup"><span data-stu-id="1b44b-209">Get the file status object specified by the file path.</span></span>
  syntax:
    content: 'function getFileStatus(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-210">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="1b44b-210">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-211">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier ou répertoire pour lequel récupérer l’état.</span><span class="sxs-lookup"><span data-stu-id="1b44b-211">The Data Lake Store path (starting with '/') of the file or directory for which to retrieve the status.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getFileStatus_2
  name: getFileStatus(string, string, Object, ServiceCallback<FileStatusResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-212">Obtenez l’objet d’état de fichier spécifié par le chemin d’accès de fichier.</span><span class="sxs-lookup"><span data-stu-id="1b44b-212">Get the file status object specified by the file path.</span></span>
  syntax:
    content: 'function getFileStatus(accountName: string, path: string, options: Object, callback: ServiceCallback<FileStatusResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileStatusResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getFileStatus_1
  name: getFileStatus(string, string, ServiceCallback<FileStatusResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-213">Obtenez l’objet d’état de fichier spécifié par le chemin d’accès de fichier.</span><span class="sxs-lookup"><span data-stu-id="1b44b-213">Get the file status object specified by the file path.</span></span>
  syntax:
    content: 'function getFileStatus(accountName: string, path: string, callback: ServiceCallback<FileStatusResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileStatusResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getFileStatusWithHttpOperationResponse
  name: getFileStatusWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-214">Obtenez l’objet d’état de fichier spécifié par le chemin d’accès de fichier.</span><span class="sxs-lookup"><span data-stu-id="1b44b-214">Get the file status object specified by the file path.</span></span>
  syntax:
    content: 'function getFileStatusWithHttpOperationResponse(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-215">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="1b44b-215">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-216">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier ou répertoire pour lequel récupérer l’état.</span><span class="sxs-lookup"><span data-stu-id="1b44b-216">The Data Lake Store path (starting with '/') of the file or directory for which to retrieve the status.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.FileStatusResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.listFileStatus
  name: listFileStatus(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-217">Obtenir la liste des objets d’état de fichier spécifié par le chemin d’accès du fichier, avec les paramètres de pagination facultatives</span><span class="sxs-lookup"><span data-stu-id="1b44b-217">Get the list of file status objects specified by the file path, with optional pagination parameters</span></span>
  syntax:
    content: 'function listFileStatus(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-218">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="1b44b-218">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-219">Le chemin d’accès Data Lake Store (en commençant par « / ») du répertoire à la liste.</span><span class="sxs-lookup"><span data-stu-id="1b44b-219">The Data Lake Store path (starting with '/') of the directory to list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusesResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.listFileStatus_2
  name: listFileStatus(string, string, Object, ServiceCallback<FileStatusesResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-220">Obtenir la liste des objets d’état de fichier spécifié par le chemin d’accès du fichier, avec les paramètres de pagination facultatives</span><span class="sxs-lookup"><span data-stu-id="1b44b-220">Get the list of file status objects specified by the file path, with optional pagination parameters</span></span>
  syntax:
    content: 'function listFileStatus(accountName: string, path: string, options: Object, callback: ServiceCallback<FileStatusesResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileStatusesResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusesResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.listFileStatus_1
  name: listFileStatus(string, string, ServiceCallback<FileStatusesResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-221">Obtenir la liste des objets d’état de fichier spécifié par le chemin d’accès du fichier, avec les paramètres de pagination facultatives</span><span class="sxs-lookup"><span data-stu-id="1b44b-221">Get the list of file status objects specified by the file path, with optional pagination parameters</span></span>
  syntax:
    content: 'function listFileStatus(accountName: string, path: string, callback: ServiceCallback<FileStatusesResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileStatusesResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusesResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.listFileStatusWithHttpOperationResponse
  name: listFileStatusWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-222">Obtenir la liste des objets d’état de fichier spécifié par le chemin d’accès du fichier, avec les paramètres de pagination facultatives</span><span class="sxs-lookup"><span data-stu-id="1b44b-222">Get the list of file status objects specified by the file path, with optional pagination parameters</span></span>
  syntax:
    content: 'function listFileStatusWithHttpOperationResponse(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-223">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="1b44b-223">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-224">Le chemin d’accès Data Lake Store (en commençant par « / ») du répertoire à la liste.</span><span class="sxs-lookup"><span data-stu-id="1b44b-224">The Data Lake Store path (starting with '/') of the directory to list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.FileStatusesResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.mkdirs
  name: mkdirs(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-225">Crée un répertoire.</span><span class="sxs-lookup"><span data-stu-id="1b44b-225">Creates a directory.</span></span>
  syntax:
    content: 'function mkdirs(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-226">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="1b44b-226">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-227">Le chemin d’accès Data Lake Store (en commençant par « / ») du répertoire à créer.</span><span class="sxs-lookup"><span data-stu-id="1b44b-227">The Data Lake Store path (starting with '/') of the directory to create.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.mkdirs_2
  name: mkdirs(string, string, Object, ServiceCallback<FileOperationResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-228">Crée un répertoire.</span><span class="sxs-lookup"><span data-stu-id="1b44b-228">Creates a directory.</span></span>
  syntax:
    content: 'function mkdirs(accountName: string, path: string, options: Object, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.mkdirs_1
  name: mkdirs(string, string, ServiceCallback<FileOperationResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-229">Crée un répertoire.</span><span class="sxs-lookup"><span data-stu-id="1b44b-229">Creates a directory.</span></span>
  syntax:
    content: 'function mkdirs(accountName: string, path: string, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.mkdirsWithHttpOperationResponse
  name: mkdirsWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-230">Crée un répertoire.</span><span class="sxs-lookup"><span data-stu-id="1b44b-230">Creates a directory.</span></span>
  syntax:
    content: 'function mkdirsWithHttpOperationResponse(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-231">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="1b44b-231">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-232">Le chemin d’accès Data Lake Store (en commençant par « / ») du répertoire à créer.</span><span class="sxs-lookup"><span data-stu-id="1b44b-232">The Data Lake Store path (starting with '/') of the directory to create.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.FileOperationResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.modifyAclEntries
  name: modifyAclEntries(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-233">Modifie des entrées de liste de contrôle d’accès (ACL) sur un fichier ou dossier.</span><span class="sxs-lookup"><span data-stu-id="1b44b-233">Modifies existing Access Control List (ACL) entries on a file or folder.</span></span>
  syntax:
    content: 'function modifyAclEntries(accountName: string, path: string, aclspec: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-234">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="1b44b-234">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-235">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier ou du répertoire avec la liste ACL en cours de modification.</span><span class="sxs-lookup"><span data-stu-id="1b44b-235">The Data Lake Store path (starting with '/') of the file or directory with the ACL being modified.</span></span>
    - id: aclspec
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-236">La spécification d’ACL incluse dans les opérations de modification des ACL dans le format ' [par défaut :] utilisateur | groupe | autres :: r |-w |-x |-'</span><span class="sxs-lookup"><span data-stu-id="1b44b-236">The ACL specification included in ACL modification operations in the format '[default:]user|group|other::r|-w|-x|-'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.modifyAclEntries_2
  name: modifyAclEntries(string, string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-237">Modifie des entrées de liste de contrôle d’accès (ACL) sur un fichier ou dossier.</span><span class="sxs-lookup"><span data-stu-id="1b44b-237">Modifies existing Access Control List (ACL) entries on a file or folder.</span></span>
  syntax:
    content: 'function modifyAclEntries(accountName: string, path: string, aclspec: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.modifyAclEntries_1
  name: modifyAclEntries(string, string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-238">Modifie des entrées de liste de contrôle d’accès (ACL) sur un fichier ou dossier.</span><span class="sxs-lookup"><span data-stu-id="1b44b-238">Modifies existing Access Control List (ACL) entries on a file or folder.</span></span>
  syntax:
    content: 'function modifyAclEntries(accountName: string, path: string, aclspec: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.modifyAclEntriesWithHttpOperationResponse
  name: modifyAclEntriesWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-239">Modifie des entrées de liste de contrôle d’accès (ACL) sur un fichier ou dossier.</span><span class="sxs-lookup"><span data-stu-id="1b44b-239">Modifies existing Access Control List (ACL) entries on a file or folder.</span></span>
  syntax:
    content: 'function modifyAclEntriesWithHttpOperationResponse(accountName: string, path: string, aclspec: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-240">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="1b44b-240">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-241">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier ou du répertoire avec la liste ACL en cours de modification.</span><span class="sxs-lookup"><span data-stu-id="1b44b-241">The Data Lake Store path (starting with '/') of the file or directory with the ACL being modified.</span></span>
    - id: aclspec
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-242">La spécification d’ACL incluse dans les opérations de modification des ACL dans le format ' [par défaut :] utilisateur | groupe | autres :: r |-w |-x |-'</span><span class="sxs-lookup"><span data-stu-id="1b44b-242">The ACL specification included in ACL modification operations in the format '[default:]user|group|other::r|-w|-x|-'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.msConcat
  name: msConcat(string, string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-243">Concatène la liste des fichiers sources dans le fichier de destination, la suppression de tous les fichiers sources en cas de réussite.</span><span class="sxs-lookup"><span data-stu-id="1b44b-243">Concatenates the list of source files into the destination file, deleting all source files upon success.</span></span> <span data-ttu-id="1b44b-244">Cette méthode accepte plusieurs chemins d’accès de fichier source que la méthode Concat.</span><span class="sxs-lookup"><span data-stu-id="1b44b-244">This method accepts more source file paths than the Concat method.</span></span> <span data-ttu-id="1b44b-245">Cette méthode et les paramètres qu’il accepte sont susceptibles de changer de facilité d’utilisation dans une prochaine version.</span><span class="sxs-lookup"><span data-stu-id="1b44b-245">This method and the parameters it accepts are subject to change for usability in an upcoming version.</span></span>
  syntax:
    content: 'function msConcat(accountName: string, path: string, streamContents: stream.Readable, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-246">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="1b44b-246">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-247">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier de destination résultant de la concaténation.</span><span class="sxs-lookup"><span data-stu-id="1b44b-247">The Data Lake Store path (starting with '/') of the destination file resulting from the concatenation.</span></span>
    - id: streamContents
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="1b44b-248">Une liste de chemins d’accès Data Lake Store (en commençant par « / ») des fichiers sources.</span><span class="sxs-lookup"><span data-stu-id="1b44b-248">A list of Data Lake Store paths (starting with '/') of the source files.</span></span> <span data-ttu-id="1b44b-249">Doit être une liste séparée par des virgules de chemin d’accès dans le format : sources=/file/path/1.txt,/file/path/2.txt,/file/path/lastfile.csv</span><span class="sxs-lookup"><span data-stu-id="1b44b-249">Must be a comma-separated path list in the format: sources=/file/path/1.txt,/file/path/2.txt,/file/path/lastfile.csv</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.msConcat_2
  name: msConcat(string, string, stream.Readable, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-250">Concatène la liste des fichiers sources dans le fichier de destination, la suppression de tous les fichiers sources en cas de réussite.</span><span class="sxs-lookup"><span data-stu-id="1b44b-250">Concatenates the list of source files into the destination file, deleting all source files upon success.</span></span> <span data-ttu-id="1b44b-251">Cette méthode accepte plusieurs chemins d’accès de fichier source que la méthode Concat.</span><span class="sxs-lookup"><span data-stu-id="1b44b-251">This method accepts more source file paths than the Concat method.</span></span> <span data-ttu-id="1b44b-252">Cette méthode et les paramètres qu’il accepte sont susceptibles de changer de facilité d’utilisation dans une prochaine version.</span><span class="sxs-lookup"><span data-stu-id="1b44b-252">This method and the parameters it accepts are subject to change for usability in an upcoming version.</span></span>
  syntax:
    content: 'function msConcat(accountName: string, path: string, streamContents: stream.Readable, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.msConcat_1
  name: msConcat(string, string, stream.Readable, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-253">Concatène la liste des fichiers sources dans le fichier de destination, la suppression de tous les fichiers sources en cas de réussite.</span><span class="sxs-lookup"><span data-stu-id="1b44b-253">Concatenates the list of source files into the destination file, deleting all source files upon success.</span></span> <span data-ttu-id="1b44b-254">Cette méthode accepte plusieurs chemins d’accès de fichier source que la méthode Concat.</span><span class="sxs-lookup"><span data-stu-id="1b44b-254">This method accepts more source file paths than the Concat method.</span></span> <span data-ttu-id="1b44b-255">Cette méthode et les paramètres qu’il accepte sont susceptibles de changer de facilité d’utilisation dans une prochaine version.</span><span class="sxs-lookup"><span data-stu-id="1b44b-255">This method and the parameters it accepts are subject to change for usability in an upcoming version.</span></span>
  syntax:
    content: 'function msConcat(accountName: string, path: string, streamContents: stream.Readable, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.msConcatWithHttpOperationResponse
  name: msConcatWithHttpOperationResponse(string, string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-256">Concatène la liste des fichiers sources dans le fichier de destination, la suppression de tous les fichiers sources en cas de réussite.</span><span class="sxs-lookup"><span data-stu-id="1b44b-256">Concatenates the list of source files into the destination file, deleting all source files upon success.</span></span> <span data-ttu-id="1b44b-257">Cette méthode accepte plusieurs chemins d’accès de fichier source que la méthode Concat.</span><span class="sxs-lookup"><span data-stu-id="1b44b-257">This method accepts more source file paths than the Concat method.</span></span> <span data-ttu-id="1b44b-258">Cette méthode et les paramètres qu’il accepte sont susceptibles de changer de facilité d’utilisation dans une prochaine version.</span><span class="sxs-lookup"><span data-stu-id="1b44b-258">This method and the parameters it accepts are subject to change for usability in an upcoming version.</span></span>
  syntax:
    content: 'function msConcatWithHttpOperationResponse(accountName: string, path: string, streamContents: stream.Readable, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-259">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="1b44b-259">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-260">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier de destination résultant de la concaténation.</span><span class="sxs-lookup"><span data-stu-id="1b44b-260">The Data Lake Store path (starting with '/') of the destination file resulting from the concatenation.</span></span>
    - id: streamContents
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="1b44b-261">Une liste de chemins d’accès Data Lake Store (en commençant par « / ») des fichiers sources.</span><span class="sxs-lookup"><span data-stu-id="1b44b-261">A list of Data Lake Store paths (starting with '/') of the source files.</span></span> <span data-ttu-id="1b44b-262">Doit être une liste séparée par des virgules de chemin d’accès dans le format : sources=/file/path/1.txt,/file/path/2.txt,/file/path/lastfile.csv</span><span class="sxs-lookup"><span data-stu-id="1b44b-262">Must be a comma-separated path list in the format: sources=/file/path/1.txt,/file/path/2.txt,/file/path/lastfile.csv</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.open
  name: open(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-263">S’ouvre et lit à partir du fichier spécifié.</span><span class="sxs-lookup"><span data-stu-id="1b44b-263">Opens and reads from the specified file.</span></span>
  syntax:
    content: 'function open(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-264">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="1b44b-264">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-265">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier à ouvrir.</span><span class="sxs-lookup"><span data-stu-id="1b44b-265">The Data Lake Store path (starting with '/') of the file to open.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<stream.Readable>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.open_2
  name: open(string, string, Object, ServiceCallback<stream.Readable>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-266">S’ouvre et lit à partir du fichier spécifié.</span><span class="sxs-lookup"><span data-stu-id="1b44b-266">Opens and reads from the specified file.</span></span>
  syntax:
    content: 'function open(accountName: string, path: string, options: Object, callback: ServiceCallback<stream.Readable>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<stream.Readable>
      description: ''
    return:
      type:
      - Promise<stream.Readable>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.open_1
  name: open(string, string, ServiceCallback<stream.Readable>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-267">S’ouvre et lit à partir du fichier spécifié.</span><span class="sxs-lookup"><span data-stu-id="1b44b-267">Opens and reads from the specified file.</span></span>
  syntax:
    content: 'function open(accountName: string, path: string, callback: ServiceCallback<stream.Readable>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<stream.Readable>
      description: ''
    return:
      type:
      - Promise<stream.Readable>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.openWithHttpOperationResponse
  name: openWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-268">S’ouvre et lit à partir du fichier spécifié.</span><span class="sxs-lookup"><span data-stu-id="1b44b-268">Opens and reads from the specified file.</span></span>
  syntax:
    content: 'function openWithHttpOperationResponse(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-269">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="1b44b-269">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-270">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier à ouvrir.</span><span class="sxs-lookup"><span data-stu-id="1b44b-270">The Data Lake Store path (starting with '/') of the file to open.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<stream.Readable>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAcl
  name: removeAcl(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-271">Supprime la liste de contrôle accès existant (ACL) du fichier spécifié ou du répertoire.</span><span class="sxs-lookup"><span data-stu-id="1b44b-271">Removes the existing Access Control List (ACL) of the specified file or directory.</span></span>
  syntax:
    content: 'function removeAcl(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-272">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="1b44b-272">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-273">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier ou du répertoire avec la liste ACL en cours de suppression.</span><span class="sxs-lookup"><span data-stu-id="1b44b-273">The Data Lake Store path (starting with '/') of the file or directory with the ACL being removed.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAcl_2
  name: removeAcl(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-274">Supprime la liste de contrôle accès existant (ACL) du fichier spécifié ou du répertoire.</span><span class="sxs-lookup"><span data-stu-id="1b44b-274">Removes the existing Access Control List (ACL) of the specified file or directory.</span></span>
  syntax:
    content: 'function removeAcl(accountName: string, path: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAcl_1
  name: removeAcl(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-275">Supprime la liste de contrôle accès existant (ACL) du fichier spécifié ou du répertoire.</span><span class="sxs-lookup"><span data-stu-id="1b44b-275">Removes the existing Access Control List (ACL) of the specified file or directory.</span></span>
  syntax:
    content: 'function removeAcl(accountName: string, path: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAclEntries
  name: removeAclEntries(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-276">Supprime les entrées de liste de contrôle d’accès (ACL) pour un fichier ou dossier.</span><span class="sxs-lookup"><span data-stu-id="1b44b-276">Removes existing Access Control List (ACL) entries for a file or folder.</span></span>
  syntax:
    content: 'function removeAclEntries(accountName: string, path: string, aclspec: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-277">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="1b44b-277">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-278">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier ou du répertoire avec la liste ACL en cours de suppression.</span><span class="sxs-lookup"><span data-stu-id="1b44b-278">The Data Lake Store path (starting with '/') of the file or directory with the ACL being removed.</span></span>
    - id: aclspec
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-279">La spécification d’ACL incluse dans les opérations de suppression d’ACL dans le format ' [par défaut :] utilisateur | groupe | autres '</span><span class="sxs-lookup"><span data-stu-id="1b44b-279">The ACL spec included in ACL removal operations in the format '[default:]user|group|other'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAclEntries_2
  name: removeAclEntries(string, string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-280">Supprime les entrées de liste de contrôle d’accès (ACL) pour un fichier ou dossier.</span><span class="sxs-lookup"><span data-stu-id="1b44b-280">Removes existing Access Control List (ACL) entries for a file or folder.</span></span>
  syntax:
    content: 'function removeAclEntries(accountName: string, path: string, aclspec: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAclEntries_1
  name: removeAclEntries(string, string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-281">Supprime les entrées de liste de contrôle d’accès (ACL) pour un fichier ou dossier.</span><span class="sxs-lookup"><span data-stu-id="1b44b-281">Removes existing Access Control List (ACL) entries for a file or folder.</span></span>
  syntax:
    content: 'function removeAclEntries(accountName: string, path: string, aclspec: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAclEntriesWithHttpOperationResponse
  name: removeAclEntriesWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-282">Supprime les entrées de liste de contrôle d’accès (ACL) pour un fichier ou dossier.</span><span class="sxs-lookup"><span data-stu-id="1b44b-282">Removes existing Access Control List (ACL) entries for a file or folder.</span></span>
  syntax:
    content: 'function removeAclEntriesWithHttpOperationResponse(accountName: string, path: string, aclspec: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-283">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="1b44b-283">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-284">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier ou du répertoire avec la liste ACL en cours de suppression.</span><span class="sxs-lookup"><span data-stu-id="1b44b-284">The Data Lake Store path (starting with '/') of the file or directory with the ACL being removed.</span></span>
    - id: aclspec
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-285">La spécification d’ACL incluse dans les opérations de suppression d’ACL dans le format ' [par défaut :] utilisateur | groupe | autres '</span><span class="sxs-lookup"><span data-stu-id="1b44b-285">The ACL spec included in ACL removal operations in the format '[default:]user|group|other'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAclWithHttpOperationResponse
  name: removeAclWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-286">Supprime la liste de contrôle accès existant (ACL) du fichier spécifié ou du répertoire.</span><span class="sxs-lookup"><span data-stu-id="1b44b-286">Removes the existing Access Control List (ACL) of the specified file or directory.</span></span>
  syntax:
    content: 'function removeAclWithHttpOperationResponse(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-287">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="1b44b-287">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-288">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier ou du répertoire avec la liste ACL en cours de suppression.</span><span class="sxs-lookup"><span data-stu-id="1b44b-288">The Data Lake Store path (starting with '/') of the file or directory with the ACL being removed.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeDefaultAcl
  name: removeDefaultAcl(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-289">Supprime l’existant par défaut contrôle liste accès (ACL) du répertoire spécifié.</span><span class="sxs-lookup"><span data-stu-id="1b44b-289">Removes the existing Default Access Control List (ACL) of the specified directory.</span></span>
  syntax:
    content: 'function removeDefaultAcl(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-290">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="1b44b-290">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-291">Le chemin d’accès Data Lake Store (en commençant par « / ») du répertoire avec la valeur par défaut ACL en cours de suppression.</span><span class="sxs-lookup"><span data-stu-id="1b44b-291">The Data Lake Store path (starting with '/') of the directory with the default ACL being removed.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeDefaultAcl_2
  name: removeDefaultAcl(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-292">Supprime l’existant par défaut contrôle liste accès (ACL) du répertoire spécifié.</span><span class="sxs-lookup"><span data-stu-id="1b44b-292">Removes the existing Default Access Control List (ACL) of the specified directory.</span></span>
  syntax:
    content: 'function removeDefaultAcl(accountName: string, path: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeDefaultAcl_1
  name: removeDefaultAcl(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-293">Supprime l’existant par défaut contrôle liste accès (ACL) du répertoire spécifié.</span><span class="sxs-lookup"><span data-stu-id="1b44b-293">Removes the existing Default Access Control List (ACL) of the specified directory.</span></span>
  syntax:
    content: 'function removeDefaultAcl(accountName: string, path: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeDefaultAclWithHttpOperationResponse
  name: removeDefaultAclWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-294">Supprime l’existant par défaut contrôle liste accès (ACL) du répertoire spécifié.</span><span class="sxs-lookup"><span data-stu-id="1b44b-294">Removes the existing Default Access Control List (ACL) of the specified directory.</span></span>
  syntax:
    content: 'function removeDefaultAclWithHttpOperationResponse(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-295">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="1b44b-295">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-296">Le chemin d’accès Data Lake Store (en commençant par « / ») du répertoire avec la valeur par défaut ACL en cours de suppression.</span><span class="sxs-lookup"><span data-stu-id="1b44b-296">The Data Lake Store path (starting with '/') of the directory with the default ACL being removed.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.rename
  name: rename(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-297">Renommer un fichier ou répertoire.</span><span class="sxs-lookup"><span data-stu-id="1b44b-297">Rename a file or directory.</span></span>
  syntax:
    content: 'function rename(accountName: string, path: string, destination: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-298">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="1b44b-298">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-299">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier ou du répertoire à move/rename.</span><span class="sxs-lookup"><span data-stu-id="1b44b-299">The Data Lake Store path (starting with '/') of the file or directory to move/rename.</span></span>
    - id: destination
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-300">Le chemin d’accès pour le fichier ou dossier à move/rename</span><span class="sxs-lookup"><span data-stu-id="1b44b-300">The path to move/rename the file or folder to</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.rename_2
  name: rename(string, string, string, Object, ServiceCallback<FileOperationResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-301">Renommer un fichier ou répertoire.</span><span class="sxs-lookup"><span data-stu-id="1b44b-301">Rename a file or directory.</span></span>
  syntax:
    content: 'function rename(accountName: string, path: string, destination: string, options: Object, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: destination
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.rename_1
  name: rename(string, string, string, ServiceCallback<FileOperationResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-302">Renommer un fichier ou répertoire.</span><span class="sxs-lookup"><span data-stu-id="1b44b-302">Rename a file or directory.</span></span>
  syntax:
    content: 'function rename(accountName: string, path: string, destination: string, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: destination
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.renameWithHttpOperationResponse
  name: renameWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-303">Renommer un fichier ou répertoire.</span><span class="sxs-lookup"><span data-stu-id="1b44b-303">Rename a file or directory.</span></span>
  syntax:
    content: 'function renameWithHttpOperationResponse(accountName: string, path: string, destination: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-304">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="1b44b-304">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-305">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier ou du répertoire à move/rename.</span><span class="sxs-lookup"><span data-stu-id="1b44b-305">The Data Lake Store path (starting with '/') of the file or directory to move/rename.</span></span>
    - id: destination
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-306">Le chemin d’accès pour le fichier ou dossier à move/rename</span><span class="sxs-lookup"><span data-stu-id="1b44b-306">The path to move/rename the file or folder to</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.FileOperationResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setAcl
  name: setAcl(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-307">Définit la liste de contrôle d’accès (ACL) pour un fichier ou dossier.</span><span class="sxs-lookup"><span data-stu-id="1b44b-307">Sets the Access Control List (ACL) for a file or folder.</span></span>
  syntax:
    content: 'function setAcl(accountName: string, path: string, aclspec: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-308">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="1b44b-308">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-309">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier ou du répertoire sur lequel définir la liste ACL.</span><span class="sxs-lookup"><span data-stu-id="1b44b-309">The Data Lake Store path (starting with '/') of the file or directory on which to set the ACL.</span></span>
    - id: aclspec
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-310">La spécification d’ACL incluse dans les opérations de création de liste ACL dans le format ' [par défaut :] utilisateur | groupe | autres :: r |-w |-x |-'</span><span class="sxs-lookup"><span data-stu-id="1b44b-310">The ACL spec included in ACL creation operations in the format '[default:]user|group|other::r|-w|-x|-'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setAcl_2
  name: setAcl(string, string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-311">Définit la liste de contrôle d’accès (ACL) pour un fichier ou dossier.</span><span class="sxs-lookup"><span data-stu-id="1b44b-311">Sets the Access Control List (ACL) for a file or folder.</span></span>
  syntax:
    content: 'function setAcl(accountName: string, path: string, aclspec: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setAcl_1
  name: setAcl(string, string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-312">Définit la liste de contrôle d’accès (ACL) pour un fichier ou dossier.</span><span class="sxs-lookup"><span data-stu-id="1b44b-312">Sets the Access Control List (ACL) for a file or folder.</span></span>
  syntax:
    content: 'function setAcl(accountName: string, path: string, aclspec: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setAclWithHttpOperationResponse
  name: setAclWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-313">Définit la liste de contrôle d’accès (ACL) pour un fichier ou dossier.</span><span class="sxs-lookup"><span data-stu-id="1b44b-313">Sets the Access Control List (ACL) for a file or folder.</span></span>
  syntax:
    content: 'function setAclWithHttpOperationResponse(accountName: string, path: string, aclspec: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-314">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="1b44b-314">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-315">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier ou du répertoire sur lequel définir la liste ACL.</span><span class="sxs-lookup"><span data-stu-id="1b44b-315">The Data Lake Store path (starting with '/') of the file or directory on which to set the ACL.</span></span>
    - id: aclspec
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-316">La spécification d’ACL incluse dans les opérations de création de liste ACL dans le format ' [par défaut :] utilisateur | groupe | autres :: r |-w |-x |-'</span><span class="sxs-lookup"><span data-stu-id="1b44b-316">The ACL spec included in ACL creation operations in the format '[default:]user|group|other::r|-w|-x|-'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setFileExpiry
  name: setFileExpiry(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-317">Définit ou supprime le délai d’expiration sur le fichier spécifié.</span><span class="sxs-lookup"><span data-stu-id="1b44b-317">Sets or removes the expiration time on the specified file.</span></span> <span data-ttu-id="1b44b-318">Cette opération peut uniquement être exécutée sur les fichiers.</span><span class="sxs-lookup"><span data-stu-id="1b44b-318">This operation can only be executed against files.</span></span> <span data-ttu-id="1b44b-319">Dossiers ne sont pas pris en charge.</span><span class="sxs-lookup"><span data-stu-id="1b44b-319">Folders are not supported.</span></span>
  syntax:
    content: 'function setFileExpiry(accountName: string, path: string, expiryOption: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-320">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="1b44b-320">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-321">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier sur lequel définir ou supprimer le délai d’expiration.</span><span class="sxs-lookup"><span data-stu-id="1b44b-321">The Data Lake Store path (starting with '/') of the file on which to set or remove the expiration time.</span></span>
    - id: expiryOption
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-322">Indique le type d’expiration à utiliser pour le fichier : 1.</span><span class="sxs-lookup"><span data-stu-id="1b44b-322">Indicates the type of expiration to use for the file: 1.</span></span> <span data-ttu-id="1b44b-323">NeverExpire : ExpireTime est ignoré.</span><span class="sxs-lookup"><span data-stu-id="1b44b-323">NeverExpire: ExpireTime is ignored.</span></span> <span data-ttu-id="1b44b-324">2.</span><span class="sxs-lookup"><span data-stu-id="1b44b-324">2.</span></span> <span data-ttu-id="1b44b-325">RelativeToNow : ExpireTime est un entier en millisecondes, qui représente la date d’expiration relatif à lors de l’expiration de fichier est mis à jour.</span><span class="sxs-lookup"><span data-stu-id="1b44b-325">RelativeToNow: ExpireTime is an integer in milliseconds representing the expiration date relative to when file expiration is updated.</span></span> <span data-ttu-id="1b44b-326">3.</span><span class="sxs-lookup"><span data-stu-id="1b44b-326">3.</span></span> <span data-ttu-id="1b44b-327">RelativeToCreationDate : ExpireTime est un entier en millisecondes, qui représente la date d’expiration par rapport à la création de fichiers.</span><span class="sxs-lookup"><span data-stu-id="1b44b-327">RelativeToCreationDate: ExpireTime is an integer in milliseconds representing the expiration date relative to file creation.</span></span> <span data-ttu-id="1b44b-328">4.</span><span class="sxs-lookup"><span data-stu-id="1b44b-328">4.</span></span> <span data-ttu-id="1b44b-329">Absolu : ExpireTime est un entier en millisecondes, comme un horodatage Unix par rapport à 1/1/1970 00:00:00.</span><span class="sxs-lookup"><span data-stu-id="1b44b-329">Absolute: ExpireTime is an integer in milliseconds, as a Unix timestamp relative to 1/1/1970 00:00:00.</span></span> <span data-ttu-id="1b44b-330">Les valeurs possibles incluent : 'NeverExpire', 'RelativeToNow', « RelativeToCreationDate », « Absolute »</span><span class="sxs-lookup"><span data-stu-id="1b44b-330">Possible values include: 'NeverExpire', 'RelativeToNow', 'RelativeToCreationDate', 'Absolute'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setFileExpiry_2
  name: setFileExpiry(string, string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-331">Définit ou supprime le délai d’expiration sur le fichier spécifié.</span><span class="sxs-lookup"><span data-stu-id="1b44b-331">Sets or removes the expiration time on the specified file.</span></span> <span data-ttu-id="1b44b-332">Cette opération peut uniquement être exécutée sur les fichiers.</span><span class="sxs-lookup"><span data-stu-id="1b44b-332">This operation can only be executed against files.</span></span> <span data-ttu-id="1b44b-333">Dossiers ne sont pas pris en charge.</span><span class="sxs-lookup"><span data-stu-id="1b44b-333">Folders are not supported.</span></span>
  syntax:
    content: 'function setFileExpiry(accountName: string, path: string, expiryOption: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: expiryOption
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setFileExpiry_1
  name: setFileExpiry(string, string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-334">Définit ou supprime le délai d’expiration sur le fichier spécifié.</span><span class="sxs-lookup"><span data-stu-id="1b44b-334">Sets or removes the expiration time on the specified file.</span></span> <span data-ttu-id="1b44b-335">Cette opération peut uniquement être exécutée sur les fichiers.</span><span class="sxs-lookup"><span data-stu-id="1b44b-335">This operation can only be executed against files.</span></span> <span data-ttu-id="1b44b-336">Dossiers ne sont pas pris en charge.</span><span class="sxs-lookup"><span data-stu-id="1b44b-336">Folders are not supported.</span></span>
  syntax:
    content: 'function setFileExpiry(accountName: string, path: string, expiryOption: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: expiryOption
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setFileExpiryWithHttpOperationResponse
  name: setFileExpiryWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-337">Définit ou supprime le délai d’expiration sur le fichier spécifié.</span><span class="sxs-lookup"><span data-stu-id="1b44b-337">Sets or removes the expiration time on the specified file.</span></span> <span data-ttu-id="1b44b-338">Cette opération peut uniquement être exécutée sur les fichiers.</span><span class="sxs-lookup"><span data-stu-id="1b44b-338">This operation can only be executed against files.</span></span> <span data-ttu-id="1b44b-339">Dossiers ne sont pas pris en charge.</span><span class="sxs-lookup"><span data-stu-id="1b44b-339">Folders are not supported.</span></span>
  syntax:
    content: 'function setFileExpiryWithHttpOperationResponse(accountName: string, path: string, expiryOption: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-340">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="1b44b-340">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-341">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier sur lequel définir ou supprimer le délai d’expiration.</span><span class="sxs-lookup"><span data-stu-id="1b44b-341">The Data Lake Store path (starting with '/') of the file on which to set or remove the expiration time.</span></span>
    - id: expiryOption
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-342">Indique le type d’expiration à utiliser pour le fichier : 1.</span><span class="sxs-lookup"><span data-stu-id="1b44b-342">Indicates the type of expiration to use for the file: 1.</span></span> <span data-ttu-id="1b44b-343">NeverExpire : ExpireTime est ignoré.</span><span class="sxs-lookup"><span data-stu-id="1b44b-343">NeverExpire: ExpireTime is ignored.</span></span> <span data-ttu-id="1b44b-344">2.</span><span class="sxs-lookup"><span data-stu-id="1b44b-344">2.</span></span> <span data-ttu-id="1b44b-345">RelativeToNow : ExpireTime est un entier en millisecondes, qui représente la date d’expiration relatif à lors de l’expiration de fichier est mis à jour.</span><span class="sxs-lookup"><span data-stu-id="1b44b-345">RelativeToNow: ExpireTime is an integer in milliseconds representing the expiration date relative to when file expiration is updated.</span></span> <span data-ttu-id="1b44b-346">3.</span><span class="sxs-lookup"><span data-stu-id="1b44b-346">3.</span></span> <span data-ttu-id="1b44b-347">RelativeToCreationDate : ExpireTime est un entier en millisecondes, qui représente la date d’expiration par rapport à la création de fichiers.</span><span class="sxs-lookup"><span data-stu-id="1b44b-347">RelativeToCreationDate: ExpireTime is an integer in milliseconds representing the expiration date relative to file creation.</span></span> <span data-ttu-id="1b44b-348">4.</span><span class="sxs-lookup"><span data-stu-id="1b44b-348">4.</span></span> <span data-ttu-id="1b44b-349">Absolu : ExpireTime est un entier en millisecondes, comme un horodatage Unix par rapport à 1/1/1970 00:00:00.</span><span class="sxs-lookup"><span data-stu-id="1b44b-349">Absolute: ExpireTime is an integer in milliseconds, as a Unix timestamp relative to 1/1/1970 00:00:00.</span></span> <span data-ttu-id="1b44b-350">Les valeurs possibles incluent : 'NeverExpire', 'RelativeToNow', « RelativeToCreationDate », « Absolute »</span><span class="sxs-lookup"><span data-stu-id="1b44b-350">Possible values include: 'NeverExpire', 'RelativeToNow', 'RelativeToCreationDate', 'Absolute'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setOwner
  name: setOwner(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-351">Définit le propriétaire d’un fichier ou un répertoire.</span><span class="sxs-lookup"><span data-stu-id="1b44b-351">Sets the owner of a file or directory.</span></span>
  syntax:
    content: 'function setOwner(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-352">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="1b44b-352">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-353">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier ou répertoire pour lequel définir le propriétaire.</span><span class="sxs-lookup"><span data-stu-id="1b44b-353">The Data Lake Store path (starting with '/') of the file or directory for which to set the owner.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setOwner_2
  name: setOwner(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-354">Définit le propriétaire d’un fichier ou un répertoire.</span><span class="sxs-lookup"><span data-stu-id="1b44b-354">Sets the owner of a file or directory.</span></span>
  syntax:
    content: 'function setOwner(accountName: string, path: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setOwner_1
  name: setOwner(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-355">Définit le propriétaire d’un fichier ou un répertoire.</span><span class="sxs-lookup"><span data-stu-id="1b44b-355">Sets the owner of a file or directory.</span></span>
  syntax:
    content: 'function setOwner(accountName: string, path: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setOwnerWithHttpOperationResponse
  name: setOwnerWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-356">Définit le propriétaire d’un fichier ou un répertoire.</span><span class="sxs-lookup"><span data-stu-id="1b44b-356">Sets the owner of a file or directory.</span></span>
  syntax:
    content: 'function setOwnerWithHttpOperationResponse(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-357">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="1b44b-357">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-358">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier ou répertoire pour lequel définir le propriétaire.</span><span class="sxs-lookup"><span data-stu-id="1b44b-358">The Data Lake Store path (starting with '/') of the file or directory for which to set the owner.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setPermission
  name: setPermission(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-359">Définit l’autorisation du fichier ou du dossier.</span><span class="sxs-lookup"><span data-stu-id="1b44b-359">Sets the permission of the file or folder.</span></span>
  syntax:
    content: 'function setPermission(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-360">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="1b44b-360">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-361">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier ou du répertoire pour lequel définir l’autorisation.</span><span class="sxs-lookup"><span data-stu-id="1b44b-361">The Data Lake Store path (starting with '/') of the file or directory for which to set the permission.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setPermission_2
  name: setPermission(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-362">Définit l’autorisation du fichier ou du dossier.</span><span class="sxs-lookup"><span data-stu-id="1b44b-362">Sets the permission of the file or folder.</span></span>
  syntax:
    content: 'function setPermission(accountName: string, path: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setPermission_1
  name: setPermission(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-363">Définit l’autorisation du fichier ou du dossier.</span><span class="sxs-lookup"><span data-stu-id="1b44b-363">Sets the permission of the file or folder.</span></span>
  syntax:
    content: 'function setPermission(accountName: string, path: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setPermissionWithHttpOperationResponse
  name: setPermissionWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="1b44b-364">Définit l’autorisation du fichier ou du dossier.</span><span class="sxs-lookup"><span data-stu-id="1b44b-364">Sets the permission of the file or folder.</span></span>
  syntax:
    content: 'function setPermissionWithHttpOperationResponse(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-365">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="1b44b-365">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="1b44b-366">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier ou du répertoire pour lequel définir l’autorisation.</span><span class="sxs-lookup"><span data-stu-id="1b44b-366">The Data Lake Store path (starting with '/') of the file or directory for which to set the permission.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
references:
- uid: Promise<azure-arm-datalake-store.FileOperationResult>
  name: FileOperationResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: FileOperationResult
    fullName: FileOperationResult
    uid: azure-arm-datalake-store.FileOperationResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-datalake-store.FileOperationResult>
  name: FileOperationResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: FileOperationResult
    fullName: FileOperationResult
    uid: azure-arm-datalake-store.FileOperationResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-datalake-store.FileOperationResult>>
  name: FileOperationResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: FileOperationResult
    fullName: FileOperationResult
    uid: azure-arm-datalake-store.FileOperationResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-datalake-store.AclStatusResult>
  name: AclStatusResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: AclStatusResult
    fullName: AclStatusResult
    uid: azure-arm-datalake-store.AclStatusResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-datalake-store.AclStatusResult>
  name: AclStatusResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: AclStatusResult
    fullName: AclStatusResult
    uid: azure-arm-datalake-store.AclStatusResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-datalake-store.AclStatusResult>>
  name: AclStatusResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: AclStatusResult
    fullName: AclStatusResult
    uid: azure-arm-datalake-store.AclStatusResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-datalake-store.ContentSummaryResult>
  name: ContentSummaryResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ContentSummaryResult
    fullName: ContentSummaryResult
    uid: azure-arm-datalake-store.ContentSummaryResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-datalake-store.ContentSummaryResult>
  name: ContentSummaryResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ContentSummaryResult
    fullName: ContentSummaryResult
    uid: azure-arm-datalake-store.ContentSummaryResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-datalake-store.ContentSummaryResult>>
  name: ContentSummaryResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ContentSummaryResult
    fullName: ContentSummaryResult
    uid: azure-arm-datalake-store.ContentSummaryResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-datalake-store.FileStatusResult>
  name: FileStatusResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: FileStatusResult
    fullName: FileStatusResult
    uid: azure-arm-datalake-store.FileStatusResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-datalake-store.FileStatusResult>
  name: FileStatusResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: FileStatusResult
    fullName: FileStatusResult
    uid: azure-arm-datalake-store.FileStatusResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-datalake-store.FileStatusResult>>
  name: FileStatusResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: FileStatusResult
    fullName: FileStatusResult
    uid: azure-arm-datalake-store.FileStatusResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-datalake-store.FileStatusesResult>
  name: FileStatusesResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: FileStatusesResult
    fullName: FileStatusesResult
    uid: azure-arm-datalake-store.FileStatusesResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-datalake-store.FileStatusesResult>
  name: FileStatusesResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: FileStatusesResult
    fullName: FileStatusesResult
    uid: azure-arm-datalake-store.FileStatusesResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-datalake-store.FileStatusesResult>>
  name: FileStatusesResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: FileStatusesResult
    fullName: FileStatusesResult
    uid: azure-arm-datalake-store.FileStatusesResult
  - name: '>>'
    fullName: '>>'
