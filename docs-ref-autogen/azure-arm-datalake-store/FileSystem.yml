### YamlMime:UniversalReference
ms.openlocfilehash: 75afaedf2f5e76f076c1167cc227823ca7dc934f
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 08/12/2018
ms.locfileid: "40060825"
items:
- uid: azure-arm-datalake-store.FileSystem
  name: FileSystem
  fullName: FileSystem
  children:
  - azure-arm-datalake-store.FileSystem.append
  - azure-arm-datalake-store.FileSystem.append_1
  - azure-arm-datalake-store.FileSystem.append_2
  - azure-arm-datalake-store.FileSystem.appendWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.checkAccess
  - azure-arm-datalake-store.FileSystem.checkAccess_1
  - azure-arm-datalake-store.FileSystem.checkAccess_2
  - azure-arm-datalake-store.FileSystem.checkAccessWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.concat_1
  - azure-arm-datalake-store.FileSystem.concat
  - azure-arm-datalake-store.FileSystem.concat_2
  - azure-arm-datalake-store.FileSystem.concatWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.concurrentAppend
  - azure-arm-datalake-store.FileSystem.concurrentAppend_1
  - azure-arm-datalake-store.FileSystem.concurrentAppend_2
  - azure-arm-datalake-store.FileSystem.concurrentAppendWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.create_2
  - azure-arm-datalake-store.FileSystem.create
  - azure-arm-datalake-store.FileSystem.create_1
  - azure-arm-datalake-store.FileSystem.createWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.deleteMethod
  - azure-arm-datalake-store.FileSystem.deleteMethod_1
  - azure-arm-datalake-store.FileSystem.deleteMethod_2
  - azure-arm-datalake-store.FileSystem.deleteMethodWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.getAclStatus_1
  - azure-arm-datalake-store.FileSystem.getAclStatus
  - azure-arm-datalake-store.FileSystem.getAclStatus_2
  - azure-arm-datalake-store.FileSystem.getAclStatusWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.getContentSummary
  - azure-arm-datalake-store.FileSystem.getContentSummary_2
  - azure-arm-datalake-store.FileSystem.getContentSummary_1
  - azure-arm-datalake-store.FileSystem.getContentSummaryWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.getFileStatus
  - azure-arm-datalake-store.FileSystem.getFileStatus_1
  - azure-arm-datalake-store.FileSystem.getFileStatus_2
  - azure-arm-datalake-store.FileSystem.getFileStatusWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.listFileStatus_1
  - azure-arm-datalake-store.FileSystem.listFileStatus_2
  - azure-arm-datalake-store.FileSystem.listFileStatus
  - azure-arm-datalake-store.FileSystem.listFileStatusWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.mkdirs
  - azure-arm-datalake-store.FileSystem.mkdirs_1
  - azure-arm-datalake-store.FileSystem.mkdirs_2
  - azure-arm-datalake-store.FileSystem.mkdirsWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.modifyAclEntries
  - azure-arm-datalake-store.FileSystem.modifyAclEntries_1
  - azure-arm-datalake-store.FileSystem.modifyAclEntries_2
  - azure-arm-datalake-store.FileSystem.modifyAclEntriesWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.msConcat
  - azure-arm-datalake-store.FileSystem.msConcat_2
  - azure-arm-datalake-store.FileSystem.msConcat_1
  - azure-arm-datalake-store.FileSystem.msConcatWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.open
  - azure-arm-datalake-store.FileSystem.open_2
  - azure-arm-datalake-store.FileSystem.open_1
  - azure-arm-datalake-store.FileSystem.openWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.removeAcl_1
  - azure-arm-datalake-store.FileSystem.removeAcl_2
  - azure-arm-datalake-store.FileSystem.removeAcl
  - azure-arm-datalake-store.FileSystem.removeAclEntries
  - azure-arm-datalake-store.FileSystem.removeAclEntries_2
  - azure-arm-datalake-store.FileSystem.removeAclEntries_1
  - azure-arm-datalake-store.FileSystem.removeAclEntriesWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.removeAclWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.removeDefaultAcl
  - azure-arm-datalake-store.FileSystem.removeDefaultAcl_1
  - azure-arm-datalake-store.FileSystem.removeDefaultAcl_2
  - azure-arm-datalake-store.FileSystem.removeDefaultAclWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.rename
  - azure-arm-datalake-store.FileSystem.rename_2
  - azure-arm-datalake-store.FileSystem.rename_1
  - azure-arm-datalake-store.FileSystem.renameWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.setAcl
  - azure-arm-datalake-store.FileSystem.setAcl_1
  - azure-arm-datalake-store.FileSystem.setAcl_2
  - azure-arm-datalake-store.FileSystem.setAclWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.setFileExpiry
  - azure-arm-datalake-store.FileSystem.setFileExpiry_1
  - azure-arm-datalake-store.FileSystem.setFileExpiry_2
  - azure-arm-datalake-store.FileSystem.setFileExpiryWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.setOwner
  - azure-arm-datalake-store.FileSystem.setOwner_1
  - azure-arm-datalake-store.FileSystem.setOwner_2
  - azure-arm-datalake-store.FileSystem.setOwnerWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.setPermission
  - azure-arm-datalake-store.FileSystem.setPermission_1
  - azure-arm-datalake-store.FileSystem.setPermission_2
  - azure-arm-datalake-store.FileSystem.setPermissionWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.append
  name: append
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="50028-101">Utilisé pour la série ajoute au fichier spécifié.</span><span class="sxs-lookup"><span data-stu-id="50028-101">Used for serial appends to the specified file.</span></span> <span data-ttu-id="50028-102">Remarque : La cible ne doit pas contenir de données ajoutées par ConcurrentAppend.</span><span class="sxs-lookup"><span data-stu-id="50028-102">NOTE: The target must not contain data added by ConcurrentAppend.</span></span> <span data-ttu-id="50028-103">ConcurrentAppend et Append ne peut pas être utilisés indifféremment ; une fois qu’un fichier cible a été modifié à l’aide d’une de ces options d’ajout, l’autre option d’ajout ne peut pas être utilisée sur le fichier cible.</span><span class="sxs-lookup"><span data-stu-id="50028-103">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span>'
  syntax:
    content: 'function append(accountName: string, path: string, streamContents: stream.Readable, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="50028-104">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="50028-104">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="50028-105">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier à laquelle ajouter.</span><span class="sxs-lookup"><span data-stu-id="50028-105">The Data Lake Store path (starting with '/') of the file to which to append.</span></span>
    - id: streamContents
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="50028-106">Le contenu du fichier à inclure lors de l’ajout au fichier.</span><span class="sxs-lookup"><span data-stu-id="50028-106">The file contents to include when appending to the file.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.append_1
  name: append
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="50028-107">Utilisé pour la série ajoute au fichier spécifié.</span><span class="sxs-lookup"><span data-stu-id="50028-107">Used for serial appends to the specified file.</span></span> <span data-ttu-id="50028-108">Remarque : La cible ne doit pas contenir de données ajoutées par ConcurrentAppend.</span><span class="sxs-lookup"><span data-stu-id="50028-108">NOTE: The target must not contain data added by ConcurrentAppend.</span></span> <span data-ttu-id="50028-109">ConcurrentAppend et Append ne peut pas être utilisés indifféremment ; une fois qu’un fichier cible a été modifié à l’aide d’une de ces options d’ajout, l’autre option d’ajout ne peut pas être utilisée sur le fichier cible.</span><span class="sxs-lookup"><span data-stu-id="50028-109">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span>'
  syntax:
    content: 'function append(accountName: string, path: string, streamContents: stream.Readable, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.append_2
  name: append
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="50028-110">Utilisé pour la série ajoute au fichier spécifié.</span><span class="sxs-lookup"><span data-stu-id="50028-110">Used for serial appends to the specified file.</span></span> <span data-ttu-id="50028-111">Remarque : La cible ne doit pas contenir de données ajoutées par ConcurrentAppend.</span><span class="sxs-lookup"><span data-stu-id="50028-111">NOTE: The target must not contain data added by ConcurrentAppend.</span></span> <span data-ttu-id="50028-112">ConcurrentAppend et Append ne peut pas être utilisés indifféremment ; une fois qu’un fichier cible a été modifié à l’aide d’une de ces options d’ajout, l’autre option d’ajout ne peut pas être utilisée sur le fichier cible.</span><span class="sxs-lookup"><span data-stu-id="50028-112">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span>'
  syntax:
    content: 'function append(accountName: string, path: string, streamContents: stream.Readable, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.appendWithHttpOperationResponse
  name: appendWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="50028-113">Utilisé pour la série ajoute au fichier spécifié.</span><span class="sxs-lookup"><span data-stu-id="50028-113">Used for serial appends to the specified file.</span></span> <span data-ttu-id="50028-114">Remarque : La cible ne doit pas contenir de données ajoutées par ConcurrentAppend.</span><span class="sxs-lookup"><span data-stu-id="50028-114">NOTE: The target must not contain data added by ConcurrentAppend.</span></span> <span data-ttu-id="50028-115">ConcurrentAppend et Append ne peut pas être utilisés indifféremment ; une fois qu’un fichier cible a été modifié à l’aide d’une de ces options d’ajout, l’autre option d’ajout ne peut pas être utilisée sur le fichier cible.</span><span class="sxs-lookup"><span data-stu-id="50028-115">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span>'
  syntax:
    content: 'function appendWithHttpOperationResponse(accountName: string, path: string, streamContents: stream.Readable, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="50028-116">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="50028-116">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="50028-117">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier à laquelle ajouter.</span><span class="sxs-lookup"><span data-stu-id="50028-117">The Data Lake Store path (starting with '/') of the file to which to append.</span></span>
    - id: streamContents
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="50028-118">Le contenu du fichier à inclure lors de l’ajout au fichier.</span><span class="sxs-lookup"><span data-stu-id="50028-118">The file contents to include when appending to the file.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.checkAccess
  name: checkAccess
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-119">Vérifie si l’accès spécifié est disponible sous le chemin d’accès donné.</span><span class="sxs-lookup"><span data-stu-id="50028-119">Checks if the specified access is available at the given path.</span></span>
  syntax:
    content: 'function checkAccess(accountName: string, path: string, fsaction: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="50028-120">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="50028-120">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="50028-121">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier ou répertoire pour lequel vérifier l’accès.</span><span class="sxs-lookup"><span data-stu-id="50028-121">The Data Lake Store path (starting with '/') of the file or directory for which to check access.</span></span>
    - id: fsaction
      type:
      - string
      description: >
        <span data-ttu-id="50028-122">Fichier système opération en lecture/écriture/exécution sous forme de chaîne, correspondance de modèle d’expression régulière « [rwx-]{3}»</span><span class="sxs-lookup"><span data-stu-id="50028-122">File system operation read/write/execute in string form, matching regex pattern '[rwx-]{3}'</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.checkAccess_1
  name: checkAccess
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-123">Vérifie si l’accès spécifié est disponible sous le chemin d’accès donné.</span><span class="sxs-lookup"><span data-stu-id="50028-123">Checks if the specified access is available at the given path.</span></span>
  syntax:
    content: 'function checkAccess(accountName: string, path: string, fsaction: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: fsaction
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.checkAccess_2
  name: checkAccess
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-124">Vérifie si l’accès spécifié est disponible sous le chemin d’accès donné.</span><span class="sxs-lookup"><span data-stu-id="50028-124">Checks if the specified access is available at the given path.</span></span>
  syntax:
    content: 'function checkAccess(accountName: string, path: string, fsaction: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: fsaction
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.checkAccessWithHttpOperationResponse
  name: checkAccessWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-125">Vérifie si l’accès spécifié est disponible sous le chemin d’accès donné.</span><span class="sxs-lookup"><span data-stu-id="50028-125">Checks if the specified access is available at the given path.</span></span>
  syntax:
    content: 'function checkAccessWithHttpOperationResponse(accountName: string, path: string, fsaction: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="50028-126">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="50028-126">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="50028-127">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier ou répertoire pour lequel vérifier l’accès.</span><span class="sxs-lookup"><span data-stu-id="50028-127">The Data Lake Store path (starting with '/') of the file or directory for which to check access.</span></span>
    - id: fsaction
      type:
      - string
      description: >
        <span data-ttu-id="50028-128">Fichier système opération en lecture/écriture/exécution sous forme de chaîne, correspondance de modèle d’expression régulière « [rwx-]{3}»</span><span class="sxs-lookup"><span data-stu-id="50028-128">File system operation read/write/execute in string form, matching regex pattern '[rwx-]{3}'</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concat_1
  name: concat
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-129">Concatène la liste des fichiers sources dans le fichier de destination, en supprimant tous les fichiers sources en cas de réussite.</span><span class="sxs-lookup"><span data-stu-id="50028-129">Concatenates the list of source files into the destination file, removing all source files upon success.</span></span>
  syntax:
    content: 'function concat(accountName: string, path: string, sources: string[], callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: sources
      type:
      - string[]
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concat
  name: concat
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-130">Concatène la liste des fichiers sources dans le fichier de destination, en supprimant tous les fichiers sources en cas de réussite.</span><span class="sxs-lookup"><span data-stu-id="50028-130">Concatenates the list of source files into the destination file, removing all source files upon success.</span></span>
  syntax:
    content: 'function concat(accountName: string, path: string, sources: string[], options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="50028-131">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="50028-131">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="50028-132">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier de destination résultant de la concaténation.</span><span class="sxs-lookup"><span data-stu-id="50028-132">The Data Lake Store path (starting with '/') of the destination file resulting from the concatenation.</span></span>
    - id: sources
      type:
      - string[]
      description: >
        <span data-ttu-id="50028-133">Une liste de virgules séparées par des chemins d’accès Data Lake Store (en commençant par « / ») des fichiers à concaténer, dans l’ordre dans lequel ils doivent être concaténées.</span><span class="sxs-lookup"><span data-stu-id="50028-133">A list of comma separated Data Lake Store paths (starting with '/') of the files to concatenate, in the order in which they should be concatenated.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concat_2
  name: concat
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-134">Concatène la liste des fichiers sources dans le fichier de destination, en supprimant tous les fichiers sources en cas de réussite.</span><span class="sxs-lookup"><span data-stu-id="50028-134">Concatenates the list of source files into the destination file, removing all source files upon success.</span></span>
  syntax:
    content: 'function concat(accountName: string, path: string, sources: string[], options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: sources
      type:
      - string[]
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concatWithHttpOperationResponse
  name: concatWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-135">Concatène la liste des fichiers sources dans le fichier de destination, en supprimant tous les fichiers sources en cas de réussite.</span><span class="sxs-lookup"><span data-stu-id="50028-135">Concatenates the list of source files into the destination file, removing all source files upon success.</span></span>
  syntax:
    content: 'function concatWithHttpOperationResponse(accountName: string, path: string, sources: string[], options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="50028-136">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="50028-136">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="50028-137">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier de destination résultant de la concaténation.</span><span class="sxs-lookup"><span data-stu-id="50028-137">The Data Lake Store path (starting with '/') of the destination file resulting from the concatenation.</span></span>
    - id: sources
      type:
      - string[]
      description: >
        <span data-ttu-id="50028-138">Une liste de virgules séparées par des chemins d’accès Data Lake Store (en commençant par « / ») des fichiers à concaténer, dans l’ordre dans lequel ils doivent être concaténées.</span><span class="sxs-lookup"><span data-stu-id="50028-138">A list of comma separated Data Lake Store paths (starting with '/') of the files to concatenate, in the order in which they should be concatenated.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concurrentAppend
  name: concurrentAppend
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="50028-139">Ajoute au fichier spécifié, si vous le souhaitez tout d’abord créer le fichier s’il n’existe pas encore.</span><span class="sxs-lookup"><span data-stu-id="50028-139">Appends to the specified file, optionally first creating the file if it does not yet exist.</span></span> <span data-ttu-id="50028-140">Prend en charge cette méthode simultanées de plusieurs ajoute au fichier.</span><span class="sxs-lookup"><span data-stu-id="50028-140">This method supports multiple concurrent appends to the file.</span></span>

    <span data-ttu-id="50028-141">Remarque : La cible ne doit pas contenir de données ajoutées par Create ou normal Append (série).</span><span class="sxs-lookup"><span data-stu-id="50028-141">NOTE: The target must not contain data added by Create or normal (serial) Append.</span></span> <span data-ttu-id="50028-142">ConcurrentAppend et Append ne peut pas être utilisés indifféremment ; une fois qu’un fichier cible a été modifié à l’aide d’une de ces options d’ajout, l’autre option d’ajout ne peut pas être utilisée sur le fichier cible.</span><span class="sxs-lookup"><span data-stu-id="50028-142">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span> <span data-ttu-id="50028-143">ConcurrentAppend ne garantit pas l’ordre et peut produire des données en double dans le fichier cible de lancement.</span><span class="sxs-lookup"><span data-stu-id="50028-143">ConcurrentAppend does not guarantee order and can result in duplicated data landing in the target file.</span></span>
  syntax:
    content: 'function concurrentAppend(accountName: string, path: string, streamContents: stream.Readable, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="50028-144">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="50028-144">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="50028-145">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier à laquelle ajouter à l’aide de simultanées ajouter.</span><span class="sxs-lookup"><span data-stu-id="50028-145">The Data Lake Store path (starting with '/') of the file to which to append using concurrent append.</span></span>
    - id: streamContents
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="50028-146">Le contenu du fichier à inclure lors de l’ajout au fichier.</span><span class="sxs-lookup"><span data-stu-id="50028-146">The file contents to include when appending to the file.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concurrentAppend_1
  name: concurrentAppend
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="50028-147">Ajoute au fichier spécifié, si vous le souhaitez tout d’abord créer le fichier s’il n’existe pas encore.</span><span class="sxs-lookup"><span data-stu-id="50028-147">Appends to the specified file, optionally first creating the file if it does not yet exist.</span></span> <span data-ttu-id="50028-148">Prend en charge cette méthode simultanées de plusieurs ajoute au fichier.</span><span class="sxs-lookup"><span data-stu-id="50028-148">This method supports multiple concurrent appends to the file.</span></span>

    <span data-ttu-id="50028-149">Remarque : La cible ne doit pas contenir de données ajoutées par Create ou normal Append (série).</span><span class="sxs-lookup"><span data-stu-id="50028-149">NOTE: The target must not contain data added by Create or normal (serial) Append.</span></span> <span data-ttu-id="50028-150">ConcurrentAppend et Append ne peut pas être utilisés indifféremment ; une fois qu’un fichier cible a été modifié à l’aide d’une de ces options d’ajout, l’autre option d’ajout ne peut pas être utilisée sur le fichier cible.</span><span class="sxs-lookup"><span data-stu-id="50028-150">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span> <span data-ttu-id="50028-151">ConcurrentAppend ne garantit pas l’ordre et peut produire des données en double dans le fichier cible de lancement.</span><span class="sxs-lookup"><span data-stu-id="50028-151">ConcurrentAppend does not guarantee order and can result in duplicated data landing in the target file.</span></span>
  syntax:
    content: 'function concurrentAppend(accountName: string, path: string, streamContents: stream.Readable, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concurrentAppend_2
  name: concurrentAppend
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="50028-152">Ajoute au fichier spécifié, si vous le souhaitez tout d’abord créer le fichier s’il n’existe pas encore.</span><span class="sxs-lookup"><span data-stu-id="50028-152">Appends to the specified file, optionally first creating the file if it does not yet exist.</span></span> <span data-ttu-id="50028-153">Prend en charge cette méthode simultanées de plusieurs ajoute au fichier.</span><span class="sxs-lookup"><span data-stu-id="50028-153">This method supports multiple concurrent appends to the file.</span></span>

    <span data-ttu-id="50028-154">Remarque : La cible ne doit pas contenir de données ajoutées par Create ou normal Append (série).</span><span class="sxs-lookup"><span data-stu-id="50028-154">NOTE: The target must not contain data added by Create or normal (serial) Append.</span></span> <span data-ttu-id="50028-155">ConcurrentAppend et Append ne peut pas être utilisés indifféremment ; une fois qu’un fichier cible a été modifié à l’aide d’une de ces options d’ajout, l’autre option d’ajout ne peut pas être utilisée sur le fichier cible.</span><span class="sxs-lookup"><span data-stu-id="50028-155">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span> <span data-ttu-id="50028-156">ConcurrentAppend ne garantit pas l’ordre et peut produire des données en double dans le fichier cible de lancement.</span><span class="sxs-lookup"><span data-stu-id="50028-156">ConcurrentAppend does not guarantee order and can result in duplicated data landing in the target file.</span></span>
  syntax:
    content: 'function concurrentAppend(accountName: string, path: string, streamContents: stream.Readable, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concurrentAppendWithHttpOperationResponse
  name: concurrentAppendWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="50028-157">Ajoute au fichier spécifié, si vous le souhaitez tout d’abord créer le fichier s’il n’existe pas encore.</span><span class="sxs-lookup"><span data-stu-id="50028-157">Appends to the specified file, optionally first creating the file if it does not yet exist.</span></span> <span data-ttu-id="50028-158">Prend en charge cette méthode simultanées de plusieurs ajoute au fichier.</span><span class="sxs-lookup"><span data-stu-id="50028-158">This method supports multiple concurrent appends to the file.</span></span>

    <span data-ttu-id="50028-159">Remarque : La cible ne doit pas contenir de données ajoutées par Create ou normal Append (série).</span><span class="sxs-lookup"><span data-stu-id="50028-159">NOTE: The target must not contain data added by Create or normal (serial) Append.</span></span> <span data-ttu-id="50028-160">ConcurrentAppend et Append ne peut pas être utilisés indifféremment ; une fois qu’un fichier cible a été modifié à l’aide d’une de ces options d’ajout, l’autre option d’ajout ne peut pas être utilisée sur le fichier cible.</span><span class="sxs-lookup"><span data-stu-id="50028-160">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span> <span data-ttu-id="50028-161">ConcurrentAppend ne garantit pas l’ordre et peut produire des données en double dans le fichier cible de lancement.</span><span class="sxs-lookup"><span data-stu-id="50028-161">ConcurrentAppend does not guarantee order and can result in duplicated data landing in the target file.</span></span>
  syntax:
    content: 'function concurrentAppendWithHttpOperationResponse(accountName: string, path: string, streamContents: stream.Readable, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="50028-162">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="50028-162">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="50028-163">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier à laquelle ajouter à l’aide de simultanées ajouter.</span><span class="sxs-lookup"><span data-stu-id="50028-163">The Data Lake Store path (starting with '/') of the file to which to append using concurrent append.</span></span>
    - id: streamContents
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="50028-164">Le contenu du fichier à inclure lors de l’ajout au fichier.</span><span class="sxs-lookup"><span data-stu-id="50028-164">The file contents to include when appending to the file.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.create_2
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="50028-165">Crée un fichier avec le contenu spécifié si vous le souhaitez.</span><span class="sxs-lookup"><span data-stu-id="50028-165">Creates a file with optionally specified content.</span></span> <span data-ttu-id="50028-166">Remarque : Si le contenu est fourni, le fichier résultant ne peut pas être modifié à l’aide de ConcurrentAppend.</span><span class="sxs-lookup"><span data-stu-id="50028-166">NOTE: If content is provided, the resulting file cannot be modified using ConcurrentAppend.</span></span>'
  syntax:
    content: 'function create(accountName: string, path: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.create
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="50028-167">Crée un fichier avec le contenu spécifié si vous le souhaitez.</span><span class="sxs-lookup"><span data-stu-id="50028-167">Creates a file with optionally specified content.</span></span> <span data-ttu-id="50028-168">Remarque : Si le contenu est fourni, le fichier résultant ne peut pas être modifié à l’aide de ConcurrentAppend.</span><span class="sxs-lookup"><span data-stu-id="50028-168">NOTE: If content is provided, the resulting file cannot be modified using ConcurrentAppend.</span></span>'
  syntax:
    content: 'function create(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="50028-169">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="50028-169">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="50028-170">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier à créer.</span><span class="sxs-lookup"><span data-stu-id="50028-170">The Data Lake Store path (starting with '/') of the file to create.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.create_1
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="50028-171">Crée un fichier avec le contenu spécifié si vous le souhaitez.</span><span class="sxs-lookup"><span data-stu-id="50028-171">Creates a file with optionally specified content.</span></span> <span data-ttu-id="50028-172">Remarque : Si le contenu est fourni, le fichier résultant ne peut pas être modifié à l’aide de ConcurrentAppend.</span><span class="sxs-lookup"><span data-stu-id="50028-172">NOTE: If content is provided, the resulting file cannot be modified using ConcurrentAppend.</span></span>'
  syntax:
    content: 'function create(accountName: string, path: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.createWithHttpOperationResponse
  name: createWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="50028-173">Crée un fichier avec le contenu spécifié si vous le souhaitez.</span><span class="sxs-lookup"><span data-stu-id="50028-173">Creates a file with optionally specified content.</span></span> <span data-ttu-id="50028-174">Remarque : Si le contenu est fourni, le fichier résultant ne peut pas être modifié à l’aide de ConcurrentAppend.</span><span class="sxs-lookup"><span data-stu-id="50028-174">NOTE: If content is provided, the resulting file cannot be modified using ConcurrentAppend.</span></span>'
  syntax:
    content: 'function createWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="50028-175">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="50028-175">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="50028-176">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier à créer.</span><span class="sxs-lookup"><span data-stu-id="50028-176">The Data Lake Store path (starting with '/') of the file to create.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.deleteMethod
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-177">Supprime le fichier demandé ou répertoire, si vous le souhaitez récursive.</span><span class="sxs-lookup"><span data-stu-id="50028-177">Deletes the requested file or directory, optionally recursively.</span></span>
  syntax:
    content: 'function deleteMethod(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="50028-178">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="50028-178">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="50028-179">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier ou du répertoire à supprimer.</span><span class="sxs-lookup"><span data-stu-id="50028-179">The Data Lake Store path (starting with '/') of the file or directory to delete.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.deleteMethod_1
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-180">Supprime le fichier demandé ou répertoire, si vous le souhaitez récursive.</span><span class="sxs-lookup"><span data-stu-id="50028-180">Deletes the requested file or directory, optionally recursively.</span></span>
  syntax:
    content: 'function deleteMethod(accountName: string, path: string, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.deleteMethod_2
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-181">Supprime le fichier demandé ou répertoire, si vous le souhaitez récursive.</span><span class="sxs-lookup"><span data-stu-id="50028-181">Deletes the requested file or directory, optionally recursively.</span></span>
  syntax:
    content: 'function deleteMethod(accountName: string, path: string, options: function, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.deleteMethodWithHttpOperationResponse
  name: deleteMethodWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-182">Supprime le fichier demandé ou répertoire, si vous le souhaitez récursive.</span><span class="sxs-lookup"><span data-stu-id="50028-182">Deletes the requested file or directory, optionally recursively.</span></span>
  syntax:
    content: 'function deleteMethodWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="50028-183">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="50028-183">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="50028-184">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier ou du répertoire à supprimer.</span><span class="sxs-lookup"><span data-stu-id="50028-184">The Data Lake Store path (starting with '/') of the file or directory to delete.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.FileOperationResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getAclStatus_1
  name: getAclStatus
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-185">Obtient les entrées de liste de contrôle d’accès (ACL) pour le fichier ou répertoire spécifié.</span><span class="sxs-lookup"><span data-stu-id="50028-185">Gets Access Control List (ACL) entries for the specified file or directory.</span></span>
  syntax:
    content: 'function getAclStatus(accountName: string, path: string, callback: ServiceCallback<AclStatusResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.AclStatusResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.AclStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getAclStatus
  name: getAclStatus
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-186">Obtient les entrées de liste de contrôle d’accès (ACL) pour le fichier ou répertoire spécifié.</span><span class="sxs-lookup"><span data-stu-id="50028-186">Gets Access Control List (ACL) entries for the specified file or directory.</span></span>
  syntax:
    content: 'function getAclStatus(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="50028-187">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="50028-187">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="50028-188">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier ou du répertoire pour lequel obtenir la liste ACL.</span><span class="sxs-lookup"><span data-stu-id="50028-188">The Data Lake Store path (starting with '/') of the file or directory for which to get the ACL.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.AclStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getAclStatus_2
  name: getAclStatus
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-189">Obtient les entrées de liste de contrôle d’accès (ACL) pour le fichier ou répertoire spécifié.</span><span class="sxs-lookup"><span data-stu-id="50028-189">Gets Access Control List (ACL) entries for the specified file or directory.</span></span>
  syntax:
    content: 'function getAclStatus(accountName: string, path: string, options: function, callback: ServiceCallback<AclStatusResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.AclStatusResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.AclStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getAclStatusWithHttpOperationResponse
  name: getAclStatusWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-190">Obtient les entrées de liste de contrôle d’accès (ACL) pour le fichier ou répertoire spécifié.</span><span class="sxs-lookup"><span data-stu-id="50028-190">Gets Access Control List (ACL) entries for the specified file or directory.</span></span>
  syntax:
    content: 'function getAclStatusWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="50028-191">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="50028-191">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="50028-192">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier ou du répertoire pour lequel obtenir la liste ACL.</span><span class="sxs-lookup"><span data-stu-id="50028-192">The Data Lake Store path (starting with '/') of the file or directory for which to get the ACL.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.AclStatusResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getContentSummary
  name: getContentSummary
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-193">Obtient l’objet de synthèse contenu fichier est spécifié par le chemin d’accès de fichier.</span><span class="sxs-lookup"><span data-stu-id="50028-193">Gets the file content summary object specified by the file path.</span></span>
  syntax:
    content: 'function getContentSummary(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="50028-194">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="50028-194">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="50028-195">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier pour lequel récupérer le résumé.</span><span class="sxs-lookup"><span data-stu-id="50028-195">The Data Lake Store path (starting with '/') of the file for which to retrieve the summary.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.ContentSummaryResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getContentSummary_2
  name: getContentSummary
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-196">Obtient l’objet de synthèse contenu fichier est spécifié par le chemin d’accès de fichier.</span><span class="sxs-lookup"><span data-stu-id="50028-196">Gets the file content summary object specified by the file path.</span></span>
  syntax:
    content: 'function getContentSummary(accountName: string, path: string, options: function, callback: ServiceCallback<ContentSummaryResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.ContentSummaryResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.ContentSummaryResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getContentSummary_1
  name: getContentSummary
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-197">Obtient l’objet de synthèse contenu fichier est spécifié par le chemin d’accès de fichier.</span><span class="sxs-lookup"><span data-stu-id="50028-197">Gets the file content summary object specified by the file path.</span></span>
  syntax:
    content: 'function getContentSummary(accountName: string, path: string, callback: ServiceCallback<ContentSummaryResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.ContentSummaryResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.ContentSummaryResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getContentSummaryWithHttpOperationResponse
  name: getContentSummaryWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-198">Obtient l’objet de synthèse contenu fichier est spécifié par le chemin d’accès de fichier.</span><span class="sxs-lookup"><span data-stu-id="50028-198">Gets the file content summary object specified by the file path.</span></span>
  syntax:
    content: 'function getContentSummaryWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="50028-199">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="50028-199">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="50028-200">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier pour lequel récupérer le résumé.</span><span class="sxs-lookup"><span data-stu-id="50028-200">The Data Lake Store path (starting with '/') of the file for which to retrieve the summary.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.ContentSummaryResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getFileStatus
  name: getFileStatus
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-201">Obtenez l’objet d’état de fichier spécifié par le chemin d’accès de fichier.</span><span class="sxs-lookup"><span data-stu-id="50028-201">Get the file status object specified by the file path.</span></span>
  syntax:
    content: 'function getFileStatus(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="50028-202">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="50028-202">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="50028-203">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier ou répertoire pour lequel récupérer l’état.</span><span class="sxs-lookup"><span data-stu-id="50028-203">The Data Lake Store path (starting with '/') of the file or directory for which to retrieve the status.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getFileStatus_1
  name: getFileStatus
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-204">Obtenez l’objet d’état de fichier spécifié par le chemin d’accès de fichier.</span><span class="sxs-lookup"><span data-stu-id="50028-204">Get the file status object specified by the file path.</span></span>
  syntax:
    content: 'function getFileStatus(accountName: string, path: string, callback: ServiceCallback<FileStatusResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileStatusResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getFileStatus_2
  name: getFileStatus
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-205">Obtenez l’objet d’état de fichier spécifié par le chemin d’accès de fichier.</span><span class="sxs-lookup"><span data-stu-id="50028-205">Get the file status object specified by the file path.</span></span>
  syntax:
    content: 'function getFileStatus(accountName: string, path: string, options: function, callback: ServiceCallback<FileStatusResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileStatusResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getFileStatusWithHttpOperationResponse
  name: getFileStatusWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-206">Obtenez l’objet d’état de fichier spécifié par le chemin d’accès de fichier.</span><span class="sxs-lookup"><span data-stu-id="50028-206">Get the file status object specified by the file path.</span></span>
  syntax:
    content: 'function getFileStatusWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="50028-207">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="50028-207">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="50028-208">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier ou répertoire pour lequel récupérer l’état.</span><span class="sxs-lookup"><span data-stu-id="50028-208">The Data Lake Store path (starting with '/') of the file or directory for which to retrieve the status.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.FileStatusResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.listFileStatus_1
  name: listFileStatus
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-209">Obtenir la liste des objets d’état de fichier spécifié par le chemin d’accès du fichier, avec les paramètres de pagination facultatives</span><span class="sxs-lookup"><span data-stu-id="50028-209">Get the list of file status objects specified by the file path, with optional pagination parameters</span></span>
  syntax:
    content: 'function listFileStatus(accountName: string, path: string, callback: ServiceCallback<FileStatusesResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileStatusesResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusesResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.listFileStatus_2
  name: listFileStatus
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-210">Obtenir la liste des objets d’état de fichier spécifié par le chemin d’accès du fichier, avec les paramètres de pagination facultatives</span><span class="sxs-lookup"><span data-stu-id="50028-210">Get the list of file status objects specified by the file path, with optional pagination parameters</span></span>
  syntax:
    content: 'function listFileStatus(accountName: string, path: string, options: function, callback: ServiceCallback<FileStatusesResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileStatusesResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusesResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.listFileStatus
  name: listFileStatus
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-211">Obtenir la liste des objets d’état de fichier spécifié par le chemin d’accès du fichier, avec les paramètres de pagination facultatives</span><span class="sxs-lookup"><span data-stu-id="50028-211">Get the list of file status objects specified by the file path, with optional pagination parameters</span></span>
  syntax:
    content: 'function listFileStatus(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="50028-212">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="50028-212">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="50028-213">Le chemin d’accès Data Lake Store (en commençant par « / ») du répertoire à la liste.</span><span class="sxs-lookup"><span data-stu-id="50028-213">The Data Lake Store path (starting with '/') of the directory to list.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusesResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.listFileStatusWithHttpOperationResponse
  name: listFileStatusWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-214">Obtenir la liste des objets d’état de fichier spécifié par le chemin d’accès du fichier, avec les paramètres de pagination facultatives</span><span class="sxs-lookup"><span data-stu-id="50028-214">Get the list of file status objects specified by the file path, with optional pagination parameters</span></span>
  syntax:
    content: 'function listFileStatusWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="50028-215">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="50028-215">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="50028-216">Le chemin d’accès Data Lake Store (en commençant par « / ») du répertoire à la liste.</span><span class="sxs-lookup"><span data-stu-id="50028-216">The Data Lake Store path (starting with '/') of the directory to list.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.FileStatusesResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.mkdirs
  name: mkdirs
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-217">Crée un répertoire.</span><span class="sxs-lookup"><span data-stu-id="50028-217">Creates a directory.</span></span>
  syntax:
    content: 'function mkdirs(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="50028-218">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="50028-218">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="50028-219">Le chemin d’accès Data Lake Store (en commençant par « / ») du répertoire à créer.</span><span class="sxs-lookup"><span data-stu-id="50028-219">The Data Lake Store path (starting with '/') of the directory to create.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.mkdirs_1
  name: mkdirs
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-220">Crée un répertoire.</span><span class="sxs-lookup"><span data-stu-id="50028-220">Creates a directory.</span></span>
  syntax:
    content: 'function mkdirs(accountName: string, path: string, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.mkdirs_2
  name: mkdirs
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-221">Crée un répertoire.</span><span class="sxs-lookup"><span data-stu-id="50028-221">Creates a directory.</span></span>
  syntax:
    content: 'function mkdirs(accountName: string, path: string, options: function, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.mkdirsWithHttpOperationResponse
  name: mkdirsWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-222">Crée un répertoire.</span><span class="sxs-lookup"><span data-stu-id="50028-222">Creates a directory.</span></span>
  syntax:
    content: 'function mkdirsWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="50028-223">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="50028-223">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="50028-224">Le chemin d’accès Data Lake Store (en commençant par « / ») du répertoire à créer.</span><span class="sxs-lookup"><span data-stu-id="50028-224">The Data Lake Store path (starting with '/') of the directory to create.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.FileOperationResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.modifyAclEntries
  name: modifyAclEntries
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-225">Modifie des entrées de liste de contrôle d’accès (ACL) sur un fichier ou dossier.</span><span class="sxs-lookup"><span data-stu-id="50028-225">Modifies existing Access Control List (ACL) entries on a file or folder.</span></span>
  syntax:
    content: 'function modifyAclEntries(accountName: string, path: string, aclspec: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="50028-226">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="50028-226">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="50028-227">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier ou du répertoire avec la liste ACL en cours de modification.</span><span class="sxs-lookup"><span data-stu-id="50028-227">The Data Lake Store path (starting with '/') of the file or directory with the ACL being modified.</span></span>
    - id: aclspec
      type:
      - string
      description: >
        <span data-ttu-id="50028-228">La spécification d’ACL incluse dans les opérations de modification des ACL dans le format ' [par défaut :] utilisateur | groupe | autres :: r |-w |-x |-'</span><span class="sxs-lookup"><span data-stu-id="50028-228">The ACL specification included in ACL modification operations in the format '[default:]user|group|other::r|-w|-x|-'</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.modifyAclEntries_1
  name: modifyAclEntries
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-229">Modifie des entrées de liste de contrôle d’accès (ACL) sur un fichier ou dossier.</span><span class="sxs-lookup"><span data-stu-id="50028-229">Modifies existing Access Control List (ACL) entries on a file or folder.</span></span>
  syntax:
    content: 'function modifyAclEntries(accountName: string, path: string, aclspec: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.modifyAclEntries_2
  name: modifyAclEntries
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-230">Modifie des entrées de liste de contrôle d’accès (ACL) sur un fichier ou dossier.</span><span class="sxs-lookup"><span data-stu-id="50028-230">Modifies existing Access Control List (ACL) entries on a file or folder.</span></span>
  syntax:
    content: 'function modifyAclEntries(accountName: string, path: string, aclspec: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.modifyAclEntriesWithHttpOperationResponse
  name: modifyAclEntriesWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-231">Modifie des entrées de liste de contrôle d’accès (ACL) sur un fichier ou dossier.</span><span class="sxs-lookup"><span data-stu-id="50028-231">Modifies existing Access Control List (ACL) entries on a file or folder.</span></span>
  syntax:
    content: 'function modifyAclEntriesWithHttpOperationResponse(accountName: string, path: string, aclspec: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="50028-232">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="50028-232">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="50028-233">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier ou du répertoire avec la liste ACL en cours de modification.</span><span class="sxs-lookup"><span data-stu-id="50028-233">The Data Lake Store path (starting with '/') of the file or directory with the ACL being modified.</span></span>
    - id: aclspec
      type:
      - string
      description: >
        <span data-ttu-id="50028-234">La spécification d’ACL incluse dans les opérations de modification des ACL dans le format ' [par défaut :] utilisateur | groupe | autres :: r |-w |-x |-'</span><span class="sxs-lookup"><span data-stu-id="50028-234">The ACL specification included in ACL modification operations in the format '[default:]user|group|other::r|-w|-x|-'</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.msConcat
  name: msConcat
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-235">Concatène la liste des fichiers sources dans le fichier de destination, la suppression de tous les fichiers sources en cas de réussite.</span><span class="sxs-lookup"><span data-stu-id="50028-235">Concatenates the list of source files into the destination file, deleting all source files upon success.</span></span> <span data-ttu-id="50028-236">Cette méthode accepte plusieurs chemins d’accès de fichier source que la méthode Concat.</span><span class="sxs-lookup"><span data-stu-id="50028-236">This method accepts more source file paths than the Concat method.</span></span> <span data-ttu-id="50028-237">Cette méthode et les paramètres qu’il accepte sont susceptibles de changer de facilité d’utilisation dans une prochaine version.</span><span class="sxs-lookup"><span data-stu-id="50028-237">This method and the parameters it accepts are subject to change for usability in an upcoming version.</span></span>
  syntax:
    content: 'function msConcat(accountName: string, path: string, streamContents: stream.Readable, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="50028-238">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="50028-238">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="50028-239">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier de destination résultant de la concaténation.</span><span class="sxs-lookup"><span data-stu-id="50028-239">The Data Lake Store path (starting with '/') of the destination file resulting from the concatenation.</span></span>
    - id: streamContents
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="50028-240">Une liste de chemins d’accès Data Lake Store (en commençant par « / ») des fichiers sources.</span><span class="sxs-lookup"><span data-stu-id="50028-240">A list of Data Lake Store paths (starting with '/') of the source files.</span></span> <span data-ttu-id="50028-241">Doit être une liste séparée par des virgules de chemin d’accès dans le format : sources=/file/path/1.txt,/file/path/2.txt,/file/path/lastfile.csv</span><span class="sxs-lookup"><span data-stu-id="50028-241">Must be a comma-separated path list in the format: sources=/file/path/1.txt,/file/path/2.txt,/file/path/lastfile.csv</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.msConcat_2
  name: msConcat
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-242">Concatène la liste des fichiers sources dans le fichier de destination, la suppression de tous les fichiers sources en cas de réussite.</span><span class="sxs-lookup"><span data-stu-id="50028-242">Concatenates the list of source files into the destination file, deleting all source files upon success.</span></span> <span data-ttu-id="50028-243">Cette méthode accepte plusieurs chemins d’accès de fichier source que la méthode Concat.</span><span class="sxs-lookup"><span data-stu-id="50028-243">This method accepts more source file paths than the Concat method.</span></span> <span data-ttu-id="50028-244">Cette méthode et les paramètres qu’il accepte sont susceptibles de changer de facilité d’utilisation dans une prochaine version.</span><span class="sxs-lookup"><span data-stu-id="50028-244">This method and the parameters it accepts are subject to change for usability in an upcoming version.</span></span>
  syntax:
    content: 'function msConcat(accountName: string, path: string, streamContents: stream.Readable, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.msConcat_1
  name: msConcat
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-245">Concatène la liste des fichiers sources dans le fichier de destination, la suppression de tous les fichiers sources en cas de réussite.</span><span class="sxs-lookup"><span data-stu-id="50028-245">Concatenates the list of source files into the destination file, deleting all source files upon success.</span></span> <span data-ttu-id="50028-246">Cette méthode accepte plusieurs chemins d’accès de fichier source que la méthode Concat.</span><span class="sxs-lookup"><span data-stu-id="50028-246">This method accepts more source file paths than the Concat method.</span></span> <span data-ttu-id="50028-247">Cette méthode et les paramètres qu’il accepte sont susceptibles de changer de facilité d’utilisation dans une prochaine version.</span><span class="sxs-lookup"><span data-stu-id="50028-247">This method and the parameters it accepts are subject to change for usability in an upcoming version.</span></span>
  syntax:
    content: 'function msConcat(accountName: string, path: string, streamContents: stream.Readable, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.msConcatWithHttpOperationResponse
  name: msConcatWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-248">Concatène la liste des fichiers sources dans le fichier de destination, la suppression de tous les fichiers sources en cas de réussite.</span><span class="sxs-lookup"><span data-stu-id="50028-248">Concatenates the list of source files into the destination file, deleting all source files upon success.</span></span> <span data-ttu-id="50028-249">Cette méthode accepte plusieurs chemins d’accès de fichier source que la méthode Concat.</span><span class="sxs-lookup"><span data-stu-id="50028-249">This method accepts more source file paths than the Concat method.</span></span> <span data-ttu-id="50028-250">Cette méthode et les paramètres qu’il accepte sont susceptibles de changer de facilité d’utilisation dans une prochaine version.</span><span class="sxs-lookup"><span data-stu-id="50028-250">This method and the parameters it accepts are subject to change for usability in an upcoming version.</span></span>
  syntax:
    content: 'function msConcatWithHttpOperationResponse(accountName: string, path: string, streamContents: stream.Readable, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="50028-251">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="50028-251">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="50028-252">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier de destination résultant de la concaténation.</span><span class="sxs-lookup"><span data-stu-id="50028-252">The Data Lake Store path (starting with '/') of the destination file resulting from the concatenation.</span></span>
    - id: streamContents
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="50028-253">Une liste de chemins d’accès Data Lake Store (en commençant par « / ») des fichiers sources.</span><span class="sxs-lookup"><span data-stu-id="50028-253">A list of Data Lake Store paths (starting with '/') of the source files.</span></span> <span data-ttu-id="50028-254">Doit être une liste séparée par des virgules de chemin d’accès dans le format : sources=/file/path/1.txt,/file/path/2.txt,/file/path/lastfile.csv</span><span class="sxs-lookup"><span data-stu-id="50028-254">Must be a comma-separated path list in the format: sources=/file/path/1.txt,/file/path/2.txt,/file/path/lastfile.csv</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.open
  name: open
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-255">S’ouvre et lit à partir du fichier spécifié.</span><span class="sxs-lookup"><span data-stu-id="50028-255">Opens and reads from the specified file.</span></span>
  syntax:
    content: 'function open(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="50028-256">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="50028-256">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="50028-257">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier à ouvrir.</span><span class="sxs-lookup"><span data-stu-id="50028-257">The Data Lake Store path (starting with '/') of the file to open.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<stream.Readable>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.open_2
  name: open
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-258">S’ouvre et lit à partir du fichier spécifié.</span><span class="sxs-lookup"><span data-stu-id="50028-258">Opens and reads from the specified file.</span></span>
  syntax:
    content: 'function open(accountName: string, path: string, options: function, callback: ServiceCallback<stream.Readable>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<stream.Readable>
      description: ''
    return:
      type:
      - Promise<stream.Readable>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.open_1
  name: open
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-259">S’ouvre et lit à partir du fichier spécifié.</span><span class="sxs-lookup"><span data-stu-id="50028-259">Opens and reads from the specified file.</span></span>
  syntax:
    content: 'function open(accountName: string, path: string, callback: ServiceCallback<stream.Readable>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<stream.Readable>
      description: ''
    return:
      type:
      - Promise<stream.Readable>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.openWithHttpOperationResponse
  name: openWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-260">S’ouvre et lit à partir du fichier spécifié.</span><span class="sxs-lookup"><span data-stu-id="50028-260">Opens and reads from the specified file.</span></span>
  syntax:
    content: 'function openWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="50028-261">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="50028-261">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="50028-262">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier à ouvrir.</span><span class="sxs-lookup"><span data-stu-id="50028-262">The Data Lake Store path (starting with '/') of the file to open.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<stream.Readable>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAcl_1
  name: removeAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-263">Supprime la liste de contrôle accès existant (ACL) du fichier spécifié ou du répertoire.</span><span class="sxs-lookup"><span data-stu-id="50028-263">Removes the existing Access Control List (ACL) of the specified file or directory.</span></span>
  syntax:
    content: 'function removeAcl(accountName: string, path: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAcl_2
  name: removeAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-264">Supprime la liste de contrôle accès existant (ACL) du fichier spécifié ou du répertoire.</span><span class="sxs-lookup"><span data-stu-id="50028-264">Removes the existing Access Control List (ACL) of the specified file or directory.</span></span>
  syntax:
    content: 'function removeAcl(accountName: string, path: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAcl
  name: removeAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-265">Supprime la liste de contrôle accès existant (ACL) du fichier spécifié ou du répertoire.</span><span class="sxs-lookup"><span data-stu-id="50028-265">Removes the existing Access Control List (ACL) of the specified file or directory.</span></span>
  syntax:
    content: 'function removeAcl(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="50028-266">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="50028-266">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="50028-267">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier ou du répertoire avec la liste ACL en cours de suppression.</span><span class="sxs-lookup"><span data-stu-id="50028-267">The Data Lake Store path (starting with '/') of the file or directory with the ACL being removed.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAclEntries
  name: removeAclEntries
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-268">Supprime les entrées de liste de contrôle d’accès (ACL) pour un fichier ou dossier.</span><span class="sxs-lookup"><span data-stu-id="50028-268">Removes existing Access Control List (ACL) entries for a file or folder.</span></span>
  syntax:
    content: 'function removeAclEntries(accountName: string, path: string, aclspec: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="50028-269">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="50028-269">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="50028-270">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier ou du répertoire avec la liste ACL en cours de suppression.</span><span class="sxs-lookup"><span data-stu-id="50028-270">The Data Lake Store path (starting with '/') of the file or directory with the ACL being removed.</span></span>
    - id: aclspec
      type:
      - string
      description: >
        <span data-ttu-id="50028-271">La spécification d’ACL incluse dans les opérations de suppression d’ACL dans le format ' [par défaut :] utilisateur | groupe | autres '</span><span class="sxs-lookup"><span data-stu-id="50028-271">The ACL spec included in ACL removal operations in the format '[default:]user|group|other'</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAclEntries_2
  name: removeAclEntries
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-272">Supprime les entrées de liste de contrôle d’accès (ACL) pour un fichier ou dossier.</span><span class="sxs-lookup"><span data-stu-id="50028-272">Removes existing Access Control List (ACL) entries for a file or folder.</span></span>
  syntax:
    content: 'function removeAclEntries(accountName: string, path: string, aclspec: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAclEntries_1
  name: removeAclEntries
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-273">Supprime les entrées de liste de contrôle d’accès (ACL) pour un fichier ou dossier.</span><span class="sxs-lookup"><span data-stu-id="50028-273">Removes existing Access Control List (ACL) entries for a file or folder.</span></span>
  syntax:
    content: 'function removeAclEntries(accountName: string, path: string, aclspec: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAclEntriesWithHttpOperationResponse
  name: removeAclEntriesWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-274">Supprime les entrées de liste de contrôle d’accès (ACL) pour un fichier ou dossier.</span><span class="sxs-lookup"><span data-stu-id="50028-274">Removes existing Access Control List (ACL) entries for a file or folder.</span></span>
  syntax:
    content: 'function removeAclEntriesWithHttpOperationResponse(accountName: string, path: string, aclspec: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="50028-275">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="50028-275">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="50028-276">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier ou du répertoire avec la liste ACL en cours de suppression.</span><span class="sxs-lookup"><span data-stu-id="50028-276">The Data Lake Store path (starting with '/') of the file or directory with the ACL being removed.</span></span>
    - id: aclspec
      type:
      - string
      description: >
        <span data-ttu-id="50028-277">La spécification d’ACL incluse dans les opérations de suppression d’ACL dans le format ' [par défaut :] utilisateur | groupe | autres '</span><span class="sxs-lookup"><span data-stu-id="50028-277">The ACL spec included in ACL removal operations in the format '[default:]user|group|other'</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAclWithHttpOperationResponse
  name: removeAclWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-278">Supprime la liste de contrôle accès existant (ACL) du fichier spécifié ou du répertoire.</span><span class="sxs-lookup"><span data-stu-id="50028-278">Removes the existing Access Control List (ACL) of the specified file or directory.</span></span>
  syntax:
    content: 'function removeAclWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="50028-279">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="50028-279">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="50028-280">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier ou du répertoire avec la liste ACL en cours de suppression.</span><span class="sxs-lookup"><span data-stu-id="50028-280">The Data Lake Store path (starting with '/') of the file or directory with the ACL being removed.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeDefaultAcl
  name: removeDefaultAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-281">Supprime l’existant par défaut contrôle liste accès (ACL) du répertoire spécifié.</span><span class="sxs-lookup"><span data-stu-id="50028-281">Removes the existing Default Access Control List (ACL) of the specified directory.</span></span>
  syntax:
    content: 'function removeDefaultAcl(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="50028-282">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="50028-282">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="50028-283">Le chemin d’accès Data Lake Store (en commençant par « / ») du répertoire avec la valeur par défaut ACL en cours de suppression.</span><span class="sxs-lookup"><span data-stu-id="50028-283">The Data Lake Store path (starting with '/') of the directory with the default ACL being removed.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeDefaultAcl_1
  name: removeDefaultAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-284">Supprime l’existant par défaut contrôle liste accès (ACL) du répertoire spécifié.</span><span class="sxs-lookup"><span data-stu-id="50028-284">Removes the existing Default Access Control List (ACL) of the specified directory.</span></span>
  syntax:
    content: 'function removeDefaultAcl(accountName: string, path: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeDefaultAcl_2
  name: removeDefaultAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-285">Supprime l’existant par défaut contrôle liste accès (ACL) du répertoire spécifié.</span><span class="sxs-lookup"><span data-stu-id="50028-285">Removes the existing Default Access Control List (ACL) of the specified directory.</span></span>
  syntax:
    content: 'function removeDefaultAcl(accountName: string, path: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeDefaultAclWithHttpOperationResponse
  name: removeDefaultAclWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-286">Supprime l’existant par défaut contrôle liste accès (ACL) du répertoire spécifié.</span><span class="sxs-lookup"><span data-stu-id="50028-286">Removes the existing Default Access Control List (ACL) of the specified directory.</span></span>
  syntax:
    content: 'function removeDefaultAclWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="50028-287">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="50028-287">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="50028-288">Le chemin d’accès Data Lake Store (en commençant par « / ») du répertoire avec la valeur par défaut ACL en cours de suppression.</span><span class="sxs-lookup"><span data-stu-id="50028-288">The Data Lake Store path (starting with '/') of the directory with the default ACL being removed.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.rename
  name: rename
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-289">Renommer un fichier ou répertoire.</span><span class="sxs-lookup"><span data-stu-id="50028-289">Rename a file or directory.</span></span>
  syntax:
    content: 'function rename(accountName: string, path: string, destination: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="50028-290">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="50028-290">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="50028-291">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier ou du répertoire à move/rename.</span><span class="sxs-lookup"><span data-stu-id="50028-291">The Data Lake Store path (starting with '/') of the file or directory to move/rename.</span></span>
    - id: destination
      type:
      - string
      description: >
        <span data-ttu-id="50028-292">Le chemin d’accès pour le fichier ou dossier à move/rename</span><span class="sxs-lookup"><span data-stu-id="50028-292">The path to move/rename the file or folder to</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.rename_2
  name: rename
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-293">Renommer un fichier ou répertoire.</span><span class="sxs-lookup"><span data-stu-id="50028-293">Rename a file or directory.</span></span>
  syntax:
    content: 'function rename(accountName: string, path: string, destination: string, options: function, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: destination
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.rename_1
  name: rename
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-294">Renommer un fichier ou répertoire.</span><span class="sxs-lookup"><span data-stu-id="50028-294">Rename a file or directory.</span></span>
  syntax:
    content: 'function rename(accountName: string, path: string, destination: string, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: destination
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.renameWithHttpOperationResponse
  name: renameWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-295">Renommer un fichier ou répertoire.</span><span class="sxs-lookup"><span data-stu-id="50028-295">Rename a file or directory.</span></span>
  syntax:
    content: 'function renameWithHttpOperationResponse(accountName: string, path: string, destination: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="50028-296">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="50028-296">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="50028-297">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier ou du répertoire à move/rename.</span><span class="sxs-lookup"><span data-stu-id="50028-297">The Data Lake Store path (starting with '/') of the file or directory to move/rename.</span></span>
    - id: destination
      type:
      - string
      description: >
        <span data-ttu-id="50028-298">Le chemin d’accès pour le fichier ou dossier à move/rename</span><span class="sxs-lookup"><span data-stu-id="50028-298">The path to move/rename the file or folder to</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.FileOperationResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setAcl
  name: setAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-299">Définit la liste de contrôle d’accès (ACL) pour un fichier ou dossier.</span><span class="sxs-lookup"><span data-stu-id="50028-299">Sets the Access Control List (ACL) for a file or folder.</span></span>
  syntax:
    content: 'function setAcl(accountName: string, path: string, aclspec: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="50028-300">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="50028-300">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="50028-301">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier ou du répertoire sur lequel définir la liste ACL.</span><span class="sxs-lookup"><span data-stu-id="50028-301">The Data Lake Store path (starting with '/') of the file or directory on which to set the ACL.</span></span>
    - id: aclspec
      type:
      - string
      description: >
        <span data-ttu-id="50028-302">La spécification d’ACL incluse dans les opérations de création de liste ACL dans le format ' [par défaut :] utilisateur | groupe | autres :: r |-w |-x |-'</span><span class="sxs-lookup"><span data-stu-id="50028-302">The ACL spec included in ACL creation operations in the format '[default:]user|group|other::r|-w|-x|-'</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setAcl_1
  name: setAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-303">Définit la liste de contrôle d’accès (ACL) pour un fichier ou dossier.</span><span class="sxs-lookup"><span data-stu-id="50028-303">Sets the Access Control List (ACL) for a file or folder.</span></span>
  syntax:
    content: 'function setAcl(accountName: string, path: string, aclspec: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setAcl_2
  name: setAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-304">Définit la liste de contrôle d’accès (ACL) pour un fichier ou dossier.</span><span class="sxs-lookup"><span data-stu-id="50028-304">Sets the Access Control List (ACL) for a file or folder.</span></span>
  syntax:
    content: 'function setAcl(accountName: string, path: string, aclspec: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setAclWithHttpOperationResponse
  name: setAclWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-305">Définit la liste de contrôle d’accès (ACL) pour un fichier ou dossier.</span><span class="sxs-lookup"><span data-stu-id="50028-305">Sets the Access Control List (ACL) for a file or folder.</span></span>
  syntax:
    content: 'function setAclWithHttpOperationResponse(accountName: string, path: string, aclspec: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="50028-306">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="50028-306">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="50028-307">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier ou du répertoire sur lequel définir la liste ACL.</span><span class="sxs-lookup"><span data-stu-id="50028-307">The Data Lake Store path (starting with '/') of the file or directory on which to set the ACL.</span></span>
    - id: aclspec
      type:
      - string
      description: >
        <span data-ttu-id="50028-308">La spécification d’ACL incluse dans les opérations de création de liste ACL dans le format ' [par défaut :] utilisateur | groupe | autres :: r |-w |-x |-'</span><span class="sxs-lookup"><span data-stu-id="50028-308">The ACL spec included in ACL creation operations in the format '[default:]user|group|other::r|-w|-x|-'</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setFileExpiry
  name: setFileExpiry
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-309">Définit ou supprime le délai d’expiration sur le fichier spécifié.</span><span class="sxs-lookup"><span data-stu-id="50028-309">Sets or removes the expiration time on the specified file.</span></span> <span data-ttu-id="50028-310">Cette opération peut uniquement être exécutée sur les fichiers.</span><span class="sxs-lookup"><span data-stu-id="50028-310">This operation can only be executed against files.</span></span> <span data-ttu-id="50028-311">Dossiers ne sont pas pris en charge.</span><span class="sxs-lookup"><span data-stu-id="50028-311">Folders are not supported.</span></span>
  syntax:
    content: 'function setFileExpiry(accountName: string, path: string, expiryOption: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="50028-312">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="50028-312">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="50028-313">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier sur lequel définir ou supprimer le délai d’expiration.</span><span class="sxs-lookup"><span data-stu-id="50028-313">The Data Lake Store path (starting with '/') of the file on which to set or remove the expiration time.</span></span>
    - id: expiryOption
      type:
      - string
      description: >
        <span data-ttu-id="50028-314">Indique le type d’expiration à utiliser pour le fichier : 1.</span><span class="sxs-lookup"><span data-stu-id="50028-314">Indicates the type of expiration to use for the file: 1.</span></span> <span data-ttu-id="50028-315">NeverExpire : ExpireTime est ignoré.</span><span class="sxs-lookup"><span data-stu-id="50028-315">NeverExpire: ExpireTime is ignored.</span></span> <span data-ttu-id="50028-316">2.</span><span class="sxs-lookup"><span data-stu-id="50028-316">2.</span></span> <span data-ttu-id="50028-317">RelativeToNow : ExpireTime est un entier en millisecondes, qui représente la date d’expiration relatif à lors de l’expiration de fichier est mis à jour.</span><span class="sxs-lookup"><span data-stu-id="50028-317">RelativeToNow: ExpireTime is an integer in milliseconds representing the expiration date relative to when file expiration is updated.</span></span> <span data-ttu-id="50028-318">3.</span><span class="sxs-lookup"><span data-stu-id="50028-318">3.</span></span> <span data-ttu-id="50028-319">RelativeToCreationDate : ExpireTime est un entier en millisecondes, qui représente la date d’expiration par rapport à la création de fichiers.</span><span class="sxs-lookup"><span data-stu-id="50028-319">RelativeToCreationDate: ExpireTime is an integer in milliseconds representing the expiration date relative to file creation.</span></span> <span data-ttu-id="50028-320">4.</span><span class="sxs-lookup"><span data-stu-id="50028-320">4.</span></span> <span data-ttu-id="50028-321">Absolue : ExpireTime est un entier en millisecondes, comme un horodatage Unix par rapport à 1/1/1970 00:00:00.</span><span class="sxs-lookup"><span data-stu-id="50028-321">Absolute: ExpireTime is an integer in milliseconds, as a Unix timestamp relative to 1/1/1970 00:00:00.</span></span> <span data-ttu-id="50028-322">Les valeurs possibles sont : 'NeverExpire', 'RelativeToNow', « RelativeToCreationDate », « Absolute »</span><span class="sxs-lookup"><span data-stu-id="50028-322">Possible values include: 'NeverExpire', 'RelativeToNow', 'RelativeToCreationDate', 'Absolute'</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setFileExpiry_1
  name: setFileExpiry
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-323">Définit ou supprime le délai d’expiration sur le fichier spécifié.</span><span class="sxs-lookup"><span data-stu-id="50028-323">Sets or removes the expiration time on the specified file.</span></span> <span data-ttu-id="50028-324">Cette opération peut uniquement être exécutée sur les fichiers.</span><span class="sxs-lookup"><span data-stu-id="50028-324">This operation can only be executed against files.</span></span> <span data-ttu-id="50028-325">Dossiers ne sont pas pris en charge.</span><span class="sxs-lookup"><span data-stu-id="50028-325">Folders are not supported.</span></span>
  syntax:
    content: 'function setFileExpiry(accountName: string, path: string, expiryOption: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: expiryOption
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setFileExpiry_2
  name: setFileExpiry
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-326">Définit ou supprime le délai d’expiration sur le fichier spécifié.</span><span class="sxs-lookup"><span data-stu-id="50028-326">Sets or removes the expiration time on the specified file.</span></span> <span data-ttu-id="50028-327">Cette opération peut uniquement être exécutée sur les fichiers.</span><span class="sxs-lookup"><span data-stu-id="50028-327">This operation can only be executed against files.</span></span> <span data-ttu-id="50028-328">Dossiers ne sont pas pris en charge.</span><span class="sxs-lookup"><span data-stu-id="50028-328">Folders are not supported.</span></span>
  syntax:
    content: 'function setFileExpiry(accountName: string, path: string, expiryOption: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: expiryOption
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setFileExpiryWithHttpOperationResponse
  name: setFileExpiryWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-329">Définit ou supprime le délai d’expiration sur le fichier spécifié.</span><span class="sxs-lookup"><span data-stu-id="50028-329">Sets or removes the expiration time on the specified file.</span></span> <span data-ttu-id="50028-330">Cette opération peut uniquement être exécutée sur les fichiers.</span><span class="sxs-lookup"><span data-stu-id="50028-330">This operation can only be executed against files.</span></span> <span data-ttu-id="50028-331">Dossiers ne sont pas pris en charge.</span><span class="sxs-lookup"><span data-stu-id="50028-331">Folders are not supported.</span></span>
  syntax:
    content: 'function setFileExpiryWithHttpOperationResponse(accountName: string, path: string, expiryOption: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="50028-332">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="50028-332">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="50028-333">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier sur lequel définir ou supprimer le délai d’expiration.</span><span class="sxs-lookup"><span data-stu-id="50028-333">The Data Lake Store path (starting with '/') of the file on which to set or remove the expiration time.</span></span>
    - id: expiryOption
      type:
      - string
      description: >
        <span data-ttu-id="50028-334">Indique le type d’expiration à utiliser pour le fichier : 1.</span><span class="sxs-lookup"><span data-stu-id="50028-334">Indicates the type of expiration to use for the file: 1.</span></span> <span data-ttu-id="50028-335">NeverExpire : ExpireTime est ignoré.</span><span class="sxs-lookup"><span data-stu-id="50028-335">NeverExpire: ExpireTime is ignored.</span></span> <span data-ttu-id="50028-336">2.</span><span class="sxs-lookup"><span data-stu-id="50028-336">2.</span></span> <span data-ttu-id="50028-337">RelativeToNow : ExpireTime est un entier en millisecondes, qui représente la date d’expiration relatif à lors de l’expiration de fichier est mis à jour.</span><span class="sxs-lookup"><span data-stu-id="50028-337">RelativeToNow: ExpireTime is an integer in milliseconds representing the expiration date relative to when file expiration is updated.</span></span> <span data-ttu-id="50028-338">3.</span><span class="sxs-lookup"><span data-stu-id="50028-338">3.</span></span> <span data-ttu-id="50028-339">RelativeToCreationDate : ExpireTime est un entier en millisecondes, qui représente la date d’expiration par rapport à la création de fichiers.</span><span class="sxs-lookup"><span data-stu-id="50028-339">RelativeToCreationDate: ExpireTime is an integer in milliseconds representing the expiration date relative to file creation.</span></span> <span data-ttu-id="50028-340">4.</span><span class="sxs-lookup"><span data-stu-id="50028-340">4.</span></span> <span data-ttu-id="50028-341">Absolue : ExpireTime est un entier en millisecondes, comme un horodatage Unix par rapport à 1/1/1970 00:00:00.</span><span class="sxs-lookup"><span data-stu-id="50028-341">Absolute: ExpireTime is an integer in milliseconds, as a Unix timestamp relative to 1/1/1970 00:00:00.</span></span> <span data-ttu-id="50028-342">Les valeurs possibles sont : 'NeverExpire', 'RelativeToNow', « RelativeToCreationDate », « Absolute »</span><span class="sxs-lookup"><span data-stu-id="50028-342">Possible values include: 'NeverExpire', 'RelativeToNow', 'RelativeToCreationDate', 'Absolute'</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setOwner
  name: setOwner
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-343">Définit le propriétaire d’un fichier ou un répertoire.</span><span class="sxs-lookup"><span data-stu-id="50028-343">Sets the owner of a file or directory.</span></span>
  syntax:
    content: 'function setOwner(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="50028-344">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="50028-344">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="50028-345">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier ou répertoire pour lequel définir le propriétaire.</span><span class="sxs-lookup"><span data-stu-id="50028-345">The Data Lake Store path (starting with '/') of the file or directory for which to set the owner.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setOwner_1
  name: setOwner
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-346">Définit le propriétaire d’un fichier ou un répertoire.</span><span class="sxs-lookup"><span data-stu-id="50028-346">Sets the owner of a file or directory.</span></span>
  syntax:
    content: 'function setOwner(accountName: string, path: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setOwner_2
  name: setOwner
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-347">Définit le propriétaire d’un fichier ou un répertoire.</span><span class="sxs-lookup"><span data-stu-id="50028-347">Sets the owner of a file or directory.</span></span>
  syntax:
    content: 'function setOwner(accountName: string, path: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setOwnerWithHttpOperationResponse
  name: setOwnerWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-348">Définit le propriétaire d’un fichier ou un répertoire.</span><span class="sxs-lookup"><span data-stu-id="50028-348">Sets the owner of a file or directory.</span></span>
  syntax:
    content: 'function setOwnerWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="50028-349">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="50028-349">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="50028-350">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier ou répertoire pour lequel définir le propriétaire.</span><span class="sxs-lookup"><span data-stu-id="50028-350">The Data Lake Store path (starting with '/') of the file or directory for which to set the owner.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setPermission
  name: setPermission
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-351">Définit l’autorisation du fichier ou du dossier.</span><span class="sxs-lookup"><span data-stu-id="50028-351">Sets the permission of the file or folder.</span></span>
  syntax:
    content: 'function setPermission(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="50028-352">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="50028-352">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="50028-353">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier ou du répertoire pour lequel définir l’autorisation.</span><span class="sxs-lookup"><span data-stu-id="50028-353">The Data Lake Store path (starting with '/') of the file or directory for which to set the permission.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setPermission_1
  name: setPermission
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-354">Définit l’autorisation du fichier ou du dossier.</span><span class="sxs-lookup"><span data-stu-id="50028-354">Sets the permission of the file or folder.</span></span>
  syntax:
    content: 'function setPermission(accountName: string, path: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setPermission_2
  name: setPermission
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-355">Définit l’autorisation du fichier ou du dossier.</span><span class="sxs-lookup"><span data-stu-id="50028-355">Sets the permission of the file or folder.</span></span>
  syntax:
    content: 'function setPermission(accountName: string, path: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setPermissionWithHttpOperationResponse
  name: setPermissionWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="50028-356">Définit l’autorisation du fichier ou du dossier.</span><span class="sxs-lookup"><span data-stu-id="50028-356">Sets the permission of the file or folder.</span></span>
  syntax:
    content: 'function setPermissionWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="50028-357">Le compte Azure Data Lake Store pour exécuter des opérations de système de fichiers sur.</span><span class="sxs-lookup"><span data-stu-id="50028-357">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="50028-358">Le chemin d’accès Data Lake Store (en commençant par « / ») du fichier ou du répertoire pour lequel définir l’autorisation.</span><span class="sxs-lookup"><span data-stu-id="50028-358">The Data Lake Store path (starting with '/') of the file or directory for which to set the permission.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
references:
- uid: Promise<azure-arm-datalake-store.FileOperationResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: FileOperationResult
    fullName: FileOperationResult
    uid: azure-arm-datalake-store.FileOperationResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-datalake-store.FileOperationResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: FileOperationResult
    fullName: FileOperationResult
    uid: azure-arm-datalake-store.FileOperationResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-datalake-store.FileOperationResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: FileOperationResult
    fullName: FileOperationResult
    uid: azure-arm-datalake-store.FileOperationResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-datalake-store.AclStatusResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: AclStatusResult
    fullName: AclStatusResult
    uid: azure-arm-datalake-store.AclStatusResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-datalake-store.AclStatusResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: AclStatusResult
    fullName: AclStatusResult
    uid: azure-arm-datalake-store.AclStatusResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-datalake-store.AclStatusResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: AclStatusResult
    fullName: AclStatusResult
    uid: azure-arm-datalake-store.AclStatusResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-datalake-store.ContentSummaryResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ContentSummaryResult
    fullName: ContentSummaryResult
    uid: azure-arm-datalake-store.ContentSummaryResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-datalake-store.ContentSummaryResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ContentSummaryResult
    fullName: ContentSummaryResult
    uid: azure-arm-datalake-store.ContentSummaryResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-datalake-store.ContentSummaryResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ContentSummaryResult
    fullName: ContentSummaryResult
    uid: azure-arm-datalake-store.ContentSummaryResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-datalake-store.FileStatusResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: FileStatusResult
    fullName: FileStatusResult
    uid: azure-arm-datalake-store.FileStatusResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-datalake-store.FileStatusResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: FileStatusResult
    fullName: FileStatusResult
    uid: azure-arm-datalake-store.FileStatusResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-datalake-store.FileStatusResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: FileStatusResult
    fullName: FileStatusResult
    uid: azure-arm-datalake-store.FileStatusResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-datalake-store.FileStatusesResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: FileStatusesResult
    fullName: FileStatusesResult
    uid: azure-arm-datalake-store.FileStatusesResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-datalake-store.FileStatusesResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: FileStatusesResult
    fullName: FileStatusesResult
    uid: azure-arm-datalake-store.FileStatusesResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-datalake-store.FileStatusesResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: FileStatusesResult
    fullName: FileStatusesResult
    uid: azure-arm-datalake-store.FileStatusesResult
  - name: '>>'
    fullName: '>>'
