### YamlMime:UniversalReference
items:
  - uid: azure-cognitiveservices-entitysearch.Entities
    name: Entities
    fullName: Entities
    children:
      - azure-cognitiveservices-entitysearch.Entities.contractualRules
      - azure-cognitiveservices-entitysearch.Entities.id
      - azure-cognitiveservices-entitysearch.Entities.queryContext
      - azure-cognitiveservices-entitysearch.Entities.queryScenario
      - azure-cognitiveservices-entitysearch.Entities.value
      - azure-cognitiveservices-entitysearch.Entities.webSearchUrl
    langs:
      - typeScript
    type: interface
    summary: <span data-ttu-id="42925-101">Définit une réponse de l’entité.</span><span class="sxs-lookup"><span data-stu-id="42925-101">Defines an entity answer.</span></span>
    extends:
      name: azure-cognitiveservices-entitysearch.SearchResultsAnswer
    package: azure-cognitiveservices-entitysearch
  - uid: azure-cognitiveservices-entitysearch.Entities.contractualRules
    name: contractualRules
    fullName: contractualRules
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="42925-102">Une liste de règles que vous devez respecter si vous affichez l’élément.</span><span class="sxs-lookup"><span data-stu-id="42925-102">A list of rules that you must adhere to if you display the item.</span></span>
    optional: true
    syntax:
      content: 'contractualRules?: ContractualRulesContractualRule[]'
      return:
        type:
          - 'azure-cognitiveservices-entitysearch.ContractualRulesContractualRule[]'
    package: azure-cognitiveservices-entitysearch
  - uid: azure-cognitiveservices-entitysearch.Entities.id
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="42925-103">Un identificateur de chaîne.</span><span class="sxs-lookup"><span data-stu-id="42925-103">A String identifier.</span></span>
    optional: true
    syntax:
      content: 'id?: string'
      return:
        type:
          - string
    package: azure-cognitiveservices-entitysearch
  - uid: azure-cognitiveservices-entitysearch.Entities.queryContext
    name: queryContext
    fullName: queryContext
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'queryContext?: QueryContext'
      return:
        type:
          - azure-cognitiveservices-entitysearch.QueryContext
    package: azure-cognitiveservices-entitysearch
  - uid: azure-cognitiveservices-entitysearch.Entities.queryScenario
    name: queryScenario
    fullName: queryScenario
    children: []
    langs:
      - typeScript
    type: property
    summary: "<span data-ttu-id=\"42925-104\">Le scénario de requête pris en charge.</span><span class=\"sxs-lookup\"><span data-stu-id=\"42925-104\">The supported query scenario.</span></span> <span data-ttu-id=\"42925-105\">Ce champ est défini sur DominantEntity ou DisambiguationItem.</span><span class=\"sxs-lookup\"><span data-stu-id=\"42925-105\">This field is set to DominantEntity or DisambiguationItem.</span></span> <span data-ttu-id=\"42925-106\">Le champ est défini à DominantEntity si Bing détermine qu’une seule entité satisfait la requête.</span><span class=\"sxs-lookup\"><span data-stu-id=\"42925-106\">The field is set to DominantEntity if Bing determines that only a single entity satisfies the request.</span></span> <span data-ttu-id=\"42925-107\">Par exemple, un livre, films, personne ou attraction.</span><span class=\"sxs-lookup\"><span data-stu-id=\"42925-107\">For example, a book, movie, person, or attraction.</span></span> <span data-ttu-id=\"42925-108\">Si plusieurs entités peut satisfaire à la demande, le champ est défini à DisambiguationItem.</span><span class=\"sxs-lookup\"><span data-stu-id=\"42925-108\">If multiple entities could satisfy the request, the field is set to DisambiguationItem.</span></span> <span data-ttu-id=\"42925-109\">Par exemple, si la demande utilise le titre générique d’une franchise de film, le type d’entité serait probablement DisambiguationItem.</span><span class=\"sxs-lookup\"><span data-stu-id=\"42925-109\">For example, if the request uses the generic title of a movie franchise, the entity's type would likely be DisambiguationItem.</span></span> <span data-ttu-id=\"42925-110\">Toutefois, si la demande spécifie un logiciel spécifique à partir de la franchise, le type d’entité serait probablement DominantEntity.</span><span class=\"sxs-lookup\"><span data-stu-id=\"42925-110\">But, if the request specifies a specific title from the franchise, the entity's type would likely be DominantEntity.</span></span> <span data-ttu-id=\"42925-111\">Les valeurs possibles incluent\_: 'DominantEntity', 'DominantEntityWithDisambiguation', 'Disambiguation', 'List', 'ListWithPivot'</span><span class=\"sxs-lookup\"><span data-stu-id=\"42925-111\">Possible values include: 'DominantEntity', 'DominantEntityWithDisambiguation', 'Disambiguation', 'List', 'ListWithPivot'</span></span>"
    optional: true
    syntax:
      content: 'queryScenario?: string'
      return:
        type:
          - string
    package: azure-cognitiveservices-entitysearch
  - uid: azure-cognitiveservices-entitysearch.Entities.value
    name: value
    fullName: value
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="42925-112">Une liste d’entités.</span><span class="sxs-lookup"><span data-stu-id="42925-112">A list of entities.</span></span>
    syntax:
      content: 'value: Thing[]'
      return:
        type:
          - 'azure-cognitiveservices-entitysearch.Thing[]'
    package: azure-cognitiveservices-entitysearch
  - uid: azure-cognitiveservices-entitysearch.Entities.webSearchUrl
    name: webSearchUrl
    fullName: webSearchUrl
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="42925-113">Résultat de la recherche de par l’URL à Bing pour cet élément.</span><span class="sxs-lookup"><span data-stu-id="42925-113">The URL To Bing's search result for this item.</span></span>
    optional: true
    syntax:
      content: 'webSearchUrl?: string'
      return:
        type:
          - string
    package: azure-cognitiveservices-entitysearch
references:
  - uid: azure-cognitiveservices-entitysearch.SearchResultsAnswer
    name: SearchResultsAnswer
    spec.typeScript:
      - name: SearchResultsAnswer
        fullName: SearchResultsAnswer
        uid: azure-cognitiveservices-entitysearch.SearchResultsAnswer
  - uid: 'azure-cognitiveservices-entitysearch.ContractualRulesContractualRule[]'
    name: 'ContractualRulesContractualRule[]'
    spec.typeScript:
      - name: ContractualRulesContractualRule
        fullName: ContractualRulesContractualRule
        uid: azure-cognitiveservices-entitysearch.ContractualRulesContractualRule
      - name: '[]'
        fullName: '[]'
  - uid: azure-cognitiveservices-entitysearch.QueryContext
    name: QueryContext
    spec.typeScript:
      - name: QueryContext
        fullName: QueryContext
        uid: azure-cognitiveservices-entitysearch.QueryContext
  - uid: 'azure-cognitiveservices-entitysearch.Thing[]'
    name: 'Thing[]'
    spec.typeScript:
      - name: Thing
        fullName: Thing
        uid: azure-cognitiveservices-entitysearch.Thing
      - name: '[]'
        fullName: '[]'