### YamlMime:UniversalReference
ms.openlocfilehash: f506a0924f3f3b5f4088429dc8a673f55815c690
ms.sourcegitcommit: 286f52ea38c9eff2ec9d4f8cabeb86f62fd9c406
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 08/22/2018
ms.locfileid: "41684331"
items:
- uid: adal-node.MemoryCache
  name: MemoryCache
  fullName: MemoryCache
  children:
  - adal-node.MemoryCache.add
  - adal-node.MemoryCache.find
  - adal-node.MemoryCache.constructor
  - adal-node.MemoryCache.remove
  langs:
  - typeScript
  type: class
  summary: ''
  package: adal-node
- uid: adal-node.MemoryCache.add
  name: add
  children: []
  type: method
  langs:
  - typeScript
  summary: Ajoute une collection d’entrées dans le cache dans une opération par lot.
  syntax:
    content: 'function add(entries: TokenResponse[], callback: (err: Error, result: boolean) => void)'
    parameters:
    - id: entries
      type:
      - adal-node.TokenResponse[]
      description: Un tableau d’entrées à ajouter au cache.
    - id: callback
      type:
      - '(err: Error, result: boolean) => void'
      description: >
        Cette fonction est appelée lorsque l’opération est terminée.  Une erreur est fournie comme premier paramètre.
  package: adal-node
- uid: adal-node.MemoryCache.find
  name: find
  children: []
  type: method
  langs:
  - typeScript
  summary: Recherche toutes les entrées dans le cache qui correspondent à toutes les valeurs passées dans.
  syntax:
    content: 'function find(query: any, callback: (err: Error, results: any[]) => void)'
    parameters:
    - id: query
      type:
      - any
      description: Cet objet sera comparé à chaque entrée dans le cache.  Toutes les entrées qui correspondent à toutes les valeurs dans cet objet seront retournées.  Toutes les valeurs dans l’objet transmis doivent correspondre exactement à valeurs dans un objet potentiellement retourné.  L’objet retourné peut avoir plus de valeurs que passé dans l’objet de requête. Veuillez examiner http://underscorejs.org/#where pour obtenir un exemple sur la façon de fournir la requête.
    - id: callback
      type:
      - '(err: Error, results: any[]) => void'
      description: "\n"
  package: adal-node
- uid: adal-node.MemoryCache.constructor
  name: MemoryCache
  children: []
  type: constructor
  langs:
  - typeScript
  summary: ''
  syntax:
    content: new MemoryCache()
    parameters: []
  package: adal-node
- uid: adal-node.MemoryCache.remove
  name: remove
  children: []
  type: method
  langs:
  - typeScript
  summary: Supprime une collection d’entrées du cache dans une opération par lot.
  syntax:
    content: 'function remove(entires: TokenResponse[], callback: (err: Error, result: null) => void)'
    parameters:
    - id: entires
      type:
      - adal-node.TokenResponse[]
      description: ''
    - id: callback
      type:
      - '(err: Error, result: null) => void'
      description: >
        Cette fonction est appelée lorsque l’opération est terminée.  Une erreur est fournie comme premier paramètre.
  package: adal-node
references:
- uid: adal-node.TokenResponse[]
  spec.typeScript:
  - name: TokenResponse
    fullName: TokenResponse
    uid: adal-node.TokenResponse
  - name: '[]'
    fullName: '[]'
