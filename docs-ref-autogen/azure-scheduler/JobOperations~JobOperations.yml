### YamlMime:UniversalReference
ms.openlocfilehash: 6fa2e2901b7265c9426541584abde0d99339d194
ms.sourcegitcommit: f774f8ce6b26593f73a5893bfa47f9c510fc51a7
ms.translationtype: MT
ms.contentlocale: fr-FR
ms.lasthandoff: 06/21/2018
ms.locfileid: "40057152"
items:
- uid: azure-scheduler.JobOperations~JobOperations
  id: azure-scheduler.JobOperations~JobOperations
  name: JobOperations
  summary: >-
    __Remarque__: une instance de cette classe est automatiquement créée pour une instance de la [SchedulerClient] <xref:azure-scheduler.SchedulerClient~SchedulerClient>.

    Consultez [tâches] <xref:azure-scheduler.SchedulerClient~SchedulerClient%23jobs>.

    Initialise une nouvelle instance de la classe JobOperations.
  fullName: azure-scheduler.JobOperations
  type: Class
  children:
  - azure-scheduler.JobOperations~JobOperations.#ctor
  - azure-scheduler.JobOperations~JobOperations#create
  - azure-scheduler.JobOperations~JobOperations#createOrUpdate
  - azure-scheduler.JobOperations~JobOperations#deleteMethod
  - azure-scheduler.JobOperations~JobOperations#get
  - azure-scheduler.JobOperations~JobOperations#getHistory
  - azure-scheduler.JobOperations~JobOperations#getHistoryWithFilter
  - azure-scheduler.JobOperations~JobOperations#list
  - azure-scheduler.JobOperations~JobOperations#listWithFilter
  - azure-scheduler.JobOperations~JobOperations#updateJobCollectionState
  - azure-scheduler.JobOperations~JobOperations#updateState
  langs:
  - js
- id: azure-scheduler.JobOperations~JobOperations.#ctor
  uid: azure-scheduler.JobOperations~JobOperations.#ctor
  parent: azure-scheduler.JobOperations~JobOperations
  name: JobOperations(client)
  fullName: azure-scheduler.JobOperations.JobOperations(client)
  summary: ''
  type: Constructor
  syntax:
    parameters:
    - id: client
      type:
      - undefinedSchedulerClient
      description: Référence au client du service.
    content: new JobOperations(client)
  langs:
  - js
- uid: azure-scheduler.JobOperations~JobOperations#create
  id: azure-scheduler.JobOperations~JobOperations#create
  parent: azure-scheduler.JobOperations~JobOperations
  name: create(parameters, callback)
  summary: Crée une tâche, ce qui permet le service générer un id de tâche. Utilisez CreateOrUpdate si un id de tâche de choisi par l’utilisateur est requis.
  fullName: azure-scheduler.JobOperations~JobOperations.create(parameters, callback)
  type: Function
  syntax:
    parameters:
    - id: parameters
      type:
      - azure-scheduler.JobCreateParameters
      description: Paramètres spécifiant la définition du travail pour une opération de création de tâche.
    - id: parameters.startTime
      type:
      - date
      description: Heure de début de la tâche.  Défini comme ISO 8601.
      optional: true
    - id: parameters.action
      type:
      - azure-scheduler.JobAction
      description: Action à appeler pour le travail.
    - id: parameters.action.type
      type:
      - azure-scheduler.JobActionType
      description: Type d’action. Peut être http, https, storageQueue.
    - id: parameters.action.retryPolicy
      type:
      - azure-scheduler.RetryPolicy
      description: Stratégie de nouvelle tentative pour l’action de tâche.
      optional: true
    - id: parameters.action.retryPolicy.retryType
      type:
      - azure-scheduler.RetryType
      description: Le Type de nouvelle tentative de la stratégie de nouvelle tentative. Peut être « fixed » ou « none ».
      optional: true
    - id: parameters.action.retryPolicy.retryInterval
      type:
      - azure-scheduler.TimeSpan
      description: L’intervalle entre chaque tentative.
      optional: true
    - id: parameters.action.retryPolicy.retryCount
      type:
      - number
      description: Nombre de fois où qu'une nouvelle tentative doit être tentée.
      optional: true
    - id: parameters.action.errorAction
      type:
      - azure-scheduler.JobErrorAction
      description: Action d’erreur pour la tâche.
      optional: true
    - id: parameters.action.errorAction.type
      type:
      - azure-scheduler.JobActionType
      description: Type d’action. Peut être http, https, storageQueue.
      optional: true
    - id: parameters.action.errorAction.request
      type:
      - azure-scheduler.JobHttpRequest
      description: Demande pour un type d’action http ou https.
      optional: true
    - id: parameters.action.errorAction.request.uri
      type:
      - string
      description: Obtient ou définit l’Uri du point de terminaison d’appel.
      optional: true
    - id: parameters.action.errorAction.request.method
      type:
      - string
      description: Obtient ou définit la méthode par exemple, GET, PUT, POST, DELETE de Http.
      optional: true
    - id: parameters.action.errorAction.request.headers
      type:
      - object
      description: Obtient ou définit l’en-tête paires nom / valeur à fournir avec l’action http/https.
      optional: true
    - id: parameters.action.errorAction.request.body
      type:
      - string
      description: Obtient ou définit le corps de la demande.
      optional: true
    - id: parameters.action.errorAction.request.authentication
      type:
      - azure-scheduler.HttpAuthentication
      description: Obtient ou définit la demande d’authentification.
      optional: true
    - id: parameters.action.errorAction.request.authentication.type
      type:
      - azure-scheduler.HttpAuthenticationType
      description: Spécifie le type d’authentification
      optional: true
    - id: parameters.action.errorAction.queueMessage
      type:
      - azure-scheduler.JobQueueMessage
      description: Type de file d’attente et de contenu pour une action de message de file d’attente.
      optional: true
    - id: parameters.action.errorAction.queueMessage.storageAccountName
      type:
      - string
      description: Nom du compte de stockage pour la file d’attente.
      optional: true
    - id: parameters.action.errorAction.queueMessage.queueName
      type:
      - string
      description: Nom de la file d’attente de destination.
      optional: true
    - id: parameters.action.errorAction.queueMessage.sasToken
      type:
      - string
      description: Clé SAS du compte de stockage envoyer un message à la file d’attente.
      optional: true
    - id: parameters.action.errorAction.queueMessage.message
      type:
      - string
      description: Contenu du message à envoyer à la file d’attente.
      optional: true
    - id: parameters.action.request
      type:
      - azure-scheduler.JobHttpRequest
      description: Demande pour un type d’action http ou https.
      optional: true
    - id: parameters.action.request.uri
      type:
      - string
      description: Obtient ou définit l’Uri du point de terminaison d’appel.
      optional: true
    - id: parameters.action.request.method
      type:
      - string
      description: Obtient ou définit la méthode par exemple, GET, PUT, POST, DELETE de Http.
      optional: true
    - id: parameters.action.request.headers
      type:
      - object
      description: Obtient ou définit l’en-tête paires nom / valeur à fournir avec l’action http/https.
      optional: true
    - id: parameters.action.request.body
      type:
      - string
      description: Obtient ou définit le corps de la demande.
      optional: true
    - id: parameters.action.request.authentication
      type:
      - azure-scheduler.HttpAuthentication
      description: Obtient ou définit la demande d’authentification.
      optional: true
    - id: parameters.action.request.authentication.type
      type:
      - azure-scheduler.HttpAuthenticationType
      description: Spécifie le type d’authentification
      optional: true
    - id: parameters.action.queueMessage
      type:
      - azure-scheduler.JobQueueMessage
      description: Type de file d’attente et de contenu pour une action de message de file d’attente.
      optional: true
    - id: parameters.action.queueMessage.storageAccountName
      type:
      - string
      description: Nom du compte de stockage pour la file d’attente.
      optional: true
    - id: parameters.action.queueMessage.queueName
      type:
      - string
      description: Nom de la file d’attente de destination.
      optional: true
    - id: parameters.action.queueMessage.sasToken
      type:
      - string
      description: Clé SAS du compte de stockage envoyer un message à la file d’attente.
      optional: true
    - id: parameters.action.queueMessage.message
      type:
      - string
      description: Contenu du message à envoyer à la file d’attente.
      optional: true
    - id: parameters.recurrence
      type:
      - azure-scheduler.JobRecurrence
      description: Planification de périodicité pour le travail.
      optional: true
    - id: parameters.recurrence.frequency
      type:
      - azure-scheduler.JobRecurrenceFrequency
      description: La fréquence de périodicité.
      optional: true
    - id: parameters.recurrence.interval
      type:
      - number
      description: Intervalle de la périodicité à la fréquence donnée.
      optional: true
    - id: parameters.recurrence.count
      type:
      - number
      description: Nombre d’occurrences qui s’exécute. facultatif. Par défaut se reproduisent à l’infini
      optional: true
    - id: parameters.recurrence.endTime
      type:
      - date
      description: Heure au format ISO 8601 après lequel aucune autre occurrence ne s’exécutera.
      optional: true
    - id: parameters.recurrence.schedule
      type:
      - azure-scheduler.JobRecurrenceSchedule
      description: Planification de périodicité pour le travail.
      optional: true
    - id: parameters.recurrence.schedule.minutes
      type:
      - array
      description: Minutes de l’heure que le travail doit exécuter au.
      optional: true
    - id: parameters.recurrence.schedule.hours
      type:
      - array
      description: Heures de la journée, la tâche doit s’exécuter à.
      optional: true
    - id: parameters.recurrence.schedule.days
      type:
      - array
      description: Jours de la semaine, la tâche doit s’exécuter sur.
      optional: true
    - id: parameters.recurrence.schedule.months
      type:
      - array
      description: Mois pendant lesquels le travail doit s’exécuter en.  Doit être comprise entre 1 et 12.
      optional: true
    - id: parameters.recurrence.schedule.monthDays
      type:
      - array
      description: Jours du mois, la tâche doit s’exécuter sur.  Doit être compris entre 1 et 31.
      optional: true
    - id: parameters.recurrence.schedule.monthlyOccurrences
      type:
      - array
      description: Occurrences de jours d’un mois.
      optional: true
    - id: callback
      type:
      - function
      description: ''
    return:
      type:
      - azure-scheduler.Stream
      description: Le flux de réponse.
    content: function create(parameters, callback)
  langs:
  - js
- uid: azure-scheduler.JobOperations~JobOperations#createOrUpdate
  id: azure-scheduler.JobOperations~JobOperations#createOrUpdate
  parent: azure-scheduler.JobOperations~JobOperations
  name: createOrUpdate(jobId, parameters, callback)
  summary: Crée une tâche avec un id de tâche fourni par l’utilisateur, ou met à jour d’un travail existant, en remplaçant sa définition avec celui spécifié.
  fullName: azure-scheduler.JobOperations~JobOperations.createOrUpdate(jobId, parameters, callback)
  type: Function
  syntax:
    parameters:
    - id: jobId
      type:
      - string
      description: ID du travail à créer ou mettre à jour.
    - id: parameters
      type:
      - azure-scheduler.JobCreateOrUpdateParameters
      description: Paramètres spécifiant la définition du travail pour une opération de Job de CreateOrUpdate.
    - id: parameters.startTime
      type:
      - date
      description: Heure de début de la tâche. Défini comme ISO 8601.
      optional: true
    - id: parameters.action
      type:
      - azure-scheduler.JobAction
      description: Action à appeler pour le travail.
    - id: parameters.action.type
      type:
      - azure-scheduler.JobActionType
      description: Type d’action. Peut être http, https, storageQueue.
    - id: parameters.action.retryPolicy
      type:
      - azure-scheduler.RetryPolicy
      description: Stratégie de nouvelle tentative pour l’action de tâche.
      optional: true
    - id: parameters.action.retryPolicy.retryType
      type:
      - azure-scheduler.RetryType
      description: Le Type de nouvelle tentative de la stratégie de nouvelle tentative. Peut être « fixed » ou « none ».
      optional: true
    - id: parameters.action.retryPolicy.retryInterval
      type:
      - azure-scheduler.TimeSpan
      description: L’intervalle entre chaque tentative.
      optional: true
    - id: parameters.action.retryPolicy.retryCount
      type:
      - number
      description: Nombre de fois où qu'une nouvelle tentative doit être tentée.
      optional: true
    - id: parameters.action.errorAction
      type:
      - azure-scheduler.JobErrorAction
      description: Action d’erreur pour la tâche.
      optional: true
    - id: parameters.action.errorAction.type
      type:
      - azure-scheduler.JobActionType
      description: Type d’action. Peut être http, https, storageQueue.
      optional: true
    - id: parameters.action.errorAction.request
      type:
      - azure-scheduler.JobHttpRequest
      description: Demande pour un type d’action http ou https.
      optional: true
    - id: parameters.action.errorAction.request.uri
      type:
      - string
      description: Obtient ou définit l’Uri du point de terminaison d’appel.
      optional: true
    - id: parameters.action.errorAction.request.method
      type:
      - string
      description: Obtient ou définit la méthode par exemple, GET, PUT, POST, DELETE de Http.
      optional: true
    - id: parameters.action.errorAction.request.headers
      type:
      - object
      description: Obtient ou définit l’en-tête paires nom / valeur à fournir avec l’action http/https.
      optional: true
    - id: parameters.action.errorAction.request.body
      type:
      - string
      description: Obtient ou définit le corps de la demande.
      optional: true
    - id: parameters.action.errorAction.request.authentication
      type:
      - azure-scheduler.HttpAuthentication
      description: Obtient ou définit la demande d’authentification.
      optional: true
    - id: parameters.action.errorAction.request.authentication.type
      type:
      - azure-scheduler.HttpAuthenticationType
      description: Spécifie le type d’authentification
      optional: true
    - id: parameters.action.errorAction.queueMessage
      type:
      - azure-scheduler.JobQueueMessage
      description: Type de file d’attente et de contenu pour une action de message de file d’attente.
      optional: true
    - id: parameters.action.errorAction.queueMessage.storageAccountName
      type:
      - string
      description: Nom du compte de stockage pour la file d’attente.
      optional: true
    - id: parameters.action.errorAction.queueMessage.queueName
      type:
      - string
      description: Nom de la file d’attente de destination.
      optional: true
    - id: parameters.action.errorAction.queueMessage.sasToken
      type:
      - string
      description: Clé SAS du compte de stockage envoyer un message à la file d’attente.
      optional: true
    - id: parameters.action.errorAction.queueMessage.message
      type:
      - string
      description: Contenu du message à envoyer à la file d’attente.
      optional: true
    - id: parameters.action.request
      type:
      - azure-scheduler.JobHttpRequest
      description: Demande pour un type d’action http ou https.
      optional: true
    - id: parameters.action.request.uri
      type:
      - string
      description: Obtient ou définit l’Uri du point de terminaison d’appel.
      optional: true
    - id: parameters.action.request.method
      type:
      - string
      description: Obtient ou définit la méthode par exemple, GET, PUT, POST, DELETE de Http.
      optional: true
    - id: parameters.action.request.headers
      type:
      - object
      description: Obtient ou définit l’en-tête paires nom / valeur à fournir avec l’action http/https.
      optional: true
    - id: parameters.action.request.body
      type:
      - string
      description: Obtient ou définit le corps de la demande.
      optional: true
    - id: parameters.action.request.authentication
      type:
      - azure-scheduler.HttpAuthentication
      description: Obtient ou définit la demande d’authentification.
      optional: true
    - id: parameters.action.request.authentication.type
      type:
      - azure-scheduler.HttpAuthenticationType
      description: Spécifie le type d’authentification
      optional: true
    - id: parameters.action.queueMessage
      type:
      - azure-scheduler.JobQueueMessage
      description: Type de file d’attente et de contenu pour une action de message de file d’attente.
      optional: true
    - id: parameters.action.queueMessage.storageAccountName
      type:
      - string
      description: Nom du compte de stockage pour la file d’attente.
      optional: true
    - id: parameters.action.queueMessage.queueName
      type:
      - string
      description: Nom de la file d’attente de destination.
      optional: true
    - id: parameters.action.queueMessage.sasToken
      type:
      - string
      description: Clé SAS du compte de stockage envoyer un message à la file d’attente.
      optional: true
    - id: parameters.action.queueMessage.message
      type:
      - string
      description: Contenu du message à envoyer à la file d’attente.
      optional: true
    - id: parameters.recurrence
      type:
      - azure-scheduler.JobRecurrence
      description: Planification de périodicité pour le travail.
      optional: true
    - id: parameters.recurrence.frequency
      type:
      - azure-scheduler.JobRecurrenceFrequency
      description: La fréquence de périodicité.
      optional: true
    - id: parameters.recurrence.interval
      type:
      - number
      description: Intervalle de la périodicité à la fréquence donnée.
      optional: true
    - id: parameters.recurrence.count
      type:
      - number
      description: Nombre d’occurrences qui s’exécute. facultatif. Par défaut se reproduisent à l’infini
      optional: true
    - id: parameters.recurrence.endTime
      type:
      - date
      description: Heure au format ISO 8601 après lequel aucune autre occurrence ne s’exécutera.
      optional: true
    - id: parameters.recurrence.schedule
      type:
      - azure-scheduler.JobRecurrenceSchedule
      description: Planification de périodicité pour le travail.
      optional: true
    - id: parameters.recurrence.schedule.minutes
      type:
      - array
      description: Minutes de l’heure que le travail doit exécuter au.
      optional: true
    - id: parameters.recurrence.schedule.hours
      type:
      - array
      description: Heures de la journée, la tâche doit s’exécuter à.
      optional: true
    - id: parameters.recurrence.schedule.days
      type:
      - array
      description: Jours de la semaine, la tâche doit s’exécuter sur.
      optional: true
    - id: parameters.recurrence.schedule.months
      type:
      - array
      description: Mois pendant lesquels le travail doit s’exécuter en.  Doit être comprise entre 1 et 12.
      optional: true
    - id: parameters.recurrence.schedule.monthDays
      type:
      - array
      description: Jours du mois, la tâche doit s’exécuter sur.  Doit être compris entre 1 et 31.
      optional: true
    - id: parameters.recurrence.schedule.monthlyOccurrences
      type:
      - array
      description: Occurrences de jours d’un mois.
      optional: true
    - id: callback
      type:
      - function
      description: ''
    return:
      type:
      - azure-scheduler.Stream
      description: Le flux de réponse.
    content: function createOrUpdate(jobId, parameters, callback)
  langs:
  - js
- uid: azure-scheduler.JobOperations~JobOperations#deleteMethod
  id: azure-scheduler.JobOperations~JobOperations#deleteMethod
  parent: azure-scheduler.JobOperations~JobOperations
  name: deleteMethod(jobId, callback)
  summary: Supprime un travail.
  fullName: azure-scheduler.JobOperations~JobOperations.deleteMethod(jobId, callback)
  type: Function
  syntax:
    parameters:
    - id: jobId
      type:
      - string
      description: ID du travail à supprimer.
    - id: callback
      type:
      - function
      description: ''
    return:
      type:
      - azure-scheduler.Stream
      description: Le flux de réponse.
    content: function deleteMethod(jobId, callback)
  langs:
  - js
- uid: azure-scheduler.JobOperations~JobOperations#get
  id: azure-scheduler.JobOperations~JobOperations#get
  parent: azure-scheduler.JobOperations~JobOperations
  name: get(jobId, callback)
  summary: Obtenir la définition et l’état d’un travail.
  fullName: azure-scheduler.JobOperations~JobOperations.get(jobId, callback)
  type: Function
  syntax:
    parameters:
    - id: jobId
      type:
      - string
      description: ID du travail à obtenir.
    - id: callback
      type:
      - function
      description: ''
    return:
      type:
      - azure-scheduler.Stream
      description: Le flux de réponse.
    content: function get(jobId, callback)
  langs:
  - js
- uid: azure-scheduler.JobOperations~JobOperations#getHistory
  id: azure-scheduler.JobOperations~JobOperations#getHistory
  parent: azure-scheduler.JobOperations~JobOperations
  name: getHistory(jobId, parameters, callback)
  summary: Obtenir l’historique d’exécution d’un travail.
  fullName: azure-scheduler.JobOperations~JobOperations.getHistory(jobId, parameters, callback)
  type: Function
  syntax:
    parameters:
    - id: jobId
      type:
      - string
      description: ID du travail pour obtenir l’historique de.
    - id: parameters
      type:
      - azure-scheduler.JobGetHistoryParameters
      description: Paramètres fournis à l’opération obtenir l’historique des travaux.
    - id: parameters.skip
      type:
      - number
      description: Spécifier l’index (basé sur 0) de la liste d’historique à partir duquel commencer la demande d’entrées.
      optional: true
    - id: parameters.top
      type:
      - number
      description: Spécifiez le nombre d’entrées d’historique pour demander, dans la de la plage [1..100].
      optional: true
    - id: callback
      type:
      - function
      description: ''
    return:
      type:
      - azure-scheduler.Stream
      description: Le flux de réponse.
    content: function getHistory(jobId, parameters, callback)
  langs:
  - js
- uid: azure-scheduler.JobOperations~JobOperations#getHistoryWithFilter
  id: azure-scheduler.JobOperations~JobOperations#getHistoryWithFilter
  parent: azure-scheduler.JobOperations~JobOperations
  name: getHistoryWithFilter(jobId, parameters, callback)
  summary: Obtenir l’historique d’exécution d’un travail avec un filtre sur le statut de la tâche.
  fullName: azure-scheduler.JobOperations~JobOperations.getHistoryWithFilter(jobId, parameters, callback)
  type: Function
  syntax:
    parameters:
    - id: jobId
      type:
      - string
      description: ID du travail pour obtenir l’historique de.
    - id: parameters
      type:
      - azure-scheduler.JobGetHistoryWithFilterParameters
      description: Paramètres fournis à l’opération obtenir l’historique avec filtre tâches.
    - id: parameters.status
      type:
      - azure-scheduler.JobHistoryStatus
      description: Filtrer l’historique des travaux pour qu’il uniquement des tentatives d’exécution de tâche retour ayant un état particulier, « terminé » ou « échec ».
    - id: parameters.skip
      type:
      - number
      description: Spécifier l’index (basé sur 0) de la liste d’historique à partir duquel commencer la demande d’entrées.
      optional: true
    - id: parameters.top
      type:
      - number
      description: Spécifiez le nombre d’entrées d’historique pour demander, dans la de la plage [1..100].
      optional: true
    - id: callback
      type:
      - function
      description: ''
    return:
      type:
      - azure-scheduler.Stream
      description: Le flux de réponse.
    content: function getHistoryWithFilter(jobId, parameters, callback)
  langs:
  - js
- uid: azure-scheduler.JobOperations~JobOperations#list
  id: azure-scheduler.JobOperations~JobOperations#list
  parent: azure-scheduler.JobOperations~JobOperations
  name: list(parameters, callback)
  summary: Obtenir la liste de tous les travaux dans une collection de travaux.
  fullName: azure-scheduler.JobOperations~JobOperations.list(parameters, callback)
  type: Function
  syntax:
    parameters:
    - id: parameters
      type:
      - azure-scheduler.JobListParameters
      description: Paramètres fournis à l’opération répertorier les travaux.
    - id: parameters.skip
      type:
      - number
      description: Spécifier l’index (basé sur 0) de la liste des travaux à partir duquel commencer la demande d’entrées.
      optional: true
    - id: parameters.top
      type:
      - number
      description: Spécifiez le nombre de travaux pour demander, dans la de la plage [1..100].
      optional: true
    - id: callback
      type:
      - function
      description: ''
    return:
      type:
      - azure-scheduler.Stream
      description: Le flux de réponse.
    content: function list(parameters, callback)
  langs:
  - js
- uid: azure-scheduler.JobOperations~JobOperations#listWithFilter
  id: azure-scheduler.JobOperations~JobOperations#listWithFilter
  parent: azure-scheduler.JobOperations~JobOperations
  name: listWithFilter(parameters, callback)
  summary: Obtenir la liste des tâches dans une collection de travaux correspondant à un filtre sur l’état du travail.
  fullName: azure-scheduler.JobOperations~JobOperations.listWithFilter(parameters, callback)
  type: Function
  syntax:
    parameters:
    - id: parameters
      type:
      - azure-scheduler.JobListWithFilterParameters
      description: Paramètres fournis à la liste des travaux avec l’opération de filtre.
    - id: parameters.state
      type:
      - azure-scheduler.JobState
      description: Filtrer l’historique des travaux pour qu’il les tentatives d’exécution de travail ne renvoient qu’avoir un état particulier, activé, désactivé, a généré une erreur ou terminé.
    - id: parameters.skip
      type:
      - number
      description: Spécifier l’index (basé sur 0) de la liste des travaux à partir duquel commencer la demande d’entrées.
      optional: true
    - id: parameters.top
      type:
      - number
      description: Spécifiez le nombre de travaux pour demander, dans la de la plage [1..100].
      optional: true
    - id: callback
      type:
      - function
      description: ''
    return:
      type:
      - azure-scheduler.Stream
      description: Le flux de réponse.
    content: function listWithFilter(parameters, callback)
  langs:
  - js
- uid: azure-scheduler.JobOperations~JobOperations#updateJobCollectionState
  id: azure-scheduler.JobOperations~JobOperations#updateJobCollectionState
  parent: azure-scheduler.JobOperations~JobOperations
  name: updateJobCollectionState(parameters, callback)
  summary: Mettre à jour l’état de tous les travaux dans une collection de tâches.
  fullName: azure-scheduler.JobOperations~JobOperations.updateJobCollectionState(parameters, callback)
  type: Function
  syntax:
    parameters:
    - id: parameters
      type:
      - azure-scheduler.JobCollectionJobsUpdateStateParameters
      description: Paramètres fournis à l’opération de l’état des tâches de mise à jour.
    - id: parameters.state
      type:
      - azure-scheduler.JobState
      description: 'Nouvel état de mise à jour vers : « enabled » ou « désactivé ».'
    - id: callback
      type:
      - function
      description: ''
    return:
      type:
      - azure-scheduler.Stream
      description: Le flux de réponse.
    content: function updateJobCollectionState(parameters, callback)
  langs:
  - js
- uid: azure-scheduler.JobOperations~JobOperations#updateState
  id: azure-scheduler.JobOperations~JobOperations#updateState
  parent: azure-scheduler.JobOperations~JobOperations
  name: updateState(jobId, parameters, callback)
  summary: Mettre à jour l’état d’un travail.
  fullName: azure-scheduler.JobOperations~JobOperations.updateState(jobId, parameters, callback)
  type: Function
  syntax:
    parameters:
    - id: jobId
      type:
      - string
      description: ID du travail à mettre à jour.
    - id: parameters
      type:
      - azure-scheduler.JobUpdateStateParameters
      description: Paramètres fournis à l’opération de l’état de la tâche mise à jour.
    - id: parameters.state
      type:
      - azure-scheduler.JobState
      description: 'Nouvel état de mise à jour vers : « enabled » ou « désactivé ».'
    - id: parameters.updateStateReason
      type:
      - string
      description: Une description des circonstances associé à cette mise à jour des état de travail.
      optional: true
    - id: callback
      type:
      - function
      description: ''
    return:
      type:
      - azure-scheduler.Stream
      description: Le flux de réponse.
    content: function updateState(jobId, parameters, callback)
  langs:
  - js
