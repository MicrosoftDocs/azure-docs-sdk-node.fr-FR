### YamlMime:UniversalReference
items:
  - uid: msal.UserAgentApplication
    name: UserAgentApplication
    fullName: UserAgentApplication
    children:
      - msal.UserAgentApplication.acquireTokenPopup
      - msal.UserAgentApplication.acquireTokenRedirect
      - msal.UserAgentApplication.acquireTokenSilent
      - msal.UserAgentApplication.authority
      - msal.UserAgentApplication.getAccount
      - msal.UserAgentApplication.getAllAccounts
      - msal.UserAgentApplication.getAuthorityInstance
      - msal.UserAgentApplication.getCurrentConfiguration
      - msal.UserAgentApplication.getLoginInProgress
      - msal.UserAgentApplication.getPostLogoutRedirectUri
      - msal.UserAgentApplication.getRedirectUri
      - msal.UserAgentApplication.loginPopup
      - msal.UserAgentApplication.loginRedirect
      - msal.UserAgentApplication.logout
      - msal.UserAgentApplication.constructor
    langs:
      - typeScript
    type: class
    summary: |
      Classe UserAgentApplication Instance d’objet que le développeur peut utiliser pour rendre loginXX fonctions d’acquireTokenXX OR
    package: msal
  - uid: msal.UserAgentApplication.acquireTokenPopup
    name: acquireTokenPopup(AuthenticationParameters)
    children: []
    type: method
    langs:
      - typeScript
    summary: À utiliser lorsque vous souhaitez obtenir un jeton d’accès pour votre API via l’ouverture d’une fenêtre contextuelle dans le navigateur de l’utilisateur
    syntax:
      content: 'function acquireTokenPopup(request: AuthenticationParameters)'
      parameters:
        - id: request
          type:
            - msal.AuthenticationParameters
          description: ''
      return:
        type:
          - Promise<msal.AuthResponse>
    package: msal
  - uid: msal.UserAgentApplication.acquireTokenRedirect
    name: acquireTokenRedirect(AuthenticationParameters)
    children: []
    type: method
    langs:
      - typeScript
    summary: À utiliser lorsque vous souhaitez obtenir un jeton d’accès pour votre API en redirigeant la fenêtre de navigateur de l’utilisateur au point de terminaison d’autorisation.
    syntax:
      content: 'function acquireTokenRedirect(request: AuthenticationParameters)'
      parameters:
        - id: request
          type:
            - msal.AuthenticationParameters
          description: ''
    package: msal
  - uid: msal.UserAgentApplication.acquireTokenSilent
    name: acquireTokenSilent(AuthenticationParameters)
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Utilisez cette fonction pour obtenir un jeton avant chaque appel à l’API / fournisseur de ressources de retour MSAL du jeton en cache lorsqu’il est disponible, ou il envoyer d’une demande auprès du STS pour obtenir un nouveau jeton à l’aide d’un iframe masqué.
    syntax:
      content: 'function acquireTokenSilent(request: AuthenticationParameters)'
      parameters:
        - id: request
          type:
            - msal.AuthenticationParameters
          description: ''
      return:
        type:
          - Promise<msal.AuthResponse>
    package: msal
  - uid: msal.UserAgentApplication.authority
    name: authority
    fullName: authority
    children: []
    langs:
      - typeScript
    type: property
    summary: Méthode de l’URL de l’autorité de gestion.
    syntax:
      content: 'authority: string'
      return:
        type:
          - string
    package: msal
  - uid: msal.UserAgentApplication.getAccount
    name: getAccount()
    children: []
    type: method
    langs:
      - typeScript
    summary: Retourne le signé dans le compte (l’objet de compte est créé au moment de la connexion) ou la valeur null lorsqu’aucun état n’est trouvée
    syntax:
      content: function getAccount()
      parameters: []
      return:
        type:
          - msal.Account
    package: msal
  - uid: msal.UserAgentApplication.getAllAccounts
    name: getAllAccounts()
    children: []
    type: method
    langs:
      - typeScript
    summary: Permet d’obtenir la liste des comptes uniques dans le cache MSAL selon homeAccountIdentifier.
    syntax:
      content: function getAllAccounts()
      parameters: []
      return:
        type:
          - Array<msal.Account>
    package: msal
  - uid: msal.UserAgentApplication.getAuthorityInstance
    name: getAuthorityInstance()
    children: []
    type: method
    langs:
      - typeScript
    summary: Obtenir de l’instance actuelle d’autorité à partir de l’objet de configuration de MSAL
    syntax:
      content: function getAuthorityInstance()
      parameters: []
      return:
        type:
          - Authority
    package: msal
  - uid: msal.UserAgentApplication.getCurrentConfiguration
    name: getCurrentConfiguration()
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Permet d’obtenir des cours <xref:Configuration> objet dans la bibliothèque MSAL'
    syntax:
      content: function getCurrentConfiguration()
      parameters: []
      return:
        type:
          - msal.Configuration
    package: msal
  - uid: msal.UserAgentApplication.getLoginInProgress
    name: getLoginInProgress()
    children: []
    type: method
    langs:
      - typeScript
    summary: Retourne un indicateur booléen au développeur de mieux comprendre si la connexion est en cours d’exécution
    syntax:
      content: function getLoginInProgress()
      parameters: []
      return:
        type:
          - boolean
    package: msal
  - uid: msal.UserAgentApplication.getPostLogoutRedirectUri
    name: getPostLogoutRedirectUri()
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Utiliser pour obtenir l’uri de redirection de déconnexion post configuré dans la bibliothèque MSAL ou null.
      Prend la valeur postLogoutredirectUri s’il s’agit d’une fonction, sinon renvoie simplement sa valeur.
    syntax:
      content: function getPostLogoutRedirectUri()
      parameters: []
      return:
        type:
          - string
    package: msal
  - uid: msal.UserAgentApplication.getRedirectUri
    name: getRedirectUri()
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Utiliser pour obtenir l’uri de redirection configuré dans la bibliothèque MSAL ou null.
      Prend la valeur URI de redirection s’il s’agit d’une fonction, sinon renvoie simplement sa valeur.
    syntax:
      content: function getRedirectUri()
      parameters: []
      return:
        type:
          - string
    package: msal
  - uid: msal.UserAgentApplication.loginPopup
    name: loginPopup(AuthenticationParameters)
    children: []
    type: method
    langs:
      - typeScript
    summary: Utilisez lors de l’initialisation du processus de connexion via l’ouverture d’une fenêtre contextuelle dans le navigateur de l’utilisateur
    syntax:
      content: 'function loginPopup(request?: AuthenticationParameters)'
      parameters:
        - id: request
          type:
            - msal.AuthenticationParameters
          description: ''
          optional: true
      return:
        type:
          - Promise<msal.AuthResponse>
    package: msal
  - uid: msal.UserAgentApplication.loginRedirect
    name: loginRedirect(AuthenticationParameters)
    children: []
    type: method
    langs:
      - typeScript
    summary: Utilisez lors de l’initialisation du processus de connexion en redirigeant le navigateur de l’utilisateur au point de terminaison d’autorisation.
    syntax:
      content: 'function loginRedirect(request?: AuthenticationParameters)'
      parameters:
        - id: request
          type:
            - msal.AuthenticationParameters
          description: ''
          optional: true
    package: msal
  - uid: msal.UserAgentApplication.logout
    name: logout()
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Permet de déconnecter l’utilisateur actuel et rediriger l’utilisateur vers le postLogoutRedirectUri.
      Comportement par défaut consiste à rediriger l’utilisateur vers `window.location.href`.
    syntax:
      content: function logout()
      parameters: []
    package: msal
  - uid: msal.UserAgentApplication.constructor
    name: UserAgentApplication(Configuration)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new UserAgentApplication(configuration: Configuration)'
      parameters:
        - id: configuration
          type:
            - msal.Configuration
          description: |
            objet pour l’instance de MSAL UserAgentApplication
    package: msal
references:
  - uid: msal.Configuration
    name: Configuration
    spec.typeScript:
      - name: Configuration
        fullName: Configuration
        uid: msal.Configuration
  - uid: msal.AuthenticationParameters
    name: AuthenticationParameters
    spec.typeScript:
      - name: AuthenticationParameters
        fullName: AuthenticationParameters
        uid: msal.AuthenticationParameters
  - uid: Promise<msal.AuthResponse>
    name: AuthResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: AuthResponse
        fullName: AuthResponse
        uid: msal.AuthResponse
      - name: '>'
        fullName: '>'
  - uid: msal.Account
    name: Account
    spec.typeScript:
      - name: Account
        fullName: Account
        uid: msal.Account
  - uid: Array<msal.Account>
    name: Account>
    spec.typeScript:
      - name: Array<
        fullName: Array<
      - name: Account
        fullName: Account
        uid: msal.Account
      - name: '>'
        fullName: '>'